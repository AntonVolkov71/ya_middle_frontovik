{"mappings":"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","sources":["node_modules/pug/lib/index.js","node_modules/buffer/index.js","node_modules/base64-js/index.js","node_modules/assert/build/assert.js","node_modules/process/browser.js","node_modules/assert/build/internal/errors.js","node_modules/util/util.js","node_modules/util/support/types.js","node_modules/is-arguments/index.js","node_modules/has-tostringtag/shams.js","node_modules/has-symbols/shams.js","node_modules/call-bind/callBound.js","node_modules/get-intrinsic/index.js","node_modules/has-symbols/index.js","node_modules/function-bind/index.js","node_modules/function-bind/implementation.js","node_modules/has/src/index.js","node_modules/call-bind/index.js","node_modules/is-generator-function/index.js","node_modules/which-typed-array/index.js","node_modules/for-each/index.js","node_modules/is-callable/index.js","node_modules/available-typed-arrays/index.js","node_modules/es-abstract/helpers/getOwnPropertyDescriptor.js","node_modules/is-typed-array/index.js","node_modules/util/support/isBufferBrowser.js","node_modules/inherits/inherits_browser.js","node_modules/assert/build/internal/assert/assertion_error.js","node_modules/es6-object-assign/index.js","node_modules/object-is/index.js","node_modules/define-properties/index.js","node_modules/object-keys/index.js","node_modules/object-keys/isArguments.js","node_modules/object-keys/implementation.js","node_modules/has-property-descriptors/index.js","node_modules/object-is/implementation.js","node_modules/object-is/polyfill.js","node_modules/object-is/shim.js","node_modules/assert/build/internal/util/comparisons.js","node_modules/is-nan/index.js","node_modules/is-nan/implementation.js","node_modules/is-nan/polyfill.js","node_modules/is-nan/shim.js","node_modules/character-parser/index.js","node_modules/is-regex/index.js","node_modules/pug-error/index.js","node_modules/pug-filters/lib/run-filter.js","node_modules/jstransformer/index.js","node_modules/promise/index.js","node_modules/promise/lib/index.js","node_modules/promise/lib/core.js","node_modules/asap/browser-raw.js","node_modules/promise/lib/done.js","node_modules/promise/lib/finally.js","node_modules/promise/lib/es6-extensions.js","node_modules/promise/lib/node-extensions.js","node_modules/asap/browser-asap.js","node_modules/promise/lib/synchronous.js","node_modules/is-promise/index.js","node_modules/resolve/index.js","node_modules/resolve/lib/async.js","node_modules/resolve/lib/homedir.js","node_modules/os-browserify/browser.js","node_modules/path-browserify/index.js","node_modules/resolve/lib/caller.js","node_modules/resolve/lib/node-modules-paths.js","node_modules/path-parse/index.js","node_modules/resolve/lib/normalize-options.js","node_modules/is-core-module/index.js","node_modules/is-core-module/core.json","node_modules/resolve/lib/core.js","node_modules/resolve/lib/core.json","node_modules/resolve/lib/is-core.js","node_modules/resolve/lib/sync.js","node_modules/pug-filters/lib/handle-filters.js","node_modules/constantinople/lib/index.js","node_modules/@babel/parser/src/util/location.js","node_modules/@babel/parser/src/parse-error/credentials.js","node_modules/@babel/parser/src/parse-error/to-node-description.js","node_modules/@babel/parser/src/parse-error/pipeline-operator-errors.js","node_modules/@babel/parser/src/parse-error.js","node_modules/@babel/parser/src/parse-error/module-errors.js","node_modules/@babel/parser/src/parse-error/standard-errors.js","node_modules/@babel/parser/src/parse-error/strict-mode-errors.js","node_modules/@babel/parser/src/plugins/estree.js","node_modules/@babel/parser/src/tokenizer/context.js","node_modules/@babel/parser/src/tokenizer/types.js","node_modules/@babel/babel-helper-validator-identifier/src/identifier.ts","node_modules/@babel/babel-helper-validator-identifier/src/keyword.ts","node_modules/@babel/parser/src/util/identifier.js","node_modules/@babel/parser/src/util/scopeflags.js","node_modules/@babel/parser/src/parser/comments.js","node_modules/@babel/parser/src/util/whitespace.js","node_modules/@babel/parser/src/tokenizer/state.js","node_modules/@babel/parser/src/tokenizer/index.js","node_modules/@babel/parser/src/util/scope.js","node_modules/@babel/parser/src/plugins/flow/scope.js","node_modules/@babel/parser/src/util/class-scope.js","node_modules/@babel/parser/src/util/expression-scope.js","node_modules/@babel/parser/src/util/production-parameter.js","node_modules/@babel/parser/src/parser/util.js","node_modules/@babel/parser/src/parser/node.js","node_modules/@babel/parser/src/plugins/flow/index.js","node_modules/@babel/parser/src/plugins/jsx/xhtml.js","node_modules/@babel/parser/src/plugins/jsx/index.js","node_modules/@babel/parser/src/plugins/typescript/scope.js","node_modules/@babel/parser/src/plugins/typescript/index.js","node_modules/@babel/parser/src/plugins/placeholders.js","node_modules/@babel/parser/src/plugin-utils.js","node_modules/@babel/parser/src/plugins/v8intrinsic.js","node_modules/@babel/parser/src/options.js","node_modules/@babel/parser/src/parser/lval.js","node_modules/@babel/parser/src/parser/statement.js","node_modules/@babel/parser/src/parser/index.js","node_modules/@babel/parser/src/parser/expression.js","node_modules/@babel/parser/src/parser/base.js","node_modules/@babel/parser/src/index.js","node_modules/@babel/types/lib/index.js","node_modules/@babel/types/lib/validators/react/isReactComponent.js","node_modules/@babel/types/lib/validators/buildMatchMemberExpression.js","node_modules/@babel/types/lib/validators/matchesPattern.js","node_modules/@babel/types/lib/validators/generated/index.js","node_modules/@babel/types/lib/utils/shallowEqual.js","node_modules/@babel/types/lib/validators/react/isCompatTag.js","node_modules/@babel/types/lib/builders/react/buildChildren.js","node_modules/@babel/types/lib/utils/react/cleanJSXElementLiteralChild.js","node_modules/@babel/types/lib/builders/generated/index.js","node_modules/@babel/types/lib/builders/validateNode.js","node_modules/@babel/types/lib/validators/validate.js","node_modules/@babel/types/lib/definitions/index.js","node_modules/to-fast-properties/index.js","node_modules/@babel/types/lib/definitions/core.js","node_modules/@babel/types/lib/validators/is.js","node_modules/@babel/types/lib/validators/isType.js","node_modules/@babel/types/lib/validators/isPlaceholderType.js","node_modules/@babel/types/lib/validators/isValidIdentifier.js","node_modules/@babel/helper-validator-identifier/lib/index.js","node_modules/@babel/helper-validator-identifier/lib/identifier.js","node_modules/@babel/helper-validator-identifier/lib/keyword.js","node_modules/@babel/types/lib/constants/index.js","node_modules/@babel/types/lib/definitions/utils.js","node_modules/@babel/types/lib/definitions/flow.js","node_modules/@babel/types/lib/definitions/jsx.js","node_modules/@babel/types/lib/definitions/misc.js","node_modules/@babel/types/lib/definitions/placeholders.js","node_modules/@babel/types/lib/definitions/experimental.js","node_modules/@babel/types/lib/definitions/typescript.js","node_modules/@babel/types/lib/asserts/assertNode.js","node_modules/@babel/types/lib/validators/isNode.js","node_modules/@babel/types/lib/asserts/generated/index.js","node_modules/@babel/types/lib/builders/flow/createTypeAnnotationBasedOnTypeof.js","node_modules/@babel/types/lib/builders/flow/createFlowUnionType.js","node_modules/@babel/types/lib/modifications/flow/removeTypeDuplicates.js","node_modules/@babel/types/lib/builders/typescript/createTSUnionType.js","node_modules/@babel/types/lib/modifications/typescript/removeTypeDuplicates.js","node_modules/@babel/types/lib/builders/generated/uppercase.js","node_modules/@babel/types/lib/clone/cloneNode.js","node_modules/@babel/types/lib/clone/clone.js","node_modules/@babel/types/lib/clone/cloneDeep.js","node_modules/@babel/types/lib/clone/cloneDeepWithoutLoc.js","node_modules/@babel/types/lib/clone/cloneWithoutLoc.js","node_modules/@babel/types/lib/comments/addComment.js","node_modules/@babel/types/lib/comments/addComments.js","node_modules/@babel/types/lib/comments/inheritInnerComments.js","node_modules/@babel/types/lib/utils/inherit.js","node_modules/@babel/types/lib/comments/inheritLeadingComments.js","node_modules/@babel/types/lib/comments/inheritsComments.js","node_modules/@babel/types/lib/comments/inheritTrailingComments.js","node_modules/@babel/types/lib/comments/removeComments.js","node_modules/@babel/types/lib/constants/generated/index.js","node_modules/@babel/types/lib/converters/ensureBlock.js","node_modules/@babel/types/lib/converters/toBlock.js","node_modules/@babel/types/lib/converters/toBindingIdentifierName.js","node_modules/@babel/types/lib/converters/toIdentifier.js","node_modules/@babel/types/lib/converters/toComputedKey.js","node_modules/@babel/types/lib/converters/toExpression.js","node_modules/@babel/types/lib/converters/toKeyAlias.js","node_modules/@babel/types/lib/modifications/removePropertiesDeep.js","node_modules/@babel/types/lib/traverse/traverseFast.js","node_modules/@babel/types/lib/modifications/removeProperties.js","node_modules/@babel/types/lib/converters/toSequenceExpression.js","node_modules/@babel/types/lib/converters/gatherSequenceExpressions.js","node_modules/@babel/types/lib/retrievers/getBindingIdentifiers.js","node_modules/@babel/types/lib/converters/toStatement.js","node_modules/@babel/types/lib/converters/valueToNode.js","node_modules/@babel/types/lib/modifications/appendToMemberExpression.js","node_modules/@babel/types/lib/modifications/inherits.js","node_modules/@babel/types/lib/modifications/prependToMemberExpression.js","node_modules/@babel/types/lib/retrievers/getOuterBindingIdentifiers.js","node_modules/@babel/types/lib/traverse/traverse.js","node_modules/@babel/types/lib/validators/isBinding.js","node_modules/@babel/types/lib/validators/isBlockScoped.js","node_modules/@babel/types/lib/validators/isLet.js","node_modules/@babel/types/lib/validators/isImmutable.js","node_modules/@babel/types/lib/validators/isNodesEquivalent.js","node_modules/@babel/types/lib/validators/isReferenced.js","node_modules/@babel/types/lib/validators/isScope.js","node_modules/@babel/types/lib/validators/isSpecifierDefault.js","node_modules/@babel/types/lib/validators/isValidES3Identifier.js","node_modules/@babel/types/lib/validators/isVar.js","node_modules/constantinople/lib/binaryOperation.js","node_modules/pug-walk/index.js","node_modules/babel-walk/src/explode.ts","node_modules/with/src/globals.ts","node_modules/assert-never/index.js","node_modules/babel-walk/src/index.ts","node_modules/with/src/reference.ts","node_modules/ieee754/index.js","node_modules/is-expression/node_modules/acorn/dist/acorn.mjs","node_modules/object-assign/index.js","node_modules/is-expression/index.js","node_modules/pug-lexer/index.js","node_modules/pug-strip-comments/index.js","node_modules/token-stream/index.js","node_modules/pug-parser/index.js","node_modules/pug-parser/lib/inline-tags.js","node_modules/pug-filters/index.js","node_modules/pug-load/index.js","node_modules/pug-linker/index.js","node_modules/doctypes/index.js","node_modules/pug-runtime/lib/dependencies.js","node_modules/pug-runtime/lib/internals.js","node_modules/pug-runtime/lib/sources.js","node_modules/pug-runtime/build.js","node_modules/pug-runtime/index.js","node_modules/pug-attrs/index.js","node_modules/js-stringify/index.js","node_modules/void-elements/index.js","node_modules/with/src/index.ts","node_modules/pug-code-gen/index.js","node_modules/pug-runtime/wrap.js","src/index.js","src/test.js"],"sourcesContent":["'use strict';\n\n/*!\n * Pug\n * Copyright(c) 2010 TJ Holowaychuk <tj@vision-media.ca>\n * MIT Licensed\n */\n\n/**\n * Module dependencies.\n */\n\nvar fs = require('fs');\nvar path = require('path');\nvar lex = require('pug-lexer');\nvar stripComments = require('pug-strip-comments');\nvar parse = require('pug-parser');\nvar load = require('pug-load');\nvar filters = require('pug-filters');\nvar link = require('pug-linker');\nvar generateCode = require('pug-code-gen');\nvar runtime = require('pug-runtime');\nvar runtimeWrap = require('pug-runtime/wrap');\n\n/**\n * Name for detection\n */\n\nexports.name = 'Pug';\n\n/**\n * Pug runtime helpers.\n */\n\nexports.runtime = runtime;\n\n/**\n * Template function cache.\n */\n\nexports.cache = {};\n\nfunction applyPlugins(value, options, plugins, name) {\n  return plugins.reduce(function(value, plugin) {\n    return plugin[name] ? plugin[name](value, options) : value;\n  }, value);\n}\n\nfunction findReplacementFunc(plugins, name) {\n  var eligiblePlugins = plugins.filter(function(plugin) {\n    return plugin[name];\n  });\n\n  if (eligiblePlugins.length > 1) {\n    throw new Error('Two or more plugins all implement ' + name + ' method.');\n  } else if (eligiblePlugins.length) {\n    return eligiblePlugins[0][name].bind(eligiblePlugins[0]);\n  }\n  return null;\n}\n\n/**\n * Object for global custom filters.  Note that you can also just pass a `filters`\n * option to any other method.\n */\nexports.filters = {};\n\n/**\n * Compile the given `str` of pug and return a function body.\n *\n * @param {String} str\n * @param {Object} options\n * @return {Object}\n * @api private\n */\n\nfunction compileBody(str, options) {\n  var debug_sources = {};\n  debug_sources[options.filename] = str;\n  var dependencies = [];\n  var plugins = options.plugins || [];\n  var ast = load.string(str, {\n    filename: options.filename,\n    basedir: options.basedir,\n    lex: function(str, options) {\n      var lexOptions = {};\n      Object.keys(options).forEach(function(key) {\n        lexOptions[key] = options[key];\n      });\n      lexOptions.plugins = plugins\n        .filter(function(plugin) {\n          return !!plugin.lex;\n        })\n        .map(function(plugin) {\n          return plugin.lex;\n        });\n      var contents = applyPlugins(\n        str,\n        {filename: options.filename},\n        plugins,\n        'preLex'\n      );\n      return applyPlugins(\n        lex(contents, lexOptions),\n        options,\n        plugins,\n        'postLex'\n      );\n    },\n    parse: function(tokens, options) {\n      tokens = tokens.map(function(token) {\n        if (token.type === 'path' && path.extname(token.val) === '') {\n          return {\n            type: 'path',\n            loc: token.loc,\n            val: token.val + '.pug',\n          };\n        }\n        return token;\n      });\n      tokens = stripComments(tokens, options);\n      tokens = applyPlugins(tokens, options, plugins, 'preParse');\n      var parseOptions = {};\n      Object.keys(options).forEach(function(key) {\n        parseOptions[key] = options[key];\n      });\n      parseOptions.plugins = plugins\n        .filter(function(plugin) {\n          return !!plugin.parse;\n        })\n        .map(function(plugin) {\n          return plugin.parse;\n        });\n\n      return applyPlugins(\n        applyPlugins(\n          parse(tokens, parseOptions),\n          options,\n          plugins,\n          'postParse'\n        ),\n        options,\n        plugins,\n        'preLoad'\n      );\n    },\n    resolve: function(filename, source, loadOptions) {\n      var replacementFunc = findReplacementFunc(plugins, 'resolve');\n      if (replacementFunc) {\n        return replacementFunc(filename, source, options);\n      }\n\n      return load.resolve(filename, source, loadOptions);\n    },\n    read: function(filename, loadOptions) {\n      dependencies.push(filename);\n\n      var contents;\n\n      var replacementFunc = findReplacementFunc(plugins, 'read');\n      if (replacementFunc) {\n        contents = replacementFunc(filename, options);\n      } else {\n        contents = load.read(filename, loadOptions);\n      }\n\n      debug_sources[filename] = Buffer.isBuffer(contents)\n        ? contents.toString('utf8')\n        : contents;\n      return contents;\n    },\n  });\n  ast = applyPlugins(ast, options, plugins, 'postLoad');\n  ast = applyPlugins(ast, options, plugins, 'preFilters');\n\n  var filtersSet = {};\n  Object.keys(exports.filters).forEach(function(key) {\n    filtersSet[key] = exports.filters[key];\n  });\n  if (options.filters) {\n    Object.keys(options.filters).forEach(function(key) {\n      filtersSet[key] = options.filters[key];\n    });\n  }\n  ast = filters.handleFilters(\n    ast,\n    filtersSet,\n    options.filterOptions,\n    options.filterAliases\n  );\n\n  ast = applyPlugins(ast, options, plugins, 'postFilters');\n  ast = applyPlugins(ast, options, plugins, 'preLink');\n  ast = link(ast);\n  ast = applyPlugins(ast, options, plugins, 'postLink');\n\n  // Compile\n  ast = applyPlugins(ast, options, plugins, 'preCodeGen');\n  var js = (findReplacementFunc(plugins, 'generateCode') || generateCode)(ast, {\n    pretty: options.pretty,\n    compileDebug: options.compileDebug,\n    doctype: options.doctype,\n    inlineRuntimeFunctions: options.inlineRuntimeFunctions,\n    globals: options.globals,\n    self: options.self,\n    includeSources: options.includeSources ? debug_sources : false,\n    templateName: options.templateName,\n  });\n  js = applyPlugins(js, options, plugins, 'postCodeGen');\n\n  // Debug compiler\n  if (options.debug) {\n    console.error(\n      '\\nCompiled Function:\\n\\n\\u001b[90m%s\\u001b[0m',\n      js.replace(/^/gm, '  ')\n    );\n  }\n\n  return {body: js, dependencies: dependencies};\n}\n\n/**\n * Get the template from a string or a file, either compiled on-the-fly or\n * read from cache (if enabled), and cache the template if needed.\n *\n * If `str` is not set, the file specified in `options.filename` will be read.\n *\n * If `options.cache` is true, this function reads the file from\n * `options.filename` so it must be set prior to calling this function.\n *\n * @param {Object} options\n * @param {String=} str\n * @return {Function}\n * @api private\n */\nfunction handleTemplateCache(options, str) {\n  var key = options.filename;\n  if (options.cache && exports.cache[key]) {\n    return exports.cache[key];\n  } else {\n    if (str === undefined) str = fs.readFileSync(options.filename, 'utf8');\n    var templ = exports.compile(str, options);\n    if (options.cache) exports.cache[key] = templ;\n    return templ;\n  }\n}\n\n/**\n * Compile a `Function` representation of the given pug `str`.\n *\n * Options:\n *\n *   - `compileDebug` when `false` debugging code is stripped from the compiled\n       template, when it is explicitly `true`, the source code is included in\n       the compiled template for better accuracy.\n *   - `filename` used to improve errors when `compileDebug` is not `false` and to resolve imports/extends\n *\n * @param {String} str\n * @param {Options} options\n * @return {Function}\n * @api public\n */\n\nexports.compile = function(str, options) {\n  var options = options || {};\n\n  str = String(str);\n\n  var parsed = compileBody(str, {\n    compileDebug: options.compileDebug !== false,\n    filename: options.filename,\n    basedir: options.basedir,\n    pretty: options.pretty,\n    doctype: options.doctype,\n    inlineRuntimeFunctions: options.inlineRuntimeFunctions,\n    globals: options.globals,\n    self: options.self,\n    includeSources: options.compileDebug === true,\n    debug: options.debug,\n    templateName: 'template',\n    filters: options.filters,\n    filterOptions: options.filterOptions,\n    filterAliases: options.filterAliases,\n    plugins: options.plugins,\n  });\n\n  var res = options.inlineRuntimeFunctions\n    ? new Function('', parsed.body + ';return template;')()\n    : runtimeWrap(parsed.body);\n\n  res.dependencies = parsed.dependencies;\n\n  return res;\n};\n\n/**\n * Compile a JavaScript source representation of the given pug `str`.\n *\n * Options:\n *\n *   - `compileDebug` When it is `true`, the source code is included in\n *     the compiled template for better error messages.\n *   - `filename` used to improve errors when `compileDebug` is not `true` and to resolve imports/extends\n *   - `name` the name of the resulting function (defaults to \"template\")\n *   - `module` when it is explicitly `true`, the source code include export module syntax\n *\n * @param {String} str\n * @param {Options} options\n * @return {Object}\n * @api public\n */\n\nexports.compileClientWithDependenciesTracked = function(str, options) {\n  var options = options || {};\n\n  str = String(str);\n  var parsed = compileBody(str, {\n    compileDebug: options.compileDebug,\n    filename: options.filename,\n    basedir: options.basedir,\n    pretty: options.pretty,\n    doctype: options.doctype,\n    inlineRuntimeFunctions: options.inlineRuntimeFunctions !== false,\n    globals: options.globals,\n    self: options.self,\n    includeSources: options.compileDebug,\n    debug: options.debug,\n    templateName: options.name || 'template',\n    filters: options.filters,\n    filterOptions: options.filterOptions,\n    filterAliases: options.filterAliases,\n    plugins: options.plugins,\n  });\n\n  var body = parsed.body;\n\n  if (options.module) {\n    if (options.inlineRuntimeFunctions === false) {\n      body = 'var pug = require(\"pug-runtime\");' + body;\n    }\n    body += ' module.exports = ' + (options.name || 'template') + ';';\n  }\n\n  return {body: body, dependencies: parsed.dependencies};\n};\n\n/**\n * Compile a JavaScript source representation of the given pug `str`.\n *\n * Options:\n *\n *   - `compileDebug` When it is `true`, the source code is included in\n *     the compiled template for better error messages.\n *   - `filename` used to improve errors when `compileDebug` is not `true` and to resolve imports/extends\n *   - `name` the name of the resulting function (defaults to \"template\")\n *\n * @param {String} str\n * @param {Options} options\n * @return {String}\n * @api public\n */\nexports.compileClient = function(str, options) {\n  return exports.compileClientWithDependenciesTracked(str, options).body;\n};\n\n/**\n * Compile a `Function` representation of the given pug file.\n *\n * Options:\n *\n *   - `compileDebug` when `false` debugging code is stripped from the compiled\n       template, when it is explicitly `true`, the source code is included in\n       the compiled template for better accuracy.\n *\n * @param {String} path\n * @param {Options} options\n * @return {Function}\n * @api public\n */\nexports.compileFile = function(path, options) {\n  options = options || {};\n  options.filename = path;\n  return handleTemplateCache(options);\n};\n\n/**\n * Render the given `str` of pug.\n *\n * Options:\n *\n *   - `cache` enable template caching\n *   - `filename` filename required for `include` / `extends` and caching\n *\n * @param {String} str\n * @param {Object|Function} options or fn\n * @param {Function|undefined} fn\n * @returns {String}\n * @api public\n */\n\nexports.render = function(str, options, fn) {\n  // support callback API\n  if ('function' == typeof options) {\n    (fn = options), (options = undefined);\n  }\n  if (typeof fn === 'function') {\n    var res;\n    try {\n      res = exports.render(str, options);\n    } catch (ex) {\n      return fn(ex);\n    }\n    return fn(null, res);\n  }\n\n  options = options || {};\n\n  // cache requires .filename\n  if (options.cache && !options.filename) {\n    throw new Error('the \"filename\" option is required for caching');\n  }\n\n  return handleTemplateCache(options, str)(options);\n};\n\n/**\n * Render a Pug file at the given `path`.\n *\n * @param {String} path\n * @param {Object|Function} options or callback\n * @param {Function|undefined} fn\n * @returns {String}\n * @api public\n */\n\nexports.renderFile = function(path, options, fn) {\n  // support callback API\n  if ('function' == typeof options) {\n    (fn = options), (options = undefined);\n  }\n  if (typeof fn === 'function') {\n    var res;\n    try {\n      res = exports.renderFile(path, options);\n    } catch (ex) {\n      return fn(ex);\n    }\n    return fn(null, res);\n  }\n\n  options = options || {};\n\n  options.filename = path;\n  return handleTemplateCache(options)(options);\n};\n\n/**\n * Compile a Pug file at the given `path` for use on the client.\n *\n * @param {String} path\n * @param {Object} options\n * @returns {String}\n * @api public\n */\n\nexports.compileFileClient = function(path, options) {\n  var key = path + ':client';\n  options = options || {};\n\n  options.filename = path;\n\n  if (options.cache && exports.cache[key]) {\n    return exports.cache[key];\n  }\n\n  var str = fs.readFileSync(options.filename, 'utf8');\n  var out = exports.compileClient(str, options);\n  if (options.cache) exports.cache[key] = out;\n  return out;\n};\n\n/**\n * Express support.\n */\n\nexports.__express = function(path, options, fn) {\n  if (\n    options.compileDebug == undefined &&\n    process.env.NODE_ENV === 'production'\n  ) {\n    options.compileDebug = false;\n  }\n  exports.renderFile(path, options, fn);\n};\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","// Currently in sync with Node.js lib/assert.js\n// https://github.com/nodejs/node/commit/2a51ae424a513ec9a6aa3466baa0cc1d55dd4f3b\n// Originally from narwhal.js (http://narwhaljs.org)\n// Copyright (c) 2009 Thomas Robinson <280north.com>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the 'Software'), to\n// deal in the Software without restriction, including without limitation the\n// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n// sell copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n// ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n'use strict';\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar _require = require('./internal/errors'),\n    _require$codes = _require.codes,\n    ERR_AMBIGUOUS_ARGUMENT = _require$codes.ERR_AMBIGUOUS_ARGUMENT,\n    ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,\n    ERR_INVALID_ARG_VALUE = _require$codes.ERR_INVALID_ARG_VALUE,\n    ERR_INVALID_RETURN_VALUE = _require$codes.ERR_INVALID_RETURN_VALUE,\n    ERR_MISSING_ARGS = _require$codes.ERR_MISSING_ARGS;\n\nvar AssertionError = require('./internal/assert/assertion_error');\n\nvar _require2 = require('util/'),\n    inspect = _require2.inspect;\n\nvar _require$types = require('util/').types,\n    isPromise = _require$types.isPromise,\n    isRegExp = _require$types.isRegExp;\n\nvar objectAssign = Object.assign ? Object.assign : require('es6-object-assign').assign;\nvar objectIs = Object.is ? Object.is : require('object-is');\nvar errorCache = new Map();\nvar isDeepEqual;\nvar isDeepStrictEqual;\nvar parseExpressionAt;\nvar findNodeAround;\nvar decoder;\n\nfunction lazyLoadComparison() {\n  var comparison = require('./internal/util/comparisons');\n\n  isDeepEqual = comparison.isDeepEqual;\n  isDeepStrictEqual = comparison.isDeepStrictEqual;\n} // Escape control characters but not \\n and \\t to keep the line breaks and\n// indentation intact.\n// eslint-disable-next-line no-control-regex\n\n\nvar escapeSequencesRegExp = /[\\x00-\\x08\\x0b\\x0c\\x0e-\\x1f]/g;\nvar meta = [\"\\\\u0000\", \"\\\\u0001\", \"\\\\u0002\", \"\\\\u0003\", \"\\\\u0004\", \"\\\\u0005\", \"\\\\u0006\", \"\\\\u0007\", '\\\\b', '', '', \"\\\\u000b\", '\\\\f', '', \"\\\\u000e\", \"\\\\u000f\", \"\\\\u0010\", \"\\\\u0011\", \"\\\\u0012\", \"\\\\u0013\", \"\\\\u0014\", \"\\\\u0015\", \"\\\\u0016\", \"\\\\u0017\", \"\\\\u0018\", \"\\\\u0019\", \"\\\\u001a\", \"\\\\u001b\", \"\\\\u001c\", \"\\\\u001d\", \"\\\\u001e\", \"\\\\u001f\"];\n\nvar escapeFn = function escapeFn(str) {\n  return meta[str.charCodeAt(0)];\n};\n\nvar warned = false; // The assert module provides functions that throw\n// AssertionError's when particular conditions are not met. The\n// assert module must conform to the following interface.\n\nvar assert = module.exports = ok;\nvar NO_EXCEPTION_SENTINEL = {}; // All of the following functions must throw an AssertionError\n// when a corresponding condition is not met, with a message that\n// may be undefined if not provided. All assertion methods provide\n// both the actual and expected values to the assertion error for\n// display purposes.\n\nfunction innerFail(obj) {\n  if (obj.message instanceof Error) throw obj.message;\n  throw new AssertionError(obj);\n}\n\nfunction fail(actual, expected, message, operator, stackStartFn) {\n  var argsLen = arguments.length;\n  var internalMessage;\n\n  if (argsLen === 0) {\n    internalMessage = 'Failed';\n  } else if (argsLen === 1) {\n    message = actual;\n    actual = undefined;\n  } else {\n    if (warned === false) {\n      warned = true;\n      var warn = process.emitWarning ? process.emitWarning : console.warn.bind(console);\n      warn('assert.fail() with more than one argument is deprecated. ' + 'Please use assert.strictEqual() instead or only pass a message.', 'DeprecationWarning', 'DEP0094');\n    }\n\n    if (argsLen === 2) operator = '!=';\n  }\n\n  if (message instanceof Error) throw message;\n  var errArgs = {\n    actual: actual,\n    expected: expected,\n    operator: operator === undefined ? 'fail' : operator,\n    stackStartFn: stackStartFn || fail\n  };\n\n  if (message !== undefined) {\n    errArgs.message = message;\n  }\n\n  var err = new AssertionError(errArgs);\n\n  if (internalMessage) {\n    err.message = internalMessage;\n    err.generatedMessage = true;\n  }\n\n  throw err;\n}\n\nassert.fail = fail; // The AssertionError is defined in internal/error.\n\nassert.AssertionError = AssertionError;\n\nfunction innerOk(fn, argLen, value, message) {\n  if (!value) {\n    var generatedMessage = false;\n\n    if (argLen === 0) {\n      generatedMessage = true;\n      message = 'No value argument passed to `assert.ok()`';\n    } else if (message instanceof Error) {\n      throw message;\n    }\n\n    var err = new AssertionError({\n      actual: value,\n      expected: true,\n      message: message,\n      operator: '==',\n      stackStartFn: fn\n    });\n    err.generatedMessage = generatedMessage;\n    throw err;\n  }\n} // Pure assertion tests whether a value is truthy, as determined\n// by !!value.\n\n\nfunction ok() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  innerOk.apply(void 0, [ok, args.length].concat(args));\n}\n\nassert.ok = ok; // The equality assertion tests shallow, coercive equality with ==.\n\n/* eslint-disable no-restricted-properties */\n\nassert.equal = function equal(actual, expected, message) {\n  if (arguments.length < 2) {\n    throw new ERR_MISSING_ARGS('actual', 'expected');\n  } // eslint-disable-next-line eqeqeq\n\n\n  if (actual != expected) {\n    innerFail({\n      actual: actual,\n      expected: expected,\n      message: message,\n      operator: '==',\n      stackStartFn: equal\n    });\n  }\n}; // The non-equality assertion tests for whether two objects are not\n// equal with !=.\n\n\nassert.notEqual = function notEqual(actual, expected, message) {\n  if (arguments.length < 2) {\n    throw new ERR_MISSING_ARGS('actual', 'expected');\n  } // eslint-disable-next-line eqeqeq\n\n\n  if (actual == expected) {\n    innerFail({\n      actual: actual,\n      expected: expected,\n      message: message,\n      operator: '!=',\n      stackStartFn: notEqual\n    });\n  }\n}; // The equivalence assertion tests a deep equality relation.\n\n\nassert.deepEqual = function deepEqual(actual, expected, message) {\n  if (arguments.length < 2) {\n    throw new ERR_MISSING_ARGS('actual', 'expected');\n  }\n\n  if (isDeepEqual === undefined) lazyLoadComparison();\n\n  if (!isDeepEqual(actual, expected)) {\n    innerFail({\n      actual: actual,\n      expected: expected,\n      message: message,\n      operator: 'deepEqual',\n      stackStartFn: deepEqual\n    });\n  }\n}; // The non-equivalence assertion tests for any deep inequality.\n\n\nassert.notDeepEqual = function notDeepEqual(actual, expected, message) {\n  if (arguments.length < 2) {\n    throw new ERR_MISSING_ARGS('actual', 'expected');\n  }\n\n  if (isDeepEqual === undefined) lazyLoadComparison();\n\n  if (isDeepEqual(actual, expected)) {\n    innerFail({\n      actual: actual,\n      expected: expected,\n      message: message,\n      operator: 'notDeepEqual',\n      stackStartFn: notDeepEqual\n    });\n  }\n};\n/* eslint-enable */\n\n\nassert.deepStrictEqual = function deepStrictEqual(actual, expected, message) {\n  if (arguments.length < 2) {\n    throw new ERR_MISSING_ARGS('actual', 'expected');\n  }\n\n  if (isDeepEqual === undefined) lazyLoadComparison();\n\n  if (!isDeepStrictEqual(actual, expected)) {\n    innerFail({\n      actual: actual,\n      expected: expected,\n      message: message,\n      operator: 'deepStrictEqual',\n      stackStartFn: deepStrictEqual\n    });\n  }\n};\n\nassert.notDeepStrictEqual = notDeepStrictEqual;\n\nfunction notDeepStrictEqual(actual, expected, message) {\n  if (arguments.length < 2) {\n    throw new ERR_MISSING_ARGS('actual', 'expected');\n  }\n\n  if (isDeepEqual === undefined) lazyLoadComparison();\n\n  if (isDeepStrictEqual(actual, expected)) {\n    innerFail({\n      actual: actual,\n      expected: expected,\n      message: message,\n      operator: 'notDeepStrictEqual',\n      stackStartFn: notDeepStrictEqual\n    });\n  }\n}\n\nassert.strictEqual = function strictEqual(actual, expected, message) {\n  if (arguments.length < 2) {\n    throw new ERR_MISSING_ARGS('actual', 'expected');\n  }\n\n  if (!objectIs(actual, expected)) {\n    innerFail({\n      actual: actual,\n      expected: expected,\n      message: message,\n      operator: 'strictEqual',\n      stackStartFn: strictEqual\n    });\n  }\n};\n\nassert.notStrictEqual = function notStrictEqual(actual, expected, message) {\n  if (arguments.length < 2) {\n    throw new ERR_MISSING_ARGS('actual', 'expected');\n  }\n\n  if (objectIs(actual, expected)) {\n    innerFail({\n      actual: actual,\n      expected: expected,\n      message: message,\n      operator: 'notStrictEqual',\n      stackStartFn: notStrictEqual\n    });\n  }\n};\n\nvar Comparison = function Comparison(obj, keys, actual) {\n  var _this = this;\n\n  _classCallCheck(this, Comparison);\n\n  keys.forEach(function (key) {\n    if (key in obj) {\n      if (actual !== undefined && typeof actual[key] === 'string' && isRegExp(obj[key]) && obj[key].test(actual[key])) {\n        _this[key] = actual[key];\n      } else {\n        _this[key] = obj[key];\n      }\n    }\n  });\n};\n\nfunction compareExceptionKey(actual, expected, key, message, keys, fn) {\n  if (!(key in actual) || !isDeepStrictEqual(actual[key], expected[key])) {\n    if (!message) {\n      // Create placeholder objects to create a nice output.\n      var a = new Comparison(actual, keys);\n      var b = new Comparison(expected, keys, actual);\n      var err = new AssertionError({\n        actual: a,\n        expected: b,\n        operator: 'deepStrictEqual',\n        stackStartFn: fn\n      });\n      err.actual = actual;\n      err.expected = expected;\n      err.operator = fn.name;\n      throw err;\n    }\n\n    innerFail({\n      actual: actual,\n      expected: expected,\n      message: message,\n      operator: fn.name,\n      stackStartFn: fn\n    });\n  }\n}\n\nfunction expectedException(actual, expected, msg, fn) {\n  if (typeof expected !== 'function') {\n    if (isRegExp(expected)) return expected.test(actual); // assert.doesNotThrow does not accept objects.\n\n    if (arguments.length === 2) {\n      throw new ERR_INVALID_ARG_TYPE('expected', ['Function', 'RegExp'], expected);\n    } // Handle primitives properly.\n\n\n    if (_typeof(actual) !== 'object' || actual === null) {\n      var err = new AssertionError({\n        actual: actual,\n        expected: expected,\n        message: msg,\n        operator: 'deepStrictEqual',\n        stackStartFn: fn\n      });\n      err.operator = fn.name;\n      throw err;\n    }\n\n    var keys = Object.keys(expected); // Special handle errors to make sure the name and the message are compared\n    // as well.\n\n    if (expected instanceof Error) {\n      keys.push('name', 'message');\n    } else if (keys.length === 0) {\n      throw new ERR_INVALID_ARG_VALUE('error', expected, 'may not be an empty object');\n    }\n\n    if (isDeepEqual === undefined) lazyLoadComparison();\n    keys.forEach(function (key) {\n      if (typeof actual[key] === 'string' && isRegExp(expected[key]) && expected[key].test(actual[key])) {\n        return;\n      }\n\n      compareExceptionKey(actual, expected, key, msg, keys, fn);\n    });\n    return true;\n  } // Guard instanceof against arrow functions as they don't have a prototype.\n\n\n  if (expected.prototype !== undefined && actual instanceof expected) {\n    return true;\n  }\n\n  if (Error.isPrototypeOf(expected)) {\n    return false;\n  }\n\n  return expected.call({}, actual) === true;\n}\n\nfunction getActual(fn) {\n  if (typeof fn !== 'function') {\n    throw new ERR_INVALID_ARG_TYPE('fn', 'Function', fn);\n  }\n\n  try {\n    fn();\n  } catch (e) {\n    return e;\n  }\n\n  return NO_EXCEPTION_SENTINEL;\n}\n\nfunction checkIsPromise(obj) {\n  // Accept native ES6 promises and promises that are implemented in a similar\n  // way. Do not accept thenables that use a function as `obj` and that have no\n  // `catch` handler.\n  // TODO: thenables are checked up until they have the correct methods,\n  // but according to documentation, the `then` method should receive\n  // the `fulfill` and `reject` arguments as well or it may be never resolved.\n  return isPromise(obj) || obj !== null && _typeof(obj) === 'object' && typeof obj.then === 'function' && typeof obj.catch === 'function';\n}\n\nfunction waitForActual(promiseFn) {\n  return Promise.resolve().then(function () {\n    var resultPromise;\n\n    if (typeof promiseFn === 'function') {\n      // Return a rejected promise if `promiseFn` throws synchronously.\n      resultPromise = promiseFn(); // Fail in case no promise is returned.\n\n      if (!checkIsPromise(resultPromise)) {\n        throw new ERR_INVALID_RETURN_VALUE('instance of Promise', 'promiseFn', resultPromise);\n      }\n    } else if (checkIsPromise(promiseFn)) {\n      resultPromise = promiseFn;\n    } else {\n      throw new ERR_INVALID_ARG_TYPE('promiseFn', ['Function', 'Promise'], promiseFn);\n    }\n\n    return Promise.resolve().then(function () {\n      return resultPromise;\n    }).then(function () {\n      return NO_EXCEPTION_SENTINEL;\n    }).catch(function (e) {\n      return e;\n    });\n  });\n}\n\nfunction expectsError(stackStartFn, actual, error, message) {\n  if (typeof error === 'string') {\n    if (arguments.length === 4) {\n      throw new ERR_INVALID_ARG_TYPE('error', ['Object', 'Error', 'Function', 'RegExp'], error);\n    }\n\n    if (_typeof(actual) === 'object' && actual !== null) {\n      if (actual.message === error) {\n        throw new ERR_AMBIGUOUS_ARGUMENT('error/message', \"The error message \\\"\".concat(actual.message, \"\\\" is identical to the message.\"));\n      }\n    } else if (actual === error) {\n      throw new ERR_AMBIGUOUS_ARGUMENT('error/message', \"The error \\\"\".concat(actual, \"\\\" is identical to the message.\"));\n    }\n\n    message = error;\n    error = undefined;\n  } else if (error != null && _typeof(error) !== 'object' && typeof error !== 'function') {\n    throw new ERR_INVALID_ARG_TYPE('error', ['Object', 'Error', 'Function', 'RegExp'], error);\n  }\n\n  if (actual === NO_EXCEPTION_SENTINEL) {\n    var details = '';\n\n    if (error && error.name) {\n      details += \" (\".concat(error.name, \")\");\n    }\n\n    details += message ? \": \".concat(message) : '.';\n    var fnType = stackStartFn.name === 'rejects' ? 'rejection' : 'exception';\n    innerFail({\n      actual: undefined,\n      expected: error,\n      operator: stackStartFn.name,\n      message: \"Missing expected \".concat(fnType).concat(details),\n      stackStartFn: stackStartFn\n    });\n  }\n\n  if (error && !expectedException(actual, error, message, stackStartFn)) {\n    throw actual;\n  }\n}\n\nfunction expectsNoError(stackStartFn, actual, error, message) {\n  if (actual === NO_EXCEPTION_SENTINEL) return;\n\n  if (typeof error === 'string') {\n    message = error;\n    error = undefined;\n  }\n\n  if (!error || expectedException(actual, error)) {\n    var details = message ? \": \".concat(message) : '.';\n    var fnType = stackStartFn.name === 'doesNotReject' ? 'rejection' : 'exception';\n    innerFail({\n      actual: actual,\n      expected: error,\n      operator: stackStartFn.name,\n      message: \"Got unwanted \".concat(fnType).concat(details, \"\\n\") + \"Actual message: \\\"\".concat(actual && actual.message, \"\\\"\"),\n      stackStartFn: stackStartFn\n    });\n  }\n\n  throw actual;\n}\n\nassert.throws = function throws(promiseFn) {\n  for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n    args[_key2 - 1] = arguments[_key2];\n  }\n\n  expectsError.apply(void 0, [throws, getActual(promiseFn)].concat(args));\n};\n\nassert.rejects = function rejects(promiseFn) {\n  for (var _len3 = arguments.length, args = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n    args[_key3 - 1] = arguments[_key3];\n  }\n\n  return waitForActual(promiseFn).then(function (result) {\n    return expectsError.apply(void 0, [rejects, result].concat(args));\n  });\n};\n\nassert.doesNotThrow = function doesNotThrow(fn) {\n  for (var _len4 = arguments.length, args = new Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {\n    args[_key4 - 1] = arguments[_key4];\n  }\n\n  expectsNoError.apply(void 0, [doesNotThrow, getActual(fn)].concat(args));\n};\n\nassert.doesNotReject = function doesNotReject(fn) {\n  for (var _len5 = arguments.length, args = new Array(_len5 > 1 ? _len5 - 1 : 0), _key5 = 1; _key5 < _len5; _key5++) {\n    args[_key5 - 1] = arguments[_key5];\n  }\n\n  return waitForActual(fn).then(function (result) {\n    return expectsNoError.apply(void 0, [doesNotReject, result].concat(args));\n  });\n};\n\nassert.ifError = function ifError(err) {\n  if (err !== null && err !== undefined) {\n    var message = 'ifError got unwanted exception: ';\n\n    if (_typeof(err) === 'object' && typeof err.message === 'string') {\n      if (err.message.length === 0 && err.constructor) {\n        message += err.constructor.name;\n      } else {\n        message += err.message;\n      }\n    } else {\n      message += inspect(err);\n    }\n\n    var newErr = new AssertionError({\n      actual: err,\n      expected: null,\n      operator: 'ifError',\n      message: message,\n      stackStartFn: ifError\n    }); // Make sure we actually have a stack trace!\n\n    var origStack = err.stack;\n\n    if (typeof origStack === 'string') {\n      // This will remove any duplicated frames from the error frames taken\n      // from within `ifError` and add the original error frames to the newly\n      // created ones.\n      var tmp2 = origStack.split('\\n');\n      tmp2.shift(); // Filter all frames existing in err.stack.\n\n      var tmp1 = newErr.stack.split('\\n');\n\n      for (var i = 0; i < tmp2.length; i++) {\n        // Find the first occurrence of the frame.\n        var pos = tmp1.indexOf(tmp2[i]);\n\n        if (pos !== -1) {\n          // Only keep new frames.\n          tmp1 = tmp1.slice(0, pos);\n          break;\n        }\n      }\n\n      newErr.stack = \"\".concat(tmp1.join('\\n'), \"\\n\").concat(tmp2.join('\\n'));\n    }\n\n    throw newErr;\n  }\n}; // Expose a strict only variant of assert\n\n\nfunction strict() {\n  for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n    args[_key6] = arguments[_key6];\n  }\n\n  innerOk.apply(void 0, [strict, args.length].concat(args));\n}\n\nassert.strict = objectAssign(strict, assert, {\n  equal: assert.strictEqual,\n  deepEqual: assert.deepStrictEqual,\n  notEqual: assert.notStrictEqual,\n  notDeepEqual: assert.notDeepStrictEqual\n});\nassert.strict.strict = assert.strict;","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","// Currently in sync with Node.js lib/internal/errors.js\n// https://github.com/nodejs/node/commit/3b044962c48fe313905877a96b5d0894a5404f6f\n\n/* eslint node-core/documented-errors: \"error\" */\n\n/* eslint node-core/alphabetize-errors: \"error\" */\n\n/* eslint node-core/prefer-util-format-errors: \"error\" */\n'use strict'; // The whole point behind this internal module is to allow Node.js to no\n// longer be forced to treat every error message change as a semver-major\n// change. The NodeError classes here all expose a `code` property whose\n// value statically and permanently identifies the error. While the error\n// message may change, the code should not.\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nvar codes = {}; // Lazy loaded\n\nvar assert;\nvar util;\n\nfunction createErrorType(code, message, Base) {\n  if (!Base) {\n    Base = Error;\n  }\n\n  function getMessage(arg1, arg2, arg3) {\n    if (typeof message === 'string') {\n      return message;\n    } else {\n      return message(arg1, arg2, arg3);\n    }\n  }\n\n  var NodeError =\n  /*#__PURE__*/\n  function (_Base) {\n    _inherits(NodeError, _Base);\n\n    function NodeError(arg1, arg2, arg3) {\n      var _this;\n\n      _classCallCheck(this, NodeError);\n\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(NodeError).call(this, getMessage(arg1, arg2, arg3)));\n      _this.code = code;\n      return _this;\n    }\n\n    return NodeError;\n  }(Base);\n\n  codes[code] = NodeError;\n} // https://github.com/nodejs/node/blob/v10.8.0/lib/internal/errors.js\n\n\nfunction oneOf(expected, thing) {\n  if (Array.isArray(expected)) {\n    var len = expected.length;\n    expected = expected.map(function (i) {\n      return String(i);\n    });\n\n    if (len > 2) {\n      return \"one of \".concat(thing, \" \").concat(expected.slice(0, len - 1).join(', '), \", or \") + expected[len - 1];\n    } else if (len === 2) {\n      return \"one of \".concat(thing, \" \").concat(expected[0], \" or \").concat(expected[1]);\n    } else {\n      return \"of \".concat(thing, \" \").concat(expected[0]);\n    }\n  } else {\n    return \"of \".concat(thing, \" \").concat(String(expected));\n  }\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith\n\n\nfunction startsWith(str, search, pos) {\n  return str.substr(!pos || pos < 0 ? 0 : +pos, search.length) === search;\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith\n\n\nfunction endsWith(str, search, this_len) {\n  if (this_len === undefined || this_len > str.length) {\n    this_len = str.length;\n  }\n\n  return str.substring(this_len - search.length, this_len) === search;\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/includes\n\n\nfunction includes(str, search, start) {\n  if (typeof start !== 'number') {\n    start = 0;\n  }\n\n  if (start + search.length > str.length) {\n    return false;\n  } else {\n    return str.indexOf(search, start) !== -1;\n  }\n}\n\ncreateErrorType('ERR_AMBIGUOUS_ARGUMENT', 'The \"%s\" argument is ambiguous. %s', TypeError);\ncreateErrorType('ERR_INVALID_ARG_TYPE', function (name, expected, actual) {\n  if (assert === undefined) assert = require('../assert');\n  assert(typeof name === 'string', \"'name' must be a string\"); // determiner: 'must be' or 'must not be'\n\n  var determiner;\n\n  if (typeof expected === 'string' && startsWith(expected, 'not ')) {\n    determiner = 'must not be';\n    expected = expected.replace(/^not /, '');\n  } else {\n    determiner = 'must be';\n  }\n\n  var msg;\n\n  if (endsWith(name, ' argument')) {\n    // For cases like 'first argument'\n    msg = \"The \".concat(name, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  } else {\n    var type = includes(name, '.') ? 'property' : 'argument';\n    msg = \"The \\\"\".concat(name, \"\\\" \").concat(type, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  } // TODO(BridgeAR): Improve the output by showing `null` and similar.\n\n\n  msg += \". Received type \".concat(_typeof(actual));\n  return msg;\n}, TypeError);\ncreateErrorType('ERR_INVALID_ARG_VALUE', function (name, value) {\n  var reason = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'is invalid';\n  if (util === undefined) util = require('util/');\n  var inspected = util.inspect(value);\n\n  if (inspected.length > 128) {\n    inspected = \"\".concat(inspected.slice(0, 128), \"...\");\n  }\n\n  return \"The argument '\".concat(name, \"' \").concat(reason, \". Received \").concat(inspected);\n}, TypeError, RangeError);\ncreateErrorType('ERR_INVALID_RETURN_VALUE', function (input, name, value) {\n  var type;\n\n  if (value && value.constructor && value.constructor.name) {\n    type = \"instance of \".concat(value.constructor.name);\n  } else {\n    type = \"type \".concat(_typeof(value));\n  }\n\n  return \"Expected \".concat(input, \" to be returned from the \\\"\").concat(name, \"\\\"\") + \" function but got \".concat(type, \".\");\n}, TypeError);\ncreateErrorType('ERR_MISSING_ARGS', function () {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  if (assert === undefined) assert = require('../assert');\n  assert(args.length > 0, 'At least one arg needs to be specified');\n  var msg = 'The ';\n  var len = args.length;\n  args = args.map(function (a) {\n    return \"\\\"\".concat(a, \"\\\"\");\n  });\n\n  switch (len) {\n    case 1:\n      msg += \"\".concat(args[0], \" argument\");\n      break;\n\n    case 2:\n      msg += \"\".concat(args[0], \" and \").concat(args[1], \" arguments\");\n      break;\n\n    default:\n      msg += args.slice(0, len - 1).join(', ');\n      msg += \", and \".concat(args[len - 1], \" arguments\");\n      break;\n  }\n\n  return \"\".concat(msg, \" must be specified\");\n}, TypeError);\nmodule.exports.codes = codes;","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar getOwnPropertyDescriptors = Object.getOwnPropertyDescriptors ||\n  function getOwnPropertyDescriptors(obj) {\n    var keys = Object.keys(obj);\n    var descriptors = {};\n    for (var i = 0; i < keys.length; i++) {\n      descriptors[keys[i]] = Object.getOwnPropertyDescriptor(obj, keys[i]);\n    }\n    return descriptors;\n  };\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  if (typeof process !== 'undefined' && process.noDeprecation === true) {\n    return fn;\n  }\n\n  // Allow for deprecating things in the process of starting up.\n  if (typeof process === 'undefined') {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnvRegex = /^$/;\n\nif (process.env.NODE_DEBUG) {\n  var debugEnv = process.env.NODE_DEBUG;\n  debugEnv = debugEnv.replace(/[|\\\\{}()[\\]^$+?.]/g, '\\\\$&')\n    .replace(/\\*/g, '.*')\n    .replace(/,/g, '$|^')\n    .toUpperCase();\n  debugEnvRegex = new RegExp('^' + debugEnv + '$', 'i');\n}\nexports.debuglog = function(set) {\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (debugEnvRegex.test(set)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nexports.types = require('./support/types');\n\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\nexports.types.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\nexports.types.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\nexports.types.isNativeError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = require('./support/isBuffer');\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = require('inherits');\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nvar kCustomPromisifiedSymbol = typeof Symbol !== 'undefined' ? Symbol('util.promisify.custom') : undefined;\n\nexports.promisify = function promisify(original) {\n  if (typeof original !== 'function')\n    throw new TypeError('The \"original\" argument must be of type Function');\n\n  if (kCustomPromisifiedSymbol && original[kCustomPromisifiedSymbol]) {\n    var fn = original[kCustomPromisifiedSymbol];\n    if (typeof fn !== 'function') {\n      throw new TypeError('The \"util.promisify.custom\" argument must be of type Function');\n    }\n    Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n      value: fn, enumerable: false, writable: false, configurable: true\n    });\n    return fn;\n  }\n\n  function fn() {\n    var promiseResolve, promiseReject;\n    var promise = new Promise(function (resolve, reject) {\n      promiseResolve = resolve;\n      promiseReject = reject;\n    });\n\n    var args = [];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n    args.push(function (err, value) {\n      if (err) {\n        promiseReject(err);\n      } else {\n        promiseResolve(value);\n      }\n    });\n\n    try {\n      original.apply(this, args);\n    } catch (err) {\n      promiseReject(err);\n    }\n\n    return promise;\n  }\n\n  Object.setPrototypeOf(fn, Object.getPrototypeOf(original));\n\n  if (kCustomPromisifiedSymbol) Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n    value: fn, enumerable: false, writable: false, configurable: true\n  });\n  return Object.defineProperties(\n    fn,\n    getOwnPropertyDescriptors(original)\n  );\n}\n\nexports.promisify.custom = kCustomPromisifiedSymbol\n\nfunction callbackifyOnRejected(reason, cb) {\n  // `!reason` guard inspired by bluebird (Ref: https://goo.gl/t5IS6M).\n  // Because `null` is a special error value in callbacks which means \"no error\n  // occurred\", we error-wrap so the callback consumer can distinguish between\n  // \"the promise rejected with null\" or \"the promise fulfilled with undefined\".\n  if (!reason) {\n    var newReason = new Error('Promise was rejected with a falsy value');\n    newReason.reason = reason;\n    reason = newReason;\n  }\n  return cb(reason);\n}\n\nfunction callbackify(original) {\n  if (typeof original !== 'function') {\n    throw new TypeError('The \"original\" argument must be of type Function');\n  }\n\n  // We DO NOT return the promise as it gives the user a false sense that\n  // the promise is actually somehow related to the callback's execution\n  // and that the callback throwing will reject the promise.\n  function callbackified() {\n    var args = [];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n\n    var maybeCb = args.pop();\n    if (typeof maybeCb !== 'function') {\n      throw new TypeError('The last argument must be of type Function');\n    }\n    var self = this;\n    var cb = function() {\n      return maybeCb.apply(self, arguments);\n    };\n    // In true node style we process the callback on `nextTick` with all the\n    // implications (stack, `uncaughtException`, `async_hooks`)\n    original.apply(this, args)\n      .then(function(ret) { process.nextTick(cb.bind(null, null, ret)) },\n            function(rej) { process.nextTick(callbackifyOnRejected.bind(null, rej, cb)) });\n  }\n\n  Object.setPrototypeOf(callbackified, Object.getPrototypeOf(original));\n  Object.defineProperties(callbackified,\n                          getOwnPropertyDescriptors(original));\n  return callbackified;\n}\nexports.callbackify = callbackify;\n","// Currently in sync with Node.js lib/internal/util/types.js\n// https://github.com/nodejs/node/commit/112cc7c27551254aa2b17098fb774867f05ed0d9\n\n'use strict';\n\nvar isArgumentsObject = require('is-arguments');\nvar isGeneratorFunction = require('is-generator-function');\nvar whichTypedArray = require('which-typed-array');\nvar isTypedArray = require('is-typed-array');\n\nfunction uncurryThis(f) {\n  return f.call.bind(f);\n}\n\nvar BigIntSupported = typeof BigInt !== 'undefined';\nvar SymbolSupported = typeof Symbol !== 'undefined';\n\nvar ObjectToString = uncurryThis(Object.prototype.toString);\n\nvar numberValue = uncurryThis(Number.prototype.valueOf);\nvar stringValue = uncurryThis(String.prototype.valueOf);\nvar booleanValue = uncurryThis(Boolean.prototype.valueOf);\n\nif (BigIntSupported) {\n  var bigIntValue = uncurryThis(BigInt.prototype.valueOf);\n}\n\nif (SymbolSupported) {\n  var symbolValue = uncurryThis(Symbol.prototype.valueOf);\n}\n\nfunction checkBoxedPrimitive(value, prototypeValueOf) {\n  if (typeof value !== 'object') {\n    return false;\n  }\n  try {\n    prototypeValueOf(value);\n    return true;\n  } catch(e) {\n    return false;\n  }\n}\n\nexports.isArgumentsObject = isArgumentsObject;\nexports.isGeneratorFunction = isGeneratorFunction;\nexports.isTypedArray = isTypedArray;\n\n// Taken from here and modified for better browser support\n// https://github.com/sindresorhus/p-is-promise/blob/cda35a513bda03f977ad5cde3a079d237e82d7ef/index.js\nfunction isPromise(input) {\n\treturn (\n\t\t(\n\t\t\ttypeof Promise !== 'undefined' &&\n\t\t\tinput instanceof Promise\n\t\t) ||\n\t\t(\n\t\t\tinput !== null &&\n\t\t\ttypeof input === 'object' &&\n\t\t\ttypeof input.then === 'function' &&\n\t\t\ttypeof input.catch === 'function'\n\t\t)\n\t);\n}\nexports.isPromise = isPromise;\n\nfunction isArrayBufferView(value) {\n  if (typeof ArrayBuffer !== 'undefined' && ArrayBuffer.isView) {\n    return ArrayBuffer.isView(value);\n  }\n\n  return (\n    isTypedArray(value) ||\n    isDataView(value)\n  );\n}\nexports.isArrayBufferView = isArrayBufferView;\n\n\nfunction isUint8Array(value) {\n  return whichTypedArray(value) === 'Uint8Array';\n}\nexports.isUint8Array = isUint8Array;\n\nfunction isUint8ClampedArray(value) {\n  return whichTypedArray(value) === 'Uint8ClampedArray';\n}\nexports.isUint8ClampedArray = isUint8ClampedArray;\n\nfunction isUint16Array(value) {\n  return whichTypedArray(value) === 'Uint16Array';\n}\nexports.isUint16Array = isUint16Array;\n\nfunction isUint32Array(value) {\n  return whichTypedArray(value) === 'Uint32Array';\n}\nexports.isUint32Array = isUint32Array;\n\nfunction isInt8Array(value) {\n  return whichTypedArray(value) === 'Int8Array';\n}\nexports.isInt8Array = isInt8Array;\n\nfunction isInt16Array(value) {\n  return whichTypedArray(value) === 'Int16Array';\n}\nexports.isInt16Array = isInt16Array;\n\nfunction isInt32Array(value) {\n  return whichTypedArray(value) === 'Int32Array';\n}\nexports.isInt32Array = isInt32Array;\n\nfunction isFloat32Array(value) {\n  return whichTypedArray(value) === 'Float32Array';\n}\nexports.isFloat32Array = isFloat32Array;\n\nfunction isFloat64Array(value) {\n  return whichTypedArray(value) === 'Float64Array';\n}\nexports.isFloat64Array = isFloat64Array;\n\nfunction isBigInt64Array(value) {\n  return whichTypedArray(value) === 'BigInt64Array';\n}\nexports.isBigInt64Array = isBigInt64Array;\n\nfunction isBigUint64Array(value) {\n  return whichTypedArray(value) === 'BigUint64Array';\n}\nexports.isBigUint64Array = isBigUint64Array;\n\nfunction isMapToString(value) {\n  return ObjectToString(value) === '[object Map]';\n}\nisMapToString.working = (\n  typeof Map !== 'undefined' &&\n  isMapToString(new Map())\n);\n\nfunction isMap(value) {\n  if (typeof Map === 'undefined') {\n    return false;\n  }\n\n  return isMapToString.working\n    ? isMapToString(value)\n    : value instanceof Map;\n}\nexports.isMap = isMap;\n\nfunction isSetToString(value) {\n  return ObjectToString(value) === '[object Set]';\n}\nisSetToString.working = (\n  typeof Set !== 'undefined' &&\n  isSetToString(new Set())\n);\nfunction isSet(value) {\n  if (typeof Set === 'undefined') {\n    return false;\n  }\n\n  return isSetToString.working\n    ? isSetToString(value)\n    : value instanceof Set;\n}\nexports.isSet = isSet;\n\nfunction isWeakMapToString(value) {\n  return ObjectToString(value) === '[object WeakMap]';\n}\nisWeakMapToString.working = (\n  typeof WeakMap !== 'undefined' &&\n  isWeakMapToString(new WeakMap())\n);\nfunction isWeakMap(value) {\n  if (typeof WeakMap === 'undefined') {\n    return false;\n  }\n\n  return isWeakMapToString.working\n    ? isWeakMapToString(value)\n    : value instanceof WeakMap;\n}\nexports.isWeakMap = isWeakMap;\n\nfunction isWeakSetToString(value) {\n  return ObjectToString(value) === '[object WeakSet]';\n}\nisWeakSetToString.working = (\n  typeof WeakSet !== 'undefined' &&\n  isWeakSetToString(new WeakSet())\n);\nfunction isWeakSet(value) {\n  return isWeakSetToString(value);\n}\nexports.isWeakSet = isWeakSet;\n\nfunction isArrayBufferToString(value) {\n  return ObjectToString(value) === '[object ArrayBuffer]';\n}\nisArrayBufferToString.working = (\n  typeof ArrayBuffer !== 'undefined' &&\n  isArrayBufferToString(new ArrayBuffer())\n);\nfunction isArrayBuffer(value) {\n  if (typeof ArrayBuffer === 'undefined') {\n    return false;\n  }\n\n  return isArrayBufferToString.working\n    ? isArrayBufferToString(value)\n    : value instanceof ArrayBuffer;\n}\nexports.isArrayBuffer = isArrayBuffer;\n\nfunction isDataViewToString(value) {\n  return ObjectToString(value) === '[object DataView]';\n}\nisDataViewToString.working = (\n  typeof ArrayBuffer !== 'undefined' &&\n  typeof DataView !== 'undefined' &&\n  isDataViewToString(new DataView(new ArrayBuffer(1), 0, 1))\n);\nfunction isDataView(value) {\n  if (typeof DataView === 'undefined') {\n    return false;\n  }\n\n  return isDataViewToString.working\n    ? isDataViewToString(value)\n    : value instanceof DataView;\n}\nexports.isDataView = isDataView;\n\n// Store a copy of SharedArrayBuffer in case it's deleted elsewhere\nvar SharedArrayBufferCopy = typeof SharedArrayBuffer !== 'undefined' ? SharedArrayBuffer : undefined;\nfunction isSharedArrayBufferToString(value) {\n  return ObjectToString(value) === '[object SharedArrayBuffer]';\n}\nfunction isSharedArrayBuffer(value) {\n  if (typeof SharedArrayBufferCopy === 'undefined') {\n    return false;\n  }\n\n  if (typeof isSharedArrayBufferToString.working === 'undefined') {\n    isSharedArrayBufferToString.working = isSharedArrayBufferToString(new SharedArrayBufferCopy());\n  }\n\n  return isSharedArrayBufferToString.working\n    ? isSharedArrayBufferToString(value)\n    : value instanceof SharedArrayBufferCopy;\n}\nexports.isSharedArrayBuffer = isSharedArrayBuffer;\n\nfunction isAsyncFunction(value) {\n  return ObjectToString(value) === '[object AsyncFunction]';\n}\nexports.isAsyncFunction = isAsyncFunction;\n\nfunction isMapIterator(value) {\n  return ObjectToString(value) === '[object Map Iterator]';\n}\nexports.isMapIterator = isMapIterator;\n\nfunction isSetIterator(value) {\n  return ObjectToString(value) === '[object Set Iterator]';\n}\nexports.isSetIterator = isSetIterator;\n\nfunction isGeneratorObject(value) {\n  return ObjectToString(value) === '[object Generator]';\n}\nexports.isGeneratorObject = isGeneratorObject;\n\nfunction isWebAssemblyCompiledModule(value) {\n  return ObjectToString(value) === '[object WebAssembly.Module]';\n}\nexports.isWebAssemblyCompiledModule = isWebAssemblyCompiledModule;\n\nfunction isNumberObject(value) {\n  return checkBoxedPrimitive(value, numberValue);\n}\nexports.isNumberObject = isNumberObject;\n\nfunction isStringObject(value) {\n  return checkBoxedPrimitive(value, stringValue);\n}\nexports.isStringObject = isStringObject;\n\nfunction isBooleanObject(value) {\n  return checkBoxedPrimitive(value, booleanValue);\n}\nexports.isBooleanObject = isBooleanObject;\n\nfunction isBigIntObject(value) {\n  return BigIntSupported && checkBoxedPrimitive(value, bigIntValue);\n}\nexports.isBigIntObject = isBigIntObject;\n\nfunction isSymbolObject(value) {\n  return SymbolSupported && checkBoxedPrimitive(value, symbolValue);\n}\nexports.isSymbolObject = isSymbolObject;\n\nfunction isBoxedPrimitive(value) {\n  return (\n    isNumberObject(value) ||\n    isStringObject(value) ||\n    isBooleanObject(value) ||\n    isBigIntObject(value) ||\n    isSymbolObject(value)\n  );\n}\nexports.isBoxedPrimitive = isBoxedPrimitive;\n\nfunction isAnyArrayBuffer(value) {\n  return typeof Uint8Array !== 'undefined' && (\n    isArrayBuffer(value) ||\n    isSharedArrayBuffer(value)\n  );\n}\nexports.isAnyArrayBuffer = isAnyArrayBuffer;\n\n['isProxy', 'isExternal', 'isModuleNamespaceObject'].forEach(function(method) {\n  Object.defineProperty(exports, method, {\n    enumerable: false,\n    value: function() {\n      throw new Error(method + ' is not supported in userland');\n    }\n  });\n});\n","'use strict';\n\nvar hasToStringTag = require('has-tostringtag/shams')();\nvar callBound = require('call-bind/callBound');\n\nvar $toString = callBound('Object.prototype.toString');\n\nvar isStandardArguments = function isArguments(value) {\n\tif (hasToStringTag && value && typeof value === 'object' && Symbol.toStringTag in value) {\n\t\treturn false;\n\t}\n\treturn $toString(value) === '[object Arguments]';\n};\n\nvar isLegacyArguments = function isArguments(value) {\n\tif (isStandardArguments(value)) {\n\t\treturn true;\n\t}\n\treturn value !== null &&\n\t\ttypeof value === 'object' &&\n\t\ttypeof value.length === 'number' &&\n\t\tvalue.length >= 0 &&\n\t\t$toString(value) !== '[object Array]' &&\n\t\t$toString(value.callee) === '[object Function]';\n};\n\nvar supportsStandardArguments = (function () {\n\treturn isStandardArguments(arguments);\n}());\n\nisStandardArguments.isLegacyArguments = isLegacyArguments; // for tests\n\nmodule.exports = supportsStandardArguments ? isStandardArguments : isLegacyArguments;\n","'use strict';\n\nvar hasSymbols = require('has-symbols/shams');\n\nmodule.exports = function hasToStringTagShams() {\n\treturn hasSymbols() && !!Symbol.toStringTag;\n};\n","'use strict';\n\n/* eslint complexity: [2, 18], max-statements: [2, 33] */\nmodule.exports = function hasSymbols() {\n\tif (typeof Symbol !== 'function' || typeof Object.getOwnPropertySymbols !== 'function') { return false; }\n\tif (typeof Symbol.iterator === 'symbol') { return true; }\n\n\tvar obj = {};\n\tvar sym = Symbol('test');\n\tvar symObj = Object(sym);\n\tif (typeof sym === 'string') { return false; }\n\n\tif (Object.prototype.toString.call(sym) !== '[object Symbol]') { return false; }\n\tif (Object.prototype.toString.call(symObj) !== '[object Symbol]') { return false; }\n\n\t// temp disabled per https://github.com/ljharb/object.assign/issues/17\n\t// if (sym instanceof Symbol) { return false; }\n\t// temp disabled per https://github.com/WebReflection/get-own-property-symbols/issues/4\n\t// if (!(symObj instanceof Symbol)) { return false; }\n\n\t// if (typeof Symbol.prototype.toString !== 'function') { return false; }\n\t// if (String(sym) !== Symbol.prototype.toString.call(sym)) { return false; }\n\n\tvar symVal = 42;\n\tobj[sym] = symVal;\n\tfor (sym in obj) { return false; } // eslint-disable-line no-restricted-syntax, no-unreachable-loop\n\tif (typeof Object.keys === 'function' && Object.keys(obj).length !== 0) { return false; }\n\n\tif (typeof Object.getOwnPropertyNames === 'function' && Object.getOwnPropertyNames(obj).length !== 0) { return false; }\n\n\tvar syms = Object.getOwnPropertySymbols(obj);\n\tif (syms.length !== 1 || syms[0] !== sym) { return false; }\n\n\tif (!Object.prototype.propertyIsEnumerable.call(obj, sym)) { return false; }\n\n\tif (typeof Object.getOwnPropertyDescriptor === 'function') {\n\t\tvar descriptor = Object.getOwnPropertyDescriptor(obj, sym);\n\t\tif (descriptor.value !== symVal || descriptor.enumerable !== true) { return false; }\n\t}\n\n\treturn true;\n};\n","'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar callBind = require('./');\n\nvar $indexOf = callBind(GetIntrinsic('String.prototype.indexOf'));\n\nmodule.exports = function callBoundIntrinsic(name, allowMissing) {\n\tvar intrinsic = GetIntrinsic(name, !!allowMissing);\n\tif (typeof intrinsic === 'function' && $indexOf(name, '.prototype.') > -1) {\n\t\treturn callBind(intrinsic);\n\t}\n\treturn intrinsic;\n};\n","'use strict';\n\nvar undefined;\n\nvar $SyntaxError = SyntaxError;\nvar $Function = Function;\nvar $TypeError = TypeError;\n\n// eslint-disable-next-line consistent-return\nvar getEvalledConstructor = function (expressionSyntax) {\n\ttry {\n\t\treturn $Function('\"use strict\"; return (' + expressionSyntax + ').constructor;')();\n\t} catch (e) {}\n};\n\nvar $gOPD = Object.getOwnPropertyDescriptor;\nif ($gOPD) {\n\ttry {\n\t\t$gOPD({}, '');\n\t} catch (e) {\n\t\t$gOPD = null; // this is IE 8, which has a broken gOPD\n\t}\n}\n\nvar throwTypeError = function () {\n\tthrow new $TypeError();\n};\nvar ThrowTypeError = $gOPD\n\t? (function () {\n\t\ttry {\n\t\t\t// eslint-disable-next-line no-unused-expressions, no-caller, no-restricted-properties\n\t\t\targuments.callee; // IE 8 does not throw here\n\t\t\treturn throwTypeError;\n\t\t} catch (calleeThrows) {\n\t\t\ttry {\n\t\t\t\t// IE 8 throws on Object.getOwnPropertyDescriptor(arguments, '')\n\t\t\t\treturn $gOPD(arguments, 'callee').get;\n\t\t\t} catch (gOPDthrows) {\n\t\t\t\treturn throwTypeError;\n\t\t\t}\n\t\t}\n\t}())\n\t: throwTypeError;\n\nvar hasSymbols = require('has-symbols')();\n\nvar getProto = Object.getPrototypeOf || function (x) { return x.__proto__; }; // eslint-disable-line no-proto\n\nvar needsEval = {};\n\nvar TypedArray = typeof Uint8Array === 'undefined' ? undefined : getProto(Uint8Array);\n\nvar INTRINSICS = {\n\t'%AggregateError%': typeof AggregateError === 'undefined' ? undefined : AggregateError,\n\t'%Array%': Array,\n\t'%ArrayBuffer%': typeof ArrayBuffer === 'undefined' ? undefined : ArrayBuffer,\n\t'%ArrayIteratorPrototype%': hasSymbols ? getProto([][Symbol.iterator]()) : undefined,\n\t'%AsyncFromSyncIteratorPrototype%': undefined,\n\t'%AsyncFunction%': needsEval,\n\t'%AsyncGenerator%': needsEval,\n\t'%AsyncGeneratorFunction%': needsEval,\n\t'%AsyncIteratorPrototype%': needsEval,\n\t'%Atomics%': typeof Atomics === 'undefined' ? undefined : Atomics,\n\t'%BigInt%': typeof BigInt === 'undefined' ? undefined : BigInt,\n\t'%Boolean%': Boolean,\n\t'%DataView%': typeof DataView === 'undefined' ? undefined : DataView,\n\t'%Date%': Date,\n\t'%decodeURI%': decodeURI,\n\t'%decodeURIComponent%': decodeURIComponent,\n\t'%encodeURI%': encodeURI,\n\t'%encodeURIComponent%': encodeURIComponent,\n\t'%Error%': Error,\n\t'%eval%': eval, // eslint-disable-line no-eval\n\t'%EvalError%': EvalError,\n\t'%Float32Array%': typeof Float32Array === 'undefined' ? undefined : Float32Array,\n\t'%Float64Array%': typeof Float64Array === 'undefined' ? undefined : Float64Array,\n\t'%FinalizationRegistry%': typeof FinalizationRegistry === 'undefined' ? undefined : FinalizationRegistry,\n\t'%Function%': $Function,\n\t'%GeneratorFunction%': needsEval,\n\t'%Int8Array%': typeof Int8Array === 'undefined' ? undefined : Int8Array,\n\t'%Int16Array%': typeof Int16Array === 'undefined' ? undefined : Int16Array,\n\t'%Int32Array%': typeof Int32Array === 'undefined' ? undefined : Int32Array,\n\t'%isFinite%': isFinite,\n\t'%isNaN%': isNaN,\n\t'%IteratorPrototype%': hasSymbols ? getProto(getProto([][Symbol.iterator]())) : undefined,\n\t'%JSON%': typeof JSON === 'object' ? JSON : undefined,\n\t'%Map%': typeof Map === 'undefined' ? undefined : Map,\n\t'%MapIteratorPrototype%': typeof Map === 'undefined' || !hasSymbols ? undefined : getProto(new Map()[Symbol.iterator]()),\n\t'%Math%': Math,\n\t'%Number%': Number,\n\t'%Object%': Object,\n\t'%parseFloat%': parseFloat,\n\t'%parseInt%': parseInt,\n\t'%Promise%': typeof Promise === 'undefined' ? undefined : Promise,\n\t'%Proxy%': typeof Proxy === 'undefined' ? undefined : Proxy,\n\t'%RangeError%': RangeError,\n\t'%ReferenceError%': ReferenceError,\n\t'%Reflect%': typeof Reflect === 'undefined' ? undefined : Reflect,\n\t'%RegExp%': RegExp,\n\t'%Set%': typeof Set === 'undefined' ? undefined : Set,\n\t'%SetIteratorPrototype%': typeof Set === 'undefined' || !hasSymbols ? undefined : getProto(new Set()[Symbol.iterator]()),\n\t'%SharedArrayBuffer%': typeof SharedArrayBuffer === 'undefined' ? undefined : SharedArrayBuffer,\n\t'%String%': String,\n\t'%StringIteratorPrototype%': hasSymbols ? getProto(''[Symbol.iterator]()) : undefined,\n\t'%Symbol%': hasSymbols ? Symbol : undefined,\n\t'%SyntaxError%': $SyntaxError,\n\t'%ThrowTypeError%': ThrowTypeError,\n\t'%TypedArray%': TypedArray,\n\t'%TypeError%': $TypeError,\n\t'%Uint8Array%': typeof Uint8Array === 'undefined' ? undefined : Uint8Array,\n\t'%Uint8ClampedArray%': typeof Uint8ClampedArray === 'undefined' ? undefined : Uint8ClampedArray,\n\t'%Uint16Array%': typeof Uint16Array === 'undefined' ? undefined : Uint16Array,\n\t'%Uint32Array%': typeof Uint32Array === 'undefined' ? undefined : Uint32Array,\n\t'%URIError%': URIError,\n\t'%WeakMap%': typeof WeakMap === 'undefined' ? undefined : WeakMap,\n\t'%WeakRef%': typeof WeakRef === 'undefined' ? undefined : WeakRef,\n\t'%WeakSet%': typeof WeakSet === 'undefined' ? undefined : WeakSet\n};\n\nvar doEval = function doEval(name) {\n\tvar value;\n\tif (name === '%AsyncFunction%') {\n\t\tvalue = getEvalledConstructor('async function () {}');\n\t} else if (name === '%GeneratorFunction%') {\n\t\tvalue = getEvalledConstructor('function* () {}');\n\t} else if (name === '%AsyncGeneratorFunction%') {\n\t\tvalue = getEvalledConstructor('async function* () {}');\n\t} else if (name === '%AsyncGenerator%') {\n\t\tvar fn = doEval('%AsyncGeneratorFunction%');\n\t\tif (fn) {\n\t\t\tvalue = fn.prototype;\n\t\t}\n\t} else if (name === '%AsyncIteratorPrototype%') {\n\t\tvar gen = doEval('%AsyncGenerator%');\n\t\tif (gen) {\n\t\t\tvalue = getProto(gen.prototype);\n\t\t}\n\t}\n\n\tINTRINSICS[name] = value;\n\n\treturn value;\n};\n\nvar LEGACY_ALIASES = {\n\t'%ArrayBufferPrototype%': ['ArrayBuffer', 'prototype'],\n\t'%ArrayPrototype%': ['Array', 'prototype'],\n\t'%ArrayProto_entries%': ['Array', 'prototype', 'entries'],\n\t'%ArrayProto_forEach%': ['Array', 'prototype', 'forEach'],\n\t'%ArrayProto_keys%': ['Array', 'prototype', 'keys'],\n\t'%ArrayProto_values%': ['Array', 'prototype', 'values'],\n\t'%AsyncFunctionPrototype%': ['AsyncFunction', 'prototype'],\n\t'%AsyncGenerator%': ['AsyncGeneratorFunction', 'prototype'],\n\t'%AsyncGeneratorPrototype%': ['AsyncGeneratorFunction', 'prototype', 'prototype'],\n\t'%BooleanPrototype%': ['Boolean', 'prototype'],\n\t'%DataViewPrototype%': ['DataView', 'prototype'],\n\t'%DatePrototype%': ['Date', 'prototype'],\n\t'%ErrorPrototype%': ['Error', 'prototype'],\n\t'%EvalErrorPrototype%': ['EvalError', 'prototype'],\n\t'%Float32ArrayPrototype%': ['Float32Array', 'prototype'],\n\t'%Float64ArrayPrototype%': ['Float64Array', 'prototype'],\n\t'%FunctionPrototype%': ['Function', 'prototype'],\n\t'%Generator%': ['GeneratorFunction', 'prototype'],\n\t'%GeneratorPrototype%': ['GeneratorFunction', 'prototype', 'prototype'],\n\t'%Int8ArrayPrototype%': ['Int8Array', 'prototype'],\n\t'%Int16ArrayPrototype%': ['Int16Array', 'prototype'],\n\t'%Int32ArrayPrototype%': ['Int32Array', 'prototype'],\n\t'%JSONParse%': ['JSON', 'parse'],\n\t'%JSONStringify%': ['JSON', 'stringify'],\n\t'%MapPrototype%': ['Map', 'prototype'],\n\t'%NumberPrototype%': ['Number', 'prototype'],\n\t'%ObjectPrototype%': ['Object', 'prototype'],\n\t'%ObjProto_toString%': ['Object', 'prototype', 'toString'],\n\t'%ObjProto_valueOf%': ['Object', 'prototype', 'valueOf'],\n\t'%PromisePrototype%': ['Promise', 'prototype'],\n\t'%PromiseProto_then%': ['Promise', 'prototype', 'then'],\n\t'%Promise_all%': ['Promise', 'all'],\n\t'%Promise_reject%': ['Promise', 'reject'],\n\t'%Promise_resolve%': ['Promise', 'resolve'],\n\t'%RangeErrorPrototype%': ['RangeError', 'prototype'],\n\t'%ReferenceErrorPrototype%': ['ReferenceError', 'prototype'],\n\t'%RegExpPrototype%': ['RegExp', 'prototype'],\n\t'%SetPrototype%': ['Set', 'prototype'],\n\t'%SharedArrayBufferPrototype%': ['SharedArrayBuffer', 'prototype'],\n\t'%StringPrototype%': ['String', 'prototype'],\n\t'%SymbolPrototype%': ['Symbol', 'prototype'],\n\t'%SyntaxErrorPrototype%': ['SyntaxError', 'prototype'],\n\t'%TypedArrayPrototype%': ['TypedArray', 'prototype'],\n\t'%TypeErrorPrototype%': ['TypeError', 'prototype'],\n\t'%Uint8ArrayPrototype%': ['Uint8Array', 'prototype'],\n\t'%Uint8ClampedArrayPrototype%': ['Uint8ClampedArray', 'prototype'],\n\t'%Uint16ArrayPrototype%': ['Uint16Array', 'prototype'],\n\t'%Uint32ArrayPrototype%': ['Uint32Array', 'prototype'],\n\t'%URIErrorPrototype%': ['URIError', 'prototype'],\n\t'%WeakMapPrototype%': ['WeakMap', 'prototype'],\n\t'%WeakSetPrototype%': ['WeakSet', 'prototype']\n};\n\nvar bind = require('function-bind');\nvar hasOwn = require('has');\nvar $concat = bind.call(Function.call, Array.prototype.concat);\nvar $spliceApply = bind.call(Function.apply, Array.prototype.splice);\nvar $replace = bind.call(Function.call, String.prototype.replace);\nvar $strSlice = bind.call(Function.call, String.prototype.slice);\nvar $exec = bind.call(Function.call, RegExp.prototype.exec);\n\n/* adapted from https://github.com/lodash/lodash/blob/4.17.15/dist/lodash.js#L6735-L6744 */\nvar rePropName = /[^%.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|%$))/g;\nvar reEscapeChar = /\\\\(\\\\)?/g; /** Used to match backslashes in property paths. */\nvar stringToPath = function stringToPath(string) {\n\tvar first = $strSlice(string, 0, 1);\n\tvar last = $strSlice(string, -1);\n\tif (first === '%' && last !== '%') {\n\t\tthrow new $SyntaxError('invalid intrinsic syntax, expected closing `%`');\n\t} else if (last === '%' && first !== '%') {\n\t\tthrow new $SyntaxError('invalid intrinsic syntax, expected opening `%`');\n\t}\n\tvar result = [];\n\t$replace(string, rePropName, function (match, number, quote, subString) {\n\t\tresult[result.length] = quote ? $replace(subString, reEscapeChar, '$1') : number || match;\n\t});\n\treturn result;\n};\n/* end adaptation */\n\nvar getBaseIntrinsic = function getBaseIntrinsic(name, allowMissing) {\n\tvar intrinsicName = name;\n\tvar alias;\n\tif (hasOwn(LEGACY_ALIASES, intrinsicName)) {\n\t\talias = LEGACY_ALIASES[intrinsicName];\n\t\tintrinsicName = '%' + alias[0] + '%';\n\t}\n\n\tif (hasOwn(INTRINSICS, intrinsicName)) {\n\t\tvar value = INTRINSICS[intrinsicName];\n\t\tif (value === needsEval) {\n\t\t\tvalue = doEval(intrinsicName);\n\t\t}\n\t\tif (typeof value === 'undefined' && !allowMissing) {\n\t\t\tthrow new $TypeError('intrinsic ' + name + ' exists, but is not available. Please file an issue!');\n\t\t}\n\n\t\treturn {\n\t\t\talias: alias,\n\t\t\tname: intrinsicName,\n\t\t\tvalue: value\n\t\t};\n\t}\n\n\tthrow new $SyntaxError('intrinsic ' + name + ' does not exist!');\n};\n\nmodule.exports = function GetIntrinsic(name, allowMissing) {\n\tif (typeof name !== 'string' || name.length === 0) {\n\t\tthrow new $TypeError('intrinsic name must be a non-empty string');\n\t}\n\tif (arguments.length > 1 && typeof allowMissing !== 'boolean') {\n\t\tthrow new $TypeError('\"allowMissing\" argument must be a boolean');\n\t}\n\n\tif ($exec(/^%?[^%]*%?$/g, name) === null) {\n\t\tthrow new $SyntaxError('`%` may not be present anywhere but at the beginning and end of the intrinsic name');\n\t}\n\tvar parts = stringToPath(name);\n\tvar intrinsicBaseName = parts.length > 0 ? parts[0] : '';\n\n\tvar intrinsic = getBaseIntrinsic('%' + intrinsicBaseName + '%', allowMissing);\n\tvar intrinsicRealName = intrinsic.name;\n\tvar value = intrinsic.value;\n\tvar skipFurtherCaching = false;\n\n\tvar alias = intrinsic.alias;\n\tif (alias) {\n\t\tintrinsicBaseName = alias[0];\n\t\t$spliceApply(parts, $concat([0, 1], alias));\n\t}\n\n\tfor (var i = 1, isOwn = true; i < parts.length; i += 1) {\n\t\tvar part = parts[i];\n\t\tvar first = $strSlice(part, 0, 1);\n\t\tvar last = $strSlice(part, -1);\n\t\tif (\n\t\t\t(\n\t\t\t\t(first === '\"' || first === \"'\" || first === '`')\n\t\t\t\t|| (last === '\"' || last === \"'\" || last === '`')\n\t\t\t)\n\t\t\t&& first !== last\n\t\t) {\n\t\t\tthrow new $SyntaxError('property names with quotes must have matching quotes');\n\t\t}\n\t\tif (part === 'constructor' || !isOwn) {\n\t\t\tskipFurtherCaching = true;\n\t\t}\n\n\t\tintrinsicBaseName += '.' + part;\n\t\tintrinsicRealName = '%' + intrinsicBaseName + '%';\n\n\t\tif (hasOwn(INTRINSICS, intrinsicRealName)) {\n\t\t\tvalue = INTRINSICS[intrinsicRealName];\n\t\t} else if (value != null) {\n\t\t\tif (!(part in value)) {\n\t\t\t\tif (!allowMissing) {\n\t\t\t\t\tthrow new $TypeError('base intrinsic for ' + name + ' exists, but the property is not available.');\n\t\t\t\t}\n\t\t\t\treturn void undefined;\n\t\t\t}\n\t\t\tif ($gOPD && (i + 1) >= parts.length) {\n\t\t\t\tvar desc = $gOPD(value, part);\n\t\t\t\tisOwn = !!desc;\n\n\t\t\t\t// By convention, when a data property is converted to an accessor\n\t\t\t\t// property to emulate a data property that does not suffer from\n\t\t\t\t// the override mistake, that accessor's getter is marked with\n\t\t\t\t// an `originalValue` property. Here, when we detect this, we\n\t\t\t\t// uphold the illusion by pretending to see that original data\n\t\t\t\t// property, i.e., returning the value rather than the getter\n\t\t\t\t// itself.\n\t\t\t\tif (isOwn && 'get' in desc && !('originalValue' in desc.get)) {\n\t\t\t\t\tvalue = desc.get;\n\t\t\t\t} else {\n\t\t\t\t\tvalue = value[part];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tisOwn = hasOwn(value, part);\n\t\t\t\tvalue = value[part];\n\t\t\t}\n\n\t\t\tif (isOwn && !skipFurtherCaching) {\n\t\t\t\tINTRINSICS[intrinsicRealName] = value;\n\t\t\t}\n\t\t}\n\t}\n\treturn value;\n};\n","'use strict';\n\nvar origSymbol = typeof Symbol !== 'undefined' && Symbol;\nvar hasSymbolSham = require('./shams');\n\nmodule.exports = function hasNativeSymbols() {\n\tif (typeof origSymbol !== 'function') { return false; }\n\tif (typeof Symbol !== 'function') { return false; }\n\tif (typeof origSymbol('foo') !== 'symbol') { return false; }\n\tif (typeof Symbol('bar') !== 'symbol') { return false; }\n\n\treturn hasSymbolSham();\n};\n","'use strict';\n\nvar implementation = require('./implementation');\n\nmodule.exports = Function.prototype.bind || implementation;\n","'use strict';\n\n/* eslint no-invalid-this: 1 */\n\nvar ERROR_MESSAGE = 'Function.prototype.bind called on incompatible ';\nvar slice = Array.prototype.slice;\nvar toStr = Object.prototype.toString;\nvar funcType = '[object Function]';\n\nmodule.exports = function bind(that) {\n    var target = this;\n    if (typeof target !== 'function' || toStr.call(target) !== funcType) {\n        throw new TypeError(ERROR_MESSAGE + target);\n    }\n    var args = slice.call(arguments, 1);\n\n    var bound;\n    var binder = function () {\n        if (this instanceof bound) {\n            var result = target.apply(\n                this,\n                args.concat(slice.call(arguments))\n            );\n            if (Object(result) === result) {\n                return result;\n            }\n            return this;\n        } else {\n            return target.apply(\n                that,\n                args.concat(slice.call(arguments))\n            );\n        }\n    };\n\n    var boundLength = Math.max(0, target.length - args.length);\n    var boundArgs = [];\n    for (var i = 0; i < boundLength; i++) {\n        boundArgs.push('$' + i);\n    }\n\n    bound = Function('binder', 'return function (' + boundArgs.join(',') + '){ return binder.apply(this,arguments); }')(binder);\n\n    if (target.prototype) {\n        var Empty = function Empty() {};\n        Empty.prototype = target.prototype;\n        bound.prototype = new Empty();\n        Empty.prototype = null;\n    }\n\n    return bound;\n};\n","'use strict';\n\nvar bind = require('function-bind');\n\nmodule.exports = bind.call(Function.call, Object.prototype.hasOwnProperty);\n","'use strict';\n\nvar bind = require('function-bind');\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $apply = GetIntrinsic('%Function.prototype.apply%');\nvar $call = GetIntrinsic('%Function.prototype.call%');\nvar $reflectApply = GetIntrinsic('%Reflect.apply%', true) || bind.call($call, $apply);\n\nvar $gOPD = GetIntrinsic('%Object.getOwnPropertyDescriptor%', true);\nvar $defineProperty = GetIntrinsic('%Object.defineProperty%', true);\nvar $max = GetIntrinsic('%Math.max%');\n\nif ($defineProperty) {\n\ttry {\n\t\t$defineProperty({}, 'a', { value: 1 });\n\t} catch (e) {\n\t\t// IE 8 has a broken defineProperty\n\t\t$defineProperty = null;\n\t}\n}\n\nmodule.exports = function callBind(originalFunction) {\n\tvar func = $reflectApply(bind, $call, arguments);\n\tif ($gOPD && $defineProperty) {\n\t\tvar desc = $gOPD(func, 'length');\n\t\tif (desc.configurable) {\n\t\t\t// original length, plus the receiver, minus any additional arguments (after the receiver)\n\t\t\t$defineProperty(\n\t\t\t\tfunc,\n\t\t\t\t'length',\n\t\t\t\t{ value: 1 + $max(0, originalFunction.length - (arguments.length - 1)) }\n\t\t\t);\n\t\t}\n\t}\n\treturn func;\n};\n\nvar applyBind = function applyBind() {\n\treturn $reflectApply(bind, $apply, arguments);\n};\n\nif ($defineProperty) {\n\t$defineProperty(module.exports, 'apply', { value: applyBind });\n} else {\n\tmodule.exports.apply = applyBind;\n}\n","'use strict';\n\nvar toStr = Object.prototype.toString;\nvar fnToStr = Function.prototype.toString;\nvar isFnRegex = /^\\s*(?:function)?\\*/;\nvar hasToStringTag = require('has-tostringtag/shams')();\nvar getProto = Object.getPrototypeOf;\nvar getGeneratorFunc = function () { // eslint-disable-line consistent-return\n\tif (!hasToStringTag) {\n\t\treturn false;\n\t}\n\ttry {\n\t\treturn Function('return function*() {}')();\n\t} catch (e) {\n\t}\n};\nvar GeneratorFunction;\n\nmodule.exports = function isGeneratorFunction(fn) {\n\tif (typeof fn !== 'function') {\n\t\treturn false;\n\t}\n\tif (isFnRegex.test(fnToStr.call(fn))) {\n\t\treturn true;\n\t}\n\tif (!hasToStringTag) {\n\t\tvar str = toStr.call(fn);\n\t\treturn str === '[object GeneratorFunction]';\n\t}\n\tif (!getProto) {\n\t\treturn false;\n\t}\n\tif (typeof GeneratorFunction === 'undefined') {\n\t\tvar generatorFunc = getGeneratorFunc();\n\t\tGeneratorFunction = generatorFunc ? getProto(generatorFunc) : false;\n\t}\n\treturn getProto(fn) === GeneratorFunction;\n};\n","'use strict';\n\nvar forEach = require('for-each');\nvar availableTypedArrays = require('available-typed-arrays');\nvar callBound = require('call-bind/callBound');\n\nvar $toString = callBound('Object.prototype.toString');\nvar hasToStringTag = require('has-tostringtag/shams')();\n\nvar g = typeof globalThis === 'undefined' ? global : globalThis;\nvar typedArrays = availableTypedArrays();\n\nvar $slice = callBound('String.prototype.slice');\nvar toStrTags = {};\nvar gOPD = require('es-abstract/helpers/getOwnPropertyDescriptor');\nvar getPrototypeOf = Object.getPrototypeOf; // require('getprototypeof');\nif (hasToStringTag && gOPD && getPrototypeOf) {\n\tforEach(typedArrays, function (typedArray) {\n\t\tif (typeof g[typedArray] === 'function') {\n\t\t\tvar arr = new g[typedArray]();\n\t\t\tif (Symbol.toStringTag in arr) {\n\t\t\t\tvar proto = getPrototypeOf(arr);\n\t\t\t\tvar descriptor = gOPD(proto, Symbol.toStringTag);\n\t\t\t\tif (!descriptor) {\n\t\t\t\t\tvar superProto = getPrototypeOf(proto);\n\t\t\t\t\tdescriptor = gOPD(superProto, Symbol.toStringTag);\n\t\t\t\t}\n\t\t\t\ttoStrTags[typedArray] = descriptor.get;\n\t\t\t}\n\t\t}\n\t});\n}\n\nvar tryTypedArrays = function tryAllTypedArrays(value) {\n\tvar foundName = false;\n\tforEach(toStrTags, function (getter, typedArray) {\n\t\tif (!foundName) {\n\t\t\ttry {\n\t\t\t\tvar name = getter.call(value);\n\t\t\t\tif (name === typedArray) {\n\t\t\t\t\tfoundName = name;\n\t\t\t\t}\n\t\t\t} catch (e) {}\n\t\t}\n\t});\n\treturn foundName;\n};\n\nvar isTypedArray = require('is-typed-array');\n\nmodule.exports = function whichTypedArray(value) {\n\tif (!isTypedArray(value)) { return false; }\n\tif (!hasToStringTag || !(Symbol.toStringTag in value)) { return $slice($toString(value), 8, -1); }\n\treturn tryTypedArrays(value);\n};\n","'use strict';\n\nvar isCallable = require('is-callable');\n\nvar toStr = Object.prototype.toString;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar forEachArray = function forEachArray(array, iterator, receiver) {\n    for (var i = 0, len = array.length; i < len; i++) {\n        if (hasOwnProperty.call(array, i)) {\n            if (receiver == null) {\n                iterator(array[i], i, array);\n            } else {\n                iterator.call(receiver, array[i], i, array);\n            }\n        }\n    }\n};\n\nvar forEachString = function forEachString(string, iterator, receiver) {\n    for (var i = 0, len = string.length; i < len; i++) {\n        // no such thing as a sparse string.\n        if (receiver == null) {\n            iterator(string.charAt(i), i, string);\n        } else {\n            iterator.call(receiver, string.charAt(i), i, string);\n        }\n    }\n};\n\nvar forEachObject = function forEachObject(object, iterator, receiver) {\n    for (var k in object) {\n        if (hasOwnProperty.call(object, k)) {\n            if (receiver == null) {\n                iterator(object[k], k, object);\n            } else {\n                iterator.call(receiver, object[k], k, object);\n            }\n        }\n    }\n};\n\nvar forEach = function forEach(list, iterator, thisArg) {\n    if (!isCallable(iterator)) {\n        throw new TypeError('iterator must be a function');\n    }\n\n    var receiver;\n    if (arguments.length >= 3) {\n        receiver = thisArg;\n    }\n\n    if (toStr.call(list) === '[object Array]') {\n        forEachArray(list, iterator, receiver);\n    } else if (typeof list === 'string') {\n        forEachString(list, iterator, receiver);\n    } else {\n        forEachObject(list, iterator, receiver);\n    }\n};\n\nmodule.exports = forEach;\n","'use strict';\n\nvar fnToStr = Function.prototype.toString;\nvar reflectApply = typeof Reflect === 'object' && Reflect !== null && Reflect.apply;\nvar badArrayLike;\nvar isCallableMarker;\nif (typeof reflectApply === 'function' && typeof Object.defineProperty === 'function') {\n\ttry {\n\t\tbadArrayLike = Object.defineProperty({}, 'length', {\n\t\t\tget: function () {\n\t\t\t\tthrow isCallableMarker;\n\t\t\t}\n\t\t});\n\t\tisCallableMarker = {};\n\t\t// eslint-disable-next-line no-throw-literal\n\t\treflectApply(function () { throw 42; }, null, badArrayLike);\n\t} catch (_) {\n\t\tif (_ !== isCallableMarker) {\n\t\t\treflectApply = null;\n\t\t}\n\t}\n} else {\n\treflectApply = null;\n}\n\nvar constructorRegex = /^\\s*class\\b/;\nvar isES6ClassFn = function isES6ClassFunction(value) {\n\ttry {\n\t\tvar fnStr = fnToStr.call(value);\n\t\treturn constructorRegex.test(fnStr);\n\t} catch (e) {\n\t\treturn false; // not a function\n\t}\n};\n\nvar tryFunctionObject = function tryFunctionToStr(value) {\n\ttry {\n\t\tif (isES6ClassFn(value)) { return false; }\n\t\tfnToStr.call(value);\n\t\treturn true;\n\t} catch (e) {\n\t\treturn false;\n\t}\n};\nvar toStr = Object.prototype.toString;\nvar fnClass = '[object Function]';\nvar genClass = '[object GeneratorFunction]';\nvar hasToStringTag = typeof Symbol === 'function' && !!Symbol.toStringTag; // better: use `has-tostringtag`\n/* globals document: false */\nvar documentDotAll = typeof document === 'object' && typeof document.all === 'undefined' && document.all !== undefined ? document.all : {};\n\nmodule.exports = reflectApply\n\t? function isCallable(value) {\n\t\tif (value === documentDotAll) { return true; }\n\t\tif (!value) { return false; }\n\t\tif (typeof value !== 'function' && typeof value !== 'object') { return false; }\n\t\tif (typeof value === 'function' && !value.prototype) { return true; }\n\t\ttry {\n\t\t\treflectApply(value, null, badArrayLike);\n\t\t} catch (e) {\n\t\t\tif (e !== isCallableMarker) { return false; }\n\t\t}\n\t\treturn !isES6ClassFn(value);\n\t}\n\t: function isCallable(value) {\n\t\tif (value === documentDotAll) { return true; }\n\t\tif (!value) { return false; }\n\t\tif (typeof value !== 'function' && typeof value !== 'object') { return false; }\n\t\tif (typeof value === 'function' && !value.prototype) { return true; }\n\t\tif (hasToStringTag) { return tryFunctionObject(value); }\n\t\tif (isES6ClassFn(value)) { return false; }\n\t\tvar strClass = toStr.call(value);\n\t\treturn strClass === fnClass || strClass === genClass;\n\t};\n","'use strict';\n\nvar possibleNames = [\n\t'BigInt64Array',\n\t'BigUint64Array',\n\t'Float32Array',\n\t'Float64Array',\n\t'Int16Array',\n\t'Int32Array',\n\t'Int8Array',\n\t'Uint16Array',\n\t'Uint32Array',\n\t'Uint8Array',\n\t'Uint8ClampedArray'\n];\n\nvar g = typeof globalThis === 'undefined' ? global : globalThis;\n\nmodule.exports = function availableTypedArrays() {\n\tvar out = [];\n\tfor (var i = 0; i < possibleNames.length; i++) {\n\t\tif (typeof g[possibleNames[i]] === 'function') {\n\t\t\tout[out.length] = possibleNames[i];\n\t\t}\n\t}\n\treturn out;\n};\n","'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $gOPD = GetIntrinsic('%Object.getOwnPropertyDescriptor%', true);\nif ($gOPD) {\n\ttry {\n\t\t$gOPD([], 'length');\n\t} catch (e) {\n\t\t// IE 8 has a broken gOPD\n\t\t$gOPD = null;\n\t}\n}\n\nmodule.exports = $gOPD;\n","'use strict';\n\nvar forEach = require('for-each');\nvar availableTypedArrays = require('available-typed-arrays');\nvar callBound = require('call-bind/callBound');\n\nvar $toString = callBound('Object.prototype.toString');\nvar hasToStringTag = require('has-tostringtag/shams')();\n\nvar g = typeof globalThis === 'undefined' ? global : globalThis;\nvar typedArrays = availableTypedArrays();\n\nvar $indexOf = callBound('Array.prototype.indexOf', true) || function indexOf(array, value) {\n\tfor (var i = 0; i < array.length; i += 1) {\n\t\tif (array[i] === value) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n};\nvar $slice = callBound('String.prototype.slice');\nvar toStrTags = {};\nvar gOPD = require('es-abstract/helpers/getOwnPropertyDescriptor');\nvar getPrototypeOf = Object.getPrototypeOf; // require('getprototypeof');\nif (hasToStringTag && gOPD && getPrototypeOf) {\n\tforEach(typedArrays, function (typedArray) {\n\t\tvar arr = new g[typedArray]();\n\t\tif (Symbol.toStringTag in arr) {\n\t\t\tvar proto = getPrototypeOf(arr);\n\t\t\tvar descriptor = gOPD(proto, Symbol.toStringTag);\n\t\t\tif (!descriptor) {\n\t\t\t\tvar superProto = getPrototypeOf(proto);\n\t\t\t\tdescriptor = gOPD(superProto, Symbol.toStringTag);\n\t\t\t}\n\t\t\ttoStrTags[typedArray] = descriptor.get;\n\t\t}\n\t});\n}\n\nvar tryTypedArrays = function tryAllTypedArrays(value) {\n\tvar anyTrue = false;\n\tforEach(toStrTags, function (getter, typedArray) {\n\t\tif (!anyTrue) {\n\t\t\ttry {\n\t\t\t\tanyTrue = getter.call(value) === typedArray;\n\t\t\t} catch (e) { /**/ }\n\t\t}\n\t});\n\treturn anyTrue;\n};\n\nmodule.exports = function isTypedArray(value) {\n\tif (!value || typeof value !== 'object') { return false; }\n\tif (!hasToStringTag || !(Symbol.toStringTag in value)) {\n\t\tvar tag = $slice($toString(value), 8, -1);\n\t\treturn $indexOf(typedArrays, tag) > -1;\n\t}\n\tif (!gOPD) { return false; }\n\treturn tryTypedArrays(value);\n};\n","module.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n","// Currently in sync with Node.js lib/internal/assert/assertion_error.js\n// https://github.com/nodejs/node/commit/0817840f775032169ddd70c85ac059f18ffcc81c\n'use strict';\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _wrapNativeSuper(Class) { var _cache = typeof Map === \"function\" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== \"function\") { throw new TypeError(\"Super expression must either be null or a function\"); } if (typeof _cache !== \"undefined\") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }\n\nfunction isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _construct(Parent, args, Class) { if (isNativeReflectConstruct()) { _construct = Reflect.construct; } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }\n\nfunction _isNativeFunction(fn) { return Function.toString.call(fn).indexOf(\"[native code]\") !== -1; }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nvar _require = require('util/'),\n    inspect = _require.inspect;\n\nvar _require2 = require('../errors'),\n    ERR_INVALID_ARG_TYPE = _require2.codes.ERR_INVALID_ARG_TYPE; // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith\n\n\nfunction endsWith(str, search, this_len) {\n  if (this_len === undefined || this_len > str.length) {\n    this_len = str.length;\n  }\n\n  return str.substring(this_len - search.length, this_len) === search;\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/repeat\n\n\nfunction repeat(str, count) {\n  count = Math.floor(count);\n  if (str.length == 0 || count == 0) return '';\n  var maxCount = str.length * count;\n  count = Math.floor(Math.log(count) / Math.log(2));\n\n  while (count) {\n    str += str;\n    count--;\n  }\n\n  str += str.substring(0, maxCount - str.length);\n  return str;\n}\n\nvar blue = '';\nvar green = '';\nvar red = '';\nvar white = '';\nvar kReadableOperator = {\n  deepStrictEqual: 'Expected values to be strictly deep-equal:',\n  strictEqual: 'Expected values to be strictly equal:',\n  strictEqualObject: 'Expected \"actual\" to be reference-equal to \"expected\":',\n  deepEqual: 'Expected values to be loosely deep-equal:',\n  equal: 'Expected values to be loosely equal:',\n  notDeepStrictEqual: 'Expected \"actual\" not to be strictly deep-equal to:',\n  notStrictEqual: 'Expected \"actual\" to be strictly unequal to:',\n  notStrictEqualObject: 'Expected \"actual\" not to be reference-equal to \"expected\":',\n  notDeepEqual: 'Expected \"actual\" not to be loosely deep-equal to:',\n  notEqual: 'Expected \"actual\" to be loosely unequal to:',\n  notIdentical: 'Values identical but not reference-equal:'\n}; // Comparing short primitives should just show === / !== instead of using the\n// diff.\n\nvar kMaxShortLength = 10;\n\nfunction copyError(source) {\n  var keys = Object.keys(source);\n  var target = Object.create(Object.getPrototypeOf(source));\n  keys.forEach(function (key) {\n    target[key] = source[key];\n  });\n  Object.defineProperty(target, 'message', {\n    value: source.message\n  });\n  return target;\n}\n\nfunction inspectValue(val) {\n  // The util.inspect default values could be changed. This makes sure the\n  // error messages contain the necessary information nevertheless.\n  return inspect(val, {\n    compact: false,\n    customInspect: false,\n    depth: 1000,\n    maxArrayLength: Infinity,\n    // Assert compares only enumerable properties (with a few exceptions).\n    showHidden: false,\n    // Having a long line as error is better than wrapping the line for\n    // comparison for now.\n    // TODO(BridgeAR): `breakLength` should be limited as soon as soon as we\n    // have meta information about the inspected properties (i.e., know where\n    // in what line the property starts and ends).\n    breakLength: Infinity,\n    // Assert does not detect proxies currently.\n    showProxy: false,\n    sorted: true,\n    // Inspect getters as we also check them when comparing entries.\n    getters: true\n  });\n}\n\nfunction createErrDiff(actual, expected, operator) {\n  var other = '';\n  var res = '';\n  var lastPos = 0;\n  var end = '';\n  var skipped = false;\n  var actualInspected = inspectValue(actual);\n  var actualLines = actualInspected.split('\\n');\n  var expectedLines = inspectValue(expected).split('\\n');\n  var i = 0;\n  var indicator = ''; // In case both values are objects explicitly mark them as not reference equal\n  // for the `strictEqual` operator.\n\n  if (operator === 'strictEqual' && _typeof(actual) === 'object' && _typeof(expected) === 'object' && actual !== null && expected !== null) {\n    operator = 'strictEqualObject';\n  } // If \"actual\" and \"expected\" fit on a single line and they are not strictly\n  // equal, check further special handling.\n\n\n  if (actualLines.length === 1 && expectedLines.length === 1 && actualLines[0] !== expectedLines[0]) {\n    var inputLength = actualLines[0].length + expectedLines[0].length; // If the character length of \"actual\" and \"expected\" together is less than\n    // kMaxShortLength and if neither is an object and at least one of them is\n    // not `zero`, use the strict equal comparison to visualize the output.\n\n    if (inputLength <= kMaxShortLength) {\n      if ((_typeof(actual) !== 'object' || actual === null) && (_typeof(expected) !== 'object' || expected === null) && (actual !== 0 || expected !== 0)) {\n        // -0 === +0\n        return \"\".concat(kReadableOperator[operator], \"\\n\\n\") + \"\".concat(actualLines[0], \" !== \").concat(expectedLines[0], \"\\n\");\n      }\n    } else if (operator !== 'strictEqualObject') {\n      // If the stderr is a tty and the input length is lower than the current\n      // columns per line, add a mismatch indicator below the output. If it is\n      // not a tty, use a default value of 80 characters.\n      var maxLength = process.stderr && process.stderr.isTTY ? process.stderr.columns : 80;\n\n      if (inputLength < maxLength) {\n        while (actualLines[0][i] === expectedLines[0][i]) {\n          i++;\n        } // Ignore the first characters.\n\n\n        if (i > 2) {\n          // Add position indicator for the first mismatch in case it is a\n          // single line and the input length is less than the column length.\n          indicator = \"\\n  \".concat(repeat(' ', i), \"^\");\n          i = 0;\n        }\n      }\n    }\n  } // Remove all ending lines that match (this optimizes the output for\n  // readability by reducing the number of total changed lines).\n\n\n  var a = actualLines[actualLines.length - 1];\n  var b = expectedLines[expectedLines.length - 1];\n\n  while (a === b) {\n    if (i++ < 2) {\n      end = \"\\n  \".concat(a).concat(end);\n    } else {\n      other = a;\n    }\n\n    actualLines.pop();\n    expectedLines.pop();\n    if (actualLines.length === 0 || expectedLines.length === 0) break;\n    a = actualLines[actualLines.length - 1];\n    b = expectedLines[expectedLines.length - 1];\n  }\n\n  var maxLines = Math.max(actualLines.length, expectedLines.length); // Strict equal with identical objects that are not identical by reference.\n  // E.g., assert.deepStrictEqual({ a: Symbol() }, { a: Symbol() })\n\n  if (maxLines === 0) {\n    // We have to get the result again. The lines were all removed before.\n    var _actualLines = actualInspected.split('\\n'); // Only remove lines in case it makes sense to collapse those.\n    // TODO: Accept env to always show the full error.\n\n\n    if (_actualLines.length > 30) {\n      _actualLines[26] = \"\".concat(blue, \"...\").concat(white);\n\n      while (_actualLines.length > 27) {\n        _actualLines.pop();\n      }\n    }\n\n    return \"\".concat(kReadableOperator.notIdentical, \"\\n\\n\").concat(_actualLines.join('\\n'), \"\\n\");\n  }\n\n  if (i > 3) {\n    end = \"\\n\".concat(blue, \"...\").concat(white).concat(end);\n    skipped = true;\n  }\n\n  if (other !== '') {\n    end = \"\\n  \".concat(other).concat(end);\n    other = '';\n  }\n\n  var printedLines = 0;\n  var msg = kReadableOperator[operator] + \"\\n\".concat(green, \"+ actual\").concat(white, \" \").concat(red, \"- expected\").concat(white);\n  var skippedMsg = \" \".concat(blue, \"...\").concat(white, \" Lines skipped\");\n\n  for (i = 0; i < maxLines; i++) {\n    // Only extra expected lines exist\n    var cur = i - lastPos;\n\n    if (actualLines.length < i + 1) {\n      // If the last diverging line is more than one line above and the\n      // current line is at least line three, add some of the former lines and\n      // also add dots to indicate skipped entries.\n      if (cur > 1 && i > 2) {\n        if (cur > 4) {\n          res += \"\\n\".concat(blue, \"...\").concat(white);\n          skipped = true;\n        } else if (cur > 3) {\n          res += \"\\n  \".concat(expectedLines[i - 2]);\n          printedLines++;\n        }\n\n        res += \"\\n  \".concat(expectedLines[i - 1]);\n        printedLines++;\n      } // Mark the current line as the last diverging one.\n\n\n      lastPos = i; // Add the expected line to the cache.\n\n      other += \"\\n\".concat(red, \"-\").concat(white, \" \").concat(expectedLines[i]);\n      printedLines++; // Only extra actual lines exist\n    } else if (expectedLines.length < i + 1) {\n      // If the last diverging line is more than one line above and the\n      // current line is at least line three, add some of the former lines and\n      // also add dots to indicate skipped entries.\n      if (cur > 1 && i > 2) {\n        if (cur > 4) {\n          res += \"\\n\".concat(blue, \"...\").concat(white);\n          skipped = true;\n        } else if (cur > 3) {\n          res += \"\\n  \".concat(actualLines[i - 2]);\n          printedLines++;\n        }\n\n        res += \"\\n  \".concat(actualLines[i - 1]);\n        printedLines++;\n      } // Mark the current line as the last diverging one.\n\n\n      lastPos = i; // Add the actual line to the result.\n\n      res += \"\\n\".concat(green, \"+\").concat(white, \" \").concat(actualLines[i]);\n      printedLines++; // Lines diverge\n    } else {\n      var expectedLine = expectedLines[i];\n      var actualLine = actualLines[i]; // If the lines diverge, specifically check for lines that only diverge by\n      // a trailing comma. In that case it is actually identical and we should\n      // mark it as such.\n\n      var divergingLines = actualLine !== expectedLine && (!endsWith(actualLine, ',') || actualLine.slice(0, -1) !== expectedLine); // If the expected line has a trailing comma but is otherwise identical,\n      // add a comma at the end of the actual line. Otherwise the output could\n      // look weird as in:\n      //\n      //   [\n      //     1         // No comma at the end!\n      // +   2\n      //   ]\n      //\n\n      if (divergingLines && endsWith(expectedLine, ',') && expectedLine.slice(0, -1) === actualLine) {\n        divergingLines = false;\n        actualLine += ',';\n      }\n\n      if (divergingLines) {\n        // If the last diverging line is more than one line above and the\n        // current line is at least line three, add some of the former lines and\n        // also add dots to indicate skipped entries.\n        if (cur > 1 && i > 2) {\n          if (cur > 4) {\n            res += \"\\n\".concat(blue, \"...\").concat(white);\n            skipped = true;\n          } else if (cur > 3) {\n            res += \"\\n  \".concat(actualLines[i - 2]);\n            printedLines++;\n          }\n\n          res += \"\\n  \".concat(actualLines[i - 1]);\n          printedLines++;\n        } // Mark the current line as the last diverging one.\n\n\n        lastPos = i; // Add the actual line to the result and cache the expected diverging\n        // line so consecutive diverging lines show up as +++--- and not +-+-+-.\n\n        res += \"\\n\".concat(green, \"+\").concat(white, \" \").concat(actualLine);\n        other += \"\\n\".concat(red, \"-\").concat(white, \" \").concat(expectedLine);\n        printedLines += 2; // Lines are identical\n      } else {\n        // Add all cached information to the result before adding other things\n        // and reset the cache.\n        res += other;\n        other = ''; // If the last diverging line is exactly one line above or if it is the\n        // very first line, add the line to the result.\n\n        if (cur === 1 || i === 0) {\n          res += \"\\n  \".concat(actualLine);\n          printedLines++;\n        }\n      }\n    } // Inspected object to big (Show ~20 rows max)\n\n\n    if (printedLines > 20 && i < maxLines - 2) {\n      return \"\".concat(msg).concat(skippedMsg, \"\\n\").concat(res, \"\\n\").concat(blue, \"...\").concat(white).concat(other, \"\\n\") + \"\".concat(blue, \"...\").concat(white);\n    }\n  }\n\n  return \"\".concat(msg).concat(skipped ? skippedMsg : '', \"\\n\").concat(res).concat(other).concat(end).concat(indicator);\n}\n\nvar AssertionError =\n/*#__PURE__*/\nfunction (_Error) {\n  _inherits(AssertionError, _Error);\n\n  function AssertionError(options) {\n    var _this;\n\n    _classCallCheck(this, AssertionError);\n\n    if (_typeof(options) !== 'object' || options === null) {\n      throw new ERR_INVALID_ARG_TYPE('options', 'Object', options);\n    }\n\n    var message = options.message,\n        operator = options.operator,\n        stackStartFn = options.stackStartFn;\n    var actual = options.actual,\n        expected = options.expected;\n    var limit = Error.stackTraceLimit;\n    Error.stackTraceLimit = 0;\n\n    if (message != null) {\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(AssertionError).call(this, String(message)));\n    } else {\n      if (process.stderr && process.stderr.isTTY) {\n        // Reset on each call to make sure we handle dynamically set environment\n        // variables correct.\n        if (process.stderr && process.stderr.getColorDepth && process.stderr.getColorDepth() !== 1) {\n          blue = \"\\x1B[34m\";\n          green = \"\\x1B[32m\";\n          white = \"\\x1B[39m\";\n          red = \"\\x1B[31m\";\n        } else {\n          blue = '';\n          green = '';\n          white = '';\n          red = '';\n        }\n      } // Prevent the error stack from being visible by duplicating the error\n      // in a very close way to the original in case both sides are actually\n      // instances of Error.\n\n\n      if (_typeof(actual) === 'object' && actual !== null && _typeof(expected) === 'object' && expected !== null && 'stack' in actual && actual instanceof Error && 'stack' in expected && expected instanceof Error) {\n        actual = copyError(actual);\n        expected = copyError(expected);\n      }\n\n      if (operator === 'deepStrictEqual' || operator === 'strictEqual') {\n        _this = _possibleConstructorReturn(this, _getPrototypeOf(AssertionError).call(this, createErrDiff(actual, expected, operator)));\n      } else if (operator === 'notDeepStrictEqual' || operator === 'notStrictEqual') {\n        // In case the objects are equal but the operator requires unequal, show\n        // the first object and say A equals B\n        var base = kReadableOperator[operator];\n        var res = inspectValue(actual).split('\\n'); // In case \"actual\" is an object, it should not be reference equal.\n\n        if (operator === 'notStrictEqual' && _typeof(actual) === 'object' && actual !== null) {\n          base = kReadableOperator.notStrictEqualObject;\n        } // Only remove lines in case it makes sense to collapse those.\n        // TODO: Accept env to always show the full error.\n\n\n        if (res.length > 30) {\n          res[26] = \"\".concat(blue, \"...\").concat(white);\n\n          while (res.length > 27) {\n            res.pop();\n          }\n        } // Only print a single input.\n\n\n        if (res.length === 1) {\n          _this = _possibleConstructorReturn(this, _getPrototypeOf(AssertionError).call(this, \"\".concat(base, \" \").concat(res[0])));\n        } else {\n          _this = _possibleConstructorReturn(this, _getPrototypeOf(AssertionError).call(this, \"\".concat(base, \"\\n\\n\").concat(res.join('\\n'), \"\\n\")));\n        }\n      } else {\n        var _res = inspectValue(actual);\n\n        var other = '';\n        var knownOperators = kReadableOperator[operator];\n\n        if (operator === 'notDeepEqual' || operator === 'notEqual') {\n          _res = \"\".concat(kReadableOperator[operator], \"\\n\\n\").concat(_res);\n\n          if (_res.length > 1024) {\n            _res = \"\".concat(_res.slice(0, 1021), \"...\");\n          }\n        } else {\n          other = \"\".concat(inspectValue(expected));\n\n          if (_res.length > 512) {\n            _res = \"\".concat(_res.slice(0, 509), \"...\");\n          }\n\n          if (other.length > 512) {\n            other = \"\".concat(other.slice(0, 509), \"...\");\n          }\n\n          if (operator === 'deepEqual' || operator === 'equal') {\n            _res = \"\".concat(knownOperators, \"\\n\\n\").concat(_res, \"\\n\\nshould equal\\n\\n\");\n          } else {\n            other = \" \".concat(operator, \" \").concat(other);\n          }\n        }\n\n        _this = _possibleConstructorReturn(this, _getPrototypeOf(AssertionError).call(this, \"\".concat(_res).concat(other)));\n      }\n    }\n\n    Error.stackTraceLimit = limit;\n    _this.generatedMessage = !message;\n    Object.defineProperty(_assertThisInitialized(_this), 'name', {\n      value: 'AssertionError [ERR_ASSERTION]',\n      enumerable: false,\n      writable: true,\n      configurable: true\n    });\n    _this.code = 'ERR_ASSERTION';\n    _this.actual = actual;\n    _this.expected = expected;\n    _this.operator = operator;\n\n    if (Error.captureStackTrace) {\n      // eslint-disable-next-line no-restricted-syntax\n      Error.captureStackTrace(_assertThisInitialized(_this), stackStartFn);\n    } // Create error message including the error code in the name.\n\n\n    _this.stack; // Reset the name.\n\n    _this.name = 'AssertionError';\n    return _possibleConstructorReturn(_this);\n  }\n\n  _createClass(AssertionError, [{\n    key: \"toString\",\n    value: function toString() {\n      return \"\".concat(this.name, \" [\").concat(this.code, \"]: \").concat(this.message);\n    }\n  }, {\n    key: inspect.custom,\n    value: function value(recurseTimes, ctx) {\n      // This limits the `actual` and `expected` property default inspection to\n      // the minimum depth. Otherwise those values would be too verbose compared\n      // to the actual error message which contains a combined view of these two\n      // input values.\n      return inspect(this, _objectSpread({}, ctx, {\n        customInspect: false,\n        depth: 0\n      }));\n    }\n  }]);\n\n  return AssertionError;\n}(_wrapNativeSuper(Error));\n\nmodule.exports = AssertionError;","/**\n * Code refactored from Mozilla Developer Network:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n */\n\n'use strict';\n\nfunction assign(target, firstSource) {\n  if (target === undefined || target === null) {\n    throw new TypeError('Cannot convert first argument to object');\n  }\n\n  var to = Object(target);\n  for (var i = 1; i < arguments.length; i++) {\n    var nextSource = arguments[i];\n    if (nextSource === undefined || nextSource === null) {\n      continue;\n    }\n\n    var keysArray = Object.keys(Object(nextSource));\n    for (var nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex++) {\n      var nextKey = keysArray[nextIndex];\n      var desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n      if (desc !== undefined && desc.enumerable) {\n        to[nextKey] = nextSource[nextKey];\n      }\n    }\n  }\n  return to;\n}\n\nfunction polyfill() {\n  if (!Object.assign) {\n    Object.defineProperty(Object, 'assign', {\n      enumerable: false,\n      configurable: true,\n      writable: true,\n      value: assign\n    });\n  }\n}\n\nmodule.exports = {\n  assign: assign,\n  polyfill: polyfill\n};\n","'use strict';\n\nvar define = require('define-properties');\nvar callBind = require('call-bind');\n\nvar implementation = require('./implementation');\nvar getPolyfill = require('./polyfill');\nvar shim = require('./shim');\n\nvar polyfill = callBind(getPolyfill(), Object);\n\ndefine(polyfill, {\n\tgetPolyfill: getPolyfill,\n\timplementation: implementation,\n\tshim: shim\n});\n\nmodule.exports = polyfill;\n","'use strict';\n\nvar keys = require('object-keys');\nvar hasSymbols = typeof Symbol === 'function' && typeof Symbol('foo') === 'symbol';\n\nvar toStr = Object.prototype.toString;\nvar concat = Array.prototype.concat;\nvar origDefineProperty = Object.defineProperty;\n\nvar isFunction = function (fn) {\n\treturn typeof fn === 'function' && toStr.call(fn) === '[object Function]';\n};\n\nvar hasPropertyDescriptors = require('has-property-descriptors')();\n\nvar supportsDescriptors = origDefineProperty && hasPropertyDescriptors;\n\nvar defineProperty = function (object, name, value, predicate) {\n\tif (name in object && (!isFunction(predicate) || !predicate())) {\n\t\treturn;\n\t}\n\tif (supportsDescriptors) {\n\t\torigDefineProperty(object, name, {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: false,\n\t\t\tvalue: value,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\tobject[name] = value; // eslint-disable-line no-param-reassign\n\t}\n};\n\nvar defineProperties = function (object, map) {\n\tvar predicates = arguments.length > 2 ? arguments[2] : {};\n\tvar props = keys(map);\n\tif (hasSymbols) {\n\t\tprops = concat.call(props, Object.getOwnPropertySymbols(map));\n\t}\n\tfor (var i = 0; i < props.length; i += 1) {\n\t\tdefineProperty(object, props[i], map[props[i]], predicates[props[i]]);\n\t}\n};\n\ndefineProperties.supportsDescriptors = !!supportsDescriptors;\n\nmodule.exports = defineProperties;\n","'use strict';\n\nvar slice = Array.prototype.slice;\nvar isArgs = require('./isArguments');\n\nvar origKeys = Object.keys;\nvar keysShim = origKeys ? function keys(o) { return origKeys(o); } : require('./implementation');\n\nvar originalKeys = Object.keys;\n\nkeysShim.shim = function shimObjectKeys() {\n\tif (Object.keys) {\n\t\tvar keysWorksWithArguments = (function () {\n\t\t\t// Safari 5.0 bug\n\t\t\tvar args = Object.keys(arguments);\n\t\t\treturn args && args.length === arguments.length;\n\t\t}(1, 2));\n\t\tif (!keysWorksWithArguments) {\n\t\t\tObject.keys = function keys(object) { // eslint-disable-line func-name-matching\n\t\t\t\tif (isArgs(object)) {\n\t\t\t\t\treturn originalKeys(slice.call(object));\n\t\t\t\t}\n\t\t\t\treturn originalKeys(object);\n\t\t\t};\n\t\t}\n\t} else {\n\t\tObject.keys = keysShim;\n\t}\n\treturn Object.keys || keysShim;\n};\n\nmodule.exports = keysShim;\n","'use strict';\n\nvar toStr = Object.prototype.toString;\n\nmodule.exports = function isArguments(value) {\n\tvar str = toStr.call(value);\n\tvar isArgs = str === '[object Arguments]';\n\tif (!isArgs) {\n\t\tisArgs = str !== '[object Array]' &&\n\t\t\tvalue !== null &&\n\t\t\ttypeof value === 'object' &&\n\t\t\ttypeof value.length === 'number' &&\n\t\t\tvalue.length >= 0 &&\n\t\t\ttoStr.call(value.callee) === '[object Function]';\n\t}\n\treturn isArgs;\n};\n","'use strict';\n\nvar keysShim;\nif (!Object.keys) {\n\t// modified from https://github.com/es-shims/es5-shim\n\tvar has = Object.prototype.hasOwnProperty;\n\tvar toStr = Object.prototype.toString;\n\tvar isArgs = require('./isArguments'); // eslint-disable-line global-require\n\tvar isEnumerable = Object.prototype.propertyIsEnumerable;\n\tvar hasDontEnumBug = !isEnumerable.call({ toString: null }, 'toString');\n\tvar hasProtoEnumBug = isEnumerable.call(function () {}, 'prototype');\n\tvar dontEnums = [\n\t\t'toString',\n\t\t'toLocaleString',\n\t\t'valueOf',\n\t\t'hasOwnProperty',\n\t\t'isPrototypeOf',\n\t\t'propertyIsEnumerable',\n\t\t'constructor'\n\t];\n\tvar equalsConstructorPrototype = function (o) {\n\t\tvar ctor = o.constructor;\n\t\treturn ctor && ctor.prototype === o;\n\t};\n\tvar excludedKeys = {\n\t\t$applicationCache: true,\n\t\t$console: true,\n\t\t$external: true,\n\t\t$frame: true,\n\t\t$frameElement: true,\n\t\t$frames: true,\n\t\t$innerHeight: true,\n\t\t$innerWidth: true,\n\t\t$onmozfullscreenchange: true,\n\t\t$onmozfullscreenerror: true,\n\t\t$outerHeight: true,\n\t\t$outerWidth: true,\n\t\t$pageXOffset: true,\n\t\t$pageYOffset: true,\n\t\t$parent: true,\n\t\t$scrollLeft: true,\n\t\t$scrollTop: true,\n\t\t$scrollX: true,\n\t\t$scrollY: true,\n\t\t$self: true,\n\t\t$webkitIndexedDB: true,\n\t\t$webkitStorageInfo: true,\n\t\t$window: true\n\t};\n\tvar hasAutomationEqualityBug = (function () {\n\t\t/* global window */\n\t\tif (typeof window === 'undefined') { return false; }\n\t\tfor (var k in window) {\n\t\t\ttry {\n\t\t\t\tif (!excludedKeys['$' + k] && has.call(window, k) && window[k] !== null && typeof window[k] === 'object') {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tequalsConstructorPrototype(window[k]);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}());\n\tvar equalsConstructorPrototypeIfNotBuggy = function (o) {\n\t\t/* global window */\n\t\tif (typeof window === 'undefined' || !hasAutomationEqualityBug) {\n\t\t\treturn equalsConstructorPrototype(o);\n\t\t}\n\t\ttry {\n\t\t\treturn equalsConstructorPrototype(o);\n\t\t} catch (e) {\n\t\t\treturn false;\n\t\t}\n\t};\n\n\tkeysShim = function keys(object) {\n\t\tvar isObject = object !== null && typeof object === 'object';\n\t\tvar isFunction = toStr.call(object) === '[object Function]';\n\t\tvar isArguments = isArgs(object);\n\t\tvar isString = isObject && toStr.call(object) === '[object String]';\n\t\tvar theKeys = [];\n\n\t\tif (!isObject && !isFunction && !isArguments) {\n\t\t\tthrow new TypeError('Object.keys called on a non-object');\n\t\t}\n\n\t\tvar skipProto = hasProtoEnumBug && isFunction;\n\t\tif (isString && object.length > 0 && !has.call(object, 0)) {\n\t\t\tfor (var i = 0; i < object.length; ++i) {\n\t\t\t\ttheKeys.push(String(i));\n\t\t\t}\n\t\t}\n\n\t\tif (isArguments && object.length > 0) {\n\t\t\tfor (var j = 0; j < object.length; ++j) {\n\t\t\t\ttheKeys.push(String(j));\n\t\t\t}\n\t\t} else {\n\t\t\tfor (var name in object) {\n\t\t\t\tif (!(skipProto && name === 'prototype') && has.call(object, name)) {\n\t\t\t\t\ttheKeys.push(String(name));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (hasDontEnumBug) {\n\t\t\tvar skipConstructor = equalsConstructorPrototypeIfNotBuggy(object);\n\n\t\t\tfor (var k = 0; k < dontEnums.length; ++k) {\n\t\t\t\tif (!(skipConstructor && dontEnums[k] === 'constructor') && has.call(object, dontEnums[k])) {\n\t\t\t\t\ttheKeys.push(dontEnums[k]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn theKeys;\n\t};\n}\nmodule.exports = keysShim;\n","'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $defineProperty = GetIntrinsic('%Object.defineProperty%', true);\n\nvar hasPropertyDescriptors = function hasPropertyDescriptors() {\n\tif ($defineProperty) {\n\t\ttry {\n\t\t\t$defineProperty({}, 'a', { value: 1 });\n\t\t\treturn true;\n\t\t} catch (e) {\n\t\t\t// IE 8 has a broken defineProperty\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn false;\n};\n\nhasPropertyDescriptors.hasArrayLengthDefineBug = function hasArrayLengthDefineBug() {\n\t// node v0.6 has a bug where array lengths can be Set but not Defined\n\tif (!hasPropertyDescriptors()) {\n\t\treturn null;\n\t}\n\ttry {\n\t\treturn $defineProperty([], 'length', { value: 1 }).length !== 1;\n\t} catch (e) {\n\t\t// In Firefox 4-22, defining length on an array throws an exception.\n\t\treturn true;\n\t}\n};\n\nmodule.exports = hasPropertyDescriptors;\n","'use strict';\n\nvar numberIsNaN = function (value) {\n\treturn value !== value;\n};\n\nmodule.exports = function is(a, b) {\n\tif (a === 0 && b === 0) {\n\t\treturn 1 / a === 1 / b;\n\t}\n\tif (a === b) {\n\t\treturn true;\n\t}\n\tif (numberIsNaN(a) && numberIsNaN(b)) {\n\t\treturn true;\n\t}\n\treturn false;\n};\n\n","'use strict';\n\nvar implementation = require('./implementation');\n\nmodule.exports = function getPolyfill() {\n\treturn typeof Object.is === 'function' ? Object.is : implementation;\n};\n","'use strict';\n\nvar getPolyfill = require('./polyfill');\nvar define = require('define-properties');\n\nmodule.exports = function shimObjectIs() {\n\tvar polyfill = getPolyfill();\n\tdefine(Object, { is: polyfill }, {\n\t\tis: function testObjectIs() {\n\t\t\treturn Object.is !== polyfill;\n\t\t}\n\t});\n\treturn polyfill;\n};\n","// Currently in sync with Node.js lib/internal/util/comparisons.js\n// https://github.com/nodejs/node/commit/112cc7c27551254aa2b17098fb774867f05ed0d9\n'use strict';\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nvar regexFlagsSupported = /a/g.flags !== undefined;\n\nvar arrayFromSet = function arrayFromSet(set) {\n  var array = [];\n  set.forEach(function (value) {\n    return array.push(value);\n  });\n  return array;\n};\n\nvar arrayFromMap = function arrayFromMap(map) {\n  var array = [];\n  map.forEach(function (value, key) {\n    return array.push([key, value]);\n  });\n  return array;\n};\n\nvar objectIs = Object.is ? Object.is : require('object-is');\nvar objectGetOwnPropertySymbols = Object.getOwnPropertySymbols ? Object.getOwnPropertySymbols : function () {\n  return [];\n};\nvar numberIsNaN = Number.isNaN ? Number.isNaN : require('is-nan');\n\nfunction uncurryThis(f) {\n  return f.call.bind(f);\n}\n\nvar hasOwnProperty = uncurryThis(Object.prototype.hasOwnProperty);\nvar propertyIsEnumerable = uncurryThis(Object.prototype.propertyIsEnumerable);\nvar objectToString = uncurryThis(Object.prototype.toString);\n\nvar _require$types = require('util/').types,\n    isAnyArrayBuffer = _require$types.isAnyArrayBuffer,\n    isArrayBufferView = _require$types.isArrayBufferView,\n    isDate = _require$types.isDate,\n    isMap = _require$types.isMap,\n    isRegExp = _require$types.isRegExp,\n    isSet = _require$types.isSet,\n    isNativeError = _require$types.isNativeError,\n    isBoxedPrimitive = _require$types.isBoxedPrimitive,\n    isNumberObject = _require$types.isNumberObject,\n    isStringObject = _require$types.isStringObject,\n    isBooleanObject = _require$types.isBooleanObject,\n    isBigIntObject = _require$types.isBigIntObject,\n    isSymbolObject = _require$types.isSymbolObject,\n    isFloat32Array = _require$types.isFloat32Array,\n    isFloat64Array = _require$types.isFloat64Array;\n\nfunction isNonIndex(key) {\n  if (key.length === 0 || key.length > 10) return true;\n\n  for (var i = 0; i < key.length; i++) {\n    var code = key.charCodeAt(i);\n    if (code < 48 || code > 57) return true;\n  } // The maximum size for an array is 2 ** 32 -1.\n\n\n  return key.length === 10 && key >= Math.pow(2, 32);\n}\n\nfunction getOwnNonIndexProperties(value) {\n  return Object.keys(value).filter(isNonIndex).concat(objectGetOwnPropertySymbols(value).filter(Object.prototype.propertyIsEnumerable.bind(value)));\n} // Taken from https://github.com/feross/buffer/blob/680e9e5e488f22aac27599a57dc844a6315928dd/index.js\n// original notice:\n\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n\n\nfunction compare(a, b) {\n  if (a === b) {\n    return 0;\n  }\n\n  var x = a.length;\n  var y = b.length;\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i];\n      y = b[i];\n      break;\n    }\n  }\n\n  if (x < y) {\n    return -1;\n  }\n\n  if (y < x) {\n    return 1;\n  }\n\n  return 0;\n}\n\nvar ONLY_ENUMERABLE = undefined;\nvar kStrict = true;\nvar kLoose = false;\nvar kNoIterator = 0;\nvar kIsArray = 1;\nvar kIsSet = 2;\nvar kIsMap = 3; // Check if they have the same source and flags\n\nfunction areSimilarRegExps(a, b) {\n  return regexFlagsSupported ? a.source === b.source && a.flags === b.flags : RegExp.prototype.toString.call(a) === RegExp.prototype.toString.call(b);\n}\n\nfunction areSimilarFloatArrays(a, b) {\n  if (a.byteLength !== b.byteLength) {\n    return false;\n  }\n\n  for (var offset = 0; offset < a.byteLength; offset++) {\n    if (a[offset] !== b[offset]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction areSimilarTypedArrays(a, b) {\n  if (a.byteLength !== b.byteLength) {\n    return false;\n  }\n\n  return compare(new Uint8Array(a.buffer, a.byteOffset, a.byteLength), new Uint8Array(b.buffer, b.byteOffset, b.byteLength)) === 0;\n}\n\nfunction areEqualArrayBuffers(buf1, buf2) {\n  return buf1.byteLength === buf2.byteLength && compare(new Uint8Array(buf1), new Uint8Array(buf2)) === 0;\n}\n\nfunction isEqualBoxedPrimitive(val1, val2) {\n  if (isNumberObject(val1)) {\n    return isNumberObject(val2) && objectIs(Number.prototype.valueOf.call(val1), Number.prototype.valueOf.call(val2));\n  }\n\n  if (isStringObject(val1)) {\n    return isStringObject(val2) && String.prototype.valueOf.call(val1) === String.prototype.valueOf.call(val2);\n  }\n\n  if (isBooleanObject(val1)) {\n    return isBooleanObject(val2) && Boolean.prototype.valueOf.call(val1) === Boolean.prototype.valueOf.call(val2);\n  }\n\n  if (isBigIntObject(val1)) {\n    return isBigIntObject(val2) && BigInt.prototype.valueOf.call(val1) === BigInt.prototype.valueOf.call(val2);\n  }\n\n  return isSymbolObject(val2) && Symbol.prototype.valueOf.call(val1) === Symbol.prototype.valueOf.call(val2);\n} // Notes: Type tags are historical [[Class]] properties that can be set by\n// FunctionTemplate::SetClassName() in C++ or Symbol.toStringTag in JS\n// and retrieved using Object.prototype.toString.call(obj) in JS\n// See https://tc39.github.io/ecma262/#sec-object.prototype.tostring\n// for a list of tags pre-defined in the spec.\n// There are some unspecified tags in the wild too (e.g. typed array tags).\n// Since tags can be altered, they only serve fast failures\n//\n// Typed arrays and buffers are checked by comparing the content in their\n// underlying ArrayBuffer. This optimization requires that it's\n// reasonable to interpret their underlying memory in the same way,\n// which is checked by comparing their type tags.\n// (e.g. a Uint8Array and a Uint16Array with the same memory content\n// could still be different because they will be interpreted differently).\n//\n// For strict comparison, objects should have\n// a) The same built-in type tags\n// b) The same prototypes.\n\n\nfunction innerDeepEqual(val1, val2, strict, memos) {\n  // All identical values are equivalent, as determined by ===.\n  if (val1 === val2) {\n    if (val1 !== 0) return true;\n    return strict ? objectIs(val1, val2) : true;\n  } // Check more closely if val1 and val2 are equal.\n\n\n  if (strict) {\n    if (_typeof(val1) !== 'object') {\n      return typeof val1 === 'number' && numberIsNaN(val1) && numberIsNaN(val2);\n    }\n\n    if (_typeof(val2) !== 'object' || val1 === null || val2 === null) {\n      return false;\n    }\n\n    if (Object.getPrototypeOf(val1) !== Object.getPrototypeOf(val2)) {\n      return false;\n    }\n  } else {\n    if (val1 === null || _typeof(val1) !== 'object') {\n      if (val2 === null || _typeof(val2) !== 'object') {\n        // eslint-disable-next-line eqeqeq\n        return val1 == val2;\n      }\n\n      return false;\n    }\n\n    if (val2 === null || _typeof(val2) !== 'object') {\n      return false;\n    }\n  }\n\n  var val1Tag = objectToString(val1);\n  var val2Tag = objectToString(val2);\n\n  if (val1Tag !== val2Tag) {\n    return false;\n  }\n\n  if (Array.isArray(val1)) {\n    // Check for sparse arrays and general fast path\n    if (val1.length !== val2.length) {\n      return false;\n    }\n\n    var keys1 = getOwnNonIndexProperties(val1, ONLY_ENUMERABLE);\n    var keys2 = getOwnNonIndexProperties(val2, ONLY_ENUMERABLE);\n\n    if (keys1.length !== keys2.length) {\n      return false;\n    }\n\n    return keyCheck(val1, val2, strict, memos, kIsArray, keys1);\n  } // [browserify] This triggers on certain types in IE (Map/Set) so we don't\n  // wan't to early return out of the rest of the checks. However we can check\n  // if the second value is one of these values and the first isn't.\n\n\n  if (val1Tag === '[object Object]') {\n    // return keyCheck(val1, val2, strict, memos, kNoIterator);\n    if (!isMap(val1) && isMap(val2) || !isSet(val1) && isSet(val2)) {\n      return false;\n    }\n  }\n\n  if (isDate(val1)) {\n    if (!isDate(val2) || Date.prototype.getTime.call(val1) !== Date.prototype.getTime.call(val2)) {\n      return false;\n    }\n  } else if (isRegExp(val1)) {\n    if (!isRegExp(val2) || !areSimilarRegExps(val1, val2)) {\n      return false;\n    }\n  } else if (isNativeError(val1) || val1 instanceof Error) {\n    // Do not compare the stack as it might differ even though the error itself\n    // is otherwise identical.\n    if (val1.message !== val2.message || val1.name !== val2.name) {\n      return false;\n    }\n  } else if (isArrayBufferView(val1)) {\n    if (!strict && (isFloat32Array(val1) || isFloat64Array(val1))) {\n      if (!areSimilarFloatArrays(val1, val2)) {\n        return false;\n      }\n    } else if (!areSimilarTypedArrays(val1, val2)) {\n      return false;\n    } // Buffer.compare returns true, so val1.length === val2.length. If they both\n    // only contain numeric keys, we don't need to exam further than checking\n    // the symbols.\n\n\n    var _keys = getOwnNonIndexProperties(val1, ONLY_ENUMERABLE);\n\n    var _keys2 = getOwnNonIndexProperties(val2, ONLY_ENUMERABLE);\n\n    if (_keys.length !== _keys2.length) {\n      return false;\n    }\n\n    return keyCheck(val1, val2, strict, memos, kNoIterator, _keys);\n  } else if (isSet(val1)) {\n    if (!isSet(val2) || val1.size !== val2.size) {\n      return false;\n    }\n\n    return keyCheck(val1, val2, strict, memos, kIsSet);\n  } else if (isMap(val1)) {\n    if (!isMap(val2) || val1.size !== val2.size) {\n      return false;\n    }\n\n    return keyCheck(val1, val2, strict, memos, kIsMap);\n  } else if (isAnyArrayBuffer(val1)) {\n    if (!areEqualArrayBuffers(val1, val2)) {\n      return false;\n    }\n  } else if (isBoxedPrimitive(val1) && !isEqualBoxedPrimitive(val1, val2)) {\n    return false;\n  }\n\n  return keyCheck(val1, val2, strict, memos, kNoIterator);\n}\n\nfunction getEnumerables(val, keys) {\n  return keys.filter(function (k) {\n    return propertyIsEnumerable(val, k);\n  });\n}\n\nfunction keyCheck(val1, val2, strict, memos, iterationType, aKeys) {\n  // For all remaining Object pairs, including Array, objects and Maps,\n  // equivalence is determined by having:\n  // a) The same number of owned enumerable properties\n  // b) The same set of keys/indexes (although not necessarily the same order)\n  // c) Equivalent values for every corresponding key/index\n  // d) For Sets and Maps, equal contents\n  // Note: this accounts for both named and indexed properties on Arrays.\n  if (arguments.length === 5) {\n    aKeys = Object.keys(val1);\n    var bKeys = Object.keys(val2); // The pair must have the same number of owned properties.\n\n    if (aKeys.length !== bKeys.length) {\n      return false;\n    }\n  } // Cheap key test\n\n\n  var i = 0;\n\n  for (; i < aKeys.length; i++) {\n    if (!hasOwnProperty(val2, aKeys[i])) {\n      return false;\n    }\n  }\n\n  if (strict && arguments.length === 5) {\n    var symbolKeysA = objectGetOwnPropertySymbols(val1);\n\n    if (symbolKeysA.length !== 0) {\n      var count = 0;\n\n      for (i = 0; i < symbolKeysA.length; i++) {\n        var key = symbolKeysA[i];\n\n        if (propertyIsEnumerable(val1, key)) {\n          if (!propertyIsEnumerable(val2, key)) {\n            return false;\n          }\n\n          aKeys.push(key);\n          count++;\n        } else if (propertyIsEnumerable(val2, key)) {\n          return false;\n        }\n      }\n\n      var symbolKeysB = objectGetOwnPropertySymbols(val2);\n\n      if (symbolKeysA.length !== symbolKeysB.length && getEnumerables(val2, symbolKeysB).length !== count) {\n        return false;\n      }\n    } else {\n      var _symbolKeysB = objectGetOwnPropertySymbols(val2);\n\n      if (_symbolKeysB.length !== 0 && getEnumerables(val2, _symbolKeysB).length !== 0) {\n        return false;\n      }\n    }\n  }\n\n  if (aKeys.length === 0 && (iterationType === kNoIterator || iterationType === kIsArray && val1.length === 0 || val1.size === 0)) {\n    return true;\n  } // Use memos to handle cycles.\n\n\n  if (memos === undefined) {\n    memos = {\n      val1: new Map(),\n      val2: new Map(),\n      position: 0\n    };\n  } else {\n    // We prevent up to two map.has(x) calls by directly retrieving the value\n    // and checking for undefined. The map can only contain numbers, so it is\n    // safe to check for undefined only.\n    var val2MemoA = memos.val1.get(val1);\n\n    if (val2MemoA !== undefined) {\n      var val2MemoB = memos.val2.get(val2);\n\n      if (val2MemoB !== undefined) {\n        return val2MemoA === val2MemoB;\n      }\n    }\n\n    memos.position++;\n  }\n\n  memos.val1.set(val1, memos.position);\n  memos.val2.set(val2, memos.position);\n  var areEq = objEquiv(val1, val2, strict, aKeys, memos, iterationType);\n  memos.val1.delete(val1);\n  memos.val2.delete(val2);\n  return areEq;\n}\n\nfunction setHasEqualElement(set, val1, strict, memo) {\n  // Go looking.\n  var setValues = arrayFromSet(set);\n\n  for (var i = 0; i < setValues.length; i++) {\n    var val2 = setValues[i];\n\n    if (innerDeepEqual(val1, val2, strict, memo)) {\n      // Remove the matching element to make sure we do not check that again.\n      set.delete(val2);\n      return true;\n    }\n  }\n\n  return false;\n} // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Equality_comparisons_and_sameness#Loose_equality_using\n// Sadly it is not possible to detect corresponding values properly in case the\n// type is a string, number, bigint or boolean. The reason is that those values\n// can match lots of different string values (e.g., 1n == '+00001').\n\n\nfunction findLooseMatchingPrimitives(prim) {\n  switch (_typeof(prim)) {\n    case 'undefined':\n      return null;\n\n    case 'object':\n      // Only pass in null as object!\n      return undefined;\n\n    case 'symbol':\n      return false;\n\n    case 'string':\n      prim = +prim;\n    // Loose equal entries exist only if the string is possible to convert to\n    // a regular number and not NaN.\n    // Fall through\n\n    case 'number':\n      if (numberIsNaN(prim)) {\n        return false;\n      }\n\n  }\n\n  return true;\n}\n\nfunction setMightHaveLoosePrim(a, b, prim) {\n  var altValue = findLooseMatchingPrimitives(prim);\n  if (altValue != null) return altValue;\n  return b.has(altValue) && !a.has(altValue);\n}\n\nfunction mapMightHaveLoosePrim(a, b, prim, item, memo) {\n  var altValue = findLooseMatchingPrimitives(prim);\n\n  if (altValue != null) {\n    return altValue;\n  }\n\n  var curB = b.get(altValue);\n\n  if (curB === undefined && !b.has(altValue) || !innerDeepEqual(item, curB, false, memo)) {\n    return false;\n  }\n\n  return !a.has(altValue) && innerDeepEqual(item, curB, false, memo);\n}\n\nfunction setEquiv(a, b, strict, memo) {\n  // This is a lazily initiated Set of entries which have to be compared\n  // pairwise.\n  var set = null;\n  var aValues = arrayFromSet(a);\n\n  for (var i = 0; i < aValues.length; i++) {\n    var val = aValues[i]; // Note: Checking for the objects first improves the performance for object\n    // heavy sets but it is a minor slow down for primitives. As they are fast\n    // to check this improves the worst case scenario instead.\n\n    if (_typeof(val) === 'object' && val !== null) {\n      if (set === null) {\n        set = new Set();\n      } // If the specified value doesn't exist in the second set its an not null\n      // object (or non strict only: a not matching primitive) we'll need to go\n      // hunting for something thats deep-(strict-)equal to it. To make this\n      // O(n log n) complexity we have to copy these values in a new set first.\n\n\n      set.add(val);\n    } else if (!b.has(val)) {\n      if (strict) return false; // Fast path to detect missing string, symbol, undefined and null values.\n\n      if (!setMightHaveLoosePrim(a, b, val)) {\n        return false;\n      }\n\n      if (set === null) {\n        set = new Set();\n      }\n\n      set.add(val);\n    }\n  }\n\n  if (set !== null) {\n    var bValues = arrayFromSet(b);\n\n    for (var _i = 0; _i < bValues.length; _i++) {\n      var _val = bValues[_i]; // We have to check if a primitive value is already\n      // matching and only if it's not, go hunting for it.\n\n      if (_typeof(_val) === 'object' && _val !== null) {\n        if (!setHasEqualElement(set, _val, strict, memo)) return false;\n      } else if (!strict && !a.has(_val) && !setHasEqualElement(set, _val, strict, memo)) {\n        return false;\n      }\n    }\n\n    return set.size === 0;\n  }\n\n  return true;\n}\n\nfunction mapHasEqualEntry(set, map, key1, item1, strict, memo) {\n  // To be able to handle cases like:\n  //   Map([[{}, 'a'], [{}, 'b']]) vs Map([[{}, 'b'], [{}, 'a']])\n  // ... we need to consider *all* matching keys, not just the first we find.\n  var setValues = arrayFromSet(set);\n\n  for (var i = 0; i < setValues.length; i++) {\n    var key2 = setValues[i];\n\n    if (innerDeepEqual(key1, key2, strict, memo) && innerDeepEqual(item1, map.get(key2), strict, memo)) {\n      set.delete(key2);\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction mapEquiv(a, b, strict, memo) {\n  var set = null;\n  var aEntries = arrayFromMap(a);\n\n  for (var i = 0; i < aEntries.length; i++) {\n    var _aEntries$i = _slicedToArray(aEntries[i], 2),\n        key = _aEntries$i[0],\n        item1 = _aEntries$i[1];\n\n    if (_typeof(key) === 'object' && key !== null) {\n      if (set === null) {\n        set = new Set();\n      }\n\n      set.add(key);\n    } else {\n      // By directly retrieving the value we prevent another b.has(key) check in\n      // almost all possible cases.\n      var item2 = b.get(key);\n\n      if (item2 === undefined && !b.has(key) || !innerDeepEqual(item1, item2, strict, memo)) {\n        if (strict) return false; // Fast path to detect missing string, symbol, undefined and null\n        // keys.\n\n        if (!mapMightHaveLoosePrim(a, b, key, item1, memo)) return false;\n\n        if (set === null) {\n          set = new Set();\n        }\n\n        set.add(key);\n      }\n    }\n  }\n\n  if (set !== null) {\n    var bEntries = arrayFromMap(b);\n\n    for (var _i2 = 0; _i2 < bEntries.length; _i2++) {\n      var _bEntries$_i = _slicedToArray(bEntries[_i2], 2),\n          key = _bEntries$_i[0],\n          item = _bEntries$_i[1];\n\n      if (_typeof(key) === 'object' && key !== null) {\n        if (!mapHasEqualEntry(set, a, key, item, strict, memo)) return false;\n      } else if (!strict && (!a.has(key) || !innerDeepEqual(a.get(key), item, false, memo)) && !mapHasEqualEntry(set, a, key, item, false, memo)) {\n        return false;\n      }\n    }\n\n    return set.size === 0;\n  }\n\n  return true;\n}\n\nfunction objEquiv(a, b, strict, keys, memos, iterationType) {\n  // Sets and maps don't have their entries accessible via normal object\n  // properties.\n  var i = 0;\n\n  if (iterationType === kIsSet) {\n    if (!setEquiv(a, b, strict, memos)) {\n      return false;\n    }\n  } else if (iterationType === kIsMap) {\n    if (!mapEquiv(a, b, strict, memos)) {\n      return false;\n    }\n  } else if (iterationType === kIsArray) {\n    for (; i < a.length; i++) {\n      if (hasOwnProperty(a, i)) {\n        if (!hasOwnProperty(b, i) || !innerDeepEqual(a[i], b[i], strict, memos)) {\n          return false;\n        }\n      } else if (hasOwnProperty(b, i)) {\n        return false;\n      } else {\n        // Array is sparse.\n        var keysA = Object.keys(a);\n\n        for (; i < keysA.length; i++) {\n          var key = keysA[i];\n\n          if (!hasOwnProperty(b, key) || !innerDeepEqual(a[key], b[key], strict, memos)) {\n            return false;\n          }\n        }\n\n        if (keysA.length !== Object.keys(b).length) {\n          return false;\n        }\n\n        return true;\n      }\n    }\n  } // The pair must have equivalent values for every corresponding key.\n  // Possibly expensive deep test:\n\n\n  for (i = 0; i < keys.length; i++) {\n    var _key = keys[i];\n\n    if (!innerDeepEqual(a[_key], b[_key], strict, memos)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction isDeepEqual(val1, val2) {\n  return innerDeepEqual(val1, val2, kLoose);\n}\n\nfunction isDeepStrictEqual(val1, val2) {\n  return innerDeepEqual(val1, val2, kStrict);\n}\n\nmodule.exports = {\n  isDeepEqual: isDeepEqual,\n  isDeepStrictEqual: isDeepStrictEqual\n};","'use strict';\n\nvar callBind = require('call-bind');\nvar define = require('define-properties');\n\nvar implementation = require('./implementation');\nvar getPolyfill = require('./polyfill');\nvar shim = require('./shim');\n\nvar polyfill = callBind(getPolyfill(), Number);\n\n/* http://www.ecma-international.org/ecma-262/6.0/#sec-number.isnan */\n\ndefine(polyfill, {\n\tgetPolyfill: getPolyfill,\n\timplementation: implementation,\n\tshim: shim\n});\n\nmodule.exports = polyfill;\n","'use strict';\n\n/* http://www.ecma-international.org/ecma-262/6.0/#sec-number.isnan */\n\nmodule.exports = function isNaN(value) {\n\treturn value !== value;\n};\n","'use strict';\n\nvar implementation = require('./implementation');\n\nmodule.exports = function getPolyfill() {\n\tif (Number.isNaN && Number.isNaN(NaN) && !Number.isNaN('a')) {\n\t\treturn Number.isNaN;\n\t}\n\treturn implementation;\n};\n","'use strict';\n\nvar define = require('define-properties');\nvar getPolyfill = require('./polyfill');\n\n/* http://www.ecma-international.org/ecma-262/6.0/#sec-number.isnan */\n\nmodule.exports = function shimNumberIsNaN() {\n\tvar polyfill = getPolyfill();\n\tdefine(Number, { isNaN: polyfill }, {\n\t\tisNaN: function testIsNaN() {\n\t\t\treturn Number.isNaN !== polyfill;\n\t\t}\n\t});\n\treturn polyfill;\n};\n","'use strict';\n\nvar objIsRegex = require('is-regex');\n\nexports = (module.exports = parse);\n\nvar TOKEN_TYPES = exports.TOKEN_TYPES = {\n  LINE_COMMENT: '//',\n  BLOCK_COMMENT: '/**/',\n  SINGLE_QUOTE: '\\'',\n  DOUBLE_QUOTE: '\"',\n  TEMPLATE_QUOTE: '`',\n  REGEXP: '//g'\n}\n\nvar BRACKETS = exports.BRACKETS = {\n  '(': ')',\n  '{': '}',\n  '[': ']'\n};\nvar BRACKETS_REVERSED = {\n  ')': '(',\n  '}': '{',\n  ']': '['\n};\n\nexports.parse = parse;\nfunction parse(src, state, options) {\n  options = options || {};\n  state = state || exports.defaultState();\n  var start = options.start || 0;\n  var end = options.end || src.length;\n  var index = start;\n  while (index < end) {\n    try {\n      parseChar(src[index], state);\n    } catch (ex) {\n      ex.index = index;\n      throw ex;\n    }\n    index++;\n  }\n  return state;\n}\n\nexports.parseUntil = parseUntil;\nfunction parseUntil(src, delimiter, options) {\n  options = options || {};\n  var start = options.start || 0;\n  var index = start;\n  var state = exports.defaultState();\n  while (index < src.length) {\n    if ((options.ignoreNesting || !state.isNesting(options)) && matches(src, delimiter, index)) {\n      var end = index;\n      return {\n        start: start,\n        end: end,\n        src: src.substring(start, end)\n      };\n    }\n    try {\n      parseChar(src[index], state);\n    } catch (ex) {\n      ex.index = index;\n      throw ex;\n    }\n    index++;\n  }\n  var err = new Error('The end of the string was reached with no closing bracket found.');\n  err.code = 'CHARACTER_PARSER:END_OF_STRING_REACHED';\n  err.index = index;\n  throw err;\n}\n\nexports.parseChar = parseChar;\nfunction parseChar(character, state) {\n  if (character.length !== 1) {\n    var err = new Error('Character must be a string of length 1');\n    err.name = 'InvalidArgumentError';\n    err.code = 'CHARACTER_PARSER:CHAR_LENGTH_NOT_ONE';\n    throw err;\n  }\n  state = state || exports.defaultState();\n  state.src += character;\n  var wasComment = state.isComment();\n  var lastChar = state.history ? state.history[0] : '';\n\n\n  if (state.regexpStart) {\n    if (character === '/' || character == '*') {\n      state.stack.pop();\n    }\n    state.regexpStart = false;\n  }\n  switch (state.current()) {\n    case TOKEN_TYPES.LINE_COMMENT:\n      if (character === '\\n') {\n        state.stack.pop();\n      }\n      break;\n    case TOKEN_TYPES.BLOCK_COMMENT:\n      if (state.lastChar === '*' && character === '/') {\n        state.stack.pop();\n      }\n      break;\n    case TOKEN_TYPES.SINGLE_QUOTE:\n      if (character === '\\'' && !state.escaped) {\n        state.stack.pop();\n      } else if (character === '\\\\' && !state.escaped) {\n        state.escaped = true;\n      } else {\n        state.escaped = false;\n      }\n      break;\n    case TOKEN_TYPES.DOUBLE_QUOTE:\n      if (character === '\"' && !state.escaped) {\n        state.stack.pop();\n      } else if (character === '\\\\' && !state.escaped) {\n        state.escaped = true;\n      } else {\n        state.escaped = false;\n      }\n      break;\n    case TOKEN_TYPES.TEMPLATE_QUOTE:\n      if (character === '`' && !state.escaped) {\n        state.stack.pop();\n        state.hasDollar = false;\n      } else if (character === '\\\\' && !state.escaped) {\n        state.escaped = true;\n        state.hasDollar = false;\n      } else if (character === '$' && !state.escaped) {\n        state.hasDollar = true;\n      } else if (character === '{' && state.hasDollar) {\n        state.stack.push(BRACKETS[character]);\n      } else {\n        state.escaped = false;\n        state.hasDollar = false;\n      }\n      break;\n    case TOKEN_TYPES.REGEXP:\n      if (character === '/' && !state.escaped) {\n        state.stack.pop();\n      } else if (character === '\\\\' && !state.escaped) {\n        state.escaped = true;\n      } else {\n        state.escaped = false;\n      }\n      break;\n    default:\n      if (character in BRACKETS) {\n        state.stack.push(BRACKETS[character]);\n      } else if (character in BRACKETS_REVERSED) {\n        if (state.current() !== character) {\n          var err = new SyntaxError('Mismatched Bracket: ' + character);\n          err.code = 'CHARACTER_PARSER:MISMATCHED_BRACKET';\n          throw err;\n        };\n        state.stack.pop();\n      } else if (lastChar === '/' && character === '/') {\n        // Don't include comments in history\n        state.history = state.history.substr(1);\n        state.stack.push(TOKEN_TYPES.LINE_COMMENT);\n      } else if (lastChar === '/' && character === '*') {\n        // Don't include comment in history\n        state.history = state.history.substr(1);\n        state.stack.push(TOKEN_TYPES.BLOCK_COMMENT);\n      } else if (character === '/' && isRegexp(state.history)) {\n        state.stack.push(TOKEN_TYPES.REGEXP);\n        // N.B. if the next character turns out to be a `*` or a `/`\n        //      then this isn't actually a regexp\n        state.regexpStart = true;\n      } else if (character === '\\'') {\n        state.stack.push(TOKEN_TYPES.SINGLE_QUOTE);\n      } else if (character === '\"') {\n        state.stack.push(TOKEN_TYPES.DOUBLE_QUOTE);\n      } else if (character === '`') {\n        state.stack.push(TOKEN_TYPES.TEMPLATE_QUOTE);\n      }\n      break;\n  }\n  if (!state.isComment() && !wasComment) {\n    state.history = character + state.history;\n  }\n  state.lastChar = character; // store last character for ending block comments\n  return state;\n}\n\nexports.defaultState = function () { return new State() };\nfunction State() {\n  this.stack = [];\n\n  this.regexpStart = false;\n  this.escaped = false;\n  this.hasDollar = false;\n\n  this.src = '';\n  this.history = ''\n  this.lastChar = ''\n}\nState.prototype.current = function () {\n  return this.stack[this.stack.length - 1];\n};\nState.prototype.isString = function () {\n  return (\n    this.current() === TOKEN_TYPES.SINGLE_QUOTE ||\n    this.current() === TOKEN_TYPES.DOUBLE_QUOTE ||\n    this.current() === TOKEN_TYPES.TEMPLATE_QUOTE\n  );\n}\nState.prototype.isComment = function () {\n  return this.current() === TOKEN_TYPES.LINE_COMMENT || this.current() === TOKEN_TYPES.BLOCK_COMMENT;\n}\nState.prototype.isNesting = function (opts) {\n  if (\n    opts && opts.ignoreLineComment &&\n    this.stack.length === 1 && this.stack[0] === TOKEN_TYPES.LINE_COMMENT\n  ) {\n    // if we are only inside a line comment, and line comments are ignored\n    // don't count it as nesting\n    return false;\n  }\n  return !!this.stack.length;\n}\n\nfunction matches(str, matcher, i) {\n  if (objIsRegex(matcher)) {\n    return matcher.test(str.substr(i || 0));\n  } else {\n    return str.substr(i || 0, matcher.length) === matcher;\n  }\n}\n\nexports.isPunctuator = isPunctuator\nfunction isPunctuator(c) {\n  if (!c) return true; // the start of a string is a punctuator\n  var code = c.charCodeAt(0)\n\n  switch (code) {\n    case 46:   // . dot\n    case 40:   // ( open bracket\n    case 41:   // ) close bracket\n    case 59:   // ; semicolon\n    case 44:   // , comma\n    case 123:  // { open curly brace\n    case 125:  // } close curly brace\n    case 91:   // [\n    case 93:   // ]\n    case 58:   // :\n    case 63:   // ?\n    case 126:  // ~\n    case 37:   // %\n    case 38:   // &\n    case 42:   // *:\n    case 43:   // +\n    case 45:   // -\n    case 47:   // /\n    case 60:   // <\n    case 62:   // >\n    case 94:   // ^\n    case 124:  // |\n    case 33:   // !\n    case 61:   // =\n      return true;\n    default:\n      return false;\n  }\n}\n\nexports.isKeyword = isKeyword\nfunction isKeyword(id) {\n  return (id === 'if') || (id === 'in') || (id === 'do') || (id === 'var') || (id === 'for') || (id === 'new') ||\n         (id === 'try') || (id === 'let') || (id === 'this') || (id === 'else') || (id === 'case') ||\n         (id === 'void') || (id === 'with') || (id === 'enum') || (id === 'while') || (id === 'break') || (id === 'catch') ||\n         (id === 'throw') || (id === 'const') || (id === 'yield') || (id === 'class') || (id === 'super') ||\n         (id === 'return') || (id === 'typeof') || (id === 'delete') || (id === 'switch') || (id === 'export') ||\n         (id === 'import') || (id === 'default') || (id === 'finally') || (id === 'extends') || (id === 'function') ||\n         (id === 'continue') || (id === 'debugger') || (id === 'package') || (id === 'private') || (id === 'interface') ||\n         (id === 'instanceof') || (id === 'implements') || (id === 'protected') || (id === 'public') || (id === 'static');\n}\n\nfunction isRegexp(history) {\n  //could be start of regexp or divide sign\n\n  history = history.replace(/^\\s*/, '');\n\n  //unless its an `if`, `while`, `for` or `with` it's a divide, so we assume it's a divide\n  if (history[0] === ')') return false;\n  //unless it's a function expression, it's a regexp, so we assume it's a regexp\n  if (history[0] === '}') return true;\n  //any punctuation means it's a regexp\n  if (isPunctuator(history[0])) return true;\n  //if the last thing was a keyword then it must be a regexp (e.g. `typeof /foo/`)\n  if (/^\\w+\\b/.test(history) && isKeyword(/^\\w+\\b/.exec(history)[0].split('').reverse().join(''))) return true;\n\n  return false;\n}\n","'use strict';\n\nvar callBound = require('call-bind/callBound');\nvar hasToStringTag = require('has-tostringtag/shams')();\nvar has;\nvar $exec;\nvar isRegexMarker;\nvar badStringifier;\n\nif (hasToStringTag) {\n\thas = callBound('Object.prototype.hasOwnProperty');\n\t$exec = callBound('RegExp.prototype.exec');\n\tisRegexMarker = {};\n\n\tvar throwRegexMarker = function () {\n\t\tthrow isRegexMarker;\n\t};\n\tbadStringifier = {\n\t\ttoString: throwRegexMarker,\n\t\tvalueOf: throwRegexMarker\n\t};\n\n\tif (typeof Symbol.toPrimitive === 'symbol') {\n\t\tbadStringifier[Symbol.toPrimitive] = throwRegexMarker;\n\t}\n}\n\nvar $toString = callBound('Object.prototype.toString');\nvar gOPD = Object.getOwnPropertyDescriptor;\nvar regexClass = '[object RegExp]';\n\nmodule.exports = hasToStringTag\n\t// eslint-disable-next-line consistent-return\n\t? function isRegex(value) {\n\t\tif (!value || typeof value !== 'object') {\n\t\t\treturn false;\n\t\t}\n\n\t\tvar descriptor = gOPD(value, 'lastIndex');\n\t\tvar hasLastIndexDataProperty = descriptor && has(descriptor, 'value');\n\t\tif (!hasLastIndexDataProperty) {\n\t\t\treturn false;\n\t\t}\n\n\t\ttry {\n\t\t\t$exec(value, badStringifier);\n\t\t} catch (e) {\n\t\t\treturn e === isRegexMarker;\n\t\t}\n\t}\n\t: function isRegex(value) {\n\t\t// In older browsers, typeof regex incorrectly returns 'function'\n\t\tif (!value || (typeof value !== 'object' && typeof value !== 'function')) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn $toString(value) === regexClass;\n\t};\n","'use strict';\n\nmodule.exports = makeError;\nfunction makeError(code, message, options) {\n  var line = options.line;\n  var column = options.column;\n  var filename = options.filename;\n  var src = options.src;\n  var fullMessage;\n  var location = line + (column ? ':' + column : '');\n  if (src && line >= 1 && line <= src.split('\\n').length) {\n    var lines = src.split('\\n');\n    var start = Math.max(line - 3, 0);\n    var end = Math.min(lines.length, line + 3);\n    // Error context\n    var context = lines\n      .slice(start, end)\n      .map(function(text, i) {\n        var curr = i + start + 1;\n        var preamble = (curr == line ? '  > ' : '    ') + curr + '| ';\n        var out = preamble + text;\n        if (curr === line && column > 0) {\n          out += '\\n';\n          out += Array(preamble.length + column).join('-') + '^';\n        }\n        return out;\n      })\n      .join('\\n');\n    fullMessage =\n      (filename || 'Pug') + ':' + location + '\\n' + context + '\\n\\n' + message;\n  } else {\n    fullMessage = (filename || 'Pug') + ':' + location + '\\n\\n' + message;\n  }\n  var err = new Error(fullMessage);\n  err.code = 'PUG:' + code;\n  err.msg = message;\n  err.line = line;\n  err.column = column;\n  err.filename = filename;\n  err.src = src;\n  err.toJSON = function() {\n    return {\n      code: this.code,\n      msg: this.msg,\n      line: this.line,\n      column: this.column,\n      filename: this.filename,\n    };\n  };\n  return err;\n}\n","'use strict';\n\nvar jstransformer = require('jstransformer');\nvar resolve = require('resolve');\n\nmodule.exports = filter;\n\nfunction getMinifyTransformerName(outputFormat) {\n  switch (outputFormat) {\n    case 'js':\n      return 'uglify-js';\n    case 'css':\n      return 'clean-css';\n  }\n}\n\nfunction filter(name, str, options, currentDirectory, funcName) {\n  funcName = funcName || 'render';\n  var trPath;\n  try {\n    try {\n      trPath = resolve.sync('jstransformer-' + name, {\n        basedir: currentDirectory || process.cwd(),\n      });\n    } catch (ex) {\n      trPath = require.resolve('jstransformer-' + name);\n    }\n  } catch (ex) {\n    var err = new Error('unknown filter \":' + name + '\"');\n    err.code = 'UNKNOWN_FILTER';\n    throw err;\n  }\n  var tr = jstransformer(require(trPath));\n  // TODO: we may want to add a way for people to separately specify \"locals\"\n  var result = tr[funcName](str, options, options).body;\n  if (options && options.minify) {\n    var minifyTranformer = getMinifyTransformerName(tr.outputFormat);\n    if (minifyTranformer) {\n      try {\n        result = filter(minifyTranformer, result, null, currentDirectory);\n      } catch (ex) {\n        // better to fail to minify than output nothing\n      }\n    }\n  }\n  return result;\n}\n","'use strict';\n\nvar fs = require('fs');\nvar assert = require('assert');\nvar Promise = require('promise');\nvar isPromise = require('is-promise');\n\nvar tr = (module.exports = function (transformer) {\n  return new Transformer(transformer);\n});\ntr.Transformer = Transformer;\ntr.normalizeFn = normalizeFn;\ntr.normalizeFnAsync = normalizeFnAsync;\ntr.normalize = normalize;\ntr.normalizeAsync = normalizeAsync;\nif (fs.readFile) {\n  tr.readFile = Promise.denodeify(fs.readFile);\n  tr.readFileSync = fs.readFileSync;\n} else {\n  tr.readFile = function () { throw new Error('fs.readFile unsupported'); };\n  tr.readFileSync = function () { throw new Error('fs.readFileSync unsupported'); };\n}\n\nfunction normalizeFn(result) {\n  if (typeof result === 'function') {\n    return {fn: result, dependencies: []};\n  } else if (result && typeof result === 'object' && typeof result.fn === 'function') {\n    if ('dependencies' in result) {\n      if (!Array.isArray(result.dependencies)) {\n        throw new Error('Result should have a dependencies property that is an array');\n      }\n    } else {\n      result.dependencies = [];\n    }\n    return result;\n  } else {\n    throw new Error('Invalid result object from transform.');\n  }\n}\nfunction normalizeFnAsync(result, cb) {\n  return Promise.resolve(result).then(function (result) {\n    if (result && isPromise(result.fn)) {\n      return result.fn.then(function (fn) {\n        result.fn = fn;\n        return result;\n      });\n    }\n    return result;\n  }).then(tr.normalizeFn).nodeify(cb);\n}\nfunction normalize(result) {\n  if (typeof result === 'string') {\n    return {body: result, dependencies: []};\n  } else if (result && typeof result === 'object' && typeof result.body === 'string') {\n    if ('dependencies' in result) {\n      if (!Array.isArray(result.dependencies)) {\n        throw new Error('Result should have a dependencies property that is an array');\n      }\n    } else {\n      result.dependencies = [];\n    }\n    return result;\n  } else {\n    throw new Error('Invalid result object from transform.');\n  }\n}\nfunction normalizeAsync(result, cb) {\n  return Promise.resolve(result).then(function (result) {\n    if (result && isPromise(result.body)) {\n      return result.body.then(function (body) {\n        result.body = body;\n        return result;\n      });\n    }\n    return result;\n  }).then(tr.normalize).nodeify(cb);\n}\n\nfunction Transformer(tr) {\n  assert(tr, 'Transformer must be an object');\n  assert(typeof tr.name === 'string', 'Transformer must have a name');\n  assert(typeof tr.outputFormat === 'string', 'Transformer must have an output format');\n  assert([\n    'compile',\n    'compileAsync',\n    'compileFile',\n    'compileFileAsync',\n    'compileClient',\n    'compileClientAsync',\n    'compileFileClient',\n    'compileFileClientAsync',\n    'render',\n    'renderAsync',\n    'renderFile',\n    'renderFileAsync'\n  ].some(function (method) {\n    return typeof tr[method] === 'function';\n  }), 'Transformer must implement at least one of the potential methods.');\n  this._tr = tr;\n  this.name = this._tr.name;\n  this.outputFormat = this._tr.outputFormat;\n  this.inputFormats = this._tr.inputFormats || [this.name];\n}\n\nvar fallbacks = {\n  compile: ['compile', 'render'],\n  compileAsync: ['compileAsync', 'compile', 'render'],\n  compileFile: ['compileFile', 'compile', 'renderFile', 'render'],\n  compileFileAsync: [\n    'compileFileAsync', 'compileFile', 'compileAsync', 'compile',\n    'renderFile', 'render'\n  ],\n  compileClient: ['compileClient'],\n  compileClientAsync: ['compileClientAsync', 'compileClient'],\n  compileFileClient: ['compileFileClient', 'compileClient'],\n  compileFileClientAsync: [\n    'compileFileClientAsync', 'compileFileClient', 'compileClientAsync', 'compileClient'\n  ],\n  render: ['render', 'compile'],\n  renderAsync: ['renderAsync', 'render', 'compileAsync', 'compile'],\n  renderFile: ['renderFile', 'render', 'compileFile', 'compile'],\n  renderFileAsync: [\n    'renderFileAsync', 'renderFile', 'renderAsync', 'render',\n    'compileFileAsync', 'compileFile', 'compileAsync', 'compile'\n  ]\n};\n\nTransformer.prototype._hasMethod = function (method) {\n  return typeof this._tr[method] === 'function';\n};\nTransformer.prototype.can = function (method) {\n  return fallbacks[method].some(function (method) {\n    return this._hasMethod(method);\n  }.bind(this));\n};\n\n/* COMPILE */\n\nTransformer.prototype.compile = function (str, options) {\n  if (!this._hasMethod('compile')) {\n    if (this.can('render')) {\n      var _this = this;\n      return {\n        fn: function (locals) {\n          return tr.normalize(_this._tr.render(str, options, locals)).body;\n        },\n        dependencies: []\n      };\n    }\n    if (this.can('compileAsync')) {\n      throw new Error('The Transform \"' + this.name + '\" does not support synchronous compilation');\n    } else if (this.can('compileFileAsync')) {\n      throw new Error('The Transform \"' + this.name + '\" does not support compiling plain strings');\n    } else {\n      throw new Error('The Transform \"' + this.name + '\" does not support compilation');\n    }\n  }\n  return tr.normalizeFn(this._tr.compile(str, options));\n};\nTransformer.prototype.compileAsync = function (str, options, cb) {\n  if (!this.can('compileAsync')) { // compileFile* || renderFile* || renderAsync || compile*Client*\n    return Promise.reject(new Error('The Transform \"' + this.name + '\" does not support compiling plain strings')).nodeify(cb);\n  }\n  if (this._hasMethod('compileAsync')) {\n    return tr.normalizeFnAsync(this._tr.compileAsync(str, options), cb);\n  } else { // render || compile\n    return tr.normalizeFnAsync(this.compile(str, options), cb);\n  }\n};\nTransformer.prototype.compileFile = function (filename, options) {\n  if (!this.can('compileFile')) { // compile*Client* || compile*Async || render*Async\n    throw new Error('The Transform \"' + this.name + '\" does not support synchronous compilation');\n  }\n  if (this._hasMethod('compileFile')) {\n    return tr.normalizeFn(this._tr.compileFile(filename, options));\n  } else if (this._hasMethod('renderFile')) {\n    return tr.normalizeFn(function (locals) {\n      return tr.normalize(this._tr.renderFile(filename, options, locals)).body;\n    }.bind(this));\n  } else { // render || compile\n    if (!options) options = {};\n    if (options.filename === undefined) options.filename = filename;\n    return this.compile(tr.readFileSync(filename, 'utf8'), options);\n  }\n};\nTransformer.prototype.compileFileAsync = function (filename, options, cb) {\n  if (!this.can('compileFileAsync')) {\n    return Promise.reject(new Error('The Transform \"' + this.name + '\" does not support compilation'));\n  }\n  if (this._hasMethod('compileFileAsync')) {\n    return tr.normalizeFnAsync(this._tr.compileFileAsync(filename, options), cb);\n  } else if (this._hasMethod('compileFile') || this._hasMethod('renderFile')) {\n    return tr.normalizeFnAsync(this.compileFile(filename, options), cb);\n  } else { // compileAsync || compile || render\n    if (!options) options = {};\n    if (options.filename === undefined) options.filename = filename;\n    return tr.normalizeFnAsync(tr.readFile(filename, 'utf8').then(function (str) {\n      if (this._hasMethod('compileAsync')) {\n        return this._tr.compileAsync(str, options);\n      } else { // compile || render\n        return this.compile(str, options);\n      }\n    }.bind(this)), cb);\n  }\n};\n\n/* COMPILE CLIENT */\n\n\nTransformer.prototype.compileClient = function (str, options) {\n  if (!this.can('compileClient')) {\n    if (this.can('compileClientAsync')) {\n      throw new Error('The Transform \"' + this.name + '\" does not support compiling for the client synchronously.');\n    } else if (this.can('compileFileClientAsync')) {\n      throw new Error('The Transform \"' + this.name + '\" does not support compiling for the client from a string.');\n    } else {\n      throw new Error('The Transform \"' + this.name + '\" does not support compiling for the client');\n    }\n  }\n  return tr.normalize(this._tr.compileClient(str, options));\n};\nTransformer.prototype.compileClientAsync = function (str, options, cb) {\n  if (!this.can('compileClientAsync')) {\n    if (this.can('compileFileClientAsync')) {\n      return Promise.reject(new Error('The Transform \"' + this.name + '\" does not support compiling for the client from a string.')).nodeify(cb);\n    } else {\n      return Promise.reject(new Error('The Transform \"' + this.name + '\" does not support compiling for the client')).nodeify(cb);\n    }\n  }\n  if (this._hasMethod('compileClientAsync')) {\n    return tr.normalizeAsync(this._tr.compileClientAsync(str, options), cb);\n  } else {\n    return tr.normalizeAsync(this._tr.compileClient(str, options), cb);\n  }\n};\nTransformer.prototype.compileFileClient = function (filename, options) {\n  if (!this.can('compileFileClient')) {\n    if (this.can('compileFileClientAsync')) {\n      throw new Error('The Transform \"' + this.name + '\" does not support compiling for the client synchronously.');\n    } else {\n      throw new Error('The Transform \"' + this.name + '\" does not support compiling for the client');\n    }\n  }\n  if (this._hasMethod('compileFileClient')) {\n    return tr.normalize(this._tr.compileFileClient(filename, options));\n  } else {\n    if (!options) options = {};\n    if (options.filename === undefined) options.filename = filename;\n    return tr.normalize(this._tr.compileClient(tr.readFileSync(filename, 'utf8'), options));\n  }\n};\nTransformer.prototype.compileFileClientAsync = function (filename, options, cb) {\n  if (!this.can('compileFileClientAsync')) {\n    return Promise.reject(new Error('The Transform \"' + this.name + '\" does not support compiling for the client')).nodeify(cb)\n  }\n  if (this._hasMethod('compileFileClientAsync')) {\n    return tr.normalizeAsync(this._tr.compileFileClientAsync(filename, options), cb);\n  } else if (this._hasMethod('compileFileClient')) {\n    return tr.normalizeAsync(this._tr.compileFileClient(filename, options), cb);\n  } else {\n    if (!options) options = {};\n    if (options.filename === undefined) options.filename = filename;\n    return tr.normalizeAsync(tr.readFile(filename, 'utf8').then(function (str) {\n      if (this._hasMethod('compileClientAsync')) {\n        return this._tr.compileClientAsync(str, options);\n      } else {\n        return this._tr.compileClient(str, options);\n      }\n    }.bind(this)), cb);\n  }\n};\n\n/* RENDER */\n\nTransformer.prototype.render = function (str, options, locals) {\n  if (!this.can('render')) {\n    if (this.can('renderAsync')) {\n      throw new Error('The Transform \"' + this.name + '\" does not support rendering synchronously.');\n    } else if (this.can('renderFileAsync')) {\n      throw new Error('The Transform \"' + this.name + '\" does not support rendering from a string.');\n    } else {\n      throw new Error('The Transform \"' + this.name + '\" does not support rendering');\n    }\n  }\n  if (this._hasMethod('render')) {\n    return tr.normalize(this._tr.render(str, options, locals));\n  } else {\n    var compiled = tr.normalizeFn(this._tr.compile(str, options));\n    var body = compiled.fn(locals || options);\n    if (typeof body !== 'string') {\n      throw new Error('The Transform \"' + this.name + '\" does not support rendering synchronously.');\n    }\n    return tr.normalize({body: body, dependencies: compiled.dependencies});\n  }\n};\nTransformer.prototype.renderAsync = function (str, options, locals, cb) {\n  if (typeof locals === 'function') {\n    cb = locals;\n    locals = options;\n  }\n  if (!this.can('renderAsync')) {\n    if (this.can('renderFileAsync')) {\n      return Promise.reject(new Error('The Transform \"' + this.name + '\" does not support rendering from a string.')).nodeify(cb);\n    } else {\n      return Promise.reject(new Error('The Transform \"' + this.name + '\" does not support rendering')).nodeify(cb);\n    }\n  }\n  if (this._hasMethod('renderAsync')) {\n    return tr.normalizeAsync(this._tr.renderAsync(str, options, locals), cb);\n  } else if (this._hasMethod('render')) {\n    return tr.normalizeAsync(this._tr.render(str, options, locals), cb);\n  } else {\n    return tr.normalizeAsync(this.compileAsync(str, options).then(function (compiled) {\n      return {body: compiled.fn(locals || options), dependencies: compiled.dependencies};\n    }), cb);\n  }\n};\nTransformer.prototype.renderFile = function (filename, options, locals) {\n  if (!this.can('renderFile')) { // *Async, *Client\n    throw new Error('The Transform \"' + this.name + '\" does not support rendering synchronously.');\n  }\n\n  if (this._hasMethod('renderFile')) {\n    return tr.normalize(this._tr.renderFile(filename, options, locals));\n  } else if (this._hasMethod('render')) {\n    if (!options) options = {};\n    if (options.filename === undefined) options.filename = filename;\n    return tr.normalize(this._tr.render(tr.readFileSync(filename, 'utf8'), options, locals));\n  } else { // compile || compileFile\n    var compiled = this.compileFile(filename, options);\n    return tr.normalize({body: compiled.fn(locals || options), dependencies: compiled.dependencies});\n  }\n};\nTransformer.prototype.renderFileAsync = function (filename, options, locals, cb) {\n  if (!this.can('renderFileAsync')) { // *Client\n    throw new Error('The Transform \"' + this.name + '\" does not support rendering.');\n  }\n\n  if (typeof locals === 'function') {\n    cb = locals;\n    locals = options;\n  }\n  if (this._hasMethod('renderFileAsync')) {\n    return tr.normalizeAsync(this._tr.renderFileAsync(filename, options, locals), cb);\n  } else if (this._hasMethod('renderFile')) {\n    return tr.normalizeAsync(this._tr.renderFile(filename, options, locals), cb);\n  } else if (this._hasMethod('compile') || this._hasMethod('compileAsync')\n             || this._hasMethod('compileFile') || this._hasMethod('compileFileAsync')) {\n    return tr.normalizeAsync(this.compileFileAsync(filename, options).then(function (compiled) {\n      return {body: compiled.fn(locals || options), dependencies: compiled.dependencies};\n    }), cb);\n  } else { // render || renderAsync\n    if (!options) options = {};\n    if (options.filename === undefined) options.filename = filename;\n    return tr.normalizeAsync(tr.readFile(filename, 'utf8').then(function (str) {\n      return this.renderAsync(str, options, locals);\n    }.bind(this)), cb);\n  }\n};\n","'use strict';\n\nmodule.exports = require('./lib')\n","'use strict';\n\nmodule.exports = require('./core.js');\nrequire('./done.js');\nrequire('./finally.js');\nrequire('./es6-extensions.js');\nrequire('./node-extensions.js');\nrequire('./synchronous.js');\n","'use strict';\n\nvar asap = require('asap/raw');\n\nfunction noop() {}\n\n// States:\n//\n// 0 - pending\n// 1 - fulfilled with _value\n// 2 - rejected with _value\n// 3 - adopted the state of another promise, _value\n//\n// once the state is no longer pending (0) it is immutable\n\n// All `_` prefixed properties will be reduced to `_{random number}`\n// at build time to obfuscate them and discourage their use.\n// We don't use symbols or Object.defineProperty to fully hide them\n// because the performance isn't good enough.\n\n\n// to avoid using try/catch inside critical functions, we\n// extract them to here.\nvar LAST_ERROR = null;\nvar IS_ERROR = {};\nfunction getThen(obj) {\n  try {\n    return obj.then;\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\n\nfunction tryCallOne(fn, a) {\n  try {\n    return fn(a);\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\nfunction tryCallTwo(fn, a, b) {\n  try {\n    fn(a, b);\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\n\nmodule.exports = Promise;\n\nfunction Promise(fn) {\n  if (typeof this !== 'object') {\n    throw new TypeError('Promises must be constructed via new');\n  }\n  if (typeof fn !== 'function') {\n    throw new TypeError('Promise constructor\\'s argument is not a function');\n  }\n  this._40 = 0;\n  this._65 = 0;\n  this._55 = null;\n  this._72 = null;\n  if (fn === noop) return;\n  doResolve(fn, this);\n}\nPromise._37 = null;\nPromise._87 = null;\nPromise._61 = noop;\n\nPromise.prototype.then = function(onFulfilled, onRejected) {\n  if (this.constructor !== Promise) {\n    return safeThen(this, onFulfilled, onRejected);\n  }\n  var res = new Promise(noop);\n  handle(this, new Handler(onFulfilled, onRejected, res));\n  return res;\n};\n\nfunction safeThen(self, onFulfilled, onRejected) {\n  return new self.constructor(function (resolve, reject) {\n    var res = new Promise(noop);\n    res.then(resolve, reject);\n    handle(self, new Handler(onFulfilled, onRejected, res));\n  });\n}\nfunction handle(self, deferred) {\n  while (self._65 === 3) {\n    self = self._55;\n  }\n  if (Promise._37) {\n    Promise._37(self);\n  }\n  if (self._65 === 0) {\n    if (self._40 === 0) {\n      self._40 = 1;\n      self._72 = deferred;\n      return;\n    }\n    if (self._40 === 1) {\n      self._40 = 2;\n      self._72 = [self._72, deferred];\n      return;\n    }\n    self._72.push(deferred);\n    return;\n  }\n  handleResolved(self, deferred);\n}\n\nfunction handleResolved(self, deferred) {\n  asap(function() {\n    var cb = self._65 === 1 ? deferred.onFulfilled : deferred.onRejected;\n    if (cb === null) {\n      if (self._65 === 1) {\n        resolve(deferred.promise, self._55);\n      } else {\n        reject(deferred.promise, self._55);\n      }\n      return;\n    }\n    var ret = tryCallOne(cb, self._55);\n    if (ret === IS_ERROR) {\n      reject(deferred.promise, LAST_ERROR);\n    } else {\n      resolve(deferred.promise, ret);\n    }\n  });\n}\nfunction resolve(self, newValue) {\n  // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n  if (newValue === self) {\n    return reject(\n      self,\n      new TypeError('A promise cannot be resolved with itself.')\n    );\n  }\n  if (\n    newValue &&\n    (typeof newValue === 'object' || typeof newValue === 'function')\n  ) {\n    var then = getThen(newValue);\n    if (then === IS_ERROR) {\n      return reject(self, LAST_ERROR);\n    }\n    if (\n      then === self.then &&\n      newValue instanceof Promise\n    ) {\n      self._65 = 3;\n      self._55 = newValue;\n      finale(self);\n      return;\n    } else if (typeof then === 'function') {\n      doResolve(then.bind(newValue), self);\n      return;\n    }\n  }\n  self._65 = 1;\n  self._55 = newValue;\n  finale(self);\n}\n\nfunction reject(self, newValue) {\n  self._65 = 2;\n  self._55 = newValue;\n  if (Promise._87) {\n    Promise._87(self, newValue);\n  }\n  finale(self);\n}\nfunction finale(self) {\n  if (self._40 === 1) {\n    handle(self, self._72);\n    self._72 = null;\n  }\n  if (self._40 === 2) {\n    for (var i = 0; i < self._72.length; i++) {\n      handle(self, self._72[i]);\n    }\n    self._72 = null;\n  }\n}\n\nfunction Handler(onFulfilled, onRejected, promise){\n  this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n  this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n  this.promise = promise;\n}\n\n/**\n * Take a potentially misbehaving resolver function and make sure\n * onFulfilled and onRejected are only called once.\n *\n * Makes no guarantees about asynchrony.\n */\nfunction doResolve(fn, promise) {\n  var done = false;\n  var res = tryCallTwo(fn, function (value) {\n    if (done) return;\n    done = true;\n    resolve(promise, value);\n  }, function (reason) {\n    if (done) return;\n    done = true;\n    reject(promise, reason);\n  });\n  if (!done && res === IS_ERROR) {\n    done = true;\n    reject(promise, LAST_ERROR);\n  }\n}\n","\"use strict\";\n\n// Use the fastest means possible to execute a task in its own turn, with\n// priority over other events including IO, animation, reflow, and redraw\n// events in browsers.\n//\n// An exception thrown by a task will permanently interrupt the processing of\n// subsequent tasks. The higher level `asap` function ensures that if an\n// exception is thrown by a task, that the task queue will continue flushing as\n// soon as possible, but if you use `rawAsap` directly, you are responsible to\n// either ensure that no exceptions are thrown from your task, or to manually\n// call `rawAsap.requestFlush` if an exception is thrown.\nmodule.exports = rawAsap;\nfunction rawAsap(task) {\n    if (!queue.length) {\n        requestFlush();\n        flushing = true;\n    }\n    // Equivalent to push, but avoids a function call.\n    queue[queue.length] = task;\n}\n\nvar queue = [];\n// Once a flush has been requested, no further calls to `requestFlush` are\n// necessary until the next `flush` completes.\nvar flushing = false;\n// `requestFlush` is an implementation-specific method that attempts to kick\n// off a `flush` event as quickly as possible. `flush` will attempt to exhaust\n// the event queue before yielding to the browser's own event loop.\nvar requestFlush;\n// The position of the next task to execute in the task queue. This is\n// preserved between calls to `flush` so that it can be resumed if\n// a task throws an exception.\nvar index = 0;\n// If a task schedules additional tasks recursively, the task queue can grow\n// unbounded. To prevent memory exhaustion, the task queue will periodically\n// truncate already-completed tasks.\nvar capacity = 1024;\n\n// The flush function processes all tasks that have been scheduled with\n// `rawAsap` unless and until one of those tasks throws an exception.\n// If a task throws an exception, `flush` ensures that its state will remain\n// consistent and will resume where it left off when called again.\n// However, `flush` does not make any arrangements to be called again if an\n// exception is thrown.\nfunction flush() {\n    while (index < queue.length) {\n        var currentIndex = index;\n        // Advance the index before calling the task. This ensures that we will\n        // begin flushing on the next task the task throws an error.\n        index = index + 1;\n        queue[currentIndex].call();\n        // Prevent leaking memory for long chains of recursive calls to `asap`.\n        // If we call `asap` within tasks scheduled by `asap`, the queue will\n        // grow, but to avoid an O(n) walk for every task we execute, we don't\n        // shift tasks off the queue after they have been executed.\n        // Instead, we periodically shift 1024 tasks off the queue.\n        if (index > capacity) {\n            // Manually shift all values starting at the index back to the\n            // beginning of the queue.\n            for (var scan = 0, newLength = queue.length - index; scan < newLength; scan++) {\n                queue[scan] = queue[scan + index];\n            }\n            queue.length -= index;\n            index = 0;\n        }\n    }\n    queue.length = 0;\n    index = 0;\n    flushing = false;\n}\n\n// `requestFlush` is implemented using a strategy based on data collected from\n// every available SauceLabs Selenium web driver worker at time of writing.\n// https://docs.google.com/spreadsheets/d/1mG-5UYGup5qxGdEMWkhP6BWCz053NUb2E1QoUTU16uA/edit#gid=783724593\n\n// Safari 6 and 6.1 for desktop, iPad, and iPhone are the only browsers that\n// have WebKitMutationObserver but not un-prefixed MutationObserver.\n// Must use `global` or `self` instead of `window` to work in both frames and web\n// workers. `global` is a provision of Browserify, Mr, Mrs, or Mop.\n\n/* globals self */\nvar scope = typeof global !== \"undefined\" ? global : self;\nvar BrowserMutationObserver = scope.MutationObserver || scope.WebKitMutationObserver;\n\n// MutationObservers are desirable because they have high priority and work\n// reliably everywhere they are implemented.\n// They are implemented in all modern browsers.\n//\n// - Android 4-4.3\n// - Chrome 26-34\n// - Firefox 14-29\n// - Internet Explorer 11\n// - iPad Safari 6-7.1\n// - iPhone Safari 7-7.1\n// - Safari 6-7\nif (typeof BrowserMutationObserver === \"function\") {\n    requestFlush = makeRequestCallFromMutationObserver(flush);\n\n// MessageChannels are desirable because they give direct access to the HTML\n// task queue, are implemented in Internet Explorer 10, Safari 5.0-1, and Opera\n// 11-12, and in web workers in many engines.\n// Although message channels yield to any queued rendering and IO tasks, they\n// would be better than imposing the 4ms delay of timers.\n// However, they do not work reliably in Internet Explorer or Safari.\n\n// Internet Explorer 10 is the only browser that has setImmediate but does\n// not have MutationObservers.\n// Although setImmediate yields to the browser's renderer, it would be\n// preferrable to falling back to setTimeout since it does not have\n// the minimum 4ms penalty.\n// Unfortunately there appears to be a bug in Internet Explorer 10 Mobile (and\n// Desktop to a lesser extent) that renders both setImmediate and\n// MessageChannel useless for the purposes of ASAP.\n// https://github.com/kriskowal/q/issues/396\n\n// Timers are implemented universally.\n// We fall back to timers in workers in most engines, and in foreground\n// contexts in the following browsers.\n// However, note that even this simple case requires nuances to operate in a\n// broad spectrum of browsers.\n//\n// - Firefox 3-13\n// - Internet Explorer 6-9\n// - iPad Safari 4.3\n// - Lynx 2.8.7\n} else {\n    requestFlush = makeRequestCallFromTimer(flush);\n}\n\n// `requestFlush` requests that the high priority event queue be flushed as\n// soon as possible.\n// This is useful to prevent an error thrown in a task from stalling the event\n// queue if the exception handled by Node.js’s\n// `process.on(\"uncaughtException\")` or by a domain.\nrawAsap.requestFlush = requestFlush;\n\n// To request a high priority event, we induce a mutation observer by toggling\n// the text of a text node between \"1\" and \"-1\".\nfunction makeRequestCallFromMutationObserver(callback) {\n    var toggle = 1;\n    var observer = new BrowserMutationObserver(callback);\n    var node = document.createTextNode(\"\");\n    observer.observe(node, {characterData: true});\n    return function requestCall() {\n        toggle = -toggle;\n        node.data = toggle;\n    };\n}\n\n// The message channel technique was discovered by Malte Ubl and was the\n// original foundation for this library.\n// http://www.nonblocking.io/2011/06/windownexttick.html\n\n// Safari 6.0.5 (at least) intermittently fails to create message ports on a\n// page's first load. Thankfully, this version of Safari supports\n// MutationObservers, so we don't need to fall back in that case.\n\n// function makeRequestCallFromMessageChannel(callback) {\n//     var channel = new MessageChannel();\n//     channel.port1.onmessage = callback;\n//     return function requestCall() {\n//         channel.port2.postMessage(0);\n//     };\n// }\n\n// For reasons explained above, we are also unable to use `setImmediate`\n// under any circumstances.\n// Even if we were, there is another bug in Internet Explorer 10.\n// It is not sufficient to assign `setImmediate` to `requestFlush` because\n// `setImmediate` must be called *by name* and therefore must be wrapped in a\n// closure.\n// Never forget.\n\n// function makeRequestCallFromSetImmediate(callback) {\n//     return function requestCall() {\n//         setImmediate(callback);\n//     };\n// }\n\n// Safari 6.0 has a problem where timers will get lost while the user is\n// scrolling. This problem does not impact ASAP because Safari 6.0 supports\n// mutation observers, so that implementation is used instead.\n// However, if we ever elect to use timers in Safari, the prevalent work-around\n// is to add a scroll event listener that calls for a flush.\n\n// `setTimeout` does not call the passed callback if the delay is less than\n// approximately 7 in web workers in Firefox 8 through 18, and sometimes not\n// even then.\n\nfunction makeRequestCallFromTimer(callback) {\n    return function requestCall() {\n        // We dispatch a timeout with a specified delay of 0 for engines that\n        // can reliably accommodate that request. This will usually be snapped\n        // to a 4 milisecond delay, but once we're flushing, there's no delay\n        // between events.\n        var timeoutHandle = setTimeout(handleTimer, 0);\n        // However, since this timer gets frequently dropped in Firefox\n        // workers, we enlist an interval handle that will try to fire\n        // an event 20 times per second until it succeeds.\n        var intervalHandle = setInterval(handleTimer, 50);\n\n        function handleTimer() {\n            // Whichever timer succeeds will cancel both timers and\n            // execute the callback.\n            clearTimeout(timeoutHandle);\n            clearInterval(intervalHandle);\n            callback();\n        }\n    };\n}\n\n// This is for `asap.js` only.\n// Its name will be periodically randomized to break any code that depends on\n// its existence.\nrawAsap.makeRequestCallFromTimer = makeRequestCallFromTimer;\n\n// ASAP was originally a nextTick shim included in Q. This was factored out\n// into this ASAP package. It was later adapted to RSVP which made further\n// amendments. These decisions, particularly to marginalize MessageChannel and\n// to capture the MutationObserver implementation in a closure, were integrated\n// back into ASAP proper.\n// https://github.com/tildeio/rsvp.js/blob/cddf7232546a9cf858524b75cde6f9edf72620a7/lib/rsvp/asap.js\n","'use strict';\n\nvar Promise = require('./core.js');\n\nmodule.exports = Promise;\nPromise.prototype.done = function (onFulfilled, onRejected) {\n  var self = arguments.length ? this.then.apply(this, arguments) : this;\n  self.then(null, function (err) {\n    setTimeout(function () {\n      throw err;\n    }, 0);\n  });\n};\n","'use strict';\n\nvar Promise = require('./core.js');\n\nmodule.exports = Promise;\nPromise.prototype['finally'] = function (f) {\n  return this.then(function (value) {\n    return Promise.resolve(f()).then(function () {\n      return value;\n    });\n  }, function (err) {\n    return Promise.resolve(f()).then(function () {\n      throw err;\n    });\n  });\n};\n","'use strict';\n\n//This file contains the ES6 extensions to the core Promises/A+ API\n\nvar Promise = require('./core.js');\n\nmodule.exports = Promise;\n\n/* Static Functions */\n\nvar TRUE = valuePromise(true);\nvar FALSE = valuePromise(false);\nvar NULL = valuePromise(null);\nvar UNDEFINED = valuePromise(undefined);\nvar ZERO = valuePromise(0);\nvar EMPTYSTRING = valuePromise('');\n\nfunction valuePromise(value) {\n  var p = new Promise(Promise._61);\n  p._65 = 1;\n  p._55 = value;\n  return p;\n}\nPromise.resolve = function (value) {\n  if (value instanceof Promise) return value;\n\n  if (value === null) return NULL;\n  if (value === undefined) return UNDEFINED;\n  if (value === true) return TRUE;\n  if (value === false) return FALSE;\n  if (value === 0) return ZERO;\n  if (value === '') return EMPTYSTRING;\n\n  if (typeof value === 'object' || typeof value === 'function') {\n    try {\n      var then = value.then;\n      if (typeof then === 'function') {\n        return new Promise(then.bind(value));\n      }\n    } catch (ex) {\n      return new Promise(function (resolve, reject) {\n        reject(ex);\n      });\n    }\n  }\n  return valuePromise(value);\n};\n\nPromise.all = function (arr) {\n  var args = Array.prototype.slice.call(arr);\n\n  return new Promise(function (resolve, reject) {\n    if (args.length === 0) return resolve([]);\n    var remaining = args.length;\n    function res(i, val) {\n      if (val && (typeof val === 'object' || typeof val === 'function')) {\n        if (val instanceof Promise && val.then === Promise.prototype.then) {\n          while (val._65 === 3) {\n            val = val._55;\n          }\n          if (val._65 === 1) return res(i, val._55);\n          if (val._65 === 2) reject(val._55);\n          val.then(function (val) {\n            res(i, val);\n          }, reject);\n          return;\n        } else {\n          var then = val.then;\n          if (typeof then === 'function') {\n            var p = new Promise(then.bind(val));\n            p.then(function (val) {\n              res(i, val);\n            }, reject);\n            return;\n          }\n        }\n      }\n      args[i] = val;\n      if (--remaining === 0) {\n        resolve(args);\n      }\n    }\n    for (var i = 0; i < args.length; i++) {\n      res(i, args[i]);\n    }\n  });\n};\n\nPromise.reject = function (value) {\n  return new Promise(function (resolve, reject) {\n    reject(value);\n  });\n};\n\nPromise.race = function (values) {\n  return new Promise(function (resolve, reject) {\n    values.forEach(function(value){\n      Promise.resolve(value).then(resolve, reject);\n    });\n  });\n};\n\n/* Prototype Methods */\n\nPromise.prototype['catch'] = function (onRejected) {\n  return this.then(null, onRejected);\n};\n","'use strict';\n\n// This file contains then/promise specific extensions that are only useful\n// for node.js interop\n\nvar Promise = require('./core.js');\nvar asap = require('asap');\n\nmodule.exports = Promise;\n\n/* Static Functions */\n\nPromise.denodeify = function (fn, argumentCount) {\n  if (\n    typeof argumentCount === 'number' && argumentCount !== Infinity\n  ) {\n    return denodeifyWithCount(fn, argumentCount);\n  } else {\n    return denodeifyWithoutCount(fn);\n  }\n};\n\nvar callbackFn = (\n  'function (err, res) {' +\n  'if (err) { rj(err); } else { rs(res); }' +\n  '}'\n);\nfunction denodeifyWithCount(fn, argumentCount) {\n  var args = [];\n  for (var i = 0; i < argumentCount; i++) {\n    args.push('a' + i);\n  }\n  var body = [\n    'return function (' + args.join(',') + ') {',\n    'var self = this;',\n    'return new Promise(function (rs, rj) {',\n    'var res = fn.call(',\n    ['self'].concat(args).concat([callbackFn]).join(','),\n    ');',\n    'if (res &&',\n    '(typeof res === \"object\" || typeof res === \"function\") &&',\n    'typeof res.then === \"function\"',\n    ') {rs(res);}',\n    '});',\n    '};'\n  ].join('');\n  return Function(['Promise', 'fn'], body)(Promise, fn);\n}\nfunction denodeifyWithoutCount(fn) {\n  var fnLength = Math.max(fn.length - 1, 3);\n  var args = [];\n  for (var i = 0; i < fnLength; i++) {\n    args.push('a' + i);\n  }\n  var body = [\n    'return function (' + args.join(',') + ') {',\n    'var self = this;',\n    'var args;',\n    'var argLength = arguments.length;',\n    'if (arguments.length > ' + fnLength + ') {',\n    'args = new Array(arguments.length + 1);',\n    'for (var i = 0; i < arguments.length; i++) {',\n    'args[i] = arguments[i];',\n    '}',\n    '}',\n    'return new Promise(function (rs, rj) {',\n    'var cb = ' + callbackFn + ';',\n    'var res;',\n    'switch (argLength) {',\n    args.concat(['extra']).map(function (_, index) {\n      return (\n        'case ' + (index) + ':' +\n        'res = fn.call(' + ['self'].concat(args.slice(0, index)).concat('cb').join(',') + ');' +\n        'break;'\n      );\n    }).join(''),\n    'default:',\n    'args[argLength] = cb;',\n    'res = fn.apply(self, args);',\n    '}',\n    \n    'if (res &&',\n    '(typeof res === \"object\" || typeof res === \"function\") &&',\n    'typeof res.then === \"function\"',\n    ') {rs(res);}',\n    '});',\n    '};'\n  ].join('');\n\n  return Function(\n    ['Promise', 'fn'],\n    body\n  )(Promise, fn);\n}\n\nPromise.nodeify = function (fn) {\n  return function () {\n    var args = Array.prototype.slice.call(arguments);\n    var callback =\n      typeof args[args.length - 1] === 'function' ? args.pop() : null;\n    var ctx = this;\n    try {\n      return fn.apply(this, arguments).nodeify(callback, ctx);\n    } catch (ex) {\n      if (callback === null || typeof callback == 'undefined') {\n        return new Promise(function (resolve, reject) {\n          reject(ex);\n        });\n      } else {\n        asap(function () {\n          callback.call(ctx, ex);\n        })\n      }\n    }\n  }\n};\n\nPromise.prototype.nodeify = function (callback, ctx) {\n  if (typeof callback != 'function') return this;\n\n  this.then(function (value) {\n    asap(function () {\n      callback.call(ctx, null, value);\n    });\n  }, function (err) {\n    asap(function () {\n      callback.call(ctx, err);\n    });\n  });\n};\n","\"use strict\";\n\n// rawAsap provides everything we need except exception management.\nvar rawAsap = require(\"./raw\");\n// RawTasks are recycled to reduce GC churn.\nvar freeTasks = [];\n// We queue errors to ensure they are thrown in right order (FIFO).\n// Array-as-queue is good enough here, since we are just dealing with exceptions.\nvar pendingErrors = [];\nvar requestErrorThrow = rawAsap.makeRequestCallFromTimer(throwFirstError);\n\nfunction throwFirstError() {\n    if (pendingErrors.length) {\n        throw pendingErrors.shift();\n    }\n}\n\n/**\n * Calls a task as soon as possible after returning, in its own event, with priority\n * over other events like animation, reflow, and repaint. An error thrown from an\n * event will not interrupt, nor even substantially slow down the processing of\n * other events, but will be rather postponed to a lower priority event.\n * @param {{call}} task A callable object, typically a function that takes no\n * arguments.\n */\nmodule.exports = asap;\nfunction asap(task) {\n    var rawTask;\n    if (freeTasks.length) {\n        rawTask = freeTasks.pop();\n    } else {\n        rawTask = new RawTask();\n    }\n    rawTask.task = task;\n    rawAsap(rawTask);\n}\n\n// We wrap tasks with recyclable task objects.  A task object implements\n// `call`, just like a function.\nfunction RawTask() {\n    this.task = null;\n}\n\n// The sole purpose of wrapping the task is to catch the exception and recycle\n// the task object after its single use.\nRawTask.prototype.call = function () {\n    try {\n        this.task.call();\n    } catch (error) {\n        if (asap.onerror) {\n            // This hook exists purely for testing purposes.\n            // Its name will be periodically randomized to break any code that\n            // depends on its existence.\n            asap.onerror(error);\n        } else {\n            // In a web browser, exceptions are not fatal. However, to avoid\n            // slowing down the queue of pending tasks, we rethrow the error in a\n            // lower priority turn.\n            pendingErrors.push(error);\n            requestErrorThrow();\n        }\n    } finally {\n        this.task = null;\n        freeTasks[freeTasks.length] = this;\n    }\n};\n","'use strict';\n\nvar Promise = require('./core.js');\n\nmodule.exports = Promise;\nPromise.enableSynchronous = function () {\n  Promise.prototype.isPending = function() {\n    return this.getState() == 0;\n  };\n\n  Promise.prototype.isFulfilled = function() {\n    return this.getState() == 1;\n  };\n\n  Promise.prototype.isRejected = function() {\n    return this.getState() == 2;\n  };\n\n  Promise.prototype.getValue = function () {\n    if (this._65 === 3) {\n      return this._55.getValue();\n    }\n\n    if (!this.isFulfilled()) {\n      throw new Error('Cannot get a value of an unfulfilled promise.');\n    }\n\n    return this._55;\n  };\n\n  Promise.prototype.getReason = function () {\n    if (this._65 === 3) {\n      return this._55.getReason();\n    }\n\n    if (!this.isRejected()) {\n      throw new Error('Cannot get a rejection reason of a non-rejected promise.');\n    }\n\n    return this._55;\n  };\n\n  Promise.prototype.getState = function () {\n    if (this._65 === 3) {\n      return this._55.getState();\n    }\n    if (this._65 === -1 || this._65 === -2) {\n      return 0;\n    }\n\n    return this._65;\n  };\n};\n\nPromise.disableSynchronous = function() {\n  Promise.prototype.isPending = undefined;\n  Promise.prototype.isFulfilled = undefined;\n  Promise.prototype.isRejected = undefined;\n  Promise.prototype.getValue = undefined;\n  Promise.prototype.getReason = undefined;\n  Promise.prototype.getState = undefined;\n};\n","module.exports = isPromise;\nmodule.exports.default = isPromise;\n\nfunction isPromise(obj) {\n  return !!obj && (typeof obj === 'object' || typeof obj === 'function') && typeof obj.then === 'function';\n}\n","var async = require('./lib/async');\nasync.core = require('./lib/core');\nasync.isCore = require('./lib/is-core');\nasync.sync = require('./lib/sync');\n\nmodule.exports = async;\n","var fs = require('fs');\nvar getHomedir = require('./homedir');\nvar path = require('path');\nvar caller = require('./caller');\nvar nodeModulesPaths = require('./node-modules-paths');\nvar normalizeOptions = require('./normalize-options');\nvar isCore = require('is-core-module');\n\nvar realpathFS = process.platform !== 'win32' && fs.realpath && typeof fs.realpath.native === 'function' ? fs.realpath.native : fs.realpath;\n\nvar homedir = getHomedir();\nvar defaultPaths = function () {\n    return [\n        path.join(homedir, '.node_modules'),\n        path.join(homedir, '.node_libraries')\n    ];\n};\n\nvar defaultIsFile = function isFile(file, cb) {\n    fs.stat(file, function (err, stat) {\n        if (!err) {\n            return cb(null, stat.isFile() || stat.isFIFO());\n        }\n        if (err.code === 'ENOENT' || err.code === 'ENOTDIR') return cb(null, false);\n        return cb(err);\n    });\n};\n\nvar defaultIsDir = function isDirectory(dir, cb) {\n    fs.stat(dir, function (err, stat) {\n        if (!err) {\n            return cb(null, stat.isDirectory());\n        }\n        if (err.code === 'ENOENT' || err.code === 'ENOTDIR') return cb(null, false);\n        return cb(err);\n    });\n};\n\nvar defaultRealpath = function realpath(x, cb) {\n    realpathFS(x, function (realpathErr, realPath) {\n        if (realpathErr && realpathErr.code !== 'ENOENT') cb(realpathErr);\n        else cb(null, realpathErr ? x : realPath);\n    });\n};\n\nvar maybeRealpath = function maybeRealpath(realpath, x, opts, cb) {\n    if (opts && opts.preserveSymlinks === false) {\n        realpath(x, cb);\n    } else {\n        cb(null, x);\n    }\n};\n\nvar defaultReadPackage = function defaultReadPackage(readFile, pkgfile, cb) {\n    readFile(pkgfile, function (readFileErr, body) {\n        if (readFileErr) cb(readFileErr);\n        else {\n            try {\n                var pkg = JSON.parse(body);\n                cb(null, pkg);\n            } catch (jsonErr) {\n                cb(null);\n            }\n        }\n    });\n};\n\nvar getPackageCandidates = function getPackageCandidates(x, start, opts) {\n    var dirs = nodeModulesPaths(start, opts, x);\n    for (var i = 0; i < dirs.length; i++) {\n        dirs[i] = path.join(dirs[i], x);\n    }\n    return dirs;\n};\n\nmodule.exports = function resolve(x, options, callback) {\n    var cb = callback;\n    var opts = options;\n    if (typeof options === 'function') {\n        cb = opts;\n        opts = {};\n    }\n    if (typeof x !== 'string') {\n        var err = new TypeError('Path must be a string.');\n        return process.nextTick(function () {\n            cb(err);\n        });\n    }\n\n    opts = normalizeOptions(x, opts);\n\n    var isFile = opts.isFile || defaultIsFile;\n    var isDirectory = opts.isDirectory || defaultIsDir;\n    var readFile = opts.readFile || fs.readFile;\n    var realpath = opts.realpath || defaultRealpath;\n    var readPackage = opts.readPackage || defaultReadPackage;\n    if (opts.readFile && opts.readPackage) {\n        var conflictErr = new TypeError('`readFile` and `readPackage` are mutually exclusive.');\n        return process.nextTick(function () {\n            cb(conflictErr);\n        });\n    }\n    var packageIterator = opts.packageIterator;\n\n    var extensions = opts.extensions || ['.js'];\n    var includeCoreModules = opts.includeCoreModules !== false;\n    var basedir = opts.basedir || path.dirname(caller());\n    var parent = opts.filename || basedir;\n\n    opts.paths = opts.paths || defaultPaths();\n\n    // ensure that `basedir` is an absolute path at this point, resolving against the process' current working directory\n    var absoluteStart = path.resolve(basedir);\n\n    maybeRealpath(\n        realpath,\n        absoluteStart,\n        opts,\n        function (err, realStart) {\n            if (err) cb(err);\n            else init(realStart);\n        }\n    );\n\n    var res;\n    function init(basedir) {\n        if ((/^(?:\\.\\.?(?:\\/|$)|\\/|([A-Za-z]:)?[/\\\\])/).test(x)) {\n            res = path.resolve(basedir, x);\n            if (x === '.' || x === '..' || x.slice(-1) === '/') res += '/';\n            if ((/\\/$/).test(x) && res === basedir) {\n                loadAsDirectory(res, opts.package, onfile);\n            } else loadAsFile(res, opts.package, onfile);\n        } else if (includeCoreModules && isCore(x)) {\n            return cb(null, x);\n        } else loadNodeModules(x, basedir, function (err, n, pkg) {\n            if (err) cb(err);\n            else if (n) {\n                return maybeRealpath(realpath, n, opts, function (err, realN) {\n                    if (err) {\n                        cb(err);\n                    } else {\n                        cb(null, realN, pkg);\n                    }\n                });\n            } else {\n                var moduleError = new Error(\"Cannot find module '\" + x + \"' from '\" + parent + \"'\");\n                moduleError.code = 'MODULE_NOT_FOUND';\n                cb(moduleError);\n            }\n        });\n    }\n\n    function onfile(err, m, pkg) {\n        if (err) cb(err);\n        else if (m) cb(null, m, pkg);\n        else loadAsDirectory(res, function (err, d, pkg) {\n            if (err) cb(err);\n            else if (d) {\n                maybeRealpath(realpath, d, opts, function (err, realD) {\n                    if (err) {\n                        cb(err);\n                    } else {\n                        cb(null, realD, pkg);\n                    }\n                });\n            } else {\n                var moduleError = new Error(\"Cannot find module '\" + x + \"' from '\" + parent + \"'\");\n                moduleError.code = 'MODULE_NOT_FOUND';\n                cb(moduleError);\n            }\n        });\n    }\n\n    function loadAsFile(x, thePackage, callback) {\n        var loadAsFilePackage = thePackage;\n        var cb = callback;\n        if (typeof loadAsFilePackage === 'function') {\n            cb = loadAsFilePackage;\n            loadAsFilePackage = undefined;\n        }\n\n        var exts = [''].concat(extensions);\n        load(exts, x, loadAsFilePackage);\n\n        function load(exts, x, loadPackage) {\n            if (exts.length === 0) return cb(null, undefined, loadPackage);\n            var file = x + exts[0];\n\n            var pkg = loadPackage;\n            if (pkg) onpkg(null, pkg);\n            else loadpkg(path.dirname(file), onpkg);\n\n            function onpkg(err, pkg_, dir) {\n                pkg = pkg_;\n                if (err) return cb(err);\n                if (dir && pkg && opts.pathFilter) {\n                    var rfile = path.relative(dir, file);\n                    var rel = rfile.slice(0, rfile.length - exts[0].length);\n                    var r = opts.pathFilter(pkg, x, rel);\n                    if (r) return load(\n                        [''].concat(extensions.slice()),\n                        path.resolve(dir, r),\n                        pkg\n                    );\n                }\n                isFile(file, onex);\n            }\n            function onex(err, ex) {\n                if (err) return cb(err);\n                if (ex) return cb(null, file, pkg);\n                load(exts.slice(1), x, pkg);\n            }\n        }\n    }\n\n    function loadpkg(dir, cb) {\n        if (dir === '' || dir === '/') return cb(null);\n        if (process.platform === 'win32' && (/^\\w:[/\\\\]*$/).test(dir)) {\n            return cb(null);\n        }\n        if ((/[/\\\\]node_modules[/\\\\]*$/).test(dir)) return cb(null);\n\n        maybeRealpath(realpath, dir, opts, function (unwrapErr, pkgdir) {\n            if (unwrapErr) return loadpkg(path.dirname(dir), cb);\n            var pkgfile = path.join(pkgdir, 'package.json');\n            isFile(pkgfile, function (err, ex) {\n                // on err, ex is false\n                if (!ex) return loadpkg(path.dirname(dir), cb);\n\n                readPackage(readFile, pkgfile, function (err, pkgParam) {\n                    if (err) cb(err);\n\n                    var pkg = pkgParam;\n\n                    if (pkg && opts.packageFilter) {\n                        pkg = opts.packageFilter(pkg, pkgfile);\n                    }\n                    cb(null, pkg, dir);\n                });\n            });\n        });\n    }\n\n    function loadAsDirectory(x, loadAsDirectoryPackage, callback) {\n        var cb = callback;\n        var fpkg = loadAsDirectoryPackage;\n        if (typeof fpkg === 'function') {\n            cb = fpkg;\n            fpkg = opts.package;\n        }\n\n        maybeRealpath(realpath, x, opts, function (unwrapErr, pkgdir) {\n            if (unwrapErr) return cb(unwrapErr);\n            var pkgfile = path.join(pkgdir, 'package.json');\n            isFile(pkgfile, function (err, ex) {\n                if (err) return cb(err);\n                if (!ex) return loadAsFile(path.join(x, 'index'), fpkg, cb);\n\n                readPackage(readFile, pkgfile, function (err, pkgParam) {\n                    if (err) return cb(err);\n\n                    var pkg = pkgParam;\n\n                    if (pkg && opts.packageFilter) {\n                        pkg = opts.packageFilter(pkg, pkgfile);\n                    }\n\n                    if (pkg && pkg.main) {\n                        if (typeof pkg.main !== 'string') {\n                            var mainError = new TypeError('package “' + pkg.name + '” `main` must be a string');\n                            mainError.code = 'INVALID_PACKAGE_MAIN';\n                            return cb(mainError);\n                        }\n                        if (pkg.main === '.' || pkg.main === './') {\n                            pkg.main = 'index';\n                        }\n                        loadAsFile(path.resolve(x, pkg.main), pkg, function (err, m, pkg) {\n                            if (err) return cb(err);\n                            if (m) return cb(null, m, pkg);\n                            if (!pkg) return loadAsFile(path.join(x, 'index'), pkg, cb);\n\n                            var dir = path.resolve(x, pkg.main);\n                            loadAsDirectory(dir, pkg, function (err, n, pkg) {\n                                if (err) return cb(err);\n                                if (n) return cb(null, n, pkg);\n                                loadAsFile(path.join(x, 'index'), pkg, cb);\n                            });\n                        });\n                        return;\n                    }\n\n                    loadAsFile(path.join(x, '/index'), pkg, cb);\n                });\n            });\n        });\n    }\n\n    function processDirs(cb, dirs) {\n        if (dirs.length === 0) return cb(null, undefined);\n        var dir = dirs[0];\n\n        isDirectory(path.dirname(dir), isdir);\n\n        function isdir(err, isdir) {\n            if (err) return cb(err);\n            if (!isdir) return processDirs(cb, dirs.slice(1));\n            loadAsFile(dir, opts.package, onfile);\n        }\n\n        function onfile(err, m, pkg) {\n            if (err) return cb(err);\n            if (m) return cb(null, m, pkg);\n            loadAsDirectory(dir, opts.package, ondir);\n        }\n\n        function ondir(err, n, pkg) {\n            if (err) return cb(err);\n            if (n) return cb(null, n, pkg);\n            processDirs(cb, dirs.slice(1));\n        }\n    }\n    function loadNodeModules(x, start, cb) {\n        var thunk = function () { return getPackageCandidates(x, start, opts); };\n        processDirs(\n            cb,\n            packageIterator ? packageIterator(x, start, thunk, opts) : thunk()\n        );\n    }\n};\n","'use strict';\n\nvar os = require('os');\n\n// adapted from https://github.com/sindresorhus/os-homedir/blob/11e089f4754db38bb535e5a8416320c4446e8cfd/index.js\n\nmodule.exports = os.homedir || function homedir() {\n    var home = process.env.HOME;\n    var user = process.env.LOGNAME || process.env.USER || process.env.LNAME || process.env.USERNAME;\n\n    if (process.platform === 'win32') {\n        return process.env.USERPROFILE || process.env.HOMEDRIVE + process.env.HOMEPATH || home || null;\n    }\n\n    if (process.platform === 'darwin') {\n        return home || (user ? '/Users/' + user : null);\n    }\n\n    if (process.platform === 'linux') {\n        return home || (process.getuid() === 0 ? '/root' : (user ? '/home/' + user : null)); // eslint-disable-line no-extra-parens\n    }\n\n    return home || null;\n};\n","exports.endianness = function () { return 'LE' };\n\nexports.hostname = function () {\n    if (typeof location !== 'undefined') {\n        return location.hostname\n    }\n    else return '';\n};\n\nexports.loadavg = function () { return [] };\n\nexports.uptime = function () { return 0 };\n\nexports.freemem = function () {\n    return Number.MAX_VALUE;\n};\n\nexports.totalmem = function () {\n    return Number.MAX_VALUE;\n};\n\nexports.cpus = function () { return [] };\n\nexports.type = function () { return 'Browser' };\n\nexports.release = function () {\n    if (typeof navigator !== 'undefined') {\n        return navigator.appVersion;\n    }\n    return '';\n};\n\nexports.networkInterfaces\n= exports.getNetworkInterfaces\n= function () { return {} };\n\nexports.arch = function () { return 'javascript' };\n\nexports.platform = function () { return 'browser' };\n\nexports.tmpdir = exports.tmpDir = function () {\n    return '/tmp';\n};\n\nexports.EOL = '\\n';\n\nexports.homedir = function () {\n\treturn '/'\n};\n","// 'path' module extracted from Node.js v8.11.1 (only the posix part)\n// transplited with Babel\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError('Path must be a string. Received ' + JSON.stringify(path));\n  }\n}\n\n// Resolves . and .. elements in a path with directory names\nfunction normalizeStringPosix(path, allowAboveRoot) {\n  var res = '';\n  var lastSegmentLength = 0;\n  var lastSlash = -1;\n  var dots = 0;\n  var code;\n  for (var i = 0; i <= path.length; ++i) {\n    if (i < path.length)\n      code = path.charCodeAt(i);\n    else if (code === 47 /*/*/)\n      break;\n    else\n      code = 47 /*/*/;\n    if (code === 47 /*/*/) {\n      if (lastSlash === i - 1 || dots === 1) {\n        // NOOP\n      } else if (lastSlash !== i - 1 && dots === 2) {\n        if (res.length < 2 || lastSegmentLength !== 2 || res.charCodeAt(res.length - 1) !== 46 /*.*/ || res.charCodeAt(res.length - 2) !== 46 /*.*/) {\n          if (res.length > 2) {\n            var lastSlashIndex = res.lastIndexOf('/');\n            if (lastSlashIndex !== res.length - 1) {\n              if (lastSlashIndex === -1) {\n                res = '';\n                lastSegmentLength = 0;\n              } else {\n                res = res.slice(0, lastSlashIndex);\n                lastSegmentLength = res.length - 1 - res.lastIndexOf('/');\n              }\n              lastSlash = i;\n              dots = 0;\n              continue;\n            }\n          } else if (res.length === 2 || res.length === 1) {\n            res = '';\n            lastSegmentLength = 0;\n            lastSlash = i;\n            dots = 0;\n            continue;\n          }\n        }\n        if (allowAboveRoot) {\n          if (res.length > 0)\n            res += '/..';\n          else\n            res = '..';\n          lastSegmentLength = 2;\n        }\n      } else {\n        if (res.length > 0)\n          res += '/' + path.slice(lastSlash + 1, i);\n        else\n          res = path.slice(lastSlash + 1, i);\n        lastSegmentLength = i - lastSlash - 1;\n      }\n      lastSlash = i;\n      dots = 0;\n    } else if (code === 46 /*.*/ && dots !== -1) {\n      ++dots;\n    } else {\n      dots = -1;\n    }\n  }\n  return res;\n}\n\nfunction _format(sep, pathObject) {\n  var dir = pathObject.dir || pathObject.root;\n  var base = pathObject.base || (pathObject.name || '') + (pathObject.ext || '');\n  if (!dir) {\n    return base;\n  }\n  if (dir === pathObject.root) {\n    return dir + base;\n  }\n  return dir + sep + base;\n}\n\nvar posix = {\n  // path.resolve([from ...], to)\n  resolve: function resolve() {\n    var resolvedPath = '';\n    var resolvedAbsolute = false;\n    var cwd;\n\n    for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n      var path;\n      if (i >= 0)\n        path = arguments[i];\n      else {\n        if (cwd === undefined)\n          cwd = process.cwd();\n        path = cwd;\n      }\n\n      assertPath(path);\n\n      // Skip empty entries\n      if (path.length === 0) {\n        continue;\n      }\n\n      resolvedPath = path + '/' + resolvedPath;\n      resolvedAbsolute = path.charCodeAt(0) === 47 /*/*/;\n    }\n\n    // At this point the path should be resolved to a full absolute path, but\n    // handle relative paths to be safe (might happen when process.cwd() fails)\n\n    // Normalize the path\n    resolvedPath = normalizeStringPosix(resolvedPath, !resolvedAbsolute);\n\n    if (resolvedAbsolute) {\n      if (resolvedPath.length > 0)\n        return '/' + resolvedPath;\n      else\n        return '/';\n    } else if (resolvedPath.length > 0) {\n      return resolvedPath;\n    } else {\n      return '.';\n    }\n  },\n\n  normalize: function normalize(path) {\n    assertPath(path);\n\n    if (path.length === 0) return '.';\n\n    var isAbsolute = path.charCodeAt(0) === 47 /*/*/;\n    var trailingSeparator = path.charCodeAt(path.length - 1) === 47 /*/*/;\n\n    // Normalize the path\n    path = normalizeStringPosix(path, !isAbsolute);\n\n    if (path.length === 0 && !isAbsolute) path = '.';\n    if (path.length > 0 && trailingSeparator) path += '/';\n\n    if (isAbsolute) return '/' + path;\n    return path;\n  },\n\n  isAbsolute: function isAbsolute(path) {\n    assertPath(path);\n    return path.length > 0 && path.charCodeAt(0) === 47 /*/*/;\n  },\n\n  join: function join() {\n    if (arguments.length === 0)\n      return '.';\n    var joined;\n    for (var i = 0; i < arguments.length; ++i) {\n      var arg = arguments[i];\n      assertPath(arg);\n      if (arg.length > 0) {\n        if (joined === undefined)\n          joined = arg;\n        else\n          joined += '/' + arg;\n      }\n    }\n    if (joined === undefined)\n      return '.';\n    return posix.normalize(joined);\n  },\n\n  relative: function relative(from, to) {\n    assertPath(from);\n    assertPath(to);\n\n    if (from === to) return '';\n\n    from = posix.resolve(from);\n    to = posix.resolve(to);\n\n    if (from === to) return '';\n\n    // Trim any leading backslashes\n    var fromStart = 1;\n    for (; fromStart < from.length; ++fromStart) {\n      if (from.charCodeAt(fromStart) !== 47 /*/*/)\n        break;\n    }\n    var fromEnd = from.length;\n    var fromLen = fromEnd - fromStart;\n\n    // Trim any leading backslashes\n    var toStart = 1;\n    for (; toStart < to.length; ++toStart) {\n      if (to.charCodeAt(toStart) !== 47 /*/*/)\n        break;\n    }\n    var toEnd = to.length;\n    var toLen = toEnd - toStart;\n\n    // Compare paths to find the longest common path from root\n    var length = fromLen < toLen ? fromLen : toLen;\n    var lastCommonSep = -1;\n    var i = 0;\n    for (; i <= length; ++i) {\n      if (i === length) {\n        if (toLen > length) {\n          if (to.charCodeAt(toStart + i) === 47 /*/*/) {\n            // We get here if `from` is the exact base path for `to`.\n            // For example: from='/foo/bar'; to='/foo/bar/baz'\n            return to.slice(toStart + i + 1);\n          } else if (i === 0) {\n            // We get here if `from` is the root\n            // For example: from='/'; to='/foo'\n            return to.slice(toStart + i);\n          }\n        } else if (fromLen > length) {\n          if (from.charCodeAt(fromStart + i) === 47 /*/*/) {\n            // We get here if `to` is the exact base path for `from`.\n            // For example: from='/foo/bar/baz'; to='/foo/bar'\n            lastCommonSep = i;\n          } else if (i === 0) {\n            // We get here if `to` is the root.\n            // For example: from='/foo'; to='/'\n            lastCommonSep = 0;\n          }\n        }\n        break;\n      }\n      var fromCode = from.charCodeAt(fromStart + i);\n      var toCode = to.charCodeAt(toStart + i);\n      if (fromCode !== toCode)\n        break;\n      else if (fromCode === 47 /*/*/)\n        lastCommonSep = i;\n    }\n\n    var out = '';\n    // Generate the relative path based on the path difference between `to`\n    // and `from`\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n      if (i === fromEnd || from.charCodeAt(i) === 47 /*/*/) {\n        if (out.length === 0)\n          out += '..';\n        else\n          out += '/..';\n      }\n    }\n\n    // Lastly, append the rest of the destination (`to`) path that comes after\n    // the common path parts\n    if (out.length > 0)\n      return out + to.slice(toStart + lastCommonSep);\n    else {\n      toStart += lastCommonSep;\n      if (to.charCodeAt(toStart) === 47 /*/*/)\n        ++toStart;\n      return to.slice(toStart);\n    }\n  },\n\n  _makeLong: function _makeLong(path) {\n    return path;\n  },\n\n  dirname: function dirname(path) {\n    assertPath(path);\n    if (path.length === 0) return '.';\n    var code = path.charCodeAt(0);\n    var hasRoot = code === 47 /*/*/;\n    var end = -1;\n    var matchedSlash = true;\n    for (var i = path.length - 1; i >= 1; --i) {\n      code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          if (!matchedSlash) {\n            end = i;\n            break;\n          }\n        } else {\n        // We saw the first non-path separator\n        matchedSlash = false;\n      }\n    }\n\n    if (end === -1) return hasRoot ? '/' : '.';\n    if (hasRoot && end === 1) return '//';\n    return path.slice(0, end);\n  },\n\n  basename: function basename(path, ext) {\n    if (ext !== undefined && typeof ext !== 'string') throw new TypeError('\"ext\" argument must be a string');\n    assertPath(path);\n\n    var start = 0;\n    var end = -1;\n    var matchedSlash = true;\n    var i;\n\n    if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n      if (ext.length === path.length && ext === path) return '';\n      var extIdx = ext.length - 1;\n      var firstNonSlashEnd = -1;\n      for (i = path.length - 1; i >= 0; --i) {\n        var code = path.charCodeAt(i);\n        if (code === 47 /*/*/) {\n            // If we reached a path separator that was not part of a set of path\n            // separators at the end of the string, stop now\n            if (!matchedSlash) {\n              start = i + 1;\n              break;\n            }\n          } else {\n          if (firstNonSlashEnd === -1) {\n            // We saw the first non-path separator, remember this index in case\n            // we need it if the extension ends up not matching\n            matchedSlash = false;\n            firstNonSlashEnd = i + 1;\n          }\n          if (extIdx >= 0) {\n            // Try to match the explicit extension\n            if (code === ext.charCodeAt(extIdx)) {\n              if (--extIdx === -1) {\n                // We matched the extension, so mark this as the end of our path\n                // component\n                end = i;\n              }\n            } else {\n              // Extension does not match, so our result is the entire path\n              // component\n              extIdx = -1;\n              end = firstNonSlashEnd;\n            }\n          }\n        }\n      }\n\n      if (start === end) end = firstNonSlashEnd;else if (end === -1) end = path.length;\n      return path.slice(start, end);\n    } else {\n      for (i = path.length - 1; i >= 0; --i) {\n        if (path.charCodeAt(i) === 47 /*/*/) {\n            // If we reached a path separator that was not part of a set of path\n            // separators at the end of the string, stop now\n            if (!matchedSlash) {\n              start = i + 1;\n              break;\n            }\n          } else if (end === -1) {\n          // We saw the first non-path separator, mark this as the end of our\n          // path component\n          matchedSlash = false;\n          end = i + 1;\n        }\n      }\n\n      if (end === -1) return '';\n      return path.slice(start, end);\n    }\n  },\n\n  extname: function extname(path) {\n    assertPath(path);\n    var startDot = -1;\n    var startPart = 0;\n    var end = -1;\n    var matchedSlash = true;\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    var preDotState = 0;\n    for (var i = path.length - 1; i >= 0; --i) {\n      var code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            startPart = i + 1;\n            break;\n          }\n          continue;\n        }\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === 46 /*.*/) {\n          // If this is our first dot, mark it as the start of our extension\n          if (startDot === -1)\n            startDot = i;\n          else if (preDotState !== 1)\n            preDotState = 1;\n      } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 || end === -1 ||\n        // We saw a non-dot character immediately before the dot\n        preDotState === 0 ||\n        // The (right-most) trimmed path component is exactly '..'\n        preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n      return '';\n    }\n    return path.slice(startDot, end);\n  },\n\n  format: function format(pathObject) {\n    if (pathObject === null || typeof pathObject !== 'object') {\n      throw new TypeError('The \"pathObject\" argument must be of type Object. Received type ' + typeof pathObject);\n    }\n    return _format('/', pathObject);\n  },\n\n  parse: function parse(path) {\n    assertPath(path);\n\n    var ret = { root: '', dir: '', base: '', ext: '', name: '' };\n    if (path.length === 0) return ret;\n    var code = path.charCodeAt(0);\n    var isAbsolute = code === 47 /*/*/;\n    var start;\n    if (isAbsolute) {\n      ret.root = '/';\n      start = 1;\n    } else {\n      start = 0;\n    }\n    var startDot = -1;\n    var startPart = 0;\n    var end = -1;\n    var matchedSlash = true;\n    var i = path.length - 1;\n\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    var preDotState = 0;\n\n    // Get non-dir info\n    for (; i >= start; --i) {\n      code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            startPart = i + 1;\n            break;\n          }\n          continue;\n        }\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === 46 /*.*/) {\n          // If this is our first dot, mark it as the start of our extension\n          if (startDot === -1) startDot = i;else if (preDotState !== 1) preDotState = 1;\n        } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 || end === -1 ||\n    // We saw a non-dot character immediately before the dot\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly '..'\n    preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n      if (end !== -1) {\n        if (startPart === 0 && isAbsolute) ret.base = ret.name = path.slice(1, end);else ret.base = ret.name = path.slice(startPart, end);\n      }\n    } else {\n      if (startPart === 0 && isAbsolute) {\n        ret.name = path.slice(1, startDot);\n        ret.base = path.slice(1, end);\n      } else {\n        ret.name = path.slice(startPart, startDot);\n        ret.base = path.slice(startPart, end);\n      }\n      ret.ext = path.slice(startDot, end);\n    }\n\n    if (startPart > 0) ret.dir = path.slice(0, startPart - 1);else if (isAbsolute) ret.dir = '/';\n\n    return ret;\n  },\n\n  sep: '/',\n  delimiter: ':',\n  win32: null,\n  posix: null\n};\n\nposix.posix = posix;\n\nmodule.exports = posix;\n","module.exports = function () {\n    // see https://code.google.com/p/v8/wiki/JavaScriptStackTraceApi\n    var origPrepareStackTrace = Error.prepareStackTrace;\n    Error.prepareStackTrace = function (_, stack) { return stack; };\n    var stack = (new Error()).stack;\n    Error.prepareStackTrace = origPrepareStackTrace;\n    return stack[2].getFileName();\n};\n","var path = require('path');\nvar parse = path.parse || require('path-parse'); // eslint-disable-line global-require\n\nvar getNodeModulesDirs = function getNodeModulesDirs(absoluteStart, modules) {\n    var prefix = '/';\n    if ((/^([A-Za-z]:)/).test(absoluteStart)) {\n        prefix = '';\n    } else if ((/^\\\\\\\\/).test(absoluteStart)) {\n        prefix = '\\\\\\\\';\n    }\n\n    var paths = [absoluteStart];\n    var parsed = parse(absoluteStart);\n    while (parsed.dir !== paths[paths.length - 1]) {\n        paths.push(parsed.dir);\n        parsed = parse(parsed.dir);\n    }\n\n    return paths.reduce(function (dirs, aPath) {\n        return dirs.concat(modules.map(function (moduleDir) {\n            return path.resolve(prefix, aPath, moduleDir);\n        }));\n    }, []);\n};\n\nmodule.exports = function nodeModulesPaths(start, opts, request) {\n    var modules = opts && opts.moduleDirectory\n        ? [].concat(opts.moduleDirectory)\n        : ['node_modules'];\n\n    if (opts && typeof opts.paths === 'function') {\n        return opts.paths(\n            request,\n            start,\n            function () { return getNodeModulesDirs(start, modules); },\n            opts\n        );\n    }\n\n    var dirs = getNodeModulesDirs(start, modules);\n    return opts && opts.paths ? dirs.concat(opts.paths) : dirs;\n};\n","'use strict';\n\nvar isWindows = process.platform === 'win32';\n\n// Regex to split a windows path into into [dir, root, basename, name, ext]\nvar splitWindowsRe =\n    /^(((?:[a-zA-Z]:|[\\\\\\/]{2}[^\\\\\\/]+[\\\\\\/]+[^\\\\\\/]+)?[\\\\\\/]?)(?:[^\\\\\\/]*[\\\\\\/])*)((\\.{1,2}|[^\\\\\\/]+?|)(\\.[^.\\/\\\\]*|))[\\\\\\/]*$/;\n\nvar win32 = {};\n\nfunction win32SplitPath(filename) {\n  return splitWindowsRe.exec(filename).slice(1);\n}\n\nwin32.parse = function(pathString) {\n  if (typeof pathString !== 'string') {\n    throw new TypeError(\n        \"Parameter 'pathString' must be a string, not \" + typeof pathString\n    );\n  }\n  var allParts = win32SplitPath(pathString);\n  if (!allParts || allParts.length !== 5) {\n    throw new TypeError(\"Invalid path '\" + pathString + \"'\");\n  }\n  return {\n    root: allParts[1],\n    dir: allParts[0] === allParts[1] ? allParts[0] : allParts[0].slice(0, -1),\n    base: allParts[2],\n    ext: allParts[4],\n    name: allParts[3]\n  };\n};\n\n\n\n// Split a filename into [dir, root, basename, name, ext], unix version\n// 'root' is just a slash, or nothing.\nvar splitPathRe =\n    /^((\\/?)(?:[^\\/]*\\/)*)((\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))[\\/]*$/;\nvar posix = {};\n\n\nfunction posixSplitPath(filename) {\n  return splitPathRe.exec(filename).slice(1);\n}\n\n\nposix.parse = function(pathString) {\n  if (typeof pathString !== 'string') {\n    throw new TypeError(\n        \"Parameter 'pathString' must be a string, not \" + typeof pathString\n    );\n  }\n  var allParts = posixSplitPath(pathString);\n  if (!allParts || allParts.length !== 5) {\n    throw new TypeError(\"Invalid path '\" + pathString + \"'\");\n  }\n  \n  return {\n    root: allParts[1],\n    dir: allParts[0].slice(0, -1),\n    base: allParts[2],\n    ext: allParts[4],\n    name: allParts[3],\n  };\n};\n\n\nif (isWindows)\n  module.exports = win32.parse;\nelse /* posix */\n  module.exports = posix.parse;\n\nmodule.exports.posix = posix.parse;\nmodule.exports.win32 = win32.parse;\n","module.exports = function (x, opts) {\n    /**\n     * This file is purposefully a passthrough. It's expected that third-party\n     * environments will override it at runtime in order to inject special logic\n     * into `resolve` (by manipulating the options). One such example is the PnP\n     * code path in Yarn.\n     */\n\n    return opts || {};\n};\n","'use strict';\n\nvar has = require('has');\n\nfunction specifierIncluded(current, specifier) {\n\tvar nodeParts = current.split('.');\n\tvar parts = specifier.split(' ');\n\tvar op = parts.length > 1 ? parts[0] : '=';\n\tvar versionParts = (parts.length > 1 ? parts[1] : parts[0]).split('.');\n\n\tfor (var i = 0; i < 3; ++i) {\n\t\tvar cur = parseInt(nodeParts[i] || 0, 10);\n\t\tvar ver = parseInt(versionParts[i] || 0, 10);\n\t\tif (cur === ver) {\n\t\t\tcontinue; // eslint-disable-line no-restricted-syntax, no-continue\n\t\t}\n\t\tif (op === '<') {\n\t\t\treturn cur < ver;\n\t\t}\n\t\tif (op === '>=') {\n\t\t\treturn cur >= ver;\n\t\t}\n\t\treturn false;\n\t}\n\treturn op === '>=';\n}\n\nfunction matchesRange(current, range) {\n\tvar specifiers = range.split(/ ?&& ?/);\n\tif (specifiers.length === 0) {\n\t\treturn false;\n\t}\n\tfor (var i = 0; i < specifiers.length; ++i) {\n\t\tif (!specifierIncluded(current, specifiers[i])) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\nfunction versionIncluded(nodeVersion, specifierValue) {\n\tif (typeof specifierValue === 'boolean') {\n\t\treturn specifierValue;\n\t}\n\n\tvar current = typeof nodeVersion === 'undefined'\n\t\t? process.versions && process.versions.node\n\t\t: nodeVersion;\n\n\tif (typeof current !== 'string') {\n\t\tthrow new TypeError(typeof nodeVersion === 'undefined' ? 'Unable to determine current node version' : 'If provided, a valid node version is required');\n\t}\n\n\tif (specifierValue && typeof specifierValue === 'object') {\n\t\tfor (var i = 0; i < specifierValue.length; ++i) {\n\t\t\tif (matchesRange(current, specifierValue[i])) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\treturn matchesRange(current, specifierValue);\n}\n\nvar data = require('./core.json');\n\nmodule.exports = function isCore(x, nodeVersion) {\n\treturn has(data, x) && versionIncluded(nodeVersion, data[x]);\n};\n","{\n\t\"assert\": true,\n\t\"node:assert\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"assert/strict\": \">= 15\",\n\t\"node:assert/strict\": \">= 16\",\n\t\"async_hooks\": \">= 8\",\n\t\"node:async_hooks\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"buffer_ieee754\": \">= 0.5 && < 0.9.7\",\n\t\"buffer\": true,\n\t\"node:buffer\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"child_process\": true,\n\t\"node:child_process\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"cluster\": \">= 0.5\",\n\t\"node:cluster\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"console\": true,\n\t\"node:console\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"constants\": true,\n\t\"node:constants\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"crypto\": true,\n\t\"node:crypto\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"_debug_agent\": \">= 1 && < 8\",\n\t\"_debugger\": \"< 8\",\n\t\"dgram\": true,\n\t\"node:dgram\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"diagnostics_channel\": [\">= 14.17 && < 15\", \">= 15.1\"],\n\t\"node:diagnostics_channel\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"dns\": true,\n\t\"node:dns\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"dns/promises\": \">= 15\",\n\t\"node:dns/promises\": \">= 16\",\n\t\"domain\": \">= 0.7.12\",\n\t\"node:domain\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"events\": true,\n\t\"node:events\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"freelist\": \"< 6\",\n\t\"fs\": true,\n\t\"node:fs\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"fs/promises\": [\">= 10 && < 10.1\", \">= 14\"],\n\t\"node:fs/promises\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"_http_agent\": \">= 0.11.1\",\n\t\"node:_http_agent\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"_http_client\": \">= 0.11.1\",\n\t\"node:_http_client\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"_http_common\": \">= 0.11.1\",\n\t\"node:_http_common\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"_http_incoming\": \">= 0.11.1\",\n\t\"node:_http_incoming\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"_http_outgoing\": \">= 0.11.1\",\n\t\"node:_http_outgoing\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"_http_server\": \">= 0.11.1\",\n\t\"node:_http_server\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"http\": true,\n\t\"node:http\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"http2\": \">= 8.8\",\n\t\"node:http2\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"https\": true,\n\t\"node:https\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"inspector\": \">= 8\",\n\t\"node:inspector\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"_linklist\": \"< 8\",\n\t\"module\": true,\n\t\"node:module\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"net\": true,\n\t\"node:net\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"node-inspect/lib/_inspect\": \">= 7.6 && < 12\",\n\t\"node-inspect/lib/internal/inspect_client\": \">= 7.6 && < 12\",\n\t\"node-inspect/lib/internal/inspect_repl\": \">= 7.6 && < 12\",\n\t\"os\": true,\n\t\"node:os\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"path\": true,\n\t\"node:path\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"path/posix\": \">= 15.3\",\n\t\"node:path/posix\": \">= 16\",\n\t\"path/win32\": \">= 15.3\",\n\t\"node:path/win32\": \">= 16\",\n\t\"perf_hooks\": \">= 8.5\",\n\t\"node:perf_hooks\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"process\": \">= 1\",\n\t\"node:process\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"punycode\": \">= 0.5\",\n\t\"node:punycode\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"querystring\": true,\n\t\"node:querystring\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"readline\": true,\n\t\"node:readline\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"readline/promises\": \">= 17\",\n\t\"node:readline/promises\": \">= 17\",\n\t\"repl\": true,\n\t\"node:repl\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"smalloc\": \">= 0.11.5 && < 3\",\n\t\"_stream_duplex\": \">= 0.9.4\",\n\t\"node:_stream_duplex\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"_stream_transform\": \">= 0.9.4\",\n\t\"node:_stream_transform\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"_stream_wrap\": \">= 1.4.1\",\n\t\"node:_stream_wrap\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"_stream_passthrough\": \">= 0.9.4\",\n\t\"node:_stream_passthrough\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"_stream_readable\": \">= 0.9.4\",\n\t\"node:_stream_readable\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"_stream_writable\": \">= 0.9.4\",\n\t\"node:_stream_writable\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"stream\": true,\n\t\"node:stream\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"stream/consumers\": \">= 16.7\",\n\t\"node:stream/consumers\": \">= 16.7\",\n\t\"stream/promises\": \">= 15\",\n\t\"node:stream/promises\": \">= 16\",\n\t\"stream/web\": \">= 16.5\",\n\t\"node:stream/web\": \">= 16.5\",\n\t\"string_decoder\": true,\n\t\"node:string_decoder\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"sys\": [\">= 0.4 && < 0.7\", \">= 0.8\"],\n\t\"node:sys\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"node:test\": \">= 18\",\n\t\"timers\": true,\n\t\"node:timers\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"timers/promises\": \">= 15\",\n\t\"node:timers/promises\": \">= 16\",\n\t\"_tls_common\": \">= 0.11.13\",\n\t\"node:_tls_common\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"_tls_legacy\": \">= 0.11.3 && < 10\",\n\t\"_tls_wrap\": \">= 0.11.3\",\n\t\"node:_tls_wrap\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"tls\": true,\n\t\"node:tls\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"trace_events\": \">= 10\",\n\t\"node:trace_events\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"tty\": true,\n\t\"node:tty\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"url\": true,\n\t\"node:url\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"util\": true,\n\t\"node:util\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"util/types\": \">= 15.3\",\n\t\"node:util/types\": \">= 16\",\n\t\"v8/tools/arguments\": \">= 10 && < 12\",\n\t\"v8/tools/codemap\": [\">= 4.4 && < 5\", \">= 5.2 && < 12\"],\n\t\"v8/tools/consarray\": [\">= 4.4 && < 5\", \">= 5.2 && < 12\"],\n\t\"v8/tools/csvparser\": [\">= 4.4 && < 5\", \">= 5.2 && < 12\"],\n\t\"v8/tools/logreader\": [\">= 4.4 && < 5\", \">= 5.2 && < 12\"],\n\t\"v8/tools/profile_view\": [\">= 4.4 && < 5\", \">= 5.2 && < 12\"],\n\t\"v8/tools/splaytree\": [\">= 4.4 && < 5\", \">= 5.2 && < 12\"],\n\t\"v8\": \">= 1\",\n\t\"node:v8\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"vm\": true,\n\t\"node:vm\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"wasi\": \">= 13.4 && < 13.5\",\n\t\"worker_threads\": \">= 11.7\",\n\t\"node:worker_threads\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"zlib\": \">= 0.5\",\n\t\"node:zlib\": [\">= 14.18 && < 15\", \">= 16\"]\n}\n","var current = (process.versions && process.versions.node && process.versions.node.split('.')) || [];\n\nfunction specifierIncluded(specifier) {\n    var parts = specifier.split(' ');\n    var op = parts.length > 1 ? parts[0] : '=';\n    var versionParts = (parts.length > 1 ? parts[1] : parts[0]).split('.');\n\n    for (var i = 0; i < 3; ++i) {\n        var cur = parseInt(current[i] || 0, 10);\n        var ver = parseInt(versionParts[i] || 0, 10);\n        if (cur === ver) {\n            continue; // eslint-disable-line no-restricted-syntax, no-continue\n        }\n        if (op === '<') {\n            return cur < ver;\n        } else if (op === '>=') {\n            return cur >= ver;\n        }\n        return false;\n    }\n    return op === '>=';\n}\n\nfunction matchesRange(range) {\n    var specifiers = range.split(/ ?&& ?/);\n    if (specifiers.length === 0) { return false; }\n    for (var i = 0; i < specifiers.length; ++i) {\n        if (!specifierIncluded(specifiers[i])) { return false; }\n    }\n    return true;\n}\n\nfunction versionIncluded(specifierValue) {\n    if (typeof specifierValue === 'boolean') { return specifierValue; }\n    if (specifierValue && typeof specifierValue === 'object') {\n        for (var i = 0; i < specifierValue.length; ++i) {\n            if (matchesRange(specifierValue[i])) { return true; }\n        }\n        return false;\n    }\n    return matchesRange(specifierValue);\n}\n\nvar data = require('./core.json');\n\nvar core = {};\nfor (var mod in data) { // eslint-disable-line no-restricted-syntax\n    if (Object.prototype.hasOwnProperty.call(data, mod)) {\n        core[mod] = versionIncluded(data[mod]);\n    }\n}\nmodule.exports = core;\n","{\n\t\"assert\": true,\n\t\"node:assert\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"assert/strict\": \">= 15\",\n\t\"node:assert/strict\": \">= 16\",\n\t\"async_hooks\": \">= 8\",\n\t\"node:async_hooks\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"buffer_ieee754\": \">= 0.5 && < 0.9.7\",\n\t\"buffer\": true,\n\t\"node:buffer\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"child_process\": true,\n\t\"node:child_process\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"cluster\": \">= 0.5\",\n\t\"node:cluster\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"console\": true,\n\t\"node:console\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"constants\": true,\n\t\"node:constants\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"crypto\": true,\n\t\"node:crypto\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"_debug_agent\": \">= 1 && < 8\",\n\t\"_debugger\": \"< 8\",\n\t\"dgram\": true,\n\t\"node:dgram\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"diagnostics_channel\": [\">= 14.17 && < 15\", \">= 15.1\"],\n\t\"node:diagnostics_channel\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"dns\": true,\n\t\"node:dns\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"dns/promises\": \">= 15\",\n\t\"node:dns/promises\": \">= 16\",\n\t\"domain\": \">= 0.7.12\",\n\t\"node:domain\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"events\": true,\n\t\"node:events\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"freelist\": \"< 6\",\n\t\"fs\": true,\n\t\"node:fs\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"fs/promises\": [\">= 10 && < 10.1\", \">= 14\"],\n\t\"node:fs/promises\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"_http_agent\": \">= 0.11.1\",\n\t\"node:_http_agent\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"_http_client\": \">= 0.11.1\",\n\t\"node:_http_client\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"_http_common\": \">= 0.11.1\",\n\t\"node:_http_common\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"_http_incoming\": \">= 0.11.1\",\n\t\"node:_http_incoming\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"_http_outgoing\": \">= 0.11.1\",\n\t\"node:_http_outgoing\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"_http_server\": \">= 0.11.1\",\n\t\"node:_http_server\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"http\": true,\n\t\"node:http\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"http2\": \">= 8.8\",\n\t\"node:http2\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"https\": true,\n\t\"node:https\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"inspector\": \">= 8\",\n\t\"node:inspector\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"_linklist\": \"< 8\",\n\t\"module\": true,\n\t\"node:module\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"net\": true,\n\t\"node:net\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"node-inspect/lib/_inspect\": \">= 7.6 && < 12\",\n\t\"node-inspect/lib/internal/inspect_client\": \">= 7.6 && < 12\",\n\t\"node-inspect/lib/internal/inspect_repl\": \">= 7.6 && < 12\",\n\t\"os\": true,\n\t\"node:os\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"path\": true,\n\t\"node:path\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"path/posix\": \">= 15.3\",\n\t\"node:path/posix\": \">= 16\",\n\t\"path/win32\": \">= 15.3\",\n\t\"node:path/win32\": \">= 16\",\n\t\"perf_hooks\": \">= 8.5\",\n\t\"node:perf_hooks\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"process\": \">= 1\",\n\t\"node:process\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"punycode\": \">= 0.5\",\n\t\"node:punycode\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"querystring\": true,\n\t\"node:querystring\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"readline\": true,\n\t\"node:readline\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"readline/promises\": \">= 17\",\n\t\"node:readline/promises\": \">= 17\",\n\t\"repl\": true,\n\t\"node:repl\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"smalloc\": \">= 0.11.5 && < 3\",\n\t\"_stream_duplex\": \">= 0.9.4\",\n\t\"node:_stream_duplex\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"_stream_transform\": \">= 0.9.4\",\n\t\"node:_stream_transform\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"_stream_wrap\": \">= 1.4.1\",\n\t\"node:_stream_wrap\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"_stream_passthrough\": \">= 0.9.4\",\n\t\"node:_stream_passthrough\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"_stream_readable\": \">= 0.9.4\",\n\t\"node:_stream_readable\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"_stream_writable\": \">= 0.9.4\",\n\t\"node:_stream_writable\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"stream\": true,\n\t\"node:stream\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"stream/consumers\": \">= 16.7\",\n\t\"node:stream/consumers\": \">= 16.7\",\n\t\"stream/promises\": \">= 15\",\n\t\"node:stream/promises\": \">= 16\",\n\t\"stream/web\": \">= 16.5\",\n\t\"node:stream/web\": \">= 16.5\",\n\t\"string_decoder\": true,\n\t\"node:string_decoder\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"sys\": [\">= 0.4 && < 0.7\", \">= 0.8\"],\n\t\"node:sys\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"node:test\": \">= 18\",\n\t\"timers\": true,\n\t\"node:timers\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"timers/promises\": \">= 15\",\n\t\"node:timers/promises\": \">= 16\",\n\t\"_tls_common\": \">= 0.11.13\",\n\t\"node:_tls_common\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"_tls_legacy\": \">= 0.11.3 && < 10\",\n\t\"_tls_wrap\": \">= 0.11.3\",\n\t\"node:_tls_wrap\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"tls\": true,\n\t\"node:tls\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"trace_events\": \">= 10\",\n\t\"node:trace_events\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"tty\": true,\n\t\"node:tty\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"url\": true,\n\t\"node:url\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"util\": true,\n\t\"node:util\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"util/types\": \">= 15.3\",\n\t\"node:util/types\": \">= 16\",\n\t\"v8/tools/arguments\": \">= 10 && < 12\",\n\t\"v8/tools/codemap\": [\">= 4.4 && < 5\", \">= 5.2 && < 12\"],\n\t\"v8/tools/consarray\": [\">= 4.4 && < 5\", \">= 5.2 && < 12\"],\n\t\"v8/tools/csvparser\": [\">= 4.4 && < 5\", \">= 5.2 && < 12\"],\n\t\"v8/tools/logreader\": [\">= 4.4 && < 5\", \">= 5.2 && < 12\"],\n\t\"v8/tools/profile_view\": [\">= 4.4 && < 5\", \">= 5.2 && < 12\"],\n\t\"v8/tools/splaytree\": [\">= 4.4 && < 5\", \">= 5.2 && < 12\"],\n\t\"v8\": \">= 1\",\n\t\"node:v8\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"vm\": true,\n\t\"node:vm\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"wasi\": \">= 13.4 && < 13.5\",\n\t\"worker_threads\": \">= 11.7\",\n\t\"node:worker_threads\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"zlib\": \">= 0.5\",\n\t\"node:zlib\": [\">= 14.18 && < 15\", \">= 16\"]\n}\n","var isCoreModule = require('is-core-module');\n\nmodule.exports = function isCore(x) {\n    return isCoreModule(x);\n};\n","var isCore = require('is-core-module');\nvar fs = require('fs');\nvar path = require('path');\nvar getHomedir = require('./homedir');\nvar caller = require('./caller');\nvar nodeModulesPaths = require('./node-modules-paths');\nvar normalizeOptions = require('./normalize-options');\n\nvar realpathFS = process.platform !== 'win32' && fs.realpathSync && typeof fs.realpathSync.native === 'function' ? fs.realpathSync.native : fs.realpathSync;\n\nvar homedir = getHomedir();\nvar defaultPaths = function () {\n    return [\n        path.join(homedir, '.node_modules'),\n        path.join(homedir, '.node_libraries')\n    ];\n};\n\nvar defaultIsFile = function isFile(file) {\n    try {\n        var stat = fs.statSync(file, { throwIfNoEntry: false });\n    } catch (e) {\n        if (e && (e.code === 'ENOENT' || e.code === 'ENOTDIR')) return false;\n        throw e;\n    }\n    return !!stat && (stat.isFile() || stat.isFIFO());\n};\n\nvar defaultIsDir = function isDirectory(dir) {\n    try {\n        var stat = fs.statSync(dir, { throwIfNoEntry: false });\n    } catch (e) {\n        if (e && (e.code === 'ENOENT' || e.code === 'ENOTDIR')) return false;\n        throw e;\n    }\n    return !!stat && stat.isDirectory();\n};\n\nvar defaultRealpathSync = function realpathSync(x) {\n    try {\n        return realpathFS(x);\n    } catch (realpathErr) {\n        if (realpathErr.code !== 'ENOENT') {\n            throw realpathErr;\n        }\n    }\n    return x;\n};\n\nvar maybeRealpathSync = function maybeRealpathSync(realpathSync, x, opts) {\n    if (opts && opts.preserveSymlinks === false) {\n        return realpathSync(x);\n    }\n    return x;\n};\n\nvar defaultReadPackageSync = function defaultReadPackageSync(readFileSync, pkgfile) {\n    var body = readFileSync(pkgfile);\n    try {\n        var pkg = JSON.parse(body);\n        return pkg;\n    } catch (jsonErr) {}\n};\n\nvar getPackageCandidates = function getPackageCandidates(x, start, opts) {\n    var dirs = nodeModulesPaths(start, opts, x);\n    for (var i = 0; i < dirs.length; i++) {\n        dirs[i] = path.join(dirs[i], x);\n    }\n    return dirs;\n};\n\nmodule.exports = function resolveSync(x, options) {\n    if (typeof x !== 'string') {\n        throw new TypeError('Path must be a string.');\n    }\n    var opts = normalizeOptions(x, options);\n\n    var isFile = opts.isFile || defaultIsFile;\n    var readFileSync = opts.readFileSync || fs.readFileSync;\n    var isDirectory = opts.isDirectory || defaultIsDir;\n    var realpathSync = opts.realpathSync || defaultRealpathSync;\n    var readPackageSync = opts.readPackageSync || defaultReadPackageSync;\n    if (opts.readFileSync && opts.readPackageSync) {\n        throw new TypeError('`readFileSync` and `readPackageSync` are mutually exclusive.');\n    }\n    var packageIterator = opts.packageIterator;\n\n    var extensions = opts.extensions || ['.js'];\n    var includeCoreModules = opts.includeCoreModules !== false;\n    var basedir = opts.basedir || path.dirname(caller());\n    var parent = opts.filename || basedir;\n\n    opts.paths = opts.paths || defaultPaths();\n\n    // ensure that `basedir` is an absolute path at this point, resolving against the process' current working directory\n    var absoluteStart = maybeRealpathSync(realpathSync, path.resolve(basedir), opts);\n\n    if ((/^(?:\\.\\.?(?:\\/|$)|\\/|([A-Za-z]:)?[/\\\\])/).test(x)) {\n        var res = path.resolve(absoluteStart, x);\n        if (x === '.' || x === '..' || x.slice(-1) === '/') res += '/';\n        var m = loadAsFileSync(res) || loadAsDirectorySync(res);\n        if (m) return maybeRealpathSync(realpathSync, m, opts);\n    } else if (includeCoreModules && isCore(x)) {\n        return x;\n    } else {\n        var n = loadNodeModulesSync(x, absoluteStart);\n        if (n) return maybeRealpathSync(realpathSync, n, opts);\n    }\n\n    var err = new Error(\"Cannot find module '\" + x + \"' from '\" + parent + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n\n    function loadAsFileSync(x) {\n        var pkg = loadpkg(path.dirname(x));\n\n        if (pkg && pkg.dir && pkg.pkg && opts.pathFilter) {\n            var rfile = path.relative(pkg.dir, x);\n            var r = opts.pathFilter(pkg.pkg, x, rfile);\n            if (r) {\n                x = path.resolve(pkg.dir, r); // eslint-disable-line no-param-reassign\n            }\n        }\n\n        if (isFile(x)) {\n            return x;\n        }\n\n        for (var i = 0; i < extensions.length; i++) {\n            var file = x + extensions[i];\n            if (isFile(file)) {\n                return file;\n            }\n        }\n    }\n\n    function loadpkg(dir) {\n        if (dir === '' || dir === '/') return;\n        if (process.platform === 'win32' && (/^\\w:[/\\\\]*$/).test(dir)) {\n            return;\n        }\n        if ((/[/\\\\]node_modules[/\\\\]*$/).test(dir)) return;\n\n        var pkgfile = path.join(maybeRealpathSync(realpathSync, dir, opts), 'package.json');\n\n        if (!isFile(pkgfile)) {\n            return loadpkg(path.dirname(dir));\n        }\n\n        var pkg = readPackageSync(readFileSync, pkgfile);\n\n        if (pkg && opts.packageFilter) {\n            // v2 will pass pkgfile\n            pkg = opts.packageFilter(pkg, /*pkgfile,*/ dir); // eslint-disable-line spaced-comment\n        }\n\n        return { pkg: pkg, dir: dir };\n    }\n\n    function loadAsDirectorySync(x) {\n        var pkgfile = path.join(maybeRealpathSync(realpathSync, x, opts), '/package.json');\n        if (isFile(pkgfile)) {\n            try {\n                var pkg = readPackageSync(readFileSync, pkgfile);\n            } catch (e) {}\n\n            if (pkg && opts.packageFilter) {\n                // v2 will pass pkgfile\n                pkg = opts.packageFilter(pkg, /*pkgfile,*/ x); // eslint-disable-line spaced-comment\n            }\n\n            if (pkg && pkg.main) {\n                if (typeof pkg.main !== 'string') {\n                    var mainError = new TypeError('package “' + pkg.name + '” `main` must be a string');\n                    mainError.code = 'INVALID_PACKAGE_MAIN';\n                    throw mainError;\n                }\n                if (pkg.main === '.' || pkg.main === './') {\n                    pkg.main = 'index';\n                }\n                try {\n                    var m = loadAsFileSync(path.resolve(x, pkg.main));\n                    if (m) return m;\n                    var n = loadAsDirectorySync(path.resolve(x, pkg.main));\n                    if (n) return n;\n                } catch (e) {}\n            }\n        }\n\n        return loadAsFileSync(path.join(x, '/index'));\n    }\n\n    function loadNodeModulesSync(x, start) {\n        var thunk = function () { return getPackageCandidates(x, start, opts); };\n        var dirs = packageIterator ? packageIterator(x, start, thunk, opts) : thunk();\n\n        for (var i = 0; i < dirs.length; i++) {\n            var dir = dirs[i];\n            if (isDirectory(path.dirname(dir))) {\n                var m = loadAsFileSync(dir);\n                if (m) return m;\n                var n = loadAsDirectorySync(dir);\n                if (n) return n;\n            }\n        }\n    }\n};\n","'use strict';\n\nvar dirname = require('path').dirname;\nvar constantinople = require('constantinople');\nvar walk = require('pug-walk');\nvar error = require('pug-error');\nvar runFilter = require('./run-filter');\n\nmodule.exports = handleFilters;\nfunction handleFilters(ast, filters, options, filterAliases) {\n  options = options || {};\n  walk(\n    ast,\n    function(node) {\n      var dir = node.filename ? dirname(node.filename) : null;\n      if (node.type === 'Filter') {\n        handleNestedFilters(node, filters, options, filterAliases);\n        var text = getBodyAsText(node);\n        var attrs = getAttributes(node, options);\n        attrs.filename = node.filename;\n        node.type = 'Text';\n        node.val = filterWithFallback(node, text, attrs);\n      } else if (node.type === 'RawInclude' && node.filters.length) {\n        var firstFilter = node.filters.pop();\n        var attrs = getAttributes(firstFilter, options);\n        var filename = (attrs.filename = node.file.fullPath);\n        node.type = 'Text';\n        node.val = filterFileWithFallback(\n          firstFilter,\n          filename,\n          node.file,\n          attrs\n        );\n        node.filters\n          .slice()\n          .reverse()\n          .forEach(function(filter) {\n            var attrs = getAttributes(filter, options);\n            attrs.filename = filename;\n            node.val = filterWithFallback(filter, node.val, attrs);\n          });\n        node.filters = undefined;\n        node.file = undefined;\n      }\n\n      function filterWithFallback(filter, text, attrs, funcName) {\n        try {\n          var filterName = getFilterName(filter);\n          if (filters && filters[filterName]) {\n            return filters[filterName](text, attrs);\n          } else {\n            return runFilter(filterName, text, attrs, dir, funcName);\n          }\n        } catch (ex) {\n          if (ex.code === 'UNKNOWN_FILTER') {\n            throw error(ex.code, ex.message, filter);\n          }\n          throw ex;\n        }\n      }\n\n      function filterFileWithFallback(filter, filename, file, attrs) {\n        var filterName = getFilterName(filter);\n        if (filters && filters[filterName]) {\n          if (filters[filterName].renderBuffer) {\n            return filters[filterName].renderBuffer(file.raw, attrs);\n          } else {\n            return filters[filterName](file.str, attrs);\n          }\n        } else {\n          return filterWithFallback(filter, filename, attrs, 'renderFile');\n        }\n      }\n    },\n    {includeDependencies: true}\n  );\n  function getFilterName(filter) {\n    var filterName = filter.name;\n    if (filterAliases && filterAliases[filterName]) {\n      filterName = filterAliases[filterName];\n      if (filterAliases[filterName]) {\n        throw error(\n          'FILTER_ALISE_CHAIN',\n          'The filter \"' +\n            filter.name +\n            '\" is an alias for \"' +\n            filterName +\n            '\", which is an alias for \"' +\n            filterAliases[filterName] +\n            '\".  Pug does not support chains of filter aliases.',\n          filter\n        );\n      }\n    }\n    return filterName;\n  }\n  return ast;\n}\n\nfunction handleNestedFilters(node, filters, options, filterAliases) {\n  if (node.block.nodes[0] && node.block.nodes[0].type === 'Filter') {\n    node.block.nodes[0] = handleFilters(\n      node.block,\n      filters,\n      options,\n      filterAliases\n    ).nodes[0];\n  }\n}\n\nfunction getBodyAsText(node) {\n  return node.block.nodes\n    .map(function(node) {\n      return node.val;\n    })\n    .join('');\n}\n\nfunction getAttributes(node, options) {\n  var attrs = {};\n  node.attrs.forEach(function(attr) {\n    try {\n      attrs[attr.name] =\n        attr.val === true ? true : constantinople.toConstant(attr.val);\n    } catch (ex) {\n      if (/not constant/.test(ex.message)) {\n        throw error(\n          'FILTER_OPTION_NOT_CONSTANT',\n          ex.message +\n            ' All filters are rendered compile-time so filter options must be constants.',\n          node\n        );\n      }\n      throw ex;\n    }\n  });\n  var opts = options[node.name] || {};\n  Object.keys(opts).forEach(function(opt) {\n    if (!attrs.hasOwnProperty(opt)) {\n      attrs[opt] = opts[opt];\n    }\n  });\n  return attrs;\n}\n","\"use strict\";\nexports.__esModule = true;\nvar parser_1 = require(\"@babel/parser\");\nvar b = require(\"@babel/types\");\nvar binaryOperation_1 = require(\"./binaryOperation\");\nfunction expressionToConstant(expression, options) {\n    if (options === void 0) { options = {}; }\n    var constant = true;\n    function toConstant(expression) {\n        if (!constant)\n            return;\n        if (b.isArrayExpression(expression)) {\n            var result_1 = [];\n            for (var i = 0; constant && i < expression.elements.length; i++) {\n                var element = expression.elements[i];\n                if (b.isSpreadElement(element)) {\n                    var spread = toConstant(element.argument);\n                    if (!(isSpreadable(spread) && constant)) {\n                        constant = false;\n                    }\n                    else {\n                        result_1.push.apply(result_1, spread);\n                    }\n                }\n                else if (b.isExpression(element)) {\n                    result_1.push(toConstant(element));\n                }\n                else {\n                    constant = false;\n                }\n            }\n            return result_1;\n        }\n        if (b.isBinaryExpression(expression)) {\n            var left = toConstant(expression.left);\n            var right = toConstant(expression.right);\n            return constant && binaryOperation_1[\"default\"](expression.operator, left, right);\n        }\n        if (b.isBooleanLiteral(expression)) {\n            return expression.value;\n        }\n        if (b.isCallExpression(expression)) {\n            var args = [];\n            for (var i = 0; constant && i < expression.arguments.length; i++) {\n                var arg = expression.arguments[i];\n                if (b.isSpreadElement(arg)) {\n                    var spread = toConstant(arg.argument);\n                    if (!(isSpreadable(spread) && constant)) {\n                        constant = false;\n                    }\n                    else {\n                        args.push.apply(args, spread);\n                    }\n                }\n                else if (b.isExpression(arg)) {\n                    args.push(toConstant(arg));\n                }\n                else {\n                    constant = false;\n                }\n            }\n            if (!constant)\n                return;\n            if (b.isMemberExpression(expression.callee)) {\n                var object = toConstant(expression.callee.object);\n                if (!object || !constant) {\n                    constant = false;\n                    return;\n                }\n                var member = expression.callee.computed\n                    ? toConstant(expression.callee.property)\n                    : b.isIdentifier(expression.callee.property)\n                        ? expression.callee.property.name\n                        : undefined;\n                if (member === undefined && !expression.callee.computed) {\n                    constant = false;\n                }\n                if (!constant)\n                    return;\n                if (canCallMethod(object, '' + member)) {\n                    return object[member].apply(object, args);\n                }\n            }\n            else {\n                if (!b.isExpression(expression.callee)) {\n                    constant = false;\n                    return;\n                }\n                var callee = toConstant(expression.callee);\n                if (!constant)\n                    return;\n                return callee.apply(null, args);\n            }\n        }\n        if (b.isConditionalExpression(expression)) {\n            var test = toConstant(expression.test);\n            return test\n                ? toConstant(expression.consequent)\n                : toConstant(expression.alternate);\n        }\n        if (b.isIdentifier(expression)) {\n            if (options.constants &&\n                {}.hasOwnProperty.call(options.constants, expression.name)) {\n                return options.constants[expression.name];\n            }\n        }\n        if (b.isLogicalExpression(expression)) {\n            var left = toConstant(expression.left);\n            var right = toConstant(expression.right);\n            if (constant && expression.operator === '&&') {\n                return left && right;\n            }\n            if (constant && expression.operator === '||') {\n                return left || right;\n            }\n        }\n        if (b.isMemberExpression(expression)) {\n            var object = toConstant(expression.object);\n            if (!object || !constant) {\n                constant = false;\n                return;\n            }\n            var member = expression.computed\n                ? toConstant(expression.property)\n                : b.isIdentifier(expression.property)\n                    ? expression.property.name\n                    : undefined;\n            if (member === undefined && !expression.computed) {\n                constant = false;\n            }\n            if (!constant)\n                return;\n            if ({}.hasOwnProperty.call(object, '' + member) && member[0] !== '_') {\n                return object[member];\n            }\n        }\n        if (b.isNullLiteral(expression)) {\n            return null;\n        }\n        if (b.isNumericLiteral(expression)) {\n            return expression.value;\n        }\n        if (b.isObjectExpression(expression)) {\n            var result_2 = {};\n            for (var i = 0; constant && i < expression.properties.length; i++) {\n                var property = expression.properties[i];\n                if (b.isObjectProperty(property)) {\n                    if (property.shorthand) {\n                        constant = false;\n                        return;\n                    }\n                    var key = property.computed\n                        ? toConstant(property.key)\n                        : b.isIdentifier(property.key)\n                            ? property.key.name\n                            : b.isStringLiteral(property.key)\n                                ? property.key.value\n                                : undefined;\n                    if (!key || key[0] === '_') {\n                        constant = false;\n                    }\n                    if (!constant)\n                        return;\n                    if (b.isExpression(property.value)) {\n                        var value = toConstant(property.value);\n                        if (!constant)\n                            return;\n                        result_2[key] = value;\n                    }\n                    else {\n                        constant = false;\n                    }\n                }\n                else if (b.isObjectMethod(property)) {\n                    constant = false;\n                }\n                else if (b.isSpreadProperty(property)) {\n                    var argument = toConstant(property.argument);\n                    if (!argument)\n                        constant = false;\n                    if (!constant)\n                        return;\n                    Object.assign(result_2, argument);\n                }\n            }\n            return result_2;\n        }\n        if (b.isParenthesizedExpression(expression)) {\n            return toConstant(expression.expression);\n        }\n        if (b.isRegExpLiteral(expression)) {\n            return new RegExp(expression.pattern, expression.flags);\n        }\n        if (b.isSequenceExpression(expression)) {\n            for (var i = 0; i < expression.expressions.length - 1 && constant; i++) {\n                toConstant(expression.expressions[i]);\n            }\n            return toConstant(expression.expressions[expression.expressions.length - 1]);\n        }\n        if (b.isStringLiteral(expression)) {\n            return expression.value;\n        }\n        // TODO: TaggedTemplateExpression\n        if (b.isTemplateLiteral(expression)) {\n            var result_3 = '';\n            for (var i = 0; i < expression.quasis.length; i++) {\n                var quasi = expression.quasis[i];\n                result_3 += quasi.value.cooked;\n                if (i < expression.expressions.length) {\n                    result_3 += '' + toConstant(expression.expressions[i]);\n                }\n            }\n            return result_3;\n        }\n        if (b.isUnaryExpression(expression)) {\n            var argument = toConstant(expression.argument);\n            if (!constant) {\n                return;\n            }\n            switch (expression.operator) {\n                case '-':\n                    return -argument;\n                case '+':\n                    return +argument;\n                case '!':\n                    return !argument;\n                case '~':\n                    return ~argument;\n                case 'typeof':\n                    return typeof argument;\n                case 'void':\n                    return void argument;\n            }\n        }\n        constant = false;\n    }\n    var result = toConstant(expression);\n    return constant ? { constant: true, result: result } : { constant: false };\n}\nexports.expressionToConstant = expressionToConstant;\nfunction isSpreadable(value) {\n    return (typeof value === 'string' ||\n        Array.isArray(value) ||\n        (typeof Set !== 'undefined' && value instanceof Set) ||\n        (typeof Map !== 'undefined' && value instanceof Map));\n}\nfunction shallowEqual(a, b) {\n    if (a === b)\n        return true;\n    if (a && b && typeof a === 'object' && typeof b === 'object') {\n        for (var key in a) {\n            if (a[key] !== b[key]) {\n                return false;\n            }\n        }\n        for (var key in b) {\n            if (a[key] !== b[key]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    return false;\n}\nfunction canCallMethod(object, member) {\n    switch (typeof object) {\n        case 'boolean':\n            switch (member) {\n                case 'toString':\n                    return true;\n                default:\n                    return false;\n            }\n        case 'number':\n            switch (member) {\n                case 'toExponential':\n                case 'toFixed':\n                case 'toPrecision':\n                case 'toString':\n                    return true;\n                default:\n                    return false;\n            }\n        case 'string':\n            switch (member) {\n                case 'charAt':\n                case 'charCodeAt':\n                case 'codePointAt':\n                case 'concat':\n                case 'endsWith':\n                case 'includes':\n                case 'indexOf':\n                case 'lastIndexOf':\n                case 'match':\n                case 'normalize':\n                case 'padEnd':\n                case 'padStart':\n                case 'repeat':\n                case 'replace':\n                case 'search':\n                case 'slice':\n                case 'split':\n                case 'startsWith':\n                case 'substr':\n                case 'substring':\n                case 'toLowerCase':\n                case 'toUpperCase':\n                case 'trim':\n                    return true;\n                default:\n                    return false;\n            }\n        default:\n            if (object instanceof RegExp) {\n                switch (member) {\n                    case 'test':\n                    case 'exec':\n                        return true;\n                    default:\n                        return false;\n                }\n            }\n            return {}.hasOwnProperty.call(object, member) && member[0] !== '_';\n    }\n}\nvar EMPTY_OBJECT = {};\nvar lastSrc = '';\nvar lastConstants = EMPTY_OBJECT;\nvar lastOptions = EMPTY_OBJECT;\nvar lastResult = null;\nvar lastWasConstant = false;\nfunction isConstant(src, constants, options) {\n    if (constants === void 0) { constants = EMPTY_OBJECT; }\n    if (options === void 0) { options = EMPTY_OBJECT; }\n    if (lastSrc === src &&\n        shallowEqual(lastConstants, constants) &&\n        shallowEqual(lastOptions, options)) {\n        return lastWasConstant;\n    }\n    lastSrc = src;\n    lastConstants = constants;\n    var ast;\n    try {\n        ast = parser_1.parseExpression(src, options);\n    }\n    catch (ex) {\n        return (lastWasConstant = false);\n    }\n    var _a = expressionToConstant(ast, { constants: constants }), result = _a.result, constant = _a.constant;\n    lastResult = result;\n    return (lastWasConstant = constant);\n}\nexports.isConstant = isConstant;\nfunction toConstant(src, constants, options) {\n    if (constants === void 0) { constants = EMPTY_OBJECT; }\n    if (options === void 0) { options = EMPTY_OBJECT; }\n    if (!isConstant(src, constants, options)) {\n        throw new Error(JSON.stringify(src) + ' is not constant.');\n    }\n    return lastResult;\n}\nexports.toConstant = toConstant;\nexports[\"default\"] = isConstant;\nmodule.exports = isConstant;\nmodule.exports[\"default\"] = isConstant;\nmodule.exports.expressionToConstant = expressionToConstant;\nmodule.exports.isConstant = isConstant;\nmodule.exports.toConstant = toConstant;\n","// @flow\n\nexport type Pos = {\n  start: number,\n};\n\n// These are used when `options.locations` is on, for the\n// `startLoc` and `endLoc` properties.\n\nexport class Position {\n  line: number;\n  column: number;\n  index: number;\n\n  constructor(line: number, col: number, index: number) {\n    this.line = line;\n    this.column = col;\n    this.index = index;\n  }\n}\n\nexport class SourceLocation {\n  start: Position;\n  end: Position;\n  filename: string;\n  identifierName: ?string;\n\n  constructor(start: Position, end?: Position) {\n    this.start = start;\n    // $FlowIgnore (may start as null, but initialized later)\n    this.end = end;\n  }\n}\n\n/**\n * creates a new position with a non-zero column offset from the given position.\n * This function should be only be used when we create AST node out of the token\n * boundaries, such as TemplateElement ends before tt.templateNonTail. This\n * function does not skip whitespaces.\n *\n * @export\n * @param {Position} position\n * @param {number} columnOffset\n * @returns {Position}\n */\nexport function createPositionWithColumnOffset(\n  position: Position,\n  columnOffset: number,\n) {\n  const { line, column, index } = position;\n  return new Position(line, column + columnOffset, index + columnOffset);\n}\n","// @flow\n\nexport const ParseErrorCodes = Object.freeze({\n  SyntaxError: \"BABEL_PARSER_SYNTAX_ERROR\",\n  SourceTypeModuleError: \"BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED\",\n});\n\nexport type ParseErrorCode = $Values<typeof ParseErrorCodes>;\n\nexport type SyntaxPlugin =\n  | \"flow\"\n  | \"typescript\"\n  | \"jsx\"\n  | \"pipelineOperator\"\n  | \"placeholders\";\n\nexport type ToMessage<ErrorDetails> = (self: ErrorDetails) => string;\n\nexport type ParseErrorCredentials<ErrorDetails> = {\n  code: ParseErrorCode,\n  reasonCode: string,\n  syntaxPlugin?: SyntaxPlugin,\n\n  toMessage: ToMessage<ErrorDetails>,\n};\n\nconst reflect = (keys: string[], last = keys.length - 1) => ({\n  get() {\n    return keys.reduce((object, key) => object[key], this);\n  },\n  set(value) {\n    keys.reduce(\n      (item, key, i) => (i === last ? (item[key] = value) : item[key]),\n      this,\n    );\n  },\n});\n\nconst instantiate = <T>(\n  constructor: () => any,\n  properties: Object,\n  descriptors: Object,\n) =>\n  Object.keys(descriptors)\n    .map(key => [key, descriptors[key]])\n    .filter(([, descriptor]) => !!descriptor)\n    .map(([key, descriptor]) => [\n      key,\n      typeof descriptor === \"function\"\n        ? { value: descriptor, enumerable: false }\n        : typeof descriptor.reflect === \"string\"\n        ? { ...descriptor, ...reflect(descriptor.reflect.split(\".\")) }\n        : descriptor,\n    ])\n    .reduce(\n      (instance, [key, descriptor]) =>\n        Object.defineProperty(instance, key, {\n          configurable: true,\n          ...descriptor,\n        }),\n      Object.assign((new constructor(): T), properties),\n    );\n\nexport { instantiate };\n","const NodeDescriptions = {\n  ArrayPattern: \"array destructuring pattern\",\n  AssignmentExpression: \"assignment expression\",\n  AssignmentPattern: \"assignment expression\",\n  ArrowFunctionExpression: \"arrow function expression\",\n  ConditionalExpression: \"conditional expression\",\n  ForOfStatement: \"for-of statement\",\n  ForInStatement: \"for-in statement\",\n  ForStatement: \"for-loop\",\n  FormalParameters: \"function parameter list\",\n  Identifier: \"identifier\",\n  ObjectPattern: \"object destructuring pattern\",\n  ParenthesizedExpression: \"parenthesized expression\",\n  RestElement: \"rest element\",\n  UpdateExpression: {\n    true: \"prefix operation\",\n    false: \"postfix operation\",\n  },\n  VariableDeclarator: \"variable declaration\",\n  YieldExpression: \"yield expression\",\n};\n\ntype NodeTypesWithDescriptions = $Keys<\n  $Diff<typeof NodeDescriptions, { UpdateExpression: any }>,\n>;\ntype NodeWithDescription =\n  | { type: \"UpdateExpression\", prefix: boolean }\n  | { type: NodeTypesWithDescriptions };\n\n// eslint-disable-next-line no-confusing-arrow\nconst toNodeDescription = ({ type, prefix }: NodeWithDescription) =>\n  type === \"UpdateExpression\"\n    ? NodeDescriptions.UpdateExpression[String(prefix)]\n    : NodeDescriptions[type];\n\nexport default toNodeDescription;\n","// @flow\n\nimport { toParseErrorCredentials } from \"../parse-error\";\nimport toNodeDescription from \"./to-node-description\";\n\nexport const UnparenthesizedPipeBodyDescriptions = new Set<string>([\n  \"ArrowFunctionExpression\",\n  \"AssignmentExpression\",\n  \"ConditionalExpression\",\n  \"YieldExpression\",\n]);\n\nexport default (_: typeof toParseErrorCredentials) => ({\n  // This error is only used by the smart-mix proposal\n  PipeBodyIsTighter: _(\n    \"Unexpected yield after pipeline body; any yield expression acting as Hack-style pipe body must be parenthesized due to its loose operator precedence.\",\n  ),\n  PipeTopicRequiresHackPipes: _(\n    'Topic reference is used, but the pipelineOperator plugin was not passed a \"proposal\": \"hack\" or \"smart\" option.',\n  ),\n  PipeTopicUnbound: _(\n    \"Topic reference is unbound; it must be inside a pipe body.\",\n  ),\n  PipeTopicUnconfiguredToken: _<{| token: string |}>(\n    ({ token }) =>\n      `Invalid topic token ${token}. In order to use ${token} as a topic reference, the pipelineOperator plugin must be configured with { \"proposal\": \"hack\", \"topicToken\": \"${token}\" }.`,\n  ),\n  PipeTopicUnused: _(\n    \"Hack-style pipe body does not contain a topic reference; Hack-style pipes must use topic at least once.\",\n  ),\n  PipeUnparenthesizedBody: _<{| type: string |}>(\n    ({ type }) =>\n      `Hack-style pipe body cannot be an unparenthesized ${toNodeDescription({\n        type,\n      })}; please wrap it in parentheses.`,\n  ),\n\n  // Messages whose codes start with “Pipeline” or “PrimaryTopic”\n  // are retained for backwards compatibility\n  // with the deprecated smart-mix pipe operator proposal plugin.\n  // They are subject to removal in a future major version.\n  PipelineBodyNoArrow: _(\n    'Unexpected arrow \"=>\" after pipeline body; arrow function in pipeline body must be parenthesized.',\n  ),\n  PipelineBodySequenceExpression: _(\n    \"Pipeline body may not be a comma-separated sequence expression.\",\n  ),\n  PipelineHeadSequenceExpression: _(\n    \"Pipeline head should not be a comma-separated sequence expression.\",\n  ),\n  PipelineTopicUnused: _(\n    \"Pipeline is in topic style but does not use topic reference.\",\n  ),\n  PrimaryTopicNotAllowed: _(\n    \"Topic reference was used in a lexical context without topic binding.\",\n  ),\n  PrimaryTopicRequiresSmartPipeline: _(\n    'Topic reference is used, but the pipelineOperator plugin was not passed a \"proposal\": \"hack\" or \"smart\" option.',\n  ),\n});\n","// @flow\n\nimport { Position } from \"./util/location\";\nimport type { NodeBase } from \"./types\";\nimport {\n  instantiate,\n  type ParseErrorCode,\n  ParseErrorCodes,\n  type ParseErrorCredentials,\n} from \"./parse-error/credentials\";\n\n// Babel uses \"normal\" SyntaxErrors for it's errors, but adds some extra\n// functionality. This functionality is defined in the\n// `ParseErrorSpecification` interface below. We may choose to change to someday\n// give our errors their own full-blown class, but until then this allow us to\n// keep all the desirable properties of SyntaxErrors (like their name in stack\n// traces, etc.), and also allows us to punt on any publicly facing\n// class-hierarchy decisions until Babel 8.\ninterface ParseErrorSpecification<ErrorDetails> {\n  // Look, these *could* be readonly, but then Flow complains when we initially\n  // set them. We could do a whole dance and make a special interface that's not\n  // readonly for when we create the error, then cast it to the readonly\n  // interface for public use, but the previous implementation didn't have them\n  // as readonly, so let's just not worry about it for now.\n  code: ParseErrorCode;\n  reasonCode: string;\n  syntaxPlugin?: string;\n\n  missingPlugin?: string | string[];\n\n  loc: Position;\n  details: ErrorDetails;\n\n  // We should consider removing this as it now just contains the same\n  // information as `loc.index`.\n  // pos: number;\n}\n\nexport type ParseError<ErrorDetails> = SyntaxError &\n  ParseErrorSpecification<ErrorDetails>;\n\n// By `ParseErrorConstructor`, we mean something like the new-less style\n// `ErrorConstructor`[1], since `ParseError`'s are not themselves actually\n// separate classes from `SyntaxError`'s.\n//\n// 1. https://github.com/microsoft/TypeScript/blob/v4.5.5/lib/lib.es5.d.ts#L1027\nexport type ParseErrorConstructor<ErrorDetails> = ({\n  loc: Position,\n  details: ErrorDetails,\n}) => ParseError<ErrorDetails>;\n\nfunction toParseErrorConstructor<ErrorDetails: Object>({\n  toMessage,\n  ...properties\n}: ParseErrorCredentials<ErrorDetails>): ParseErrorConstructor<ErrorDetails> {\n  type ConstructorArgument = { loc: Position, details: ErrorDetails };\n  return function constructor({ loc, details }: ConstructorArgument) {\n    return instantiate<ParseError<ErrorDetails>>(\n      SyntaxError,\n      { ...properties, loc },\n      {\n        clone(overrides: { loc?: Position, details?: ErrorDetails } = {}) {\n          const loc = overrides.loc || {};\n          return constructor({\n            loc: new Position(\n              \"line\" in loc ? loc.line : this.loc.line,\n              \"column\" in loc ? loc.column : this.loc.column,\n              \"index\" in loc ? loc.index : this.loc.index,\n            ),\n            details: { ...this.details, ...overrides.details },\n          });\n        },\n        details: { value: details, enumerable: false },\n        message: {\n          get() {\n            return `${toMessage(this.details)} (${this.loc.line}:${\n              this.loc.column\n            })`;\n          },\n          set(value: string) {\n            Object.defineProperty(this, \"message\", { value });\n          },\n        },\n        pos: { reflect: \"loc.index\", enumerable: true },\n        missingPlugin: \"missingPlugin\" in details && {\n          reflect: \"details.missingPlugin\",\n          enumerable: true,\n        },\n      },\n    );\n  };\n}\n\n// This part is tricky. You'll probably notice from the name of this function\n// that it is supposed to return `ParseErrorCredentials`, but instead these.\n// declarations seem to instead imply that they return\n// `ParseErrorConstructor<ErrorDetails>` instead. This is because in Flow we\n// can't easily extract parameter types (either from functions, like with\n// Typescript's Parameters<f> utility type, or from generic types either). As\n// such, this function does double duty: packaging up the credentials during\n// its actual runtime operation, but pretending to return the\n// `ParseErrorConstructor<ErrorDetails>` that we won't actually have until later\n// to the type system, avoiding the need to do so with $ObjMap (which doesn't\n// work) in `ParseErrorEnum`. This hack won't be necessary when we switch to\n// Typescript.\ndeclare function toParseErrorCredentials<T: string>(\n  T,\n  ?{ code?: ParseErrorCode, reasonCode?: string } | boolean,\n): ParseErrorConstructor<{||}>;\n\n// ESLint seems to erroneously think that Flow's overloading syntax is an\n// accidental redeclaration of the function:\n// https://github.com/babel/eslint-plugin-babel/issues/162\n// eslint-disable-next-line no-redeclare\ndeclare function toParseErrorCredentials<ErrorDetails>(\n  (ErrorDetails) => string,\n  ?{ code?: ParseErrorCode, reasonCode?: string } | boolean,\n): ParseErrorConstructor<ErrorDetails>;\n\n// See comment about eslint and Flow overloading above.\n// eslint-disable-next-line no-redeclare\nexport function toParseErrorCredentials(toMessageOrMessage, credentials) {\n  return {\n    toMessage:\n      typeof toMessageOrMessage === \"string\"\n        ? () => toMessageOrMessage\n        : toMessageOrMessage,\n    ...credentials,\n  };\n}\n\n// This is the templated form.\ndeclare function ParseErrorEnum(string[]): typeof ParseErrorEnum;\n\n// See comment about eslint and Flow overloading above.\n// eslint-disable-next-line no-redeclare\ndeclare function ParseErrorEnum<T>(\n  toParseErrorCredentials: (typeof toParseErrorCredentials) => T,\n  syntaxPlugin?: string,\n): T;\n\n// You call `ParseErrorEnum` with a mapping from `ReasonCode`'s to either error\n// messages, or `toMessage` functions that define additional necessary `details`\n// needed by the `ParseError`:\n//\n// ParseErrorEnum`optionalSyntaxPlugin` (_ => ({\n//   ErrorWithStaticMessage: _(\"message\"),\n//   ErrorWithDynamicMessage: _<{ type: string }>(({ type }) => `${type}`),\n// });\n//\n// See comment about eslint and Flow overloading above.\n// eslint-disable-next-line no-redeclare\nexport function ParseErrorEnum(argument, syntaxPlugin) {\n  // If the first parameter is an array, that means we were called with a tagged\n  // template literal. Extract the syntaxPlugin from this, and call again in\n  // the \"normalized\" form.\n  if (Array.isArray(argument)) {\n    return toParseErrorCredentialsMap =>\n      ParseErrorEnum(toParseErrorCredentialsMap, argument[0]);\n  }\n\n  const partialCredentials = argument(toParseErrorCredentials);\n  const ParseErrorConstructors = {};\n\n  for (const reasonCode of Object.keys(partialCredentials)) {\n    ParseErrorConstructors[reasonCode] = toParseErrorConstructor({\n      code: ParseErrorCodes.SyntaxError,\n      reasonCode,\n      ...(syntaxPlugin ? { syntaxPlugin } : {}),\n      ...partialCredentials[reasonCode],\n    });\n  }\n\n  return ParseErrorConstructors;\n}\n\nexport type RaiseProperties<ErrorDetails> = {|\n  ...ErrorDetails,\n  at: Position | NodeBase,\n|};\n\nimport ModuleErrors from \"./parse-error/module-errors\";\nimport StandardErrors from \"./parse-error/standard-errors\";\nimport StrictModeErrors from \"./parse-error/strict-mode-errors\";\nimport PipelineOperatorErrors from \"./parse-error/pipeline-operator-errors\";\n\nexport const Errors = {\n  ...ParseErrorEnum(ModuleErrors),\n  ...ParseErrorEnum(StandardErrors),\n  ...ParseErrorEnum(StrictModeErrors),\n  ...ParseErrorEnum`pipelineOperator`(PipelineOperatorErrors),\n};\n\nexport type { LValAncestor } from \"./parse-error/standard-errors\";\n\nexport * from \"./parse-error/credentials\";\n","// @flow\n\nimport { ParseErrorCodes, toParseErrorCredentials } from \"../parse-error\";\n\nexport default (_: typeof toParseErrorCredentials) => ({\n  ImportMetaOutsideModule: _(\n    `import.meta may appear only with 'sourceType: \"module\"'`,\n    { code: ParseErrorCodes.SourceTypeModuleError },\n  ),\n  ImportOutsideModule: _(\n    `'import' and 'export' may appear only with 'sourceType: \"module\"'`,\n    { code: ParseErrorCodes.SourceTypeModuleError },\n  ),\n});\n","// @flow\n\nimport { toParseErrorCredentials } from \"../parse-error\";\nimport toNodeDescription from \"./to-node-description\";\n\nexport type LValAncestor =\n  | { type: \"UpdateExpression\", prefix: boolean }\n  | {\n      type:\n        | \"ArrayPattern\"\n        | \"AssignmentExpression\"\n        | \"CatchClause\"\n        | \"ForOfStatement\"\n        | \"FormalParameters\"\n        | \"ForInStatement\"\n        | \"ForStatement\"\n        | \"Identfier\"\n        | \"ObjectPattern\"\n        | \"RestElement\"\n        | \"VariableDeclarator\",\n    };\n\nexport default (_: typeof toParseErrorCredentials) => ({\n  AccessorIsGenerator: _<{| kind: \"get\" | \"set\" |}>(\n    ({ kind }) => `A ${kind}ter cannot be a generator.`,\n  ),\n\n  ArgumentsInClass: _(\n    \"'arguments' is only allowed in functions and class methods.\",\n  ),\n  AsyncFunctionInSingleStatementContext: _(\n    \"Async functions can only be declared at the top level or inside a block.\",\n  ),\n  AwaitBindingIdentifier: _(\n    \"Can not use 'await' as identifier inside an async function.\",\n  ),\n  AwaitBindingIdentifierInStaticBlock: _(\n    \"Can not use 'await' as identifier inside a static block.\",\n  ),\n  AwaitExpressionFormalParameter: _(\n    \"'await' is not allowed in async function parameters.\",\n  ),\n  AwaitNotInAsyncContext: _(\n    \"'await' is only allowed within async functions and at the top levels of modules.\",\n  ),\n  AwaitNotInAsyncFunction: _(\"'await' is only allowed within async functions.\"),\n  BadGetterArity: _(\"A 'get' accesor must not have any formal parameters.\"),\n  BadSetterArity: _(\"A 'set' accesor must have exactly one formal parameter.\"),\n  BadSetterRestParameter: _(\n    \"A 'set' accesor function argument must not be a rest parameter.\",\n  ),\n  ConstructorClassField: _(\"Classes may not have a field named 'constructor'.\"),\n  ConstructorClassPrivateField: _(\n    \"Classes may not have a private field named '#constructor'.\",\n  ),\n  ConstructorIsAccessor: _(\"Class constructor may not be an accessor.\"),\n  ConstructorIsAsync: _(\"Constructor can't be an async function.\"),\n  ConstructorIsGenerator: _(\"Constructor can't be a generator.\"),\n  DeclarationMissingInitializer: _<{| kind: \"const\" | \"destructuring\" |}>(\n    ({ kind }) => `Missing initializer in ${kind} declaration.`,\n  ),\n  DecoratorBeforeExport: _(\n    \"Decorators must be placed *before* the 'export' keyword. You can set the 'decoratorsBeforeExport' option to false to use the 'export @decorator class {}' syntax.\",\n  ),\n  DecoratorConstructor: _(\n    \"Decorators can't be used with a constructor. Did you mean '@dec class { ... }'?\",\n  ),\n  DecoratorExportClass: _(\n    \"Using the export keyword between a decorator and a class is not allowed. Please use `export @dec class` instead.\",\n  ),\n  DecoratorSemicolon: _(\"Decorators must not be followed by a semicolon.\"),\n  DecoratorStaticBlock: _(\"Decorators can't be used with a static block.\"),\n  DeletePrivateField: _(\"Deleting a private field is not allowed.\"),\n  DestructureNamedImport: _(\n    \"ES2015 named imports do not destructure. Use another statement for destructuring after the import.\",\n  ),\n  DuplicateConstructor: _(\"Duplicate constructor in the same class.\"),\n  DuplicateDefaultExport: _(\"Only one default export allowed per module.\"),\n  DuplicateExport: _<{| exportName: string |}>(\n    ({ exportName }) =>\n      `\\`${exportName}\\` has already been exported. Exported identifiers must be unique.`,\n  ),\n  DuplicateProto: _(\"Redefinition of __proto__ property.\"),\n  DuplicateRegExpFlags: _(\"Duplicate regular expression flag.\"),\n  ElementAfterRest: _(\"Rest element must be last element.\"),\n  EscapedCharNotAnIdentifier: _(\"Invalid Unicode escape.\"),\n  ExportBindingIsString: _<{| localName: string, exportName: string |}>(\n    ({ localName, exportName }) =>\n      `A string literal cannot be used as an exported binding without \\`from\\`.\\n- Did you mean \\`export { '${localName}' as '${exportName}' } from 'some-module'\\`?`,\n  ),\n  ExportDefaultFromAsIdentifier: _(\n    \"'from' is not allowed as an identifier after 'export default'.\",\n  ),\n\n  ForInOfLoopInitializer: _<{| type: \"ForInStatement\" | \"ForOfStatement\" |}>(\n    ({ type }) =>\n      `'${\n        type === \"ForInStatement\" ? \"for-in\" : \"for-of\"\n      }' loop variable declaration may not have an initializer.`,\n  ),\n\n  ForOfAsync: _(\"The left-hand side of a for-of loop may not be 'async'.\"),\n  ForOfLet: _(\"The left-hand side of a for-of loop may not start with 'let'.\"),\n  GeneratorInSingleStatementContext: _(\n    \"Generators can only be declared at the top level or inside a block.\",\n  ),\n\n  IllegalBreakContinue: _<{| type: \"BreakStatement\" | \"ContinueStatement\" |}>(\n    ({ type }) =>\n      `Unsyntactic ${type === \"BreakStatement\" ? \"break\" : \"continue\"}.`,\n  ),\n\n  IllegalLanguageModeDirective: _(\n    \"Illegal 'use strict' directive in function with non-simple parameter list.\",\n  ),\n  IllegalReturn: _(\"'return' outside of function.\"),\n  ImportBindingIsString: _<{| importName: string |}>(\n    ({ importName }) =>\n      `A string literal cannot be used as an imported binding.\\n- Did you mean \\`import { \"${importName}\" as foo }\\`?`,\n  ),\n  ImportCallArgumentTrailingComma: _(\n    \"Trailing comma is disallowed inside import(...) arguments.\",\n  ),\n  ImportCallArity: _<{| maxArgumentCount: 1 | 2 |}>(\n    ({ maxArgumentCount }) =>\n      `\\`import()\\` requires exactly ${\n        maxArgumentCount === 1 ? \"one argument\" : \"one or two arguments\"\n      }.`,\n  ),\n  ImportCallNotNewExpression: _(\"Cannot use new with import(...).\"),\n  ImportCallSpreadArgument: _(\"`...` is not allowed in `import()`.\"),\n  ImportJSONBindingNotDefault: _(\n    \"A JSON module can only be imported with `default`.\",\n  ),\n  IncompatibleRegExpUVFlags: _(\n    \"The 'u' and 'v' regular expression flags cannot be enabled at the same time.\",\n  ),\n  InvalidBigIntLiteral: _(\"Invalid BigIntLiteral.\"),\n  InvalidCodePoint: _(\"Code point out of bounds.\"),\n  InvalidCoverInitializedName: _(\"Invalid shorthand property initializer.\"),\n  InvalidDecimal: _(\"Invalid decimal.\"),\n  InvalidDigit: _<{| radix: number |}>(\n    ({ radix }) => `Expected number in radix ${radix}.`,\n  ),\n  InvalidEscapeSequence: _(\"Bad character escape sequence.\"),\n  InvalidEscapeSequenceTemplate: _(\"Invalid escape sequence in template.\"),\n  InvalidEscapedReservedWord: _<{| reservedWord: string |}>(\n    ({ reservedWord }) => `Escape sequence in keyword ${reservedWord}.`,\n  ),\n  InvalidIdentifier: _<{| identifierName: string |}>(\n    ({ identifierName }) => `Invalid identifier ${identifierName}.`,\n  ),\n  InvalidLhs: _<{| ancestor: LValAncestor |}>(\n    ({ ancestor }) =>\n      `Invalid left-hand side in ${toNodeDescription(ancestor)}.`,\n  ),\n  InvalidLhsBinding: _<{| ancestor: LValAncestor |}>(\n    ({ ancestor }) =>\n      `Binding invalid left-hand side in ${toNodeDescription(ancestor)}.`,\n  ),\n  InvalidNumber: _(\"Invalid number.\"),\n  InvalidOrMissingExponent: _(\n    \"Floating-point numbers require a valid exponent after the 'e'.\",\n  ),\n  InvalidOrUnexpectedToken: _<{| unexpected: string |}>(\n    ({ unexpected }) => `Unexpected character '${unexpected}'.`,\n  ),\n  InvalidParenthesizedAssignment: _(\n    \"Invalid parenthesized assignment pattern.\",\n  ),\n  InvalidPrivateFieldResolution: _<{| identifierName: string |}>(\n    ({ identifierName }) => `Private name #${identifierName} is not defined.`,\n  ),\n  InvalidPropertyBindingPattern: _(\"Binding member expression.\"),\n  InvalidRecordProperty: _(\n    \"Only properties and spread elements are allowed in record definitions.\",\n  ),\n  InvalidRestAssignmentPattern: _(\"Invalid rest operator's argument.\"),\n  LabelRedeclaration: _<{| labelName: string |}>(\n    ({ labelName }) => `Label '${labelName}' is already declared.`,\n  ),\n  LetInLexicalBinding: _(\n    \"'let' is not allowed to be used as a name in 'let' or 'const' declarations.\",\n  ),\n  LineTerminatorBeforeArrow: _(\"No line break is allowed before '=>'.\"),\n  MalformedRegExpFlags: _(\"Invalid regular expression flag.\"),\n  MissingClassName: _(\"A class name is required.\"),\n  MissingEqInAssignment: _(\n    \"Only '=' operator can be used for specifying default value.\",\n  ),\n  MissingSemicolon: _(\"Missing semicolon.\"),\n  MissingPlugin: _<{| missingPlugin: [string] |}>(\n    ({ missingPlugin }) =>\n      `This experimental syntax requires enabling the parser plugin: ${missingPlugin\n        .map(name => JSON.stringify(name))\n        .join(\", \")}.`,\n  ),\n  // FIXME: Would be nice to make this \"missingPlugins\" instead.\n  // Also), seems like we can drop the \"(s)\" from the message and just make it \"s\".\n  MissingOneOfPlugins: _<{| missingPlugin: string[] |}>(\n    ({ missingPlugin }) =>\n      `This experimental syntax requires enabling one of the following parser plugin(s): ${missingPlugin\n        .map(name => JSON.stringify(name))\n        .join(\", \")}.`,\n  ),\n  MissingUnicodeEscape: _(\"Expecting Unicode escape sequence \\\\uXXXX.\"),\n  MixingCoalesceWithLogical: _(\n    \"Nullish coalescing operator(??) requires parens when mixing with logical operators.\",\n  ),\n  ModuleAttributeDifferentFromType: _(\n    \"The only accepted module attribute is `type`.\",\n  ),\n  ModuleAttributeInvalidValue: _(\n    \"Only string literals are allowed as module attribute values.\",\n  ),\n  ModuleAttributesWithDuplicateKeys: _<{| key: string |}>(\n    ({ key }) => `Duplicate key \"${key}\" is not allowed in module attributes.`,\n  ),\n  ModuleExportNameHasLoneSurrogate: _<{| surrogateCharCode: number |}>(\n    ({ surrogateCharCode }) =>\n      `An export name cannot include a lone surrogate, found '\\\\u${surrogateCharCode.toString(\n        16,\n      )}'.`,\n  ),\n  ModuleExportUndefined: _<{| localName: string |}>(\n    ({ localName }) => `Export '${localName}' is not defined.`,\n  ),\n  MultipleDefaultsInSwitch: _(\"Multiple default clauses.\"),\n  NewlineAfterThrow: _(\"Illegal newline after throw.\"),\n  NoCatchOrFinally: _(\"Missing catch or finally clause.\"),\n  NumberIdentifier: _(\"Identifier directly after number.\"),\n  NumericSeparatorInEscapeSequence: _(\n    \"Numeric separators are not allowed inside unicode escape sequences or hex escape sequences.\",\n  ),\n  ObsoleteAwaitStar: _(\n    \"'await*' has been removed from the async functions proposal. Use Promise.all() instead.\",\n  ),\n  OptionalChainingNoNew: _(\n    \"Constructors in/after an Optional Chain are not allowed.\",\n  ),\n  OptionalChainingNoTemplate: _(\n    \"Tagged Template Literals are not allowed in optionalChain.\",\n  ),\n  OverrideOnConstructor: _(\n    \"'override' modifier cannot appear on a constructor declaration.\",\n  ),\n  ParamDupe: _(\"Argument name clash.\"),\n  PatternHasAccessor: _(\"Object pattern can't contain getter or setter.\"),\n  PatternHasMethod: _(\"Object pattern can't contain methods.\"),\n  PrivateInExpectedIn: _<{| identifierName: string |}>(\n    ({ identifierName }) =>\n      `Private names are only allowed in property accesses (\\`obj.#${identifierName}\\`) or in \\`in\\` expressions (\\`#${identifierName} in obj\\`).`,\n  ),\n  PrivateNameRedeclaration: _<{| identifierName: string |}>(\n    ({ identifierName }) => `Duplicate private name #${identifierName}.`,\n  ),\n  RecordExpressionBarIncorrectEndSyntaxType: _(\n    \"Record expressions ending with '|}' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  ),\n  RecordExpressionBarIncorrectStartSyntaxType: _(\n    \"Record expressions starting with '{|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  ),\n  RecordExpressionHashIncorrectStartSyntaxType: _(\n    \"Record expressions starting with '#{' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'.\",\n  ),\n  RecordNoProto: _(\"'__proto__' is not allowed in Record expressions.\"),\n  RestTrailingComma: _(\"Unexpected trailing comma after rest element.\"),\n  SloppyFunction: _(\n    \"In non-strict mode code, functions can only be declared at top level, inside a block, or as the body of an if statement.\",\n  ),\n  StaticPrototype: _(\"Classes may not have static property named prototype.\"),\n  SuperNotAllowed: _(\n    \"`super()` is only valid inside a class constructor of a subclass. Maybe a typo in the method name ('constructor') or not extending another class?\",\n  ),\n  SuperPrivateField: _(\"Private fields can't be accessed on super.\"),\n  TrailingDecorator: _(\"Decorators must be attached to a class element.\"),\n  TupleExpressionBarIncorrectEndSyntaxType: _(\n    \"Tuple expressions ending with '|]' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  ),\n  TupleExpressionBarIncorrectStartSyntaxType: _(\n    \"Tuple expressions starting with '[|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  ),\n  TupleExpressionHashIncorrectStartSyntaxType: _(\n    \"Tuple expressions starting with '#[' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'.\",\n  ),\n  UnexpectedArgumentPlaceholder: _(\"Unexpected argument placeholder.\"),\n  UnexpectedAwaitAfterPipelineBody: _(\n    'Unexpected \"await\" after pipeline body; await must have parentheses in minimal proposal.',\n  ),\n  UnexpectedDigitAfterHash: _(\"Unexpected digit after hash token.\"),\n  UnexpectedImportExport: _(\n    \"'import' and 'export' may only appear at the top level.\",\n  ),\n  UnexpectedKeyword: _<{| keyword: string |}>(\n    ({ keyword }) => `Unexpected keyword '${keyword}'.`,\n  ),\n  UnexpectedLeadingDecorator: _(\n    \"Leading decorators must be attached to a class declaration.\",\n  ),\n  UnexpectedLexicalDeclaration: _(\n    \"Lexical declaration cannot appear in a single-statement context.\",\n  ),\n  UnexpectedNewTarget: _(\n    \"`new.target` can only be used in functions or class properties.\",\n  ),\n  UnexpectedNumericSeparator: _(\n    \"A numeric separator is only allowed between two digits.\",\n  ),\n  UnexpectedPrivateField: _(\"Unexpected private name.\"),\n  UnexpectedReservedWord: _<{| reservedWord: string |}>(\n    ({ reservedWord }) => `Unexpected reserved word '${reservedWord}'.`,\n  ),\n  UnexpectedSuper: _(\"'super' is only allowed in object methods and classes.\"),\n  UnexpectedToken: _<{|\n    expected?: ?string,\n    unexpected?: ?string,\n  |}>(\n    ({ expected, unexpected }) =>\n      `Unexpected token${unexpected ? ` '${unexpected}'.` : \"\"}${\n        expected ? `, expected \"${expected}\"` : \"\"\n      }`,\n  ),\n  UnexpectedTokenUnaryExponentiation: _(\n    \"Illegal expression. Wrap left hand side or entire exponentiation in parentheses.\",\n  ),\n  UnsupportedBind: _(\"Binding should be performed on object property.\"),\n  UnsupportedDecoratorExport: _(\n    \"A decorated export must export a class declaration.\",\n  ),\n  UnsupportedDefaultExport: _(\n    \"Only expressions, functions or classes are allowed as the `default` export.\",\n  ),\n  UnsupportedImport: _(\n    \"`import` can only be used in `import()` or `import.meta`.\",\n  ),\n  UnsupportedMetaProperty: _<{|\n    target: string,\n    onlyValidPropertyName: string,\n  |}>(\n    ({ target, onlyValidPropertyName }) =>\n      `The only valid meta property for ${target} is ${target}.${onlyValidPropertyName}.`,\n  ),\n  UnsupportedParameterDecorator: _(\n    \"Decorators cannot be used to decorate parameters.\",\n  ),\n  UnsupportedPropertyDecorator: _(\n    \"Decorators cannot be used to decorate object literal properties.\",\n  ),\n  UnsupportedSuper: _(\n    \"'super' can only be used with function calls (i.e. super()) or in property accesses (i.e. super.prop or super[prop]).\",\n  ),\n  UnterminatedComment: _(\"Unterminated comment.\"),\n  UnterminatedRegExp: _(\"Unterminated regular expression.\"),\n  UnterminatedString: _(\"Unterminated string constant.\"),\n  UnterminatedTemplate: _(\"Unterminated template.\"),\n  VarRedeclaration: _<{| identifierName: string |}>(\n    ({ identifierName }) =>\n      `Identifier '${identifierName}' has already been declared.`,\n  ),\n  YieldBindingIdentifier: _(\n    \"Can not use 'yield' as identifier inside a generator.\",\n  ),\n  YieldInParameter: _(\"Yield expression is not allowed in formal parameters.\"),\n  ZeroDigitNumericSeparator: _(\n    \"Numeric separator can not be used after leading 0.\",\n  ),\n});\n","// @flow\n\nimport { toParseErrorCredentials } from \"../parse-error\";\n\nexport default (_: typeof toParseErrorCredentials) => ({\n  StrictDelete: _(\"Deleting local variable in strict mode.\"),\n\n  // `referenceName` is the StringValue[1] of an IdentifierReference[2], which\n  // is represented as just an `Identifier`[3] in the Babel AST.\n  // 1. https://tc39.es/ecma262/#sec-static-semantics-stringvalue\n  // 2. https://tc39.es/ecma262/#prod-IdentifierReference\n  // 3. https://github.com/babel/babel/blob/main/packages/babel-parser/ast/spec.md#identifier\n  StrictEvalArguments: _<{| referenceName: string |}>(\n    ({ referenceName }) => `Assigning to '${referenceName}' in strict mode.`,\n  ),\n  // `bindingName` is the StringValue[1] of a BindingIdentifier[2], which is\n  // represented as just an `Identifier`[3] in the Babel AST.\n  // 1. https://tc39.es/ecma262/#sec-static-semantics-stringvalue\n  // 2. https://tc39.es/ecma262/#prod-BindingIdentifier\n  // 3. https://github.com/babel/babel/blob/main/packages/babel-parser/ast/spec.md#identifier\n  StrictEvalArgumentsBinding: _<{| bindingName: string |}>(\n    ({ bindingName }) => `Binding '${bindingName}' in strict mode.`,\n  ),\n\n  StrictFunction: _(\n    \"In strict mode code, functions can only be declared at top level or inside a block.\",\n  ),\n  StrictNumericEscape: _(\n    \"The only valid numeric escape in strict mode is '\\\\0'.\",\n  ),\n  StrictOctalLiteral: _(\n    \"Legacy octal literals are not allowed in strict mode.\",\n  ),\n  StrictWith: _(\"'with' in strict mode.\"),\n});\n","// @flow\n\nimport { type TokenType } from \"../tokenizer/types\";\nimport type Parser from \"../parser\";\nimport type { ExpressionErrors } from \"../parser/util\";\nimport * as N from \"../types\";\nimport type { Node as NodeType, NodeBase, File } from \"../types\";\nimport type { Position } from \"../util/location\";\nimport { Errors } from \"../parse-error\";\n\nconst { defineProperty } = Object;\nconst toUnenumerable = (object, key) =>\n  defineProperty(object, key, { enumerable: false, value: object[key] });\n\nfunction toESTreeLocation(node: any) {\n  node.loc.start && toUnenumerable(node.loc.start, \"index\");\n  node.loc.end && toUnenumerable(node.loc.end, \"index\");\n\n  return node;\n}\n\nexport default (superClass: Class<Parser>): Class<Parser> =>\n  class extends superClass {\n    parse(): File {\n      const file = toESTreeLocation(super.parse());\n\n      if (this.options.tokens) {\n        file.tokens = file.tokens.map(toESTreeLocation);\n      }\n\n      return file;\n    }\n\n    parseRegExpLiteral({ pattern, flags }): N.Node {\n      let regex = null;\n      try {\n        regex = new RegExp(pattern, flags);\n      } catch (e) {\n        // In environments that don't support these flags value will\n        // be null as the regex can't be represented natively.\n      }\n      const node = this.estreeParseLiteral<N.EstreeRegExpLiteral>(regex);\n      node.regex = { pattern, flags };\n\n      return node;\n    }\n\n    parseBigIntLiteral(value: any): N.Node {\n      // https://github.com/estree/estree/blob/master/es2020.md#bigintliteral\n      let bigInt;\n      try {\n        // $FlowIgnore\n        bigInt = BigInt(value);\n      } catch {\n        bigInt = null;\n      }\n      const node = this.estreeParseLiteral<N.EstreeBigIntLiteral>(bigInt);\n      node.bigint = String(node.value || value);\n\n      return node;\n    }\n\n    parseDecimalLiteral(value: any): N.Node {\n      // https://github.com/estree/estree/blob/master/experimental/decimal.md\n      // todo: use BigDecimal when node supports it.\n      const decimal = null;\n      const node = this.estreeParseLiteral(decimal);\n      node.decimal = String(node.value || value);\n\n      return node;\n    }\n\n    estreeParseLiteral<T: N.Node>(value: any) {\n      return this.parseLiteral<T>(value, \"Literal\");\n    }\n\n    parseStringLiteral(value: any): N.Node {\n      return this.estreeParseLiteral(value);\n    }\n\n    parseNumericLiteral(value: any): any {\n      return this.estreeParseLiteral(value);\n    }\n\n    parseNullLiteral(): N.Node {\n      return this.estreeParseLiteral(null);\n    }\n\n    parseBooleanLiteral(value: boolean): N.BooleanLiteral {\n      return this.estreeParseLiteral(value);\n    }\n\n    directiveToStmt(directive: N.Directive): N.ExpressionStatement {\n      const directiveLiteral = directive.value;\n\n      const stmt = this.startNodeAt(directive.start, directive.loc.start);\n      const expression = this.startNodeAt(\n        directiveLiteral.start,\n        directiveLiteral.loc.start,\n      );\n\n      expression.value = directiveLiteral.extra.expressionValue;\n      expression.raw = directiveLiteral.extra.raw;\n\n      stmt.expression = this.finishNodeAt(\n        expression,\n        \"Literal\",\n        directiveLiteral.loc.end,\n      );\n      stmt.directive = directiveLiteral.extra.raw.slice(1, -1);\n\n      return this.finishNodeAt(stmt, \"ExpressionStatement\", directive.loc.end);\n    }\n\n    // ==================================\n    // Overrides\n    // ==================================\n\n    initFunction(\n      node: N.BodilessFunctionOrMethodBase,\n      isAsync: ?boolean,\n    ): void {\n      super.initFunction(node, isAsync);\n      node.expression = false;\n    }\n\n    checkDeclaration(node: N.Pattern | N.ObjectProperty): void {\n      if (node != null && this.isObjectProperty(node)) {\n        this.checkDeclaration(((node: any): N.EstreeProperty).value);\n      } else {\n        super.checkDeclaration(node);\n      }\n    }\n\n    getObjectOrClassMethodParams(method: N.ObjectMethod | N.ClassMethod) {\n      return ((method: any): N.EstreeProperty | N.EstreeMethodDefinition).value\n        .params;\n    }\n\n    isValidDirective(stmt: N.Statement): boolean {\n      return (\n        stmt.type === \"ExpressionStatement\" &&\n        stmt.expression.type === \"Literal\" &&\n        typeof stmt.expression.value === \"string\" &&\n        !stmt.expression.extra?.parenthesized\n      );\n    }\n\n    parseBlockBody(\n      node: N.BlockStatementLike,\n      ...args: [?boolean, boolean, TokenType, void | (boolean => void)]\n    ): void {\n      super.parseBlockBody(node, ...args);\n\n      const directiveStatements = node.directives.map(d =>\n        this.directiveToStmt(d),\n      );\n      node.body = directiveStatements.concat(node.body);\n      // $FlowIgnore - directives isn't optional in the type definition\n      delete node.directives;\n    }\n\n    pushClassMethod(\n      classBody: N.ClassBody,\n      method: N.ClassMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isConstructor: boolean,\n      allowsDirectSuper: boolean,\n    ): void {\n      this.parseMethod(\n        method,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowsDirectSuper,\n        \"ClassMethod\",\n        true,\n      );\n      if (method.typeParameters) {\n        // $FlowIgnore\n        method.value.typeParameters = method.typeParameters;\n        delete method.typeParameters;\n      }\n      classBody.body.push(method);\n    }\n\n    parsePrivateName(): any {\n      const node = super.parsePrivateName();\n      if (!process.env.BABEL_8_BREAKING) {\n        if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n          return node;\n        }\n      }\n      return this.convertPrivateNameToPrivateIdentifier(node);\n    }\n\n    convertPrivateNameToPrivateIdentifier(\n      node: N.PrivateName,\n    ): N.EstreePrivateIdentifier {\n      const name = super.getPrivateNameSV(node);\n      node = (node: any);\n      delete node.id;\n      node.name = name;\n      node.type = \"PrivateIdentifier\";\n      return node;\n    }\n\n    isPrivateName(node: N.Node): boolean {\n      if (!process.env.BABEL_8_BREAKING) {\n        if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n          return super.isPrivateName(node);\n        }\n      }\n      return node.type === \"PrivateIdentifier\";\n    }\n\n    getPrivateNameSV(node: N.Node): string {\n      if (!process.env.BABEL_8_BREAKING) {\n        if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n          return super.getPrivateNameSV(node);\n        }\n      }\n      return node.name;\n    }\n\n    parseLiteral<T: N.Node>(value: any, type: $ElementType<T, \"type\">): T {\n      const node = super.parseLiteral<T>(value, type);\n      node.raw = node.extra.raw;\n      delete node.extra;\n\n      return node;\n    }\n\n    parseFunctionBody(\n      node: N.Function,\n      allowExpression: ?boolean,\n      isMethod?: boolean = false,\n    ): void {\n      super.parseFunctionBody(node, allowExpression, isMethod);\n      node.expression = node.body.type !== \"BlockStatement\";\n    }\n\n    parseMethod<T: N.MethodLike>(\n      node: T,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isConstructor: boolean,\n      allowDirectSuper: boolean,\n      type: string,\n      inClassScope: boolean = false,\n    ): T {\n      let funcNode = this.startNode();\n      funcNode.kind = node.kind; // provide kind, so super method correctly sets state\n      funcNode = super.parseMethod(\n        funcNode,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowDirectSuper,\n        type,\n        inClassScope,\n      );\n      funcNode.type = \"FunctionExpression\";\n      delete funcNode.kind;\n      // $FlowIgnore\n      node.value = funcNode;\n      if (type === \"ClassPrivateMethod\") {\n        // $FlowIgnore\n        node.computed = false;\n      }\n      type = \"MethodDefinition\";\n      return this.finishNode(node, type);\n    }\n\n    parseClassProperty(...args: [N.ClassProperty]): any {\n      const propertyNode = (super.parseClassProperty(...args): any);\n      if (!process.env.BABEL_8_BREAKING) {\n        if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n          return (propertyNode: N.EstreePropertyDefinition);\n        }\n      }\n      propertyNode.type = \"PropertyDefinition\";\n      return (propertyNode: N.EstreePropertyDefinition);\n    }\n\n    parseClassPrivateProperty(...args: [N.ClassPrivateProperty]): any {\n      const propertyNode = (super.parseClassPrivateProperty(...args): any);\n      if (!process.env.BABEL_8_BREAKING) {\n        if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n          return (propertyNode: N.EstreePropertyDefinition);\n        }\n      }\n      propertyNode.type = \"PropertyDefinition\";\n      propertyNode.computed = false;\n      return (propertyNode: N.EstreePropertyDefinition);\n    }\n\n    parseObjectMethod(\n      prop: N.ObjectMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isPattern: boolean,\n      isAccessor: boolean,\n    ): ?N.ObjectMethod {\n      const node: N.EstreeProperty = (super.parseObjectMethod(\n        prop,\n        isGenerator,\n        isAsync,\n        isPattern,\n        isAccessor,\n      ): any);\n\n      if (node) {\n        node.type = \"Property\";\n        if (((node: any): N.ClassMethod).kind === \"method\") node.kind = \"init\";\n        node.shorthand = false;\n      }\n\n      return (node: any);\n    }\n\n    parseObjectProperty(\n      prop: N.ObjectProperty,\n      startPos: ?number,\n      startLoc: ?Position,\n      isPattern: boolean,\n      refExpressionErrors: ?ExpressionErrors,\n    ): ?N.ObjectProperty {\n      const node: N.EstreeProperty = (super.parseObjectProperty(\n        prop,\n        startPos,\n        startLoc,\n        isPattern,\n        refExpressionErrors,\n      ): any);\n\n      if (node) {\n        node.kind = \"init\";\n        node.type = \"Property\";\n      }\n\n      return (node: any);\n    }\n\n    isValidLVal(type: string, ...rest) {\n      return type === \"Property\" ? \"value\" : super.isValidLVal(type, ...rest);\n    }\n\n    isAssignable(node: N.Node, isBinding?: boolean): boolean {\n      if (node != null && this.isObjectProperty(node)) {\n        return this.isAssignable(node.value, isBinding);\n      }\n      return super.isAssignable(node, isBinding);\n    }\n\n    toAssignable(node: N.Node, isLHS: boolean = false): void {\n      if (node != null && this.isObjectProperty(node)) {\n        const { key, value } = node;\n        if (this.isPrivateName(key)) {\n          this.classScope.usePrivateName(\n            this.getPrivateNameSV(key),\n            key.loc.start,\n          );\n        }\n        this.toAssignable(value, isLHS);\n      } else {\n        super.toAssignable(node, isLHS);\n      }\n    }\n\n    toAssignableObjectExpressionProp(prop: N.Node) {\n      if (prop.kind === \"get\" || prop.kind === \"set\") {\n        this.raise(Errors.PatternHasAccessor, { at: prop.key });\n      } else if (prop.method) {\n        this.raise(Errors.PatternHasMethod, { at: prop.key });\n      } else {\n        super.toAssignableObjectExpressionProp(...arguments);\n      }\n    }\n\n    finishCallExpression<T: N.CallExpression | N.OptionalCallExpression>(\n      node: T,\n      optional: boolean,\n    ): N.Expression {\n      super.finishCallExpression(node, optional);\n\n      if (node.callee.type === \"Import\") {\n        ((node: N.Node): N.EstreeImportExpression).type = \"ImportExpression\";\n        ((node: N.Node): N.EstreeImportExpression).source = node.arguments[0];\n        if (this.hasPlugin(\"importAssertions\")) {\n          ((node: N.Node): N.EstreeImportExpression).attributes =\n            node.arguments[1] ?? null;\n        }\n        // $FlowIgnore - arguments isn't optional in the type definition\n        delete node.arguments;\n        // $FlowIgnore - callee isn't optional in the type definition\n        delete node.callee;\n      }\n\n      return node;\n    }\n\n    toReferencedArguments(\n      node:\n        | N.CallExpression\n        | N.OptionalCallExpression\n        | N.EstreeImportExpression,\n      /* isParenthesizedExpr?: boolean, */\n    ) {\n      // ImportExpressions do not have an arguments array.\n      if (node.type === \"ImportExpression\") {\n        return;\n      }\n\n      super.toReferencedArguments(node);\n    }\n\n    parseExport(node: N.Node) {\n      super.parseExport(node);\n\n      switch (node.type) {\n        case \"ExportAllDeclaration\":\n          node.exported = null;\n          break;\n\n        case \"ExportNamedDeclaration\":\n          if (\n            node.specifiers.length === 1 &&\n            node.specifiers[0].type === \"ExportNamespaceSpecifier\"\n          ) {\n            node.type = \"ExportAllDeclaration\";\n            node.exported = node.specifiers[0].exported;\n            delete node.specifiers;\n          }\n\n          break;\n      }\n\n      return node;\n    }\n\n    parseSubscript(\n      base: N.Expression,\n      startPos: number,\n      startLoc: Position,\n      noCalls: ?boolean,\n      state: N.ParseSubscriptState,\n    ) {\n      const node = super.parseSubscript(\n        base,\n        startPos,\n        startLoc,\n        noCalls,\n        state,\n      );\n\n      if (state.optionalChainMember) {\n        // https://github.com/estree/estree/blob/master/es2020.md#chainexpression\n        if (\n          node.type === \"OptionalMemberExpression\" ||\n          node.type === \"OptionalCallExpression\"\n        ) {\n          node.type = node.type.substring(8); // strip Optional prefix\n        }\n        if (state.stop) {\n          const chain = this.startNodeAtNode(node);\n          chain.expression = node;\n          return this.finishNode(chain, \"ChainExpression\");\n        }\n      } else if (\n        node.type === \"MemberExpression\" ||\n        node.type === \"CallExpression\"\n      ) {\n        node.optional = false;\n      }\n\n      return node;\n    }\n\n    hasPropertyAsPrivateName(node: N.Node): boolean {\n      if (node.type === \"ChainExpression\") {\n        node = node.expression;\n      }\n      return super.hasPropertyAsPrivateName(node);\n    }\n\n    isOptionalChain(node: N.Node): boolean {\n      return node.type === \"ChainExpression\";\n    }\n\n    isObjectProperty(node: N.Node): boolean {\n      return node.type === \"Property\" && node.kind === \"init\" && !node.method;\n    }\n\n    isObjectMethod(node: N.Node): boolean {\n      return node.method || node.kind === \"get\" || node.kind === \"set\";\n    }\n\n    finishNodeAt<T: NodeType>(node: T, type: string, endLoc: Position): T {\n      return toESTreeLocation(super.finishNodeAt(node, type, endLoc));\n    }\n\n    resetStartLocation(node: N.Node, start: number, startLoc: Position) {\n      super.resetStartLocation(node, start, startLoc);\n      toESTreeLocation(node);\n    }\n\n    resetEndLocation(\n      node: NodeBase,\n      endLoc?: Position = this.state.lastTokEndLoc,\n    ): void {\n      super.resetEndLocation(node, endLoc);\n      toESTreeLocation(node);\n    }\n  };\n","// @flow\n\n// The token context is used in JSX plugin to track\n// jsx tag / jsx text / normal JavaScript expression\n\nexport class TokContext {\n  constructor(token: string, preserveSpace?: boolean) {\n    this.token = token;\n    this.preserveSpace = !!preserveSpace;\n  }\n\n  token: string;\n  preserveSpace: boolean;\n}\n\nconst types: {\n  [key: string]: TokContext,\n} = {\n  brace: new TokContext(\"{\"), // normal JavaScript expression\n  j_oTag: new TokContext(\"<tag\"), // JSX opening tag\n  j_cTag: new TokContext(\"</tag\"), // JSX closing tag\n  j_expr: new TokContext(\"<tag>...</tag>\", true), // JSX expressions\n};\n\nif (!process.env.BABEL_8_BREAKING) {\n  types.template = new TokContext(\"`\", true);\n}\n\nexport { types };\n","// @flow\nimport { types as tc, type TokContext } from \"./context\";\n// ## Token types\n\n// The assignment of fine-grained, information-carrying type objects\n// allows the tokenizer to store the information it has about a\n// token in a way that is very cheap for the parser to look up.\n\n// All token type variables start with an underscore, to make them\n// easy to recognize.\n\n// The `beforeExpr` property is used to disambiguate between 1) binary\n// expression (<) and JSX Tag start (<name>); 2) object literal and JSX\n// texts. It is set on the `updateContext` function in the JSX plugin.\n\n// The `startsExpr` property is used to determine whether an expression\n// may be the “argument” subexpression of a `yield` expression or\n// `yield` statement. It is set on all token types that may be at the\n// start of a subexpression.\n\n// `isLoop` marks a keyword as starting a loop, which is important\n// to know when parsing a label, in order to allow or disallow\n// continue jumps to that label.\n\nconst beforeExpr = true;\nconst startsExpr = true;\nconst isLoop = true;\nconst isAssign = true;\nconst prefix = true;\nconst postfix = true;\n\ntype TokenOptions = {\n  keyword?: string,\n  beforeExpr?: boolean,\n  startsExpr?: boolean,\n  rightAssociative?: boolean,\n  isLoop?: boolean,\n  isAssign?: boolean,\n  prefix?: boolean,\n  postfix?: boolean,\n  binop?: ?number,\n};\n\n// Internally the tokenizer stores token as a number\nexport opaque type TokenType = number;\n\n// The `ExportedTokenType` is exported via `tokTypes` and accessible\n// when `tokens: true` is enabled. Unlike internal token type, it provides\n// metadata of the tokens.\nexport class ExportedTokenType {\n  label: string;\n  keyword: ?string;\n  beforeExpr: boolean;\n  startsExpr: boolean;\n  rightAssociative: boolean;\n  isLoop: boolean;\n  isAssign: boolean;\n  prefix: boolean;\n  postfix: boolean;\n  binop: ?number;\n  // todo(Babel 8): remove updateContext from exposed token layout\n  declare updateContext: ?(context: Array<TokContext>) => void;\n\n  constructor(label: string, conf: TokenOptions = {}) {\n    this.label = label;\n    this.keyword = conf.keyword;\n    this.beforeExpr = !!conf.beforeExpr;\n    this.startsExpr = !!conf.startsExpr;\n    this.rightAssociative = !!conf.rightAssociative;\n    this.isLoop = !!conf.isLoop;\n    this.isAssign = !!conf.isAssign;\n    this.prefix = !!conf.prefix;\n    this.postfix = !!conf.postfix;\n    this.binop = conf.binop != null ? conf.binop : null;\n    if (!process.env.BABEL_8_BREAKING) {\n      this.updateContext = null;\n    }\n  }\n}\n\n// A map from keyword/keyword-like string value to the token type\nexport const keywords = new Map<string, TokenType>();\n\nfunction createKeyword(name: string, options: TokenOptions = {}): TokenType {\n  options.keyword = name;\n  const token = createToken(name, options);\n  keywords.set(name, token);\n  return token;\n}\n\nfunction createBinop(name: string, binop: number) {\n  return createToken(name, { beforeExpr, binop });\n}\n\nlet tokenTypeCounter = -1;\nexport const tokenTypes: ExportedTokenType[] = [];\nconst tokenLabels: string[] = [];\nconst tokenBinops: number[] = [];\nconst tokenBeforeExprs: boolean[] = [];\nconst tokenStartsExprs: boolean[] = [];\nconst tokenPrefixes: boolean[] = [];\n\nfunction createToken(name: string, options: TokenOptions = {}): TokenType {\n  ++tokenTypeCounter;\n  tokenLabels.push(name);\n  tokenBinops.push(options.binop ?? -1);\n  tokenBeforeExprs.push(options.beforeExpr ?? false);\n  tokenStartsExprs.push(options.startsExpr ?? false);\n  tokenPrefixes.push(options.prefix ?? false);\n  tokenTypes.push(new ExportedTokenType(name, options));\n\n  return tokenTypeCounter;\n}\n\nfunction createKeywordLike(\n  name: string,\n  options: TokenOptions = {},\n): TokenType {\n  ++tokenTypeCounter;\n  keywords.set(name, tokenTypeCounter);\n  tokenLabels.push(name);\n  tokenBinops.push(options.binop ?? -1);\n  tokenBeforeExprs.push(options.beforeExpr ?? false);\n  tokenStartsExprs.push(options.startsExpr ?? false);\n  tokenPrefixes.push(options.prefix ?? false);\n  // In the exported token type, we set the label as \"name\" for backward compatibility with Babel 7\n  tokenTypes.push(new ExportedTokenType(\"name\", options));\n\n  return tokenTypeCounter;\n}\n\n// For performance the token type helpers depend on the following declarations order.\n// When adding new token types, please also check if the token helpers need update.\n\nexport const tt: { [name: string]: TokenType } = {\n  // Punctuation token types.\n  bracketL: createToken(\"[\", { beforeExpr, startsExpr }),\n  bracketHashL: createToken(\"#[\", { beforeExpr, startsExpr }),\n  bracketBarL: createToken(\"[|\", { beforeExpr, startsExpr }),\n  bracketR: createToken(\"]\"),\n  bracketBarR: createToken(\"|]\"),\n  braceL: createToken(\"{\", { beforeExpr, startsExpr }),\n  braceBarL: createToken(\"{|\", { beforeExpr, startsExpr }),\n  braceHashL: createToken(\"#{\", { beforeExpr, startsExpr }),\n  braceR: createToken(\"}\"),\n  braceBarR: createToken(\"|}\"),\n  parenL: createToken(\"(\", { beforeExpr, startsExpr }),\n  parenR: createToken(\")\"),\n  comma: createToken(\",\", { beforeExpr }),\n  semi: createToken(\";\", { beforeExpr }),\n  colon: createToken(\":\", { beforeExpr }),\n  doubleColon: createToken(\"::\", { beforeExpr }),\n  dot: createToken(\".\"),\n  question: createToken(\"?\", { beforeExpr }),\n  questionDot: createToken(\"?.\"),\n  arrow: createToken(\"=>\", { beforeExpr }),\n  template: createToken(\"template\"),\n  ellipsis: createToken(\"...\", { beforeExpr }),\n  backQuote: createToken(\"`\", { startsExpr }),\n  dollarBraceL: createToken(\"${\", { beforeExpr, startsExpr }),\n  // start: isTemplate\n  templateTail: createToken(\"...`\", { startsExpr }),\n  templateNonTail: createToken(\"...${\", { beforeExpr, startsExpr }),\n  // end: isTemplate\n  at: createToken(\"@\"),\n  hash: createToken(\"#\", { startsExpr }),\n\n  // Special hashbang token.\n  interpreterDirective: createToken(\"#!...\"),\n\n  // Operators. These carry several kinds of properties to help the\n  // parser use them properly (the presence of these properties is\n  // what categorizes them as operators).\n  //\n  // `binop`, when present, specifies that this operator is a binary\n  // operator, and will refer to its precedence.\n  //\n  // `prefix` and `postfix` mark the operator as a prefix or postfix\n  // unary operator.\n  //\n  // `isAssign` marks all of `=`, `+=`, `-=` etcetera, which act as\n  // binary operators with a very low precedence, that should result\n  // in AssignmentExpression nodes.\n\n  // start: isAssign\n  eq: createToken(\"=\", { beforeExpr, isAssign }),\n  assign: createToken(\"_=\", { beforeExpr, isAssign }),\n  slashAssign: createToken(\"_=\", { beforeExpr, isAssign }),\n  // These are only needed to support % and ^ as a Hack-pipe topic token.\n  // When the proposal settles on a token, the others can be merged with\n  // tt.assign.\n  xorAssign: createToken(\"_=\", { beforeExpr, isAssign }),\n  moduloAssign: createToken(\"_=\", { beforeExpr, isAssign }),\n  // end: isAssign\n\n  incDec: createToken(\"++/--\", { prefix, postfix, startsExpr }),\n  bang: createToken(\"!\", { beforeExpr, prefix, startsExpr }),\n  tilde: createToken(\"~\", { beforeExpr, prefix, startsExpr }),\n\n  // More possible topic tokens.\n  // When the proposal settles on a token, at least one of these may be removed.\n  doubleCaret: createToken(\"^^\", { startsExpr }),\n  doubleAt: createToken(\"@@\", { startsExpr }),\n\n  // start: isBinop\n  pipeline: createBinop(\"|>\", 0),\n  nullishCoalescing: createBinop(\"??\", 1),\n  logicalOR: createBinop(\"||\", 1),\n  logicalAND: createBinop(\"&&\", 2),\n  bitwiseOR: createBinop(\"|\", 3),\n  bitwiseXOR: createBinop(\"^\", 4),\n  bitwiseAND: createBinop(\"&\", 5),\n  equality: createBinop(\"==/!=/===/!==\", 6),\n  lt: createBinop(\"</>/<=/>=\", 7),\n  gt: createBinop(\"</>/<=/>=\", 7),\n  relational: createBinop(\"</>/<=/>=\", 7),\n  bitShift: createBinop(\"<</>>/>>>\", 8),\n  bitShiftL: createBinop(\"<</>>/>>>\", 8),\n  bitShiftR: createBinop(\"<</>>/>>>\", 8),\n  plusMin: createToken(\"+/-\", { beforeExpr, binop: 9, prefix, startsExpr }),\n  // startsExpr: required by v8intrinsic plugin\n  modulo: createToken(\"%\", { binop: 10, startsExpr }),\n  // unset `beforeExpr` as it can be `function *`\n  star: createToken(\"*\", { binop: 10 }),\n  slash: createBinop(\"/\", 10),\n  exponent: createToken(\"**\", {\n    beforeExpr,\n    binop: 11,\n    rightAssociative: true,\n  }),\n\n  // Keywords\n  // Don't forget to update packages/babel-helper-validator-identifier/src/keyword.js\n  // when new keywords are added\n  // start: isLiteralPropertyName\n  // start: isKeyword\n  _in: createKeyword(\"in\", { beforeExpr, binop: 7 }),\n  _instanceof: createKeyword(\"instanceof\", { beforeExpr, binop: 7 }),\n  // end: isBinop\n  _break: createKeyword(\"break\"),\n  _case: createKeyword(\"case\", { beforeExpr }),\n  _catch: createKeyword(\"catch\"),\n  _continue: createKeyword(\"continue\"),\n  _debugger: createKeyword(\"debugger\"),\n  _default: createKeyword(\"default\", { beforeExpr }),\n  _else: createKeyword(\"else\", { beforeExpr }),\n  _finally: createKeyword(\"finally\"),\n  _function: createKeyword(\"function\", { startsExpr }),\n  _if: createKeyword(\"if\"),\n  _return: createKeyword(\"return\", { beforeExpr }),\n  _switch: createKeyword(\"switch\"),\n  _throw: createKeyword(\"throw\", { beforeExpr, prefix, startsExpr }),\n  _try: createKeyword(\"try\"),\n  _var: createKeyword(\"var\"),\n  _const: createKeyword(\"const\"),\n  _with: createKeyword(\"with\"),\n  _new: createKeyword(\"new\", { beforeExpr, startsExpr }),\n  _this: createKeyword(\"this\", { startsExpr }),\n  _super: createKeyword(\"super\", { startsExpr }),\n  _class: createKeyword(\"class\", { startsExpr }),\n  _extends: createKeyword(\"extends\", { beforeExpr }),\n  _export: createKeyword(\"export\"),\n  _import: createKeyword(\"import\", { startsExpr }),\n  _null: createKeyword(\"null\", { startsExpr }),\n  _true: createKeyword(\"true\", { startsExpr }),\n  _false: createKeyword(\"false\", { startsExpr }),\n  _typeof: createKeyword(\"typeof\", { beforeExpr, prefix, startsExpr }),\n  _void: createKeyword(\"void\", { beforeExpr, prefix, startsExpr }),\n  _delete: createKeyword(\"delete\", { beforeExpr, prefix, startsExpr }),\n  // start: isLoop\n  _do: createKeyword(\"do\", { isLoop, beforeExpr }),\n  _for: createKeyword(\"for\", { isLoop }),\n  _while: createKeyword(\"while\", { isLoop }),\n  // end: isLoop\n  // end: isKeyword\n\n  // Primary literals\n  // start: isIdentifier\n  _as: createKeywordLike(\"as\", { startsExpr }),\n  _assert: createKeywordLike(\"assert\", { startsExpr }),\n  _async: createKeywordLike(\"async\", { startsExpr }),\n  _await: createKeywordLike(\"await\", { startsExpr }),\n  _from: createKeywordLike(\"from\", { startsExpr }),\n  _get: createKeywordLike(\"get\", { startsExpr }),\n  _let: createKeywordLike(\"let\", { startsExpr }),\n  _meta: createKeywordLike(\"meta\", { startsExpr }),\n  _of: createKeywordLike(\"of\", { startsExpr }),\n  _sent: createKeywordLike(\"sent\", { startsExpr }),\n  _set: createKeywordLike(\"set\", { startsExpr }),\n  _static: createKeywordLike(\"static\", { startsExpr }),\n  _yield: createKeywordLike(\"yield\", { startsExpr }),\n\n  // Flow and TypeScript Keywordlike\n  _asserts: createKeywordLike(\"asserts\", { startsExpr }),\n  _checks: createKeywordLike(\"checks\", { startsExpr }),\n  _exports: createKeywordLike(\"exports\", { startsExpr }),\n  _global: createKeywordLike(\"global\", { startsExpr }),\n  _implements: createKeywordLike(\"implements\", { startsExpr }),\n  _intrinsic: createKeywordLike(\"intrinsic\", { startsExpr }),\n  _infer: createKeywordLike(\"infer\", { startsExpr }),\n  _is: createKeywordLike(\"is\", { startsExpr }),\n  _mixins: createKeywordLike(\"mixins\", { startsExpr }),\n  _proto: createKeywordLike(\"proto\", { startsExpr }),\n  _require: createKeywordLike(\"require\", { startsExpr }),\n  // start: isTSTypeOperator\n  _keyof: createKeywordLike(\"keyof\", { startsExpr }),\n  _readonly: createKeywordLike(\"readonly\", { startsExpr }),\n  _unique: createKeywordLike(\"unique\", { startsExpr }),\n  // end: isTSTypeOperator\n  // start: isTSDeclarationStart\n  _abstract: createKeywordLike(\"abstract\", { startsExpr }),\n  _declare: createKeywordLike(\"declare\", { startsExpr }),\n  _enum: createKeywordLike(\"enum\", { startsExpr }),\n  _module: createKeywordLike(\"module\", { startsExpr }),\n  _namespace: createKeywordLike(\"namespace\", { startsExpr }),\n  // start: isFlowInterfaceOrTypeOrOpaque\n  _interface: createKeywordLike(\"interface\", { startsExpr }),\n  _type: createKeywordLike(\"type\", { startsExpr }),\n  // end: isTSDeclarationStart\n  _opaque: createKeywordLike(\"opaque\", { startsExpr }),\n  // end: isFlowInterfaceOrTypeOrOpaque\n  name: createToken(\"name\", { startsExpr }),\n  // end: isIdentifier\n\n  string: createToken(\"string\", { startsExpr }),\n  num: createToken(\"num\", { startsExpr }),\n  bigint: createToken(\"bigint\", { startsExpr }),\n  decimal: createToken(\"decimal\", { startsExpr }),\n  // end: isLiteralPropertyName\n  regexp: createToken(\"regexp\", { startsExpr }),\n  privateName: createToken(\"#name\", { startsExpr }),\n  eof: createToken(\"eof\"),\n\n  // jsx plugin\n  jsxName: createToken(\"jsxName\"),\n  jsxText: createToken(\"jsxText\", { beforeExpr: true }),\n  jsxTagStart: createToken(\"jsxTagStart\", { startsExpr: true }),\n  jsxTagEnd: createToken(\"jsxTagEnd\"),\n\n  // placeholder plugin\n  placeholder: createToken(\"%%\", { startsExpr: true }),\n};\n\nexport function tokenIsIdentifier(token: TokenType): boolean {\n  return token >= tt._as && token <= tt.name;\n}\n\nexport function tokenKeywordOrIdentifierIsKeyword(token: TokenType): boolean {\n  // we can remove the token >= tt._in check when we\n  // know a token is either keyword or identifier\n  return token <= tt._while;\n}\n\nexport function tokenIsKeywordOrIdentifier(token: TokenType): boolean {\n  return token >= tt._in && token <= tt.name;\n}\n\nexport function tokenIsLiteralPropertyName(token: TokenType): boolean {\n  return token >= tt._in && token <= tt.decimal;\n}\n\nexport function tokenComesBeforeExpression(token: TokenType): boolean {\n  return tokenBeforeExprs[token];\n}\n\nexport function tokenCanStartExpression(token: TokenType): boolean {\n  return tokenStartsExprs[token];\n}\n\nexport function tokenIsAssignment(token: TokenType): boolean {\n  return token >= tt.eq && token <= tt.moduloAssign;\n}\n\nexport function tokenIsFlowInterfaceOrTypeOrOpaque(token: TokenType): boolean {\n  return token >= tt._interface && token <= tt._opaque;\n}\n\nexport function tokenIsLoop(token: TokenType): boolean {\n  return token >= tt._do && token <= tt._while;\n}\n\nexport function tokenIsKeyword(token: TokenType): boolean {\n  return token >= tt._in && token <= tt._while;\n}\n\nexport function tokenIsOperator(token: TokenType): boolean {\n  return token >= tt.pipeline && token <= tt._instanceof;\n}\n\nexport function tokenIsPostfix(token: TokenType): boolean {\n  return token === tt.incDec;\n}\n\nexport function tokenIsPrefix(token: TokenType): boolean {\n  return tokenPrefixes[token];\n}\n\nexport function tokenIsTSTypeOperator(token: TokenType): boolean {\n  return token >= tt._keyof && token <= tt._unique;\n}\n\nexport function tokenIsTSDeclarationStart(token: TokenType): boolean {\n  return token >= tt._abstract && token <= tt._type;\n}\n\nexport function tokenLabelName(token: TokenType): string {\n  return tokenLabels[token];\n}\n\nexport function tokenOperatorPrecedence(token: TokenType): number {\n  return tokenBinops[token];\n}\n\nexport function tokenIsBinaryOperator(token: TokenType): boolean {\n  return tokenBinops[token] !== -1;\n}\n\nexport function tokenIsRightAssociative(token: TokenType): boolean {\n  return token === tt.exponent;\n}\n\nexport function tokenIsTemplate(token: TokenType): boolean {\n  return token >= tt.templateTail && token <= tt.templateNonTail;\n}\n\nexport function getExportedToken(token: TokenType): ExportedTokenType {\n  return tokenTypes[token];\n}\n\nexport function isTokenType(obj: any): boolean {\n  return typeof obj === \"number\";\n}\n\nif (!process.env.BABEL_8_BREAKING) {\n  tokenTypes[tt.braceR].updateContext = context => {\n    context.pop();\n  };\n\n  tokenTypes[tt.braceL].updateContext =\n    tokenTypes[tt.braceHashL].updateContext =\n    tokenTypes[tt.dollarBraceL].updateContext =\n      context => {\n        context.push(tc.brace);\n      };\n\n  tokenTypes[tt.backQuote].updateContext = context => {\n    if (context[context.length - 1] === tc.template) {\n      context.pop();\n    } else {\n      context.push(tc.template);\n    }\n  };\n\n  tokenTypes[tt.jsxTagStart].updateContext = context => {\n    context.push(tc.j_expr, tc.j_oTag);\n  };\n}\n","import * as charCodes from \"charcodes\";\n\n// ## Character categories\n\n// Big ugly regular expressions that match characters in the\n// whitespace, identifier, and identifier-start categories. These\n// are only applied when a character is found to actually have a\n// code point between 0x80 and 0xffff.\n// Generated by `scripts/generate-identifier-regex.js`.\n\n/* prettier-ignore */\nlet nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u0870-\\u0887\\u0889-\\u088e\\u08a0-\\u08c9\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c5d\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cdd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d04-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u1711\\u171f-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4c\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf3\\u1cf5\\u1cf6\\u1cfa\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31bf\\u31f0-\\u31ff\\u3400-\\u4dbf\\u4e00-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7ca\\ua7d0\\ua7d1\\ua7d3\\ua7d5-\\ua7d9\\ua7f2-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab69\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\n/* prettier-ignore */\nlet nonASCIIidentifierChars = \"\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u07fd\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u0898-\\u089f\\u08ca-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u09fe\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0afa-\\u0aff\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b55-\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c04\\u0c3c\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0d00-\\u0d03\\u0d3b\\u0d3c\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d81-\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0ebc\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1715\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u180f-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1abf-\\u1ace\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf4\\u1cf7-\\u1cf9\\u1dc0-\\u1dff\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua82c\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua8ff-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\";\n\nconst nonASCIIidentifierStart = new RegExp(\n  \"[\" + nonASCIIidentifierStartChars + \"]\",\n);\nconst nonASCIIidentifier = new RegExp(\n  \"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\",\n);\n\nnonASCIIidentifierStartChars = nonASCIIidentifierChars = null;\n\n// These are a run-length and offset-encoded representation of the\n// >0xffff code points that are a valid part of identifiers. The\n// offset starts at 0x10000, and each pair of numbers represents an\n// offset to the next range, and then a size of the range. They were\n// generated by `scripts/generate-identifier-regex.js`.\n/* prettier-ignore */\nconst astralIdentifierStartCodes = [0,11,2,25,2,18,2,1,2,14,3,13,35,122,70,52,268,28,4,48,48,31,14,29,6,37,11,29,3,35,5,7,2,4,43,157,19,35,5,35,5,39,9,51,13,10,2,14,2,6,2,1,2,10,2,14,2,6,2,1,68,310,10,21,11,7,25,5,2,41,2,8,70,5,3,0,2,43,2,1,4,0,3,22,11,22,10,30,66,18,2,1,11,21,11,25,71,55,7,1,65,0,16,3,2,2,2,28,43,28,4,28,36,7,2,27,28,53,11,21,11,18,14,17,111,72,56,50,14,50,14,35,349,41,7,1,79,28,11,0,9,21,43,17,47,20,28,22,13,52,58,1,3,0,14,44,33,24,27,35,30,0,3,0,9,34,4,0,13,47,15,3,22,0,2,0,36,17,2,24,85,6,2,0,2,3,2,14,2,9,8,46,39,7,3,1,3,21,2,6,2,1,2,4,4,0,19,0,13,4,159,52,19,3,21,2,31,47,21,1,2,0,185,46,42,3,37,47,21,0,60,42,14,0,72,26,38,6,186,43,117,63,32,7,3,0,3,7,2,1,2,23,16,0,2,0,95,7,3,38,17,0,2,0,29,0,11,39,8,0,22,0,12,45,20,0,19,72,264,8,2,36,18,0,50,29,113,6,2,1,2,37,22,0,26,5,2,1,2,31,15,0,328,18,190,0,80,921,103,110,18,195,2637,96,16,1070,4050,582,8634,568,8,30,18,78,18,29,19,47,17,3,32,20,6,18,689,63,129,74,6,0,67,12,65,1,2,0,29,6135,9,1237,43,8,8936,3,2,6,2,1,2,290,46,2,18,3,9,395,2309,106,6,12,4,8,8,9,5991,84,2,70,2,1,3,0,3,1,3,3,2,11,2,0,2,6,2,64,2,3,3,7,2,6,2,27,2,3,2,4,2,0,4,6,2,339,3,24,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,7,1845,30,482,44,11,6,17,0,322,29,19,43,1269,6,2,3,2,1,2,14,2,196,60,67,8,0,1205,3,2,26,2,1,2,0,3,0,2,9,2,3,2,0,2,0,7,0,5,0,2,0,2,0,2,2,2,1,2,0,3,0,2,0,2,0,2,0,2,0,2,1,2,0,3,3,2,6,2,3,2,3,2,0,2,9,2,16,6,2,2,4,2,16,4421,42719,33,4152,8,221,3,5761,15,7472,3104,541,1507,4938];\n/* prettier-ignore */\nconst astralIdentifierCodes = [509,0,227,0,150,4,294,9,1368,2,2,1,6,3,41,2,5,0,166,1,574,3,9,9,370,1,154,10,50,3,123,2,54,14,32,10,3,1,11,3,46,10,8,0,46,9,7,2,37,13,2,9,6,1,45,0,13,2,49,13,9,3,2,11,83,11,7,0,161,11,6,9,7,3,56,1,2,6,3,1,3,2,10,0,11,1,3,6,4,4,193,17,10,9,5,0,82,19,13,9,214,6,3,8,28,1,83,16,16,9,82,12,9,9,84,14,5,9,243,14,166,9,71,5,2,1,3,3,2,0,2,1,13,9,120,6,3,6,4,0,29,9,41,6,2,3,9,0,10,10,47,15,406,7,2,7,17,9,57,21,2,13,123,5,4,0,2,1,2,6,2,0,9,9,49,4,2,1,2,4,9,9,330,3,19306,9,87,9,39,4,60,6,26,9,1014,0,2,54,8,3,82,0,12,1,19628,1,4706,45,3,22,543,4,4,5,9,7,3,6,31,3,149,2,1418,49,513,54,5,49,9,0,15,0,23,4,2,14,1361,6,2,16,3,6,2,1,2,4,262,6,10,9,357,0,62,13,1495,6,110,6,6,9,4759,9,787719,239];\n\n// This has a complexity linear to the value of the code. The\n// assumption is that looking up astral identifier characters is\n// rare.\nfunction isInAstralSet(code: number, set: readonly number[]): boolean {\n  let pos = 0x10000;\n  for (let i = 0, length = set.length; i < length; i += 2) {\n    pos += set[i];\n    if (pos > code) return false;\n\n    pos += set[i + 1];\n    if (pos >= code) return true;\n  }\n  return false;\n}\n\n// Test whether a given character code starts an identifier.\n\nexport function isIdentifierStart(code: number): boolean {\n  if (code < charCodes.uppercaseA) return code === charCodes.dollarSign;\n  if (code <= charCodes.uppercaseZ) return true;\n  if (code < charCodes.lowercaseA) return code === charCodes.underscore;\n  if (code <= charCodes.lowercaseZ) return true;\n  if (code <= 0xffff) {\n    return (\n      code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code))\n    );\n  }\n  return isInAstralSet(code, astralIdentifierStartCodes);\n}\n\n// Test whether a given character is part of an identifier.\n\nexport function isIdentifierChar(code: number): boolean {\n  if (code < charCodes.digit0) return code === charCodes.dollarSign;\n  if (code < charCodes.colon) return true;\n  if (code < charCodes.uppercaseA) return false;\n  if (code <= charCodes.uppercaseZ) return true;\n  if (code < charCodes.lowercaseA) return code === charCodes.underscore;\n  if (code <= charCodes.lowercaseZ) return true;\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code));\n  }\n  return (\n    isInAstralSet(code, astralIdentifierStartCodes) ||\n    isInAstralSet(code, astralIdentifierCodes)\n  );\n}\n\n// Test whether a given string is a valid identifier name\n\nexport function isIdentifierName(name: string): boolean {\n  let isFirst = true;\n  for (let i = 0; i < name.length; i++) {\n    // The implementation is based on\n    // https://source.chromium.org/chromium/chromium/src/+/master:v8/src/builtins/builtins-string-gen.cc;l=1455;drc=221e331b49dfefadbc6fa40b0c68e6f97606d0b3;bpv=0;bpt=1\n    // We reimplement `codePointAt` because `codePointAt` is a V8 builtin which is not inlined by TurboFan (as of M91)\n    // since `name` is mostly ASCII, an inlined `charCodeAt` wins here\n    let cp = name.charCodeAt(i);\n    if ((cp & 0xfc00) === 0xd800 && i + 1 < name.length) {\n      const trail = name.charCodeAt(++i);\n      if ((trail & 0xfc00) === 0xdc00) {\n        cp = 0x10000 + ((cp & 0x3ff) << 10) + (trail & 0x3ff);\n      }\n    }\n    if (isFirst) {\n      isFirst = false;\n      if (!isIdentifierStart(cp)) {\n        return false;\n      }\n    } else if (!isIdentifierChar(cp)) {\n      return false;\n    }\n  }\n  return !isFirst;\n}\n","const reservedWords = {\n  keyword: [\n    \"break\",\n    \"case\",\n    \"catch\",\n    \"continue\",\n    \"debugger\",\n    \"default\",\n    \"do\",\n    \"else\",\n    \"finally\",\n    \"for\",\n    \"function\",\n    \"if\",\n    \"return\",\n    \"switch\",\n    \"throw\",\n    \"try\",\n    \"var\",\n    \"const\",\n    \"while\",\n    \"with\",\n    \"new\",\n    \"this\",\n    \"super\",\n    \"class\",\n    \"extends\",\n    \"export\",\n    \"import\",\n    \"null\",\n    \"true\",\n    \"false\",\n    \"in\",\n    \"instanceof\",\n    \"typeof\",\n    \"void\",\n    \"delete\",\n  ],\n  strict: [\n    \"implements\",\n    \"interface\",\n    \"let\",\n    \"package\",\n    \"private\",\n    \"protected\",\n    \"public\",\n    \"static\",\n    \"yield\",\n  ],\n  strictBind: [\"eval\", \"arguments\"],\n};\nconst keywords = new Set(reservedWords.keyword);\nconst reservedWordsStrictSet = new Set(reservedWords.strict);\nconst reservedWordsStrictBindSet = new Set(reservedWords.strictBind);\n\n/**\n * Checks if word is a reserved word in non-strict mode\n */\nexport function isReservedWord(word: string, inModule: boolean): boolean {\n  return (inModule && word === \"await\") || word === \"enum\";\n}\n\n/**\n * Checks if word is a reserved word in non-binding strict mode\n *\n * Includes non-strict reserved words\n */\nexport function isStrictReservedWord(word: string, inModule: boolean): boolean {\n  return isReservedWord(word, inModule) || reservedWordsStrictSet.has(word);\n}\n\n/**\n * Checks if word is a reserved word in binding strict mode, but it is allowed as\n * a normal identifier.\n */\nexport function isStrictBindOnlyReservedWord(word: string): boolean {\n  return reservedWordsStrictBindSet.has(word);\n}\n\n/**\n * Checks if word is a reserved word in binding strict mode\n *\n * Includes non-strict reserved words and non-binding strict reserved words\n */\nexport function isStrictBindReservedWord(\n  word: string,\n  inModule: boolean,\n): boolean {\n  return (\n    isStrictReservedWord(word, inModule) || isStrictBindOnlyReservedWord(word)\n  );\n}\n\nexport function isKeyword(word: string): boolean {\n  return keywords.has(word);\n}\n","/* eslint max-len: 0 */\n\n// @flow\n\nimport * as charCodes from \"charcodes\";\nimport { isIdentifierStart } from \"@babel/helper-validator-identifier\";\n\nexport {\n  isIdentifierStart,\n  isIdentifierChar,\n  isReservedWord,\n  isStrictBindOnlyReservedWord,\n  isStrictBindReservedWord,\n  isStrictReservedWord,\n  isKeyword,\n} from \"@babel/helper-validator-identifier\";\n\nexport const keywordRelationalOperator = /^in(stanceof)?$/;\n\n// Test whether a current state character code and next character code is @\n\nexport function isIteratorStart(\n  current: number,\n  next: number,\n  next2: number,\n): boolean {\n  return (\n    current === charCodes.atSign &&\n    next === charCodes.atSign &&\n    isIdentifierStart(next2)\n  );\n}\n\n// This is the comprehensive set of JavaScript reserved words\n// If a word is in this set, it could be a reserved word,\n// depending on sourceType/strictMode/binding info. In other words\n// if a word is not in this set, it is not a reserved word under\n// any circumstance.\nconst reservedWordLikeSet = new Set([\n  \"break\",\n  \"case\",\n  \"catch\",\n  \"continue\",\n  \"debugger\",\n  \"default\",\n  \"do\",\n  \"else\",\n  \"finally\",\n  \"for\",\n  \"function\",\n  \"if\",\n  \"return\",\n  \"switch\",\n  \"throw\",\n  \"try\",\n  \"var\",\n  \"const\",\n  \"while\",\n  \"with\",\n  \"new\",\n  \"this\",\n  \"super\",\n  \"class\",\n  \"extends\",\n  \"export\",\n  \"import\",\n  \"null\",\n  \"true\",\n  \"false\",\n  \"in\",\n  \"instanceof\",\n  \"typeof\",\n  \"void\",\n  \"delete\",\n  // strict\n  \"implements\",\n  \"interface\",\n  \"let\",\n  \"package\",\n  \"private\",\n  \"protected\",\n  \"public\",\n  \"static\",\n  \"yield\",\n  // strictBind\n  \"eval\",\n  \"arguments\",\n  // reservedWorkLike\n  \"enum\",\n  \"await\",\n]);\n\nexport function canBeReservedWord(word: string): boolean {\n  return reservedWordLikeSet.has(word);\n}\n","// @flow\n\n// Each scope gets a bitset that may contain these flags\n// prettier-ignore\nexport const SCOPE_OTHER        = 0b000000000,\n             SCOPE_PROGRAM      = 0b000000001,\n             SCOPE_FUNCTION     = 0b000000010,\n             SCOPE_ARROW        = 0b000000100,\n             SCOPE_SIMPLE_CATCH = 0b000001000,\n             SCOPE_SUPER        = 0b000010000,\n             SCOPE_DIRECT_SUPER = 0b000100000,\n             SCOPE_CLASS        = 0b001000000,\n             SCOPE_STATIC_BLOCK = 0b010000000,\n             SCOPE_TS_MODULE    = 0b100000000,\n             SCOPE_VAR = SCOPE_PROGRAM | SCOPE_FUNCTION | SCOPE_TS_MODULE;\n\nexport type ScopeFlags =\n  | typeof SCOPE_OTHER\n  | typeof SCOPE_PROGRAM\n  | typeof SCOPE_FUNCTION\n  | typeof SCOPE_VAR\n  | typeof SCOPE_ARROW\n  | typeof SCOPE_SIMPLE_CATCH\n  | typeof SCOPE_SUPER\n  | typeof SCOPE_DIRECT_SUPER\n  | typeof SCOPE_CLASS\n  | typeof SCOPE_STATIC_BLOCK;\n\n// These flags are meant to be _only_ used inside the Scope class (or subclasses).\n// prettier-ignore\nexport const BIND_KIND_VALUE            = 0b000000_0000_01,\n             BIND_KIND_TYPE             = 0b000000_0000_10,\n             // Used in checkLVal and declareName to determine the type of a binding\n             BIND_SCOPE_VAR             = 0b000000_0001_00, // Var-style binding\n             BIND_SCOPE_LEXICAL         = 0b000000_0010_00, // Let- or const-style binding\n             BIND_SCOPE_FUNCTION        = 0b000000_0100_00, // Function declaration\n             BIND_SCOPE_OUTSIDE         = 0b000000_1000_00, // Special case for function names as\n                                                   // bound inside the function\n             // Misc flags\n             BIND_FLAGS_NONE            = 0b000001_0000_00,\n             BIND_FLAGS_CLASS           = 0b000010_0000_00,\n             BIND_FLAGS_TS_ENUM         = 0b000100_0000_00,\n             BIND_FLAGS_TS_CONST_ENUM   = 0b001000_0000_00,\n             BIND_FLAGS_TS_EXPORT_ONLY  = 0b010000_0000_00,\n             BIND_FLAGS_FLOW_DECLARE_FN = 0b100000_0000_00;\n\n// These flags are meant to be _only_ used by Scope consumers\n// prettier-ignore\n/*                              =    is value?    |    is type?    |      scope          |    misc flags    */\nexport const BIND_CLASS         = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL  | BIND_FLAGS_CLASS  ,\n             BIND_LEXICAL       = BIND_KIND_VALUE | 0              | BIND_SCOPE_LEXICAL  | 0                 ,\n             BIND_VAR           = BIND_KIND_VALUE | 0              | BIND_SCOPE_VAR      | 0                 ,\n             BIND_FUNCTION      = BIND_KIND_VALUE | 0              | BIND_SCOPE_FUNCTION | 0                 ,\n             BIND_TS_INTERFACE  = 0               | BIND_KIND_TYPE | 0                   | BIND_FLAGS_CLASS  ,\n             BIND_TS_TYPE       = 0               | BIND_KIND_TYPE | 0                   | 0                 ,\n             BIND_TS_ENUM       = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL  | BIND_FLAGS_TS_ENUM,\n             BIND_TS_AMBIENT    = 0               | 0              | 0            | BIND_FLAGS_TS_EXPORT_ONLY,\n             // These bindings don't introduce anything in the scope. They are used for assignments and\n             // function expressions IDs.\n             BIND_NONE          = 0               | 0              | 0                   | BIND_FLAGS_NONE   ,\n             BIND_OUTSIDE       = BIND_KIND_VALUE | 0              | 0                   | BIND_FLAGS_NONE   ,\n\n             BIND_TS_CONST_ENUM = BIND_TS_ENUM | BIND_FLAGS_TS_CONST_ENUM,\n             BIND_TS_NAMESPACE  = 0               | 0              | 0            | BIND_FLAGS_TS_EXPORT_ONLY,\n\n             BIND_FLOW_DECLARE_FN = BIND_FLAGS_FLOW_DECLARE_FN;\n\nexport type BindingTypes =\n  | typeof BIND_NONE\n  | typeof BIND_OUTSIDE\n  | typeof BIND_VAR\n  | typeof BIND_LEXICAL\n  | typeof BIND_CLASS\n  | typeof BIND_FUNCTION\n  | typeof BIND_TS_INTERFACE\n  | typeof BIND_TS_TYPE\n  | typeof BIND_TS_ENUM\n  | typeof BIND_TS_AMBIENT\n  | typeof BIND_TS_NAMESPACE;\n\n// prettier-ignore\nexport const CLASS_ELEMENT_FLAG_STATIC = 0b1_00,\n             CLASS_ELEMENT_KIND_GETTER = 0b0_10,\n             CLASS_ELEMENT_KIND_SETTER = 0b0_01,\n             CLASS_ELEMENT_KIND_ACCESSOR = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_KIND_SETTER;\n\n// prettier-ignore\nexport const CLASS_ELEMENT_STATIC_GETTER   = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_FLAG_STATIC,\n             CLASS_ELEMENT_STATIC_SETTER   = CLASS_ELEMENT_KIND_SETTER | CLASS_ELEMENT_FLAG_STATIC,\n             CLASS_ELEMENT_INSTANCE_GETTER = CLASS_ELEMENT_KIND_GETTER,\n             CLASS_ELEMENT_INSTANCE_SETTER = CLASS_ELEMENT_KIND_SETTER,\n             CLASS_ELEMENT_OTHER           = 0;\n\nexport type ClassElementTypes =\n  | typeof CLASS_ELEMENT_STATIC_GETTER\n  | typeof CLASS_ELEMENT_STATIC_SETTER\n  | typeof CLASS_ELEMENT_INSTANCE_GETTER\n  | typeof CLASS_ELEMENT_INSTANCE_SETTER\n  | typeof CLASS_ELEMENT_OTHER;\n","// @flow\n\n/*:: declare var invariant; */\n\nimport BaseParser from \"./base\";\nimport type { Comment, Node } from \"../types\";\nimport * as charCodes from \"charcodes\";\n\n/**\n * A whitespace token containing comments\n * @typedef CommentWhitespace\n * @type {object}\n * @property {number} start - the start of the whitespace token.\n * @property {number} end - the end of the whitespace token.\n * @property {Array<Comment>} comments - the containing comments\n * @property {Node | null} leadingNode - the immediately preceding AST node of the whitespace token\n * @property {Node | null} trailingNode - the immediately following AST node of the whitespace token\n * @property {Node | null} containingNode - the innermost AST node containing the whitespace\n *                                         with minimal size (|end - start|)\n */\nexport type CommentWhitespace = {\n  start: number,\n  end: number,\n  comments: Array<Comment>,\n  leadingNode: Node | null,\n  trailingNode: Node | null,\n  containingNode: Node | null,\n};\n\n/**\n * Merge comments with node's trailingComments or assign comments to be\n * trailingComments. New comments will be placed before old comments\n * because the commentStack is enumerated reversely.\n *\n * @param {Node} node\n * @param {Array<Comment>} comments\n */\nfunction setTrailingComments(node: Node, comments: Array<Comment>) {\n  if (node.trailingComments === undefined) {\n    node.trailingComments = comments;\n  } else {\n    node.trailingComments.unshift(...comments);\n  }\n}\n\n/**\n * Merge comments with node's leadingComments or assign comments to be\n * leadingComments. New comments will be placed before old comments\n * because the commentStack is enumerated reversely.\n *\n * @param {Node} node\n * @param {Array<Comment>} comments\n */\nfunction setLeadingComments(node: Node, comments: Array<Comment>) {\n  if (node.leadingComments === undefined) {\n    node.leadingComments = comments;\n  } else {\n    node.leadingComments.unshift(...comments);\n  }\n}\n\n/**\n * Merge comments with node's innerComments or assign comments to be\n * innerComments. New comments will be placed before old comments\n * because the commentStack is enumerated reversely.\n *\n * @param {Node} node\n * @param {Array<Comment>} comments\n */\nexport function setInnerComments(node: Node, comments: Array<Comment>) {\n  if (node.innerComments === undefined) {\n    node.innerComments = comments;\n  } else {\n    node.innerComments.unshift(...comments);\n  }\n}\n\n/**\n * Given node and elements array, if elements has non-null element,\n * merge comments to its trailingComments, otherwise merge comments\n * to node's innerComments\n *\n * @param {Node} node\n * @param {Array<Node>} elements\n * @param {Array<Comment>} comments\n */\nfunction adjustInnerComments(\n  node: Node,\n  elements: Array<Node>,\n  commentWS: CommentWhitespace,\n) {\n  let lastElement = null;\n  let i = elements.length;\n  while (lastElement === null && i > 0) {\n    lastElement = elements[--i];\n  }\n  if (lastElement === null || lastElement.start > commentWS.start) {\n    setInnerComments(node, commentWS.comments);\n  } else {\n    setTrailingComments(lastElement, commentWS.comments);\n  }\n}\n\n/** @class CommentsParser */\nexport default class CommentsParser extends BaseParser {\n  addComment(comment: Comment): void {\n    if (this.filename) comment.loc.filename = this.filename;\n    this.state.comments.push(comment);\n  }\n\n  /**\n   * Given a newly created AST node _n_, attach _n_ to a comment whitespace _w_ if applicable\n   * {@see {@link CommentWhitespace}}\n   *\n   * @param {Node} node\n   * @returns {void}\n   * @memberof CommentsParser\n   */\n  processComment(node: Node): void {\n    const { commentStack } = this.state;\n    const commentStackLength = commentStack.length;\n    if (commentStackLength === 0) return;\n    let i = commentStackLength - 1;\n    const lastCommentWS = commentStack[i];\n\n    if (lastCommentWS.start === node.end) {\n      lastCommentWS.leadingNode = node;\n      i--;\n    }\n\n    const { start: nodeStart } = node;\n    // invariant: for all 0 <= j <= i, let c = commentStack[j], c must satisfy c.end < node.end\n    for (; i >= 0; i--) {\n      const commentWS = commentStack[i];\n      const commentEnd = commentWS.end;\n      if (commentEnd > nodeStart) {\n        // by definition of commentWhiteSpace, this implies commentWS.start > nodeStart\n        // so node can be a containingNode candidate. At this time we can finalize the comment\n        // whitespace, because\n        // 1) its leadingNode or trailingNode, if exists, will not change\n        // 2) its containingNode have been assigned and will not change because it is the\n        //    innermost minimal-sized AST node\n        commentWS.containingNode = node;\n        this.finalizeComment(commentWS);\n        commentStack.splice(i, 1);\n      } else {\n        if (commentEnd === nodeStart) {\n          commentWS.trailingNode = node;\n        }\n        // stop the loop when commentEnd <= nodeStart\n        break;\n      }\n    }\n  }\n\n  /**\n   * Assign the comments of comment whitespaces to related AST nodes.\n   * Also adjust innerComments following trailing comma.\n   *\n   * @memberof CommentsParser\n   */\n  finalizeComment(commentWS: CommentWhitespace) {\n    const { comments } = commentWS;\n    if (commentWS.leadingNode !== null || commentWS.trailingNode !== null) {\n      if (commentWS.leadingNode !== null) {\n        setTrailingComments(commentWS.leadingNode, comments);\n      }\n      if (commentWS.trailingNode !== null) {\n        setLeadingComments(commentWS.trailingNode, comments);\n      }\n    } else {\n      /*:: invariant(commentWS.containingNode !== null) */\n      const { containingNode: node, start: commentStart } = commentWS;\n      if (this.input.charCodeAt(commentStart - 1) === charCodes.comma) {\n        // If a commentWhitespace follows a comma and the containingNode allows\n        // list structures with trailing comma, merge it to the trailingComment\n        // of the last non-null list element\n        switch (node.type) {\n          case \"ObjectExpression\":\n          case \"ObjectPattern\":\n          case \"RecordExpression\":\n            adjustInnerComments(node, node.properties, commentWS);\n            break;\n          case \"CallExpression\":\n          case \"OptionalCallExpression\":\n            adjustInnerComments(node, node.arguments, commentWS);\n            break;\n          case \"FunctionDeclaration\":\n          case \"FunctionExpression\":\n          case \"ArrowFunctionExpression\":\n          case \"ObjectMethod\":\n          case \"ClassMethod\":\n          case \"ClassPrivateMethod\":\n            adjustInnerComments(node, node.params, commentWS);\n            break;\n          case \"ArrayExpression\":\n          case \"ArrayPattern\":\n          case \"TupleExpression\":\n            adjustInnerComments(node, node.elements, commentWS);\n            break;\n          case \"ExportNamedDeclaration\":\n          case \"ImportDeclaration\":\n            adjustInnerComments(node, node.specifiers, commentWS);\n            break;\n          default: {\n            setInnerComments(node, comments);\n          }\n        }\n      } else {\n        setInnerComments(node, comments);\n      }\n    }\n  }\n\n  /**\n   * Drains remaining commentStack and applies finalizeComment\n   * to each comment whitespace. Used only in parseExpression\n   * where the top level AST node is _not_ Program\n   * {@see {@link CommentsParser#finalizeComment}}\n   *\n   * @memberof CommentsParser\n   */\n  finalizeRemainingComments() {\n    const { commentStack } = this.state;\n    for (let i = commentStack.length - 1; i >= 0; i--) {\n      this.finalizeComment(commentStack[i]);\n    }\n    this.state.commentStack = [];\n  }\n\n  /**\n   * Reset previous node trailing comments. Used in object / class\n   * property parsing. We parse `async`, `static`, `set` and `get`\n   * as an identifier but may reinterpret it into an async/static/accessor\n   * method later. In this case the identifier is not part of the AST and we\n   * should sync the knowledge to commentStacks\n   *\n   * For example, when parsing */\n  // async /* 1 */ function f() {}\n  /*\n   * the comment whitespace \"* 1 *\" has leading node Identifier(async). When\n   * we see the function token, we create a Function node and mark \"* 1 *\" as\n   * inner comments. So \"* 1 *\" should be detached from the Identifier node.\n   *\n   * @param {N.Node} node the last finished AST node _before_ current token\n   * @returns\n   * @memberof CommentsParser\n   */\n  resetPreviousNodeTrailingComments(node: Node) {\n    const { commentStack } = this.state;\n    const { length } = commentStack;\n    if (length === 0) return;\n    const commentWS = commentStack[length - 1];\n    if (commentWS.leadingNode === node) {\n      commentWS.leadingNode = null;\n    }\n  }\n\n  /**\n   * Attach a node to the comment whitespaces right before/after\n   * the given range.\n   *\n   * This is used to properly attach comments around parenthesized\n   * expressions as leading/trailing comments of the inner expression.\n   *\n   * @param {Node} node\n   * @param {number} start\n   * @param {number} end\n   */\n  takeSurroundingComments(node: Node, start: number, end: number) {\n    const { commentStack } = this.state;\n    const commentStackLength = commentStack.length;\n    if (commentStackLength === 0) return;\n    let i = commentStackLength - 1;\n\n    for (; i >= 0; i--) {\n      const commentWS = commentStack[i];\n      const commentEnd = commentWS.end;\n      const commentStart = commentWS.start;\n\n      if (commentStart === end) {\n        commentWS.leadingNode = node;\n      } else if (commentEnd === start) {\n        commentWS.trailingNode = node;\n      } else if (commentEnd < start) {\n        break;\n      }\n    }\n  }\n}\n","// @flow\n\nimport * as charCodes from \"charcodes\";\n\n// Matches a whole line break (where CRLF is considered a single\n// line break). Used to count lines.\nexport const lineBreak = /\\r\\n?|[\\n\\u2028\\u2029]/;\nexport const lineBreakG = new RegExp(lineBreak.source, \"g\");\n\n// https://tc39.github.io/ecma262/#sec-line-terminators\nexport function isNewLine(code: number): boolean {\n  switch (code) {\n    case charCodes.lineFeed:\n    case charCodes.carriageReturn:\n    case charCodes.lineSeparator:\n    case charCodes.paragraphSeparator:\n      return true;\n\n    default:\n      return false;\n  }\n}\n\nexport const skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g;\n\nexport const skipWhiteSpaceInLine =\n  /(?:[^\\S\\n\\r\\u2028\\u2029]|\\/\\/.*|\\/\\*.*?\\*\\/)*/y;\n\n// Skip whitespace and single-line comments, including /* no newline here */.\n// After this RegExp matches, its lastIndex points to a line terminator, or\n// the start of multi-line comment (which is effectively a line terminator),\n// or the end of string.\nexport const skipWhiteSpaceToLineBreak = new RegExp(\n  // Unfortunately JS doesn't support Perl's atomic /(?>pattern)/ or\n  // possessive quantifiers, so we use a trick to prevent backtracking\n  // when the look-ahead for line terminator fails.\n  \"(?=(\" +\n    // Capture the whitespace and comments that should be skipped inside\n    // a look-ahead assertion, and then re-match the group as a unit.\n    skipWhiteSpaceInLine.source +\n    \"))\\\\1\" +\n    // Look-ahead for either line terminator, start of multi-line comment,\n    // or end of string.\n    /(?=[\\n\\r\\u2028\\u2029]|\\/\\*(?!.*?\\*\\/)|$)/.source,\n  \"y\", // sticky\n);\n\n// https://tc39.github.io/ecma262/#sec-white-space\nexport function isWhitespace(code: number): boolean {\n  switch (code) {\n    case 0x0009: // CHARACTER TABULATION\n    case 0x000b: // LINE TABULATION\n    case 0x000c: // FORM FEED\n    case charCodes.space:\n    case charCodes.nonBreakingSpace:\n    case charCodes.oghamSpaceMark:\n    case 0x2000: // EN QUAD\n    case 0x2001: // EM QUAD\n    case 0x2002: // EN SPACE\n    case 0x2003: // EM SPACE\n    case 0x2004: // THREE-PER-EM SPACE\n    case 0x2005: // FOUR-PER-EM SPACE\n    case 0x2006: // SIX-PER-EM SPACE\n    case 0x2007: // FIGURE SPACE\n    case 0x2008: // PUNCTUATION SPACE\n    case 0x2009: // THIN SPACE\n    case 0x200a: // HAIR SPACE\n    case 0x202f: // NARROW NO-BREAK SPACE\n    case 0x205f: // MEDIUM MATHEMATICAL SPACE\n    case 0x3000: // IDEOGRAPHIC SPACE\n    case 0xfeff: // ZERO WIDTH NO-BREAK SPACE\n      return true;\n\n    default:\n      return false;\n  }\n}\n","// @flow\n\nimport type { Options } from \"../options\";\nimport * as N from \"../types\";\nimport type { CommentWhitespace } from \"../parser/comments\";\nimport { Position } from \"../util/location\";\n\nimport { types as ct, type TokContext } from \"./context\";\nimport { tt, type TokenType } from \"./types\";\nimport { Errors, type ParseError } from \"../parse-error\";\n\nexport type DeferredStrictError =\n  | typeof Errors.StrictNumericEscape\n  | typeof Errors.StrictOctalLiteral;\n\ntype TopicContextState = {\n  // When a topic binding has been currently established,\n  // then this is 1. Otherwise, it is 0. This is forwards compatible\n  // with a future plugin for multiple lexical topics.\n  maxNumOfResolvableTopics: number,\n\n  // When a topic binding has been currently established, and if that binding\n  // has been used as a topic reference `#`, then this is 0. Otherwise, it is\n  // `null`. This is forwards compatible with a future plugin for multiple\n  // lexical topics.\n  maxTopicIndex: null | 0,\n};\n\nexport default class State {\n  strict: boolean;\n  curLine: number;\n  lineStart: number;\n\n  // And, if locations are used, the {line, column} object\n  // corresponding to those offsets\n  startLoc: Position;\n  endLoc: Position;\n\n  init({ strictMode, sourceType, startLine, startColumn }: Options): void {\n    this.strict =\n      strictMode === false\n        ? false\n        : strictMode === true\n        ? true\n        : sourceType === \"module\";\n\n    this.curLine = startLine;\n    this.lineStart = -startColumn;\n    this.startLoc = this.endLoc = new Position(startLine, startColumn, 0);\n  }\n\n  errors: ParseError<any>[] = [];\n\n  // Used to signify the start of a potential arrow function\n  potentialArrowAt: number = -1;\n\n  // Used to signify the start of an expression which looks like a\n  // typed arrow function, but it isn't\n  // e.g. a ? (b) : c => d\n  //          ^\n  noArrowAt: number[] = [];\n\n  // Used to signify the start of an expression whose params, if it looks like\n  // an arrow function, shouldn't be converted to assignable nodes.\n  // This is used to defer the validation of typed arrow functions inside\n  // conditional expressions.\n  // e.g. a ? (b) : c => d\n  //          ^\n  noArrowParamsConversionAt: number[] = [];\n\n  // Flags to track\n  maybeInArrowParameters: boolean = false;\n  inType: boolean = false;\n  noAnonFunctionType: boolean = false;\n  hasFlowComment: boolean = false;\n  isAmbientContext: boolean = false;\n  inAbstractClass: boolean = false;\n  inDisallowConditionalTypesContext: boolean = false;\n\n  // For the Hack-style pipelines plugin\n  topicContext: TopicContextState = {\n    maxNumOfResolvableTopics: 0,\n    maxTopicIndex: null,\n  };\n\n  // For the F#-style pipelines plugin\n  soloAwait: boolean = false;\n  inFSharpPipelineDirectBody: boolean = false;\n\n  // Labels in scope.\n  labels: Array<{\n    kind: ?(\"loop\" | \"switch\"),\n    name?: ?string,\n    statementStart?: number,\n  }> = [];\n\n  // Leading decorators. Last element of the stack represents the decorators in current context.\n  // Supports nesting of decorators, e.g. @foo(@bar class inner {}) class outer {}\n  // where @foo belongs to the outer class and @bar to the inner\n  decoratorStack: Array<Array<N.Decorator>> = [[]];\n\n  // Comment store for Program.comments\n  comments: Array<N.Comment> = [];\n\n  // Comment attachment store\n  commentStack: Array<CommentWhitespace> = [];\n\n  // The current position of the tokenizer in the input.\n  pos: number = 0;\n\n  // Properties of the current token:\n  // Its type\n  type: TokenType = tt.eof;\n\n  // For tokens that include more information than their type, the value\n  value: any = null;\n\n  // Its start and end offset\n  start: number = 0;\n  end: number = 0;\n\n  // Position information for the previous token\n  // $FlowIgnore this is initialized when generating the second token.\n  lastTokEndLoc: Position = null;\n  // $FlowIgnore this is initialized when generating the second token.\n  lastTokStartLoc: Position = null;\n  lastTokStart: number = 0;\n\n  // The context stack is used to track whether the apostrophe \"`\" starts\n  // or ends a string template\n  context: Array<TokContext> = [ct.brace];\n  // Used to track whether a JSX element is allowed to form\n  canStartJSXElement: boolean = true;\n\n  // Used to signal to callers of `readWord1` whether the word\n  // contained any escape sequences. This is needed because words with\n  // escape sequences must not be interpreted as keywords.\n  containsEsc: boolean = false;\n\n  // This property is used to track the following errors\n  // - StrictNumericEscape\n  // - StrictOctalLiteral\n  //\n  // in a literal that occurs prior to/immediately after a \"use strict\" directive.\n\n  // todo(JLHwung): set strictErrors to null and avoid recording string errors\n  // after a non-directive is parsed\n  strictErrors: Map<number, [DeferredStrictError, Position]> = new Map();\n\n  // Tokens length in token store\n  tokensLength: number = 0;\n\n  curPosition(): Position {\n    return new Position(this.curLine, this.pos - this.lineStart, this.pos);\n  }\n\n  clone(skipArrays?: boolean): State {\n    const state = new State();\n    const keys = Object.keys(this);\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n      // $FlowIgnore\n      let val = this[key];\n\n      if (!skipArrays && Array.isArray(val)) {\n        val = val.slice();\n      }\n\n      // $FlowIgnore\n      state[key] = val;\n    }\n\n    return state;\n  }\n}\n\nexport type LookaheadState = {\n  pos: number,\n  value: any,\n  type: TokenType,\n  start: number,\n  end: number,\n  /* Used only in readToken_mult_modulo */\n  inType: boolean,\n};\n","// @flow\n\n/*:: declare var invariant; */\n\nimport type { Options } from \"../options\";\nimport {\n  Position,\n  SourceLocation,\n  createPositionWithColumnOffset,\n} from \"../util/location\";\nimport CommentsParser from \"../parser/comments\";\nimport * as N from \"../types\";\nimport * as charCodes from \"charcodes\";\nimport { isIdentifierStart, isIdentifierChar } from \"../util/identifier\";\nimport {\n  tokenIsKeyword,\n  tokenLabelName,\n  tt,\n  keywords as keywordTypes,\n  type TokenType,\n} from \"./types\";\nimport { type TokContext } from \"./context\";\nimport {\n  Errors,\n  type ParseError,\n  type ParseErrorConstructor,\n  type RaiseProperties,\n} from \"../parse-error\";\nimport {\n  lineBreakG,\n  isNewLine,\n  isWhitespace,\n  skipWhiteSpace,\n} from \"../util/whitespace\";\nimport State from \"./state\";\nimport type { LookaheadState, DeferredStrictError } from \"./state\";\n\nconst VALID_REGEX_FLAGS = new Set([\n  charCodes.lowercaseG,\n  charCodes.lowercaseM,\n  charCodes.lowercaseS,\n  charCodes.lowercaseI,\n  charCodes.lowercaseY,\n  charCodes.lowercaseU,\n  charCodes.lowercaseD,\n  // This is only valid when using the regexpUnicodeSets plugin\n  charCodes.lowercaseV,\n]);\n\n// The following character codes are forbidden from being\n// an immediate sibling of NumericLiteralSeparator _\n\nconst forbiddenNumericSeparatorSiblings = {\n  decBinOct: new Set([\n    charCodes.dot,\n    charCodes.uppercaseB,\n    charCodes.uppercaseE,\n    charCodes.uppercaseO,\n    charCodes.underscore, // multiple separators are not allowed\n    charCodes.lowercaseB,\n    charCodes.lowercaseE,\n    charCodes.lowercaseO,\n  ]),\n  hex: new Set([\n    charCodes.dot,\n    charCodes.uppercaseX,\n    charCodes.underscore, // multiple separators are not allowed\n    charCodes.lowercaseX,\n  ]),\n};\n\nconst isAllowedNumericSeparatorSibling = {\n  // 0 - 1\n  bin: ch => ch === charCodes.digit0 || ch === charCodes.digit1,\n\n  // 0 - 7\n  oct: ch => ch >= charCodes.digit0 && ch <= charCodes.digit7,\n\n  // 0 - 9\n  dec: ch => ch >= charCodes.digit0 && ch <= charCodes.digit9,\n\n  // 0 - 9, A - F, a - f,\n  hex: ch =>\n    (ch >= charCodes.digit0 && ch <= charCodes.digit9) ||\n    (ch >= charCodes.uppercaseA && ch <= charCodes.uppercaseF) ||\n    (ch >= charCodes.lowercaseA && ch <= charCodes.lowercaseF),\n};\n\n// Object type used to represent tokens. Note that normally, tokens\n// simply exist as properties on the parser object. This is only\n// used for the onToken callback and the external tokenizer.\n\nexport class Token {\n  constructor(state: State) {\n    this.type = state.type;\n    this.value = state.value;\n    this.start = state.start;\n    this.end = state.end;\n    this.loc = new SourceLocation(state.startLoc, state.endLoc);\n  }\n\n  declare type: TokenType;\n  declare value: any;\n  declare start: number;\n  declare end: number;\n  declare loc: SourceLocation;\n}\n\n// ## Tokenizer\n\nexport default class Tokenizer extends CommentsParser {\n  isLookahead: boolean;\n\n  // Token store.\n  tokens: Array<Token | N.Comment> = [];\n\n  constructor(options: Options, input: string) {\n    super();\n    this.state = new State();\n    this.state.init(options);\n    this.input = input;\n    this.length = input.length;\n    this.isLookahead = false;\n  }\n\n  pushToken(token: Token | N.Comment) {\n    // Pop out invalid tokens trapped by try-catch parsing.\n    // Those parsing branches are mainly created by typescript and flow plugins.\n    this.tokens.length = this.state.tokensLength;\n    this.tokens.push(token);\n    ++this.state.tokensLength;\n  }\n\n  // Move to the next token\n\n  next(): void {\n    this.checkKeywordEscapes();\n    if (this.options.tokens) {\n      this.pushToken(new Token(this.state));\n    }\n\n    this.state.lastTokStart = this.state.start;\n    this.state.lastTokEndLoc = this.state.endLoc;\n    this.state.lastTokStartLoc = this.state.startLoc;\n    this.nextToken();\n  }\n\n  // TODO\n\n  eat(type: TokenType): boolean {\n    if (this.match(type)) {\n      this.next();\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Whether current token matches given type\n   *\n   * @param {TokenType} type\n   * @returns {boolean}\n   * @memberof Tokenizer\n   */\n  match(type: TokenType): boolean {\n    return this.state.type === type;\n  }\n\n  /**\n   * Create a LookaheadState from current parser state\n   *\n   * @param {State} state\n   * @returns {LookaheadState}\n   * @memberof Tokenizer\n   */\n  createLookaheadState(state: State): LookaheadState {\n    return {\n      pos: state.pos,\n      value: null,\n      type: state.type,\n      start: state.start,\n      end: state.end,\n      context: [this.curContext()],\n      inType: state.inType,\n      startLoc: state.startLoc,\n      lastTokEndLoc: state.lastTokEndLoc,\n      curLine: state.curLine,\n      lineStart: state.lineStart,\n      curPosition: state.curPosition,\n    };\n  }\n\n  /**\n   * lookahead peeks the next token, skipping changes to token context and\n   * comment stack. For performance it returns a limited LookaheadState\n   * instead of full parser state.\n   *\n   * The { column, line } Loc info is not included in lookahead since such usage\n   * is rare. Although it may return other location properties e.g. `curLine` and\n   * `lineStart`, these properties are not listed in the LookaheadState interface\n   * and thus the returned value is _NOT_ reliable.\n   *\n   * The tokenizer should make best efforts to avoid using any parser state\n   * other than those defined in LookaheadState\n   *\n   * @returns {LookaheadState}\n   * @memberof Tokenizer\n   */\n  lookahead(): LookaheadState {\n    const old = this.state;\n    // For performance we use a simplified tokenizer state structure\n    // $FlowIgnore\n    this.state = this.createLookaheadState(old);\n\n    this.isLookahead = true;\n    this.nextToken();\n    this.isLookahead = false;\n\n    const curr = this.state;\n    this.state = old;\n    return curr;\n  }\n\n  nextTokenStart(): number {\n    return this.nextTokenStartSince(this.state.pos);\n  }\n\n  nextTokenStartSince(pos: number): number {\n    skipWhiteSpace.lastIndex = pos;\n    return skipWhiteSpace.test(this.input) ? skipWhiteSpace.lastIndex : pos;\n  }\n\n  lookaheadCharCode(): number {\n    return this.input.charCodeAt(this.nextTokenStart());\n  }\n\n  codePointAtPos(pos: number): number {\n    // The implementation is based on\n    // https://source.chromium.org/chromium/chromium/src/+/master:v8/src/builtins/builtins-string-gen.cc;l=1455;drc=221e331b49dfefadbc6fa40b0c68e6f97606d0b3;bpv=0;bpt=1\n    // We reimplement `codePointAt` because `codePointAt` is a V8 builtin which is not inlined by TurboFan (as of M91)\n    // since `input` is mostly ASCII, an inlined `charCodeAt` wins here\n    let cp = this.input.charCodeAt(pos);\n    if ((cp & 0xfc00) === 0xd800 && ++pos < this.input.length) {\n      const trail = this.input.charCodeAt(pos);\n      if ((trail & 0xfc00) === 0xdc00) {\n        cp = 0x10000 + ((cp & 0x3ff) << 10) + (trail & 0x3ff);\n      }\n    }\n    return cp;\n  }\n\n  // Toggle strict mode. Re-reads the next number or string to please\n  // pedantic tests (`\"use strict\"; 010;` should fail).\n\n  setStrict(strict: boolean): void {\n    this.state.strict = strict;\n    if (strict) {\n      // Throw an error for any string decimal escape found before/immediately\n      // after a \"use strict\" directive. Strict mode will be set at parse\n      // time for any literals that occur after the next node of the strict\n      // directive.\n      this.state.strictErrors.forEach(([toParseError, at]) =>\n        this.raise(toParseError, { at }),\n      );\n      this.state.strictErrors.clear();\n    }\n  }\n\n  curContext(): TokContext {\n    return this.state.context[this.state.context.length - 1];\n  }\n\n  // Read a single token, updating the parser object's token-related\n  // properties.\n\n  nextToken(): void {\n    this.skipSpace();\n    this.state.start = this.state.pos;\n    if (!this.isLookahead) this.state.startLoc = this.state.curPosition();\n    if (this.state.pos >= this.length) {\n      this.finishToken(tt.eof);\n      return;\n    }\n\n    this.getTokenFromCode(this.codePointAtPos(this.state.pos));\n  }\n\n  skipBlockComment(): N.CommentBlock | void {\n    let startLoc;\n    if (!this.isLookahead) startLoc = this.state.curPosition();\n    const start = this.state.pos;\n    const end = this.input.indexOf(\"*/\", start + 2);\n    if (end === -1) {\n      // We have to call this again here because startLoc may not be set...\n      // This seems to be for performance reasons:\n      // https://github.com/babel/babel/commit/acf2a10899f696a8aaf34df78bf9725b5ea7f2da\n      throw this.raise(Errors.UnterminatedComment, {\n        at: this.state.curPosition(),\n      });\n    }\n\n    this.state.pos = end + 2;\n    lineBreakG.lastIndex = start + 2;\n    while (lineBreakG.test(this.input) && lineBreakG.lastIndex <= end) {\n      ++this.state.curLine;\n      this.state.lineStart = lineBreakG.lastIndex;\n    }\n\n    // If we are doing a lookahead right now we need to advance the position (above code)\n    // but we do not want to push the comment to the state.\n    if (this.isLookahead) return;\n    /*:: invariant(startLoc) */\n\n    const comment = {\n      type: \"CommentBlock\",\n      value: this.input.slice(start + 2, end),\n      start,\n      end: end + 2,\n      loc: new SourceLocation(startLoc, this.state.curPosition()),\n    };\n    if (this.options.tokens) this.pushToken(comment);\n    return comment;\n  }\n\n  skipLineComment(startSkip: number): N.CommentLine | void {\n    const start = this.state.pos;\n    let startLoc;\n    if (!this.isLookahead) startLoc = this.state.curPosition();\n    let ch = this.input.charCodeAt((this.state.pos += startSkip));\n    if (this.state.pos < this.length) {\n      while (!isNewLine(ch) && ++this.state.pos < this.length) {\n        ch = this.input.charCodeAt(this.state.pos);\n      }\n    }\n\n    // If we are doing a lookahead right now we need to advance the position (above code)\n    // but we do not want to push the comment to the state.\n    if (this.isLookahead) return;\n    /*:: invariant(startLoc) */\n\n    const end = this.state.pos;\n    const value = this.input.slice(start + startSkip, end);\n\n    const comment = {\n      type: \"CommentLine\",\n      value,\n      start,\n      end,\n      loc: new SourceLocation(startLoc, this.state.curPosition()),\n    };\n    if (this.options.tokens) this.pushToken(comment);\n    return comment;\n  }\n\n  // Called at the start of the parse and after every token. Skips\n  // whitespace and comments, and.\n\n  skipSpace(): void {\n    const spaceStart = this.state.pos;\n    const comments = [];\n    loop: while (this.state.pos < this.length) {\n      const ch = this.input.charCodeAt(this.state.pos);\n      switch (ch) {\n        case charCodes.space:\n        case charCodes.nonBreakingSpace:\n        case charCodes.tab:\n          ++this.state.pos;\n          break;\n        case charCodes.carriageReturn:\n          if (\n            this.input.charCodeAt(this.state.pos + 1) === charCodes.lineFeed\n          ) {\n            ++this.state.pos;\n          }\n        // fall through\n        case charCodes.lineFeed:\n        case charCodes.lineSeparator:\n        case charCodes.paragraphSeparator:\n          ++this.state.pos;\n          ++this.state.curLine;\n          this.state.lineStart = this.state.pos;\n          break;\n\n        case charCodes.slash:\n          switch (this.input.charCodeAt(this.state.pos + 1)) {\n            case charCodes.asterisk: {\n              const comment = this.skipBlockComment();\n              if (comment !== undefined) {\n                this.addComment(comment);\n                if (this.options.attachComment) comments.push(comment);\n              }\n              break;\n            }\n\n            case charCodes.slash: {\n              const comment = this.skipLineComment(2);\n              if (comment !== undefined) {\n                this.addComment(comment);\n                if (this.options.attachComment) comments.push(comment);\n              }\n              break;\n            }\n\n            default:\n              break loop;\n          }\n          break;\n\n        default:\n          if (isWhitespace(ch)) {\n            ++this.state.pos;\n          } else if (ch === charCodes.dash && !this.inModule) {\n            const pos = this.state.pos;\n            if (\n              this.input.charCodeAt(pos + 1) === charCodes.dash &&\n              this.input.charCodeAt(pos + 2) === charCodes.greaterThan &&\n              (spaceStart === 0 || this.state.lineStart > spaceStart)\n            ) {\n              // A `-->` line comment\n              const comment = this.skipLineComment(3);\n              if (comment !== undefined) {\n                this.addComment(comment);\n                if (this.options.attachComment) comments.push(comment);\n              }\n            } else {\n              break loop;\n            }\n          } else if (ch === charCodes.lessThan && !this.inModule) {\n            const pos = this.state.pos;\n            if (\n              this.input.charCodeAt(pos + 1) === charCodes.exclamationMark &&\n              this.input.charCodeAt(pos + 2) === charCodes.dash &&\n              this.input.charCodeAt(pos + 3) === charCodes.dash\n            ) {\n              // `<!--`, an XML-style comment that should be interpreted as a line comment\n              const comment = this.skipLineComment(4);\n              if (comment !== undefined) {\n                this.addComment(comment);\n                if (this.options.attachComment) comments.push(comment);\n              }\n            } else {\n              break loop;\n            }\n          } else {\n            break loop;\n          }\n      }\n    }\n\n    if (comments.length > 0) {\n      const end = this.state.pos;\n      const CommentWhitespace = {\n        start: spaceStart,\n        end,\n        comments,\n        leadingNode: null,\n        trailingNode: null,\n        containingNode: null,\n      };\n      this.state.commentStack.push(CommentWhitespace);\n    }\n  }\n\n  // Called at the end of every token. Sets `end`, `val`, and\n  // maintains `context` and `canStartJSXElement`, and skips the space after\n  // the token, so that the next one's `start` will point at the\n  // right position.\n\n  finishToken(type: TokenType, val: any): void {\n    this.state.end = this.state.pos;\n    this.state.endLoc = this.state.curPosition();\n    const prevType = this.state.type;\n    this.state.type = type;\n    this.state.value = val;\n\n    if (!this.isLookahead) {\n      this.updateContext(prevType);\n    }\n  }\n\n  replaceToken(type: TokenType): void {\n    this.state.type = type;\n    // the prevType of updateContext is required\n    // only when the new type is tt.slash/tt.jsxTagEnd\n    // $FlowIgnore\n    this.updateContext();\n  }\n\n  // ### Token reading\n\n  // This is the function that is called to fetch the next token. It\n  // is somewhat obscure, because it works in character codes rather\n  // than characters, and because operator parsing has been inlined\n  // into it.\n  //\n  // All in the name of speed.\n\n  // number sign is \"#\"\n  readToken_numberSign(): void {\n    if (this.state.pos === 0 && this.readToken_interpreter()) {\n      return;\n    }\n\n    const nextPos = this.state.pos + 1;\n    const next = this.codePointAtPos(nextPos);\n    if (next >= charCodes.digit0 && next <= charCodes.digit9) {\n      throw this.raise(Errors.UnexpectedDigitAfterHash, {\n        at: this.state.curPosition(),\n      });\n    }\n\n    if (\n      next === charCodes.leftCurlyBrace ||\n      (next === charCodes.leftSquareBracket && this.hasPlugin(\"recordAndTuple\"))\n    ) {\n      // When we see `#{`, it is likely to be a hash record.\n      // However we don't yell at `#[` since users may intend to use \"computed private fields\",\n      // which is not allowed in the spec. Throwing expecting recordAndTuple is\n      // misleading\n      this.expectPlugin(\"recordAndTuple\");\n      if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"hash\") {\n        throw this.raise(\n          next === charCodes.leftCurlyBrace\n            ? Errors.RecordExpressionHashIncorrectStartSyntaxType\n            : Errors.TupleExpressionHashIncorrectStartSyntaxType,\n          { at: this.state.curPosition() },\n        );\n      }\n\n      this.state.pos += 2;\n      if (next === charCodes.leftCurlyBrace) {\n        // #{\n        this.finishToken(tt.braceHashL);\n      } else {\n        // #[\n        this.finishToken(tt.bracketHashL);\n      }\n    } else if (isIdentifierStart(next)) {\n      ++this.state.pos;\n      this.finishToken(tt.privateName, this.readWord1(next));\n    } else if (next === charCodes.backslash) {\n      ++this.state.pos;\n      this.finishToken(tt.privateName, this.readWord1());\n    } else {\n      this.finishOp(tt.hash, 1);\n    }\n  }\n\n  readToken_dot(): void {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (next >= charCodes.digit0 && next <= charCodes.digit9) {\n      this.readNumber(true);\n      return;\n    }\n\n    if (\n      next === charCodes.dot &&\n      this.input.charCodeAt(this.state.pos + 2) === charCodes.dot\n    ) {\n      this.state.pos += 3;\n      this.finishToken(tt.ellipsis);\n    } else {\n      ++this.state.pos;\n      this.finishToken(tt.dot);\n    }\n  }\n\n  readToken_slash(): void {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (next === charCodes.equalsTo) {\n      this.finishOp(tt.slashAssign, 2);\n    } else {\n      this.finishOp(tt.slash, 1);\n    }\n  }\n\n  readToken_interpreter(): boolean {\n    if (this.state.pos !== 0 || this.length < 2) return false;\n\n    let ch = this.input.charCodeAt(this.state.pos + 1);\n    if (ch !== charCodes.exclamationMark) return false;\n\n    const start = this.state.pos;\n    this.state.pos += 1;\n\n    while (!isNewLine(ch) && ++this.state.pos < this.length) {\n      ch = this.input.charCodeAt(this.state.pos);\n    }\n\n    const value = this.input.slice(start + 2, this.state.pos);\n\n    this.finishToken(tt.interpreterDirective, value);\n\n    return true;\n  }\n\n  readToken_mult_modulo(code: number): void {\n    // '%' or '*'\n    let type = code === charCodes.asterisk ? tt.star : tt.modulo;\n    let width = 1;\n    let next = this.input.charCodeAt(this.state.pos + 1);\n\n    // Exponentiation operator '**'\n    if (code === charCodes.asterisk && next === charCodes.asterisk) {\n      width++;\n      next = this.input.charCodeAt(this.state.pos + 2);\n      type = tt.exponent;\n    }\n\n    // '%=' or '*='\n    if (next === charCodes.equalsTo && !this.state.inType) {\n      width++;\n      // `tt.moduloAssign` is only needed to support % as a Hack-pipe topic token.\n      // If the proposal ends up choosing a different token,\n      // it can be merged with tt.assign.\n      type = code === charCodes.percentSign ? tt.moduloAssign : tt.assign;\n    }\n\n    this.finishOp(type, width);\n  }\n\n  readToken_pipe_amp(code: number): void {\n    // '||' '&&' '||=' '&&='\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === code) {\n      if (this.input.charCodeAt(this.state.pos + 2) === charCodes.equalsTo) {\n        this.finishOp(tt.assign, 3);\n      } else {\n        this.finishOp(\n          code === charCodes.verticalBar ? tt.logicalOR : tt.logicalAND,\n          2,\n        );\n      }\n      return;\n    }\n\n    if (code === charCodes.verticalBar) {\n      // '|>'\n      if (next === charCodes.greaterThan) {\n        this.finishOp(tt.pipeline, 2);\n        return;\n      }\n      // '|}'\n      if (\n        this.hasPlugin(\"recordAndTuple\") &&\n        next === charCodes.rightCurlyBrace\n      ) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(Errors.RecordExpressionBarIncorrectEndSyntaxType, {\n            at: this.state.curPosition(),\n          });\n        }\n        this.state.pos += 2;\n        this.finishToken(tt.braceBarR);\n        return;\n      }\n\n      // '|]'\n      if (\n        this.hasPlugin(\"recordAndTuple\") &&\n        next === charCodes.rightSquareBracket\n      ) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(Errors.TupleExpressionBarIncorrectEndSyntaxType, {\n            at: this.state.curPosition(),\n          });\n        }\n        this.state.pos += 2;\n        this.finishToken(tt.bracketBarR);\n        return;\n      }\n    }\n\n    if (next === charCodes.equalsTo) {\n      this.finishOp(tt.assign, 2);\n      return;\n    }\n\n    this.finishOp(\n      code === charCodes.verticalBar ? tt.bitwiseOR : tt.bitwiseAND,\n      1,\n    );\n  }\n\n  readToken_caret(): void {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    // '^='\n    if (next === charCodes.equalsTo && !this.state.inType) {\n      // `tt.xorAssign` is only needed to support ^ as a Hack-pipe topic token.\n      // If the proposal ends up choosing a different token,\n      // it can be merged with tt.assign.\n      this.finishOp(tt.xorAssign, 2);\n    }\n    // '^^'\n    else if (\n      next === charCodes.caret &&\n      // If the ^^ token is not enabled, we don't throw but parse two single ^s\n      // because it could be a ^ hack token followed by a ^ binary operator.\n      this.hasPlugin([\n        \"pipelineOperator\",\n        { proposal: \"hack\", topicToken: \"^^\" },\n      ])\n    ) {\n      this.finishOp(tt.doubleCaret, 2);\n\n      // `^^^` is forbidden and must be separated by a space.\n      const lookaheadCh = this.input.codePointAt(this.state.pos);\n      if (lookaheadCh === charCodes.caret) {\n        throw this.unexpected();\n      }\n    }\n    // '^'\n    else {\n      this.finishOp(tt.bitwiseXOR, 1);\n    }\n  }\n\n  readToken_atSign(): void {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    // '@@'\n    if (\n      next === charCodes.atSign &&\n      this.hasPlugin([\n        \"pipelineOperator\",\n        { proposal: \"hack\", topicToken: \"@@\" },\n      ])\n    ) {\n      this.finishOp(tt.doubleAt, 2);\n    }\n    // '@'\n    else {\n      this.finishOp(tt.at, 1);\n    }\n  }\n\n  readToken_plus_min(code: number): void {\n    // '+-'\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === code) {\n      this.finishOp(tt.incDec, 2);\n      return;\n    }\n\n    if (next === charCodes.equalsTo) {\n      this.finishOp(tt.assign, 2);\n    } else {\n      this.finishOp(tt.plusMin, 1);\n    }\n  }\n\n  readToken_lt(): void {\n    // '<'\n    const { pos } = this.state;\n    const next = this.input.charCodeAt(pos + 1);\n\n    if (next === charCodes.lessThan) {\n      if (this.input.charCodeAt(pos + 2) === charCodes.equalsTo) {\n        this.finishOp(tt.assign, 3);\n        return;\n      }\n      this.finishOp(tt.bitShiftL, 2);\n      return;\n    }\n\n    if (next === charCodes.equalsTo) {\n      // <=\n      this.finishOp(tt.relational, 2);\n      return;\n    }\n\n    this.finishOp(tt.lt, 1);\n  }\n\n  readToken_gt(): void {\n    // '>'\n    const { pos } = this.state;\n    const next = this.input.charCodeAt(pos + 1);\n\n    if (next === charCodes.greaterThan) {\n      const size =\n        this.input.charCodeAt(pos + 2) === charCodes.greaterThan ? 3 : 2;\n      if (this.input.charCodeAt(pos + size) === charCodes.equalsTo) {\n        this.finishOp(tt.assign, size + 1);\n        return;\n      }\n      this.finishOp(tt.bitShiftR, size);\n      return;\n    }\n\n    if (next === charCodes.equalsTo) {\n      // <= | >=\n      this.finishOp(tt.relational, 2);\n      return;\n    }\n\n    this.finishOp(tt.gt, 1);\n  }\n\n  readToken_eq_excl(code: number): void {\n    // '=!'\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (next === charCodes.equalsTo) {\n      this.finishOp(\n        tt.equality,\n        this.input.charCodeAt(this.state.pos + 2) === charCodes.equalsTo\n          ? 3\n          : 2,\n      );\n      return;\n    }\n    if (code === charCodes.equalsTo && next === charCodes.greaterThan) {\n      // '=>'\n      this.state.pos += 2;\n      this.finishToken(tt.arrow);\n      return;\n    }\n    this.finishOp(code === charCodes.equalsTo ? tt.eq : tt.bang, 1);\n  }\n\n  readToken_question(): void {\n    // '?'\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    const next2 = this.input.charCodeAt(this.state.pos + 2);\n    if (next === charCodes.questionMark) {\n      if (next2 === charCodes.equalsTo) {\n        // '??='\n        this.finishOp(tt.assign, 3);\n      } else {\n        // '??'\n        this.finishOp(tt.nullishCoalescing, 2);\n      }\n    } else if (\n      next === charCodes.dot &&\n      !(next2 >= charCodes.digit0 && next2 <= charCodes.digit9)\n    ) {\n      // '.' not followed by a number\n      this.state.pos += 2;\n      this.finishToken(tt.questionDot);\n    } else {\n      ++this.state.pos;\n      this.finishToken(tt.question);\n    }\n  }\n\n  getTokenFromCode(code: number): void {\n    switch (code) {\n      // The interpretation of a dot depends on whether it is followed\n      // by a digit or another two dots.\n\n      case charCodes.dot:\n        this.readToken_dot();\n        return;\n\n      // Punctuation tokens.\n      case charCodes.leftParenthesis:\n        ++this.state.pos;\n        this.finishToken(tt.parenL);\n        return;\n      case charCodes.rightParenthesis:\n        ++this.state.pos;\n        this.finishToken(tt.parenR);\n        return;\n      case charCodes.semicolon:\n        ++this.state.pos;\n        this.finishToken(tt.semi);\n        return;\n      case charCodes.comma:\n        ++this.state.pos;\n        this.finishToken(tt.comma);\n        return;\n      case charCodes.leftSquareBracket:\n        if (\n          this.hasPlugin(\"recordAndTuple\") &&\n          this.input.charCodeAt(this.state.pos + 1) === charCodes.verticalBar\n        ) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(\n              Errors.TupleExpressionBarIncorrectStartSyntaxType,\n              { at: this.state.curPosition() },\n            );\n          }\n\n          // [|\n          this.state.pos += 2;\n          this.finishToken(tt.bracketBarL);\n        } else {\n          ++this.state.pos;\n          this.finishToken(tt.bracketL);\n        }\n        return;\n      case charCodes.rightSquareBracket:\n        ++this.state.pos;\n        this.finishToken(tt.bracketR);\n        return;\n      case charCodes.leftCurlyBrace:\n        if (\n          this.hasPlugin(\"recordAndTuple\") &&\n          this.input.charCodeAt(this.state.pos + 1) === charCodes.verticalBar\n        ) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(\n              Errors.RecordExpressionBarIncorrectStartSyntaxType,\n              { at: this.state.curPosition() },\n            );\n          }\n\n          // {|\n          this.state.pos += 2;\n          this.finishToken(tt.braceBarL);\n        } else {\n          ++this.state.pos;\n          this.finishToken(tt.braceL);\n        }\n        return;\n      case charCodes.rightCurlyBrace:\n        ++this.state.pos;\n        this.finishToken(tt.braceR);\n        return;\n\n      case charCodes.colon:\n        if (\n          this.hasPlugin(\"functionBind\") &&\n          this.input.charCodeAt(this.state.pos + 1) === charCodes.colon\n        ) {\n          this.finishOp(tt.doubleColon, 2);\n        } else {\n          ++this.state.pos;\n          this.finishToken(tt.colon);\n        }\n        return;\n\n      case charCodes.questionMark:\n        this.readToken_question();\n        return;\n\n      case charCodes.graveAccent:\n        this.readTemplateToken();\n        return;\n\n      case charCodes.digit0: {\n        const next = this.input.charCodeAt(this.state.pos + 1);\n        // '0x', '0X' - hex number\n        if (next === charCodes.lowercaseX || next === charCodes.uppercaseX) {\n          this.readRadixNumber(16);\n          return;\n        }\n        // '0o', '0O' - octal number\n        if (next === charCodes.lowercaseO || next === charCodes.uppercaseO) {\n          this.readRadixNumber(8);\n          return;\n        }\n        // '0b', '0B' - binary number\n        if (next === charCodes.lowercaseB || next === charCodes.uppercaseB) {\n          this.readRadixNumber(2);\n          return;\n        }\n      }\n      // Anything else beginning with a digit is an integer, octal\n      // number, or float. (fall through)\n      case charCodes.digit1:\n      case charCodes.digit2:\n      case charCodes.digit3:\n      case charCodes.digit4:\n      case charCodes.digit5:\n      case charCodes.digit6:\n      case charCodes.digit7:\n      case charCodes.digit8:\n      case charCodes.digit9:\n        this.readNumber(false);\n        return;\n\n      // Quotes produce strings.\n      case charCodes.quotationMark:\n      case charCodes.apostrophe:\n        this.readString(code);\n        return;\n\n      // Operators are parsed inline in tiny state machines. '=' (charCodes.equalsTo) is\n      // often referred to. `finishOp` simply skips the amount of\n      // characters it is given as second argument, and returns a token\n      // of the type given by its first argument.\n\n      case charCodes.slash:\n        this.readToken_slash();\n        return;\n\n      case charCodes.percentSign:\n      case charCodes.asterisk:\n        this.readToken_mult_modulo(code);\n        return;\n\n      case charCodes.verticalBar:\n      case charCodes.ampersand:\n        this.readToken_pipe_amp(code);\n        return;\n\n      case charCodes.caret:\n        this.readToken_caret();\n        return;\n\n      case charCodes.plusSign:\n      case charCodes.dash:\n        this.readToken_plus_min(code);\n        return;\n\n      case charCodes.lessThan:\n        this.readToken_lt();\n        return;\n\n      case charCodes.greaterThan:\n        this.readToken_gt();\n        return;\n\n      case charCodes.equalsTo:\n      case charCodes.exclamationMark:\n        this.readToken_eq_excl(code);\n        return;\n\n      case charCodes.tilde:\n        this.finishOp(tt.tilde, 1);\n        return;\n\n      case charCodes.atSign:\n        this.readToken_atSign();\n        return;\n\n      case charCodes.numberSign:\n        this.readToken_numberSign();\n        return;\n\n      case charCodes.backslash:\n        this.readWord();\n        return;\n\n      default:\n        if (isIdentifierStart(code)) {\n          this.readWord(code);\n          return;\n        }\n    }\n\n    throw this.raise(Errors.InvalidOrUnexpectedToken, {\n      at: this.state.curPosition(),\n      unexpected: String.fromCodePoint(code),\n    });\n  }\n\n  finishOp(type: TokenType, size: number): void {\n    const str = this.input.slice(this.state.pos, this.state.pos + size);\n    this.state.pos += size;\n    this.finishToken(type, str);\n  }\n\n  readRegexp(): void {\n    const startLoc = this.state.startLoc;\n    const start = this.state.start + 1;\n    let escaped, inClass;\n    let { pos } = this.state;\n    for (; ; ++pos) {\n      if (pos >= this.length) {\n        // FIXME: explain\n        throw this.raise(Errors.UnterminatedRegExp, {\n          at: createPositionWithColumnOffset(startLoc, 1),\n        });\n      }\n      const ch = this.input.charCodeAt(pos);\n      if (isNewLine(ch)) {\n        throw this.raise(Errors.UnterminatedRegExp, {\n          at: createPositionWithColumnOffset(startLoc, 1),\n        });\n      }\n      if (escaped) {\n        escaped = false;\n      } else {\n        if (ch === charCodes.leftSquareBracket) {\n          inClass = true;\n        } else if (ch === charCodes.rightSquareBracket && inClass) {\n          inClass = false;\n        } else if (ch === charCodes.slash && !inClass) {\n          break;\n        }\n        escaped = ch === charCodes.backslash;\n      }\n    }\n    const content = this.input.slice(start, pos);\n    ++pos;\n\n    let mods = \"\";\n\n    const nextPos = () =>\n      // (pos + 1) + 1 - start\n      createPositionWithColumnOffset(startLoc, pos + 2 - start);\n\n    while (pos < this.length) {\n      const cp = this.codePointAtPos(pos);\n      // It doesn't matter if cp > 0xffff, the loop will either throw or break because we check on cp\n      const char = String.fromCharCode(cp);\n\n      if (VALID_REGEX_FLAGS.has(cp)) {\n        if (cp === charCodes.lowercaseV) {\n          this.expectPlugin(\"regexpUnicodeSets\", nextPos());\n\n          if (mods.includes(\"u\")) {\n            this.raise(Errors.IncompatibleRegExpUVFlags, { at: nextPos() });\n          }\n        } else if (cp === charCodes.lowercaseU) {\n          if (mods.includes(\"v\")) {\n            this.raise(Errors.IncompatibleRegExpUVFlags, { at: nextPos() });\n          }\n        }\n        if (mods.includes(char)) {\n          this.raise(Errors.DuplicateRegExpFlags, { at: nextPos() });\n        }\n      } else if (isIdentifierChar(cp) || cp === charCodes.backslash) {\n        this.raise(Errors.MalformedRegExpFlags, { at: nextPos() });\n      } else {\n        break;\n      }\n\n      ++pos;\n      mods += char;\n    }\n    this.state.pos = pos;\n\n    this.finishToken(tt.regexp, {\n      pattern: content,\n      flags: mods,\n    });\n  }\n\n  // Read an integer in the given radix. Return null if zero digits\n  // were read, the integer value otherwise. When `len` is given, this\n  // will return `null` unless the integer has exactly `len` digits.\n  // When `forceLen` is `true`, it means that we already know that in case\n  // of a malformed number we have to skip `len` characters anyway, instead\n  // of bailing out early. For example, in \"\\u{123Z}\" we want to read up to }\n  // anyway, while in \"\\u00Z\" we will stop at Z instead of consuming four\n  // characters (and thus the closing quote).\n\n  readInt(\n    radix: number,\n    len?: number,\n    forceLen?: boolean,\n    allowNumSeparator: boolean | \"bail\" = true,\n  ): number | null {\n    const start = this.state.pos;\n    const forbiddenSiblings =\n      radix === 16\n        ? forbiddenNumericSeparatorSiblings.hex\n        : forbiddenNumericSeparatorSiblings.decBinOct;\n    const isAllowedSibling =\n      radix === 16\n        ? isAllowedNumericSeparatorSibling.hex\n        : radix === 10\n        ? isAllowedNumericSeparatorSibling.dec\n        : radix === 8\n        ? isAllowedNumericSeparatorSibling.oct\n        : isAllowedNumericSeparatorSibling.bin;\n\n    let invalid = false;\n    let total = 0;\n\n    for (let i = 0, e = len == null ? Infinity : len; i < e; ++i) {\n      const code = this.input.charCodeAt(this.state.pos);\n      let val;\n\n      if (code === charCodes.underscore && allowNumSeparator !== \"bail\") {\n        const prev = this.input.charCodeAt(this.state.pos - 1);\n        const next = this.input.charCodeAt(this.state.pos + 1);\n\n        if (!allowNumSeparator) {\n          this.raise(Errors.NumericSeparatorInEscapeSequence, {\n            at: this.state.curPosition(),\n          });\n        } else if (\n          Number.isNaN(next) ||\n          !isAllowedSibling(next) ||\n          forbiddenSiblings.has(prev) ||\n          forbiddenSiblings.has(next)\n        ) {\n          this.raise(Errors.UnexpectedNumericSeparator, {\n            at: this.state.curPosition(),\n          });\n        }\n\n        // Ignore this _ character\n        ++this.state.pos;\n        continue;\n      }\n\n      if (code >= charCodes.lowercaseA) {\n        val = code - charCodes.lowercaseA + charCodes.lineFeed;\n      } else if (code >= charCodes.uppercaseA) {\n        val = code - charCodes.uppercaseA + charCodes.lineFeed;\n      } else if (charCodes.isDigit(code)) {\n        val = code - charCodes.digit0; // 0-9\n      } else {\n        val = Infinity;\n      }\n      if (val >= radix) {\n        // If we are in \"errorRecovery\" mode and we found a digit which is too big,\n        // don't break the loop.\n\n        if (this.options.errorRecovery && val <= 9) {\n          val = 0;\n          this.raise(Errors.InvalidDigit, {\n            at: this.state.curPosition(),\n            radix,\n          });\n        } else if (forceLen) {\n          val = 0;\n          invalid = true;\n        } else {\n          break;\n        }\n      }\n      ++this.state.pos;\n      total = total * radix + val;\n    }\n    if (\n      this.state.pos === start ||\n      (len != null && this.state.pos - start !== len) ||\n      invalid\n    ) {\n      return null;\n    }\n\n    return total;\n  }\n\n  readRadixNumber(radix: number): void {\n    const startLoc = this.state.curPosition();\n    let isBigInt = false;\n\n    this.state.pos += 2; // 0x\n    const val = this.readInt(radix);\n    if (val == null) {\n      this.raise(Errors.InvalidDigit, {\n        // Numeric literals can't have newlines, so this is safe to do.\n        at: createPositionWithColumnOffset(startLoc, 2),\n        radix,\n      });\n    }\n    const next = this.input.charCodeAt(this.state.pos);\n\n    if (next === charCodes.lowercaseN) {\n      ++this.state.pos;\n      isBigInt = true;\n    } else if (next === charCodes.lowercaseM) {\n      throw this.raise(Errors.InvalidDecimal, { at: startLoc });\n    }\n\n    if (isIdentifierStart(this.codePointAtPos(this.state.pos))) {\n      throw this.raise(Errors.NumberIdentifier, {\n        at: this.state.curPosition(),\n      });\n    }\n\n    if (isBigInt) {\n      const str = this.input\n        .slice(startLoc.index, this.state.pos)\n        .replace(/[_n]/g, \"\");\n      this.finishToken(tt.bigint, str);\n      return;\n    }\n\n    this.finishToken(tt.num, val);\n  }\n\n  // Read an integer, octal integer, or floating-point number.\n\n  readNumber(startsWithDot: boolean): void {\n    const start = this.state.pos;\n    const startLoc = this.state.curPosition();\n    let isFloat = false;\n    let isBigInt = false;\n    let isDecimal = false;\n    let hasExponent = false;\n    let isOctal = false;\n\n    if (!startsWithDot && this.readInt(10) === null) {\n      this.raise(Errors.InvalidNumber, { at: this.state.curPosition() });\n    }\n    const hasLeadingZero =\n      this.state.pos - start >= 2 &&\n      this.input.charCodeAt(start) === charCodes.digit0;\n\n    if (hasLeadingZero) {\n      const integer = this.input.slice(start, this.state.pos);\n      this.recordStrictModeErrors(Errors.StrictOctalLiteral, { at: startLoc });\n      if (!this.state.strict) {\n        // disallow numeric separators in non octal decimals and legacy octal likes\n        const underscorePos = integer.indexOf(\"_\");\n        if (underscorePos > 0) {\n          // Numeric literals can't have newlines, so this is safe to do.\n          this.raise(Errors.ZeroDigitNumericSeparator, {\n            at: createPositionWithColumnOffset(startLoc, underscorePos),\n          });\n        }\n      }\n      isOctal = hasLeadingZero && !/[89]/.test(integer);\n    }\n\n    let next = this.input.charCodeAt(this.state.pos);\n    if (next === charCodes.dot && !isOctal) {\n      ++this.state.pos;\n      this.readInt(10);\n      isFloat = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n\n    if (\n      (next === charCodes.uppercaseE || next === charCodes.lowercaseE) &&\n      !isOctal\n    ) {\n      next = this.input.charCodeAt(++this.state.pos);\n      if (next === charCodes.plusSign || next === charCodes.dash) {\n        ++this.state.pos;\n      }\n      if (this.readInt(10) === null) {\n        this.raise(Errors.InvalidOrMissingExponent, { at: startLoc });\n      }\n      isFloat = true;\n      hasExponent = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n\n    if (next === charCodes.lowercaseN) {\n      // disallow floats, legacy octal syntax and non octal decimals\n      // new style octal (\"0o\") is handled in this.readRadixNumber\n      if (isFloat || hasLeadingZero) {\n        this.raise(Errors.InvalidBigIntLiteral, { at: startLoc });\n      }\n      ++this.state.pos;\n      isBigInt = true;\n    }\n\n    if (next === charCodes.lowercaseM) {\n      this.expectPlugin(\"decimal\", this.state.curPosition());\n      if (hasExponent || hasLeadingZero) {\n        this.raise(Errors.InvalidDecimal, { at: startLoc });\n      }\n      ++this.state.pos;\n      isDecimal = true;\n    }\n\n    if (isIdentifierStart(this.codePointAtPos(this.state.pos))) {\n      throw this.raise(Errors.NumberIdentifier, {\n        at: this.state.curPosition(),\n      });\n    }\n\n    // remove \"_\" for numeric literal separator, and trailing `m` or `n`\n    const str = this.input.slice(start, this.state.pos).replace(/[_mn]/g, \"\");\n\n    if (isBigInt) {\n      this.finishToken(tt.bigint, str);\n      return;\n    }\n\n    if (isDecimal) {\n      this.finishToken(tt.decimal, str);\n      return;\n    }\n\n    const val = isOctal ? parseInt(str, 8) : parseFloat(str);\n    this.finishToken(tt.num, val);\n  }\n\n  // Read a string value, interpreting backslash-escapes.\n\n  readCodePoint(throwOnInvalid: boolean): number | null {\n    const ch = this.input.charCodeAt(this.state.pos);\n    let code;\n\n    if (ch === charCodes.leftCurlyBrace) {\n      ++this.state.pos;\n      code = this.readHexChar(\n        this.input.indexOf(\"}\", this.state.pos) - this.state.pos,\n        true,\n        throwOnInvalid,\n      );\n      ++this.state.pos;\n      if (code !== null && code > 0x10ffff) {\n        if (throwOnInvalid) {\n          this.raise(Errors.InvalidCodePoint, { at: this.state.curPosition() });\n        } else {\n          return null;\n        }\n      }\n    } else {\n      code = this.readHexChar(4, false, throwOnInvalid);\n    }\n    return code;\n  }\n\n  readString(quote: number): void {\n    let out = \"\",\n      chunkStart = ++this.state.pos;\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(Errors.UnterminatedString, {\n          at: this.state.startLoc,\n        });\n      }\n      const ch = this.input.charCodeAt(this.state.pos);\n      if (ch === quote) break;\n      if (ch === charCodes.backslash) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        // $FlowFixMe\n        out += this.readEscapedChar(false);\n        chunkStart = this.state.pos;\n      } else if (\n        ch === charCodes.lineSeparator ||\n        ch === charCodes.paragraphSeparator\n      ) {\n        ++this.state.pos;\n        ++this.state.curLine;\n        this.state.lineStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        throw this.raise(Errors.UnterminatedString, {\n          at: this.state.startLoc,\n        });\n      } else {\n        ++this.state.pos;\n      }\n    }\n    out += this.input.slice(chunkStart, this.state.pos++);\n    this.finishToken(tt.string, out);\n  }\n\n  // Reads template continuation `}...`\n  readTemplateContinuation(): void {\n    if (!this.match(tt.braceR)) {\n      this.unexpected(null, tt.braceR);\n    }\n    // rewind pos to `}`\n    this.state.pos--;\n    this.readTemplateToken();\n  }\n\n  // Reads template string tokens.\n  readTemplateToken(): void {\n    let out = \"\",\n      chunkStart = this.state.pos,\n      containsInvalid = false;\n    ++this.state.pos; // eat '`' or `}`\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        // FIXME: explain\n        throw this.raise(Errors.UnterminatedTemplate, {\n          at: createPositionWithColumnOffset(this.state.startLoc, 1),\n        });\n      }\n      const ch = this.input.charCodeAt(this.state.pos);\n      if (ch === charCodes.graveAccent) {\n        ++this.state.pos; // eat '`'\n        out += this.input.slice(chunkStart, this.state.pos);\n        this.finishToken(tt.templateTail, containsInvalid ? null : out);\n        return;\n      }\n      if (\n        ch === charCodes.dollarSign &&\n        this.input.charCodeAt(this.state.pos + 1) === charCodes.leftCurlyBrace\n      ) {\n        this.state.pos += 2; // eat '${'\n        out += this.input.slice(chunkStart, this.state.pos);\n        this.finishToken(tt.templateNonTail, containsInvalid ? null : out);\n        return;\n      }\n      if (ch === charCodes.backslash) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        const escaped = this.readEscapedChar(true);\n        if (escaped === null) {\n          containsInvalid = true;\n        } else {\n          out += escaped;\n        }\n        chunkStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        ++this.state.pos;\n        switch (ch) {\n          case charCodes.carriageReturn:\n            if (this.input.charCodeAt(this.state.pos) === charCodes.lineFeed) {\n              ++this.state.pos;\n            }\n          // fall through\n          case charCodes.lineFeed:\n            out += \"\\n\";\n            break;\n          default:\n            out += String.fromCharCode(ch);\n            break;\n        }\n        ++this.state.curLine;\n        this.state.lineStart = this.state.pos;\n        chunkStart = this.state.pos;\n      } else {\n        ++this.state.pos;\n      }\n    }\n  }\n\n  recordStrictModeErrors(\n    toParseError: DeferredStrictError,\n    { at }: { at: Position },\n  ) {\n    const index = at.index;\n\n    if (this.state.strict && !this.state.strictErrors.has(index)) {\n      this.raise(toParseError, { at });\n    } else {\n      this.state.strictErrors.set(index, [toParseError, at]);\n    }\n  }\n\n  // Used to read escaped characters\n  readEscapedChar(inTemplate: boolean): string | null {\n    const throwOnInvalid = !inTemplate;\n    const ch = this.input.charCodeAt(++this.state.pos);\n    ++this.state.pos;\n    switch (ch) {\n      case charCodes.lowercaseN:\n        return \"\\n\";\n      case charCodes.lowercaseR:\n        return \"\\r\";\n      case charCodes.lowercaseX: {\n        const code = this.readHexChar(2, false, throwOnInvalid);\n        return code === null ? null : String.fromCharCode(code);\n      }\n      case charCodes.lowercaseU: {\n        const code = this.readCodePoint(throwOnInvalid);\n        return code === null ? null : String.fromCodePoint(code);\n      }\n      case charCodes.lowercaseT:\n        return \"\\t\";\n      case charCodes.lowercaseB:\n        return \"\\b\";\n      case charCodes.lowercaseV:\n        return \"\\u000b\";\n      case charCodes.lowercaseF:\n        return \"\\f\";\n      case charCodes.carriageReturn:\n        if (this.input.charCodeAt(this.state.pos) === charCodes.lineFeed) {\n          ++this.state.pos;\n        }\n      // fall through\n      case charCodes.lineFeed:\n        this.state.lineStart = this.state.pos;\n        ++this.state.curLine;\n      // fall through\n      case charCodes.lineSeparator:\n      case charCodes.paragraphSeparator:\n        return \"\";\n      case charCodes.digit8:\n      case charCodes.digit9:\n        if (inTemplate) {\n          return null;\n        } else {\n          this.recordStrictModeErrors(Errors.StrictNumericEscape, {\n            // We immediately follow a \"\\\\\", and we're an 8 or a 9, so we must\n            // be on the same line.\n            at: createPositionWithColumnOffset(this.state.curPosition(), -1),\n          });\n        }\n      // fall through\n      default:\n        if (ch >= charCodes.digit0 && ch <= charCodes.digit7) {\n          // We immediately follow a \"\\\\\", and we're something between 0 and 7,\n          // so we must be on the same line.\n          const codePos = createPositionWithColumnOffset(\n            this.state.curPosition(),\n            -1,\n          );\n          const match = this.input\n            .slice(this.state.pos - 1, this.state.pos + 2)\n            .match(/^[0-7]+/);\n\n          // This is never null, because of the if condition above.\n          /*:: invariant(match !== null) */\n          let octalStr = match[0];\n\n          let octal = parseInt(octalStr, 8);\n          if (octal > 255) {\n            octalStr = octalStr.slice(0, -1);\n            octal = parseInt(octalStr, 8);\n          }\n          this.state.pos += octalStr.length - 1;\n          const next = this.input.charCodeAt(this.state.pos);\n          if (\n            octalStr !== \"0\" ||\n            next === charCodes.digit8 ||\n            next === charCodes.digit9\n          ) {\n            if (inTemplate) {\n              return null;\n            } else {\n              this.recordStrictModeErrors(Errors.StrictNumericEscape, {\n                at: codePos,\n              });\n            }\n          }\n\n          return String.fromCharCode(octal);\n        }\n\n        return String.fromCharCode(ch);\n    }\n  }\n\n  // Used to read character escape sequences ('\\x', '\\u').\n\n  readHexChar(\n    len: number,\n    forceLen: boolean,\n    throwOnInvalid: boolean,\n  ): number | null {\n    const codeLoc = this.state.curPosition();\n    const n = this.readInt(16, len, forceLen, false);\n    if (n === null) {\n      if (throwOnInvalid) {\n        this.raise(Errors.InvalidEscapeSequence, { at: codeLoc });\n      } else {\n        this.state.pos = codeLoc.index - 1;\n      }\n    }\n    return n;\n  }\n\n  // Read an identifier, and return it as a string. Sets `this.state.containsEsc`\n  // to whether the word contained a '\\u' escape.\n  //\n  // Incrementally adds only escaped chars, adding other chunks as-is\n  // as a micro-optimization.\n  //\n  // When `firstCode` is given, it assumes it is always an identifier start and\n  // will skip reading start position again\n\n  readWord1(firstCode: number | void): string {\n    this.state.containsEsc = false;\n    let word = \"\";\n    const start = this.state.pos;\n    let chunkStart = this.state.pos;\n    if (firstCode !== undefined) {\n      this.state.pos += firstCode <= 0xffff ? 1 : 2;\n    }\n\n    while (this.state.pos < this.length) {\n      const ch = this.codePointAtPos(this.state.pos);\n      if (isIdentifierChar(ch)) {\n        this.state.pos += ch <= 0xffff ? 1 : 2;\n      } else if (ch === charCodes.backslash) {\n        this.state.containsEsc = true;\n\n        word += this.input.slice(chunkStart, this.state.pos);\n        const escStart = this.state.curPosition();\n        const identifierCheck =\n          this.state.pos === start ? isIdentifierStart : isIdentifierChar;\n\n        if (this.input.charCodeAt(++this.state.pos) !== charCodes.lowercaseU) {\n          this.raise(Errors.MissingUnicodeEscape, {\n            at: this.state.curPosition(),\n          });\n          chunkStart = this.state.pos - 1;\n          continue;\n        }\n\n        ++this.state.pos;\n        const esc = this.readCodePoint(true);\n        if (esc !== null) {\n          if (!identifierCheck(esc)) {\n            this.raise(Errors.EscapedCharNotAnIdentifier, { at: escStart });\n          }\n\n          word += String.fromCodePoint(esc);\n        }\n        chunkStart = this.state.pos;\n      } else {\n        break;\n      }\n    }\n    return word + this.input.slice(chunkStart, this.state.pos);\n  }\n\n  // Read an identifier or keyword token. Will check for reserved\n  // words when necessary.\n\n  readWord(firstCode: number | void): void {\n    const word = this.readWord1(firstCode);\n    const type = keywordTypes.get(word);\n    if (type !== undefined) {\n      // We don't use word as state.value here because word is a dynamic string\n      // while token label is a shared constant string\n      this.finishToken(type, tokenLabelName(type));\n    } else {\n      this.finishToken(tt.name, word);\n    }\n  }\n\n  checkKeywordEscapes(): void {\n    const { type } = this.state;\n    if (tokenIsKeyword(type) && this.state.containsEsc) {\n      this.raise(Errors.InvalidEscapedReservedWord, {\n        at: this.state.startLoc,\n        reservedWord: tokenLabelName(type),\n      });\n    }\n  }\n\n  /**\n   * Raise a `ParseError` given the appropriate properties. If passed a\n   * `Position` for the `at` property, raises the `ParseError` at that location.\n   * Otherwise, if passed a `Node`, raises the `ParseError` at the start\n   * location of that `Node`.\n   *\n   * If `errorRecovery` is `true`, the error is pushed to the errors array and\n   * returned. If `errorRecovery` is `false`, the error is instead thrown.\n   *\n   * @param {Class<ParseError<ErrorDetails>>>} ParseErrorClass\n   * @param {RaiseProperties<ErrorDetails>} raiseProperties\n   * @returns {(ParseError<ErrorDetails> | empty)}\n   * @memberof Tokenizer\n   */\n  raise<ErrorDetails>(\n    toParseError: ParseErrorConstructor<ErrorDetails>,\n    raiseProperties: RaiseProperties<ErrorDetails>,\n  ): ParseError<ErrorDetails> {\n    const { at, ...details } = raiseProperties;\n    const loc = at instanceof Position ? at : at.loc.start;\n    const error = toParseError({ loc, details });\n\n    if (!this.options.errorRecovery) throw error;\n    if (!this.isLookahead) this.state.errors.push(error);\n\n    return error;\n  }\n\n  /**\n   * If `errorRecovery` is `false`, this method behaves identically to `raise`.\n   * If `errorRecovery` is `true`, this method will first see if there is\n   * already an error stored at the same `Position`, and replaces it with the\n   * one generated here.\n   *\n   * @param {Class<ParseError<ErrorDetails>>>} ParseErrorClass\n   * @param {RaiseProperties<ErrorDetails>} raiseProperties\n   * @returns {(ParseError<ErrorDetails> | empty)}\n   * @memberof Tokenizer\n   */\n  raiseOverwrite<ErrorDetails>(\n    toParseError: ParseErrorConstructor<ErrorDetails>,\n    raiseProperties: RaiseProperties<ErrorDetails>,\n  ): ParseError<ErrorDetails> | empty {\n    const { at, ...details } = raiseProperties;\n    const loc = at instanceof Position ? at : at.loc.start;\n    const pos = loc.index;\n    const errors = this.state.errors;\n\n    for (let i = errors.length - 1; i >= 0; i--) {\n      const error = errors[i];\n      if (error.loc.index === pos) {\n        return (errors[i] = toParseError({ loc, details }));\n      }\n      if (error.loc.index < pos) break;\n    }\n\n    return this.raise(toParseError, raiseProperties);\n  }\n\n  // updateContext is used by the jsx plugin\n  // eslint-disable-next-line no-unused-vars\n  updateContext(prevType: TokenType): void {}\n\n  // Raise an unexpected token error. Can take the expected token type.\n  unexpected(loc?: Position | null, type?: TokenType): void {\n    throw this.raise(Errors.UnexpectedToken, {\n      expected: type ? tokenLabelName(type) : null,\n      at: loc != null ? loc : this.state.startLoc,\n    });\n  }\n\n  expectPlugin(pluginName: string, loc?: Position): true {\n    if (this.hasPlugin(pluginName)) {\n      return true;\n    }\n\n    throw this.raise(Errors.MissingPlugin, {\n      at: loc != null ? loc : this.state.startLoc,\n      missingPlugin: [pluginName],\n    });\n  }\n\n  expectOnePlugin(pluginNames: string[]): void {\n    if (!pluginNames.some(name => this.hasPlugin(name))) {\n      throw this.raise(Errors.MissingOneOfPlugins, {\n        at: this.state.startLoc,\n        missingPlugin: pluginNames,\n      });\n    }\n  }\n}\n","// @flow\nimport {\n  SCOPE_ARROW,\n  SCOPE_DIRECT_SUPER,\n  SCOPE_FUNCTION,\n  SCOPE_SIMPLE_CATCH,\n  SCOPE_SUPER,\n  SCOPE_PROGRAM,\n  SCOPE_VAR,\n  SCOPE_CLASS,\n  SCOPE_STATIC_BLOCK,\n  BIND_SCOPE_FUNCTION,\n  BIND_SCOPE_VAR,\n  BIND_SCOPE_LEXICAL,\n  BIND_KIND_VALUE,\n  type ScopeFlags,\n  type BindingTypes,\n} from \"./scopeflags\";\nimport { Position } from \"./location\";\nimport * as N from \"../types\";\nimport { Errors } from \"../parse-error\";\nimport Tokenizer from \"../tokenizer\";\n\n// Start an AST node, attaching a start offset.\nexport class Scope {\n  declare flags: ScopeFlags;\n  // A set of var-declared names in the current lexical scope\n  var: Set<string> = new Set();\n  // A set of lexically-declared names in the current lexical scope\n  lexical: Set<string> = new Set();\n  // A set of lexically-declared FunctionDeclaration names in the current lexical scope\n  functions: Set<string> = new Set();\n\n  constructor(flags: ScopeFlags) {\n    this.flags = flags;\n  }\n}\n\n// The functions in this module keep track of declared variables in the\n// current scope in order to detect duplicate variable names.\nexport default class ScopeHandler<IScope: Scope = Scope> {\n  parser: Tokenizer;\n  scopeStack: Array<IScope> = [];\n  inModule: boolean;\n  undefinedExports: Map<string, Position> = new Map();\n\n  constructor(parser: Tokenizer, inModule: boolean) {\n    this.parser = parser;\n    this.inModule = inModule;\n  }\n\n  get inFunction() {\n    return (this.currentVarScopeFlags() & SCOPE_FUNCTION) > 0;\n  }\n  get allowSuper() {\n    return (this.currentThisScopeFlags() & SCOPE_SUPER) > 0;\n  }\n  get allowDirectSuper() {\n    return (this.currentThisScopeFlags() & SCOPE_DIRECT_SUPER) > 0;\n  }\n  get inClass() {\n    return (this.currentThisScopeFlags() & SCOPE_CLASS) > 0;\n  }\n  get inClassAndNotInNonArrowFunction() {\n    const flags = this.currentThisScopeFlags();\n    return (flags & SCOPE_CLASS) > 0 && (flags & SCOPE_FUNCTION) === 0;\n  }\n  get inStaticBlock() {\n    for (let i = this.scopeStack.length - 1; ; i--) {\n      const { flags } = this.scopeStack[i];\n      if (flags & SCOPE_STATIC_BLOCK) {\n        return true;\n      }\n      if (flags & (SCOPE_VAR | SCOPE_CLASS)) {\n        // function body, module body, class property initializers\n        return false;\n      }\n    }\n  }\n  get inNonArrowFunction() {\n    return (this.currentThisScopeFlags() & SCOPE_FUNCTION) > 0;\n  }\n  get treatFunctionsAsVar() {\n    return this.treatFunctionsAsVarInScope(this.currentScope());\n  }\n\n  createScope(flags: ScopeFlags): Scope {\n    return new Scope(flags);\n  }\n  // This method will be overwritten by subclasses\n  /*:: +createScope: (flags: ScopeFlags) => IScope; */\n\n  enter(flags: ScopeFlags) {\n    this.scopeStack.push(this.createScope(flags));\n  }\n\n  exit() {\n    this.scopeStack.pop();\n  }\n\n  // The spec says:\n  // > At the top level of a function, or script, function declarations are\n  // > treated like var declarations rather than like lexical declarations.\n  treatFunctionsAsVarInScope(scope: IScope): boolean {\n    return !!(\n      scope.flags & (SCOPE_FUNCTION | SCOPE_STATIC_BLOCK) ||\n      (!this.parser.inModule && scope.flags & SCOPE_PROGRAM)\n    );\n  }\n\n  declareName(name: string, bindingType: BindingTypes, loc: Position) {\n    let scope = this.currentScope();\n    if (bindingType & BIND_SCOPE_LEXICAL || bindingType & BIND_SCOPE_FUNCTION) {\n      this.checkRedeclarationInScope(scope, name, bindingType, loc);\n\n      if (bindingType & BIND_SCOPE_FUNCTION) {\n        scope.functions.add(name);\n      } else {\n        scope.lexical.add(name);\n      }\n\n      if (bindingType & BIND_SCOPE_LEXICAL) {\n        this.maybeExportDefined(scope, name);\n      }\n    } else if (bindingType & BIND_SCOPE_VAR) {\n      for (let i = this.scopeStack.length - 1; i >= 0; --i) {\n        scope = this.scopeStack[i];\n        this.checkRedeclarationInScope(scope, name, bindingType, loc);\n        scope.var.add(name);\n        this.maybeExportDefined(scope, name);\n\n        if (scope.flags & SCOPE_VAR) break;\n      }\n    }\n    if (this.parser.inModule && scope.flags & SCOPE_PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n\n  maybeExportDefined(scope: IScope, name: string) {\n    if (this.parser.inModule && scope.flags & SCOPE_PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n\n  checkRedeclarationInScope(\n    scope: IScope,\n    name: string,\n    bindingType: BindingTypes,\n    loc: Position,\n  ) {\n    if (this.isRedeclaredInScope(scope, name, bindingType)) {\n      this.parser.raise(Errors.VarRedeclaration, {\n        at: loc,\n        identifierName: name,\n      });\n    }\n  }\n\n  isRedeclaredInScope(\n    scope: IScope,\n    name: string,\n    bindingType: BindingTypes,\n  ): boolean {\n    if (!(bindingType & BIND_KIND_VALUE)) return false;\n\n    if (bindingType & BIND_SCOPE_LEXICAL) {\n      return (\n        scope.lexical.has(name) ||\n        scope.functions.has(name) ||\n        scope.var.has(name)\n      );\n    }\n\n    if (bindingType & BIND_SCOPE_FUNCTION) {\n      return (\n        scope.lexical.has(name) ||\n        (!this.treatFunctionsAsVarInScope(scope) && scope.var.has(name))\n      );\n    }\n\n    return (\n      (scope.lexical.has(name) &&\n        !(\n          scope.flags & SCOPE_SIMPLE_CATCH &&\n          scope.lexical.values().next().value === name\n        )) ||\n      (!this.treatFunctionsAsVarInScope(scope) && scope.functions.has(name))\n    );\n  }\n\n  checkLocalExport(id: N.Identifier) {\n    const { name } = id;\n    const topLevelScope = this.scopeStack[0];\n    if (\n      !topLevelScope.lexical.has(name) &&\n      !topLevelScope.var.has(name) &&\n      // In strict mode, scope.functions will always be empty.\n      // Modules are strict by default, but the `scriptMode` option\n      // can overwrite this behavior.\n      !topLevelScope.functions.has(name)\n    ) {\n      this.undefinedExports.set(name, id.loc.start);\n    }\n  }\n\n  currentScope(): IScope {\n    return this.scopeStack[this.scopeStack.length - 1];\n  }\n\n  // $FlowIgnore\n  currentVarScopeFlags(): ScopeFlags {\n    for (let i = this.scopeStack.length - 1; ; i--) {\n      const { flags } = this.scopeStack[i];\n      if (flags & SCOPE_VAR) {\n        return flags;\n      }\n    }\n  }\n\n  // Could be useful for `arguments`, `this`, `new.target`, `super()`, `super.property`, and `super[property]`.\n  // $FlowIgnore\n  currentThisScopeFlags(): ScopeFlags {\n    for (let i = this.scopeStack.length - 1; ; i--) {\n      const { flags } = this.scopeStack[i];\n      if (flags & (SCOPE_VAR | SCOPE_CLASS) && !(flags & SCOPE_ARROW)) {\n        return flags;\n      }\n    }\n  }\n}\n","// @flow\n\nimport { Position } from \"../../util/location\";\nimport ScopeHandler, { Scope } from \"../../util/scope\";\nimport {\n  BIND_FLAGS_FLOW_DECLARE_FN,\n  type ScopeFlags,\n  type BindingTypes,\n} from \"../../util/scopeflags\";\nimport * as N from \"../../types\";\n\n// Reference implementation: https://github.com/facebook/flow/blob/23aeb2a2ef6eb4241ce178fde5d8f17c5f747fb5/src/typing/env.ml#L536-L584\nclass FlowScope extends Scope {\n  // declare function foo(): type;\n  declareFunctions: Set<string> = new Set();\n}\n\nexport default class FlowScopeHandler extends ScopeHandler<FlowScope> {\n  createScope(flags: ScopeFlags): FlowScope {\n    return new FlowScope(flags);\n  }\n\n  declareName(name: string, bindingType: BindingTypes, loc: Position) {\n    const scope = this.currentScope();\n    if (bindingType & BIND_FLAGS_FLOW_DECLARE_FN) {\n      this.checkRedeclarationInScope(scope, name, bindingType, loc);\n      this.maybeExportDefined(scope, name);\n      scope.declareFunctions.add(name);\n      return;\n    }\n\n    super.declareName(...arguments);\n  }\n\n  isRedeclaredInScope(\n    scope: FlowScope,\n    name: string,\n    bindingType: BindingTypes,\n  ): boolean {\n    if (super.isRedeclaredInScope(...arguments)) return true;\n\n    if (bindingType & BIND_FLAGS_FLOW_DECLARE_FN) {\n      return (\n        !scope.declareFunctions.has(name) &&\n        (scope.lexical.has(name) || scope.functions.has(name))\n      );\n    }\n\n    return false;\n  }\n\n  checkLocalExport(id: N.Identifier) {\n    if (!this.scopeStack[0].declareFunctions.has(id.name)) {\n      super.checkLocalExport(id);\n    }\n  }\n}\n","// @flow\n\nimport {\n  CLASS_ELEMENT_KIND_ACCESSOR,\n  CLASS_ELEMENT_FLAG_STATIC,\n  type ClassElementTypes,\n} from \"./scopeflags\";\nimport { Position } from \"./location\";\nimport { Errors } from \"../parse-error\";\nimport Tokenizer from \"../tokenizer\";\n\nexport class ClassScope {\n  // A list of private named declared in the current class\n  privateNames: Set<string> = new Set();\n\n  // A list of private getters of setters without their counterpart\n  loneAccessors: Map<string, ClassElementTypes> = new Map();\n\n  // A list of private names used before being defined, mapping to\n  // their position.\n  undefinedPrivateNames: Map<string, Position> = new Map();\n}\n\nexport default class ClassScopeHandler {\n  parser: Tokenizer;\n  stack: Array<ClassScope> = [];\n  undefinedPrivateNames: Map<string, Position> = new Map();\n\n  constructor(parser: Tokenizer) {\n    this.parser = parser;\n  }\n\n  current(): ClassScope {\n    return this.stack[this.stack.length - 1];\n  }\n\n  enter() {\n    this.stack.push(new ClassScope());\n  }\n\n  exit() {\n    const oldClassScope = this.stack.pop();\n\n    // Migrate the usage of not yet defined private names to the outer\n    // class scope, or raise an error if we reached the top-level scope.\n\n    const current = this.current();\n\n    // Array.from is needed because this is compiled to an array-like for loop\n    for (const [name, loc] of Array.from(oldClassScope.undefinedPrivateNames)) {\n      if (current) {\n        if (!current.undefinedPrivateNames.has(name)) {\n          current.undefinedPrivateNames.set(name, loc);\n        }\n      } else {\n        this.parser.raise(Errors.InvalidPrivateFieldResolution, {\n          at: loc,\n          identifierName: name,\n        });\n      }\n    }\n  }\n\n  declarePrivateName(\n    name: string,\n    elementType: ClassElementTypes,\n    loc: Position,\n  ) {\n    const { privateNames, loneAccessors, undefinedPrivateNames } =\n      this.current();\n    let redefined = privateNames.has(name);\n\n    if (elementType & CLASS_ELEMENT_KIND_ACCESSOR) {\n      const accessor = redefined && loneAccessors.get(name);\n      if (accessor) {\n        const oldStatic = accessor & CLASS_ELEMENT_FLAG_STATIC;\n        const newStatic = elementType & CLASS_ELEMENT_FLAG_STATIC;\n\n        const oldKind = accessor & CLASS_ELEMENT_KIND_ACCESSOR;\n        const newKind = elementType & CLASS_ELEMENT_KIND_ACCESSOR;\n\n        // The private name can be duplicated only if it is used by\n        // two accessors with different kind (get and set), and if\n        // they have the same placement (static or not).\n        redefined = oldKind === newKind || oldStatic !== newStatic;\n\n        if (!redefined) loneAccessors.delete(name);\n      } else if (!redefined) {\n        loneAccessors.set(name, elementType);\n      }\n    }\n\n    if (redefined) {\n      this.parser.raise(Errors.PrivateNameRedeclaration, {\n        at: loc,\n        identifierName: name,\n      });\n    }\n\n    privateNames.add(name);\n    undefinedPrivateNames.delete(name);\n  }\n\n  usePrivateName(name: string, loc: Position) {\n    let classScope;\n    for (classScope of this.stack) {\n      if (classScope.privateNames.has(name)) return;\n    }\n\n    if (classScope) {\n      classScope.undefinedPrivateNames.set(name, loc);\n    } else {\n      // top-level\n      this.parser.raise(Errors.InvalidPrivateFieldResolution, {\n        at: loc,\n        identifierName: name,\n      });\n    }\n  }\n}\n","// @flow\n\nimport { Errors, type ParseErrorConstructor } from \"../parse-error\";\nimport { Position } from \"./location\";\nimport type { Node } from \"../types\";\nimport Tokenizer from \"../tokenizer\";\n\n/*:: declare var invariant; */\n/**\n * @module util/expression-scope\n\nExpressionScope is used to track declaration errors in these ambiguous patterns:\n\n- CoverParenthesizedExpressionAndArrowParameterList\n  e.g. we don't know if `({ x })` is an parenthesized expression or an\n  arrow function parameters until we see an `=>` after `)`.\n\n- CoverCallExpressionAndAsyncArrowHead\n   e.g. we don't know if `async({ x })` is a call expression or an async arrow\n   function parameters until we see an `=>` after `)`\n\nThe following declaration errors (@see parser-errors/standard) will be recorded in\nsome expression scopes and thrown later when we know what the ambiguous pattern is\n\n- AwaitBindingIdentifier\n- AwaitExpressionFormalParameter\n- YieldInParameter\n- InvalidParenthesizedAssignment when parenthesized is an identifier\n\nThere are four different expression scope\n- Expression\n  A general scope that represents program / function body / static block. No errors\n  will be recorded nor thrown in this scope.\n\n- MaybeArrowParameterDeclaration\n  A scope that represents ambiguous arrow head e.g. `(x)`. Errors will be recorded\n  alongside parent scopes and thrown when `ExpressionScopeHandler#validateAsPattern`\n  is called.\n\n- MaybeAsyncArrowParameterDeclaration\n  A scope that represents ambiguous async arrow head e.g. `async(x)`. Errors will\n  be recorded alongside parent scopes and thrown when\n  `ExpressionScopeHandler#validateAsPattern` is called.\n\n- ParameterDeclaration\n  A scope that represents unambiguous function parameters `function(x)`. Errors\n  recorded in this scope will be thrown immediately. No errors will be recorded in\n  this scope.\n\n// @see {@link https://docs.google.com/document/d/1FAvEp9EUK-G8kHfDIEo_385Hs2SUBCYbJ5H-NnLvq8M|V8 Expression Scope design docs}\n */\n\nconst kExpression = 0,\n  kMaybeArrowParameterDeclaration = 1,\n  kMaybeAsyncArrowParameterDeclaration = 2,\n  kParameterDeclaration = 3;\n\ntype ExpressionScopeType = 0 | 1 | 2 | 3;\n\nclass ExpressionScope {\n  type: ExpressionScopeType;\n\n  constructor(type: ExpressionScopeType = kExpression) {\n    this.type = type;\n  }\n\n  canBeArrowParameterDeclaration() {\n    return (\n      this.type === kMaybeAsyncArrowParameterDeclaration ||\n      this.type === kMaybeArrowParameterDeclaration\n    );\n  }\n\n  isCertainlyParameterDeclaration() {\n    return this.type === kParameterDeclaration;\n  }\n}\n\ntype ArrowHeadParsingParameterInitializerError =\n  | typeof Errors.AwaitExpressionFormalParameter\n  | typeof Errors.YieldInParameter;\n\ntype ArrowHeadParsingDeclarationError =\n  | ArrowHeadParsingParameterInitializerError\n  | typeof Errors.InvalidParenthesizedAssignment\n  | typeof Errors.AwaitBindingIdentifier;\n\nclass ArrowHeadParsingScope extends ExpressionScope {\n  declarationErrors: Map<number, [ParseErrorConstructor<{||}>, Position]> =\n    new Map();\n  constructor(type: 1 | 2) {\n    super(type);\n  }\n  recordDeclarationError(\n    ParsingErrorClass: ParseErrorConstructor<{||}>,\n    { at }: { at: Position },\n  ) {\n    const index = at.index;\n\n    this.declarationErrors.set(index, [ParsingErrorClass, at]);\n  }\n  clearDeclarationError(index: number) {\n    this.declarationErrors.delete(index);\n  }\n  iterateErrors(\n    iterator: ([ArrowHeadParsingDeclarationError, Position]) => void,\n  ) {\n    this.declarationErrors.forEach(iterator);\n  }\n}\n\nexport default class ExpressionScopeHandler {\n  parser: Tokenizer;\n  stack: Array<ExpressionScope> = [new ExpressionScope()];\n\n  constructor(parser: Tokenizer) {\n    this.parser = parser;\n  }\n  enter(scope: ExpressionScope) {\n    this.stack.push(scope);\n  }\n\n  exit() {\n    this.stack.pop();\n  }\n\n  /**\n   * Record likely parameter initializer errors\n   *\n   * When current scope is a ParameterDeclaration, the error will be thrown immediately,\n   * otherwise it will be recorded to any ancestry MaybeArrowParameterDeclaration and\n   * MaybeAsyncArrowParameterDeclaration scope until an Expression scope is seen.\n   * @param {number} pos Error position\n   * @param {ErrorTemplate} template Error template\n   * @memberof ExpressionScopeHandler\n   */\n  recordParameterInitializerError(\n    toParseError: ArrowHeadParsingParameterInitializerError,\n    { at: node }: { at: Node },\n  ): void {\n    const origin = { at: node.loc.start };\n    const { stack } = this;\n    let i = stack.length - 1;\n    let scope: ExpressionScope = stack[i];\n    while (!scope.isCertainlyParameterDeclaration()) {\n      if (scope.canBeArrowParameterDeclaration()) {\n        /*:: invariant(scope instanceof ArrowHeadParsingScope) */\n        scope.recordDeclarationError(toParseError, origin);\n      } else {\n        /*:: invariant(scope.type == kExpression) */\n        // Type-Expression is the boundary where initializer error can populate to\n        return;\n      }\n      scope = stack[--i];\n    }\n    this.parser.raise(toParseError, origin);\n  }\n\n  /**\n   * Record errors that must be thrown if the current pattern ends up being an arrow\n   * function parameter. This is used to record parenthesized identifiers, and to record\n   * \"a as T\" and \"<T> a\" type assertions when parsing typescript.\n   *\n   * A parenthesized identifier (or type assertion) in LHS can be ambiguous because the assignment\n   * can be transformed to an assignable later, but not vice versa:\n   * For example, in `([(a) = []] = []) => {}`, we think `(a) = []` is an LHS in `[(a) = []]`,\n   * an LHS within `[(a) = []] = []`. However the LHS chain is then transformed by toAssignable,\n   * and we should throw assignment `(a)`, which is only valid in LHS. Hence we record the\n   * location of parenthesized `(a)` to current scope if it is one of MaybeArrowParameterDeclaration\n   * and MaybeAsyncArrowParameterDeclaration\n   *\n   * Unlike `recordParameterInitializerError`, we don't record to ancestry scope because we\n   * validate arrow head parsing scope before exit, and then the LHS will be unambiguous:\n   * For example, in `( x = ( [(a) = []] = [] ) ) => {}`, we should not record `(a)` in `( x = ... ) =>`\n   * arrow scope because when we finish parsing `( [(a) = []] = [] )`, it is an unambiguous assignment\n   * expression and can not be cast to pattern\n   * @param {ParseErrorConstructor<{||}>} error\n   * @param {Node} payload.at\n   * @returns {void}\n   * @memberof ExpressionScopeHandler\n   */\n  recordArrowParemeterBindingError(\n    error: ParseErrorConstructor<{||}>,\n    { at: node }: { at: Node },\n  ): void {\n    const { stack } = this;\n    const scope: ExpressionScope = stack[stack.length - 1];\n    const origin = { at: node.loc.start };\n    if (scope.isCertainlyParameterDeclaration()) {\n      this.parser.raise(error, origin);\n    } else if (scope.canBeArrowParameterDeclaration()) {\n      /*:: invariant(scope instanceof ArrowHeadParsingScope) */\n      scope.recordDeclarationError(error, origin);\n    } else {\n      return;\n    }\n  }\n\n  /**\n   * Record likely async arrow parameter errors\n   *\n   * Errors will be recorded to any ancestry MaybeAsyncArrowParameterDeclaration\n   * scope until an Expression scope is seen.\n   * @param {number} pos\n   * @param {ErrorTemplate} template\n   * @memberof ExpressionScopeHandler\n   */\n  recordAsyncArrowParametersError({ at }: { at: Position }): void {\n    const { stack } = this;\n    let i = stack.length - 1;\n    let scope: ExpressionScope = stack[i];\n    while (scope.canBeArrowParameterDeclaration()) {\n      if (scope.type === kMaybeAsyncArrowParameterDeclaration) {\n        /*:: invariant(scope instanceof ArrowHeadParsingScope) */\n        scope.recordDeclarationError(Errors.AwaitBindingIdentifier, { at });\n      }\n      scope = stack[--i];\n    }\n  }\n\n  validateAsPattern(): void {\n    const { stack } = this;\n    const currentScope = stack[stack.length - 1];\n    if (!currentScope.canBeArrowParameterDeclaration()) return;\n    /*:: invariant(currentScope instanceof ArrowHeadParsingScope) */\n    currentScope.iterateErrors(([toParseError, loc]) => {\n      this.parser.raise(toParseError, { at: loc });\n      // iterate from parent scope\n      let i = stack.length - 2;\n      let scope = stack[i];\n      while (scope.canBeArrowParameterDeclaration()) {\n        /*:: invariant(scope instanceof ArrowHeadParsingScope) */\n        scope.clearDeclarationError(loc.index);\n        scope = stack[--i];\n      }\n    });\n  }\n}\n\nexport function newParameterDeclarationScope() {\n  return new ExpressionScope(kParameterDeclaration);\n}\n\nexport function newArrowHeadScope() {\n  return new ArrowHeadParsingScope(kMaybeArrowParameterDeclaration);\n}\n\nexport function newAsyncArrowScope() {\n  return new ArrowHeadParsingScope(kMaybeAsyncArrowParameterDeclaration);\n}\n\nexport function newExpressionScope() {\n  return new ExpressionScope();\n}\n","// @flow\nexport const PARAM = 0b0000, // Initial Parameter flags\n  PARAM_YIELD = 0b0001, // track [Yield] production parameter\n  PARAM_AWAIT = 0b0010, // track [Await] production parameter\n  PARAM_RETURN = 0b0100, // track [Return] production parameter\n  PARAM_IN = 0b1000; // track [In] production parameter\n\n// ProductionParameterHandler is a stack fashioned production parameter tracker\n// https://tc39.es/ecma262/#sec-grammar-notation\n// The tracked parameters are defined above.\n//\n// Whenever [+Await]/[+Yield] appears in the right-hand sides of a production,\n// we must enter a new tracking stack. For example when parsing\n//\n// AsyncFunctionDeclaration [Yield, Await]:\n//   async [no LineTerminator here] function BindingIdentifier[?Yield, ?Await]\n//     ( FormalParameters[~Yield, +Await] ) { AsyncFunctionBody }\n//\n// we must follow such process:\n//\n// 1. parse async keyword\n// 2. parse function keyword\n// 3. parse bindingIdentifier <= inherit current parameters: [?Await]\n// 4. enter new stack with (PARAM_AWAIT)\n// 5. parse formal parameters <= must have [Await] parameter [+Await]\n// 6. parse function body\n// 7. exit current stack\n\nexport type ParamKind =\n  | typeof PARAM\n  | typeof PARAM_AWAIT\n  | typeof PARAM_IN\n  | typeof PARAM_RETURN\n  | typeof PARAM_YIELD;\n\nexport default class ProductionParameterHandler {\n  stacks: Array<ParamKind> = [];\n  enter(flags: ParamKind) {\n    this.stacks.push(flags);\n  }\n\n  exit() {\n    this.stacks.pop();\n  }\n\n  currentFlags(): ParamKind {\n    return this.stacks[this.stacks.length - 1];\n  }\n\n  get hasAwait(): boolean {\n    return (this.currentFlags() & PARAM_AWAIT) > 0;\n  }\n\n  get hasYield(): boolean {\n    return (this.currentFlags() & PARAM_YIELD) > 0;\n  }\n\n  get hasReturn(): boolean {\n    return (this.currentFlags() & PARAM_RETURN) > 0;\n  }\n\n  get hasIn(): boolean {\n    return (this.currentFlags() & PARAM_IN) > 0;\n  }\n}\n\nexport function functionFlags(\n  isAsync: boolean,\n  isGenerator: boolean,\n): ParamKind {\n  return (isAsync ? PARAM_AWAIT : 0) | (isGenerator ? PARAM_YIELD : 0);\n}\n","// @flow\n\nimport { type Position } from \"../util/location\";\nimport {\n  tokenIsLiteralPropertyName,\n  tt,\n  type TokenType,\n} from \"../tokenizer/types\";\nimport Tokenizer from \"../tokenizer\";\nimport State from \"../tokenizer/state\";\nimport type { Node } from \"../types\";\nimport { lineBreak, skipWhiteSpaceToLineBreak } from \"../util/whitespace\";\nimport { isIdentifierChar } from \"../util/identifier\";\nimport ClassScopeHandler from \"../util/class-scope\";\nimport ExpressionScopeHandler from \"../util/expression-scope\";\nimport { SCOPE_PROGRAM } from \"../util/scopeflags\";\nimport ProductionParameterHandler, {\n  PARAM_AWAIT,\n  PARAM,\n} from \"../util/production-parameter\";\nimport {\n  Errors,\n  type ParseError,\n  type ParseErrorConstructor,\n} from \"../parse-error\";\n/*::\nimport type ScopeHandler from \"../util/scope\";\n*/\n\ntype TryParse<Node, Error, Thrown, Aborted, FailState> = {\n  node: Node,\n  error: Error,\n  thrown: Thrown,\n  aborted: Aborted,\n  failState: FailState,\n};\n\n// ## Parser utilities\n\nexport default class UtilParser extends Tokenizer {\n  // Forward-declaration: defined in parser/index.js\n  /*::\n  +getScopeHandler: () => Class<ScopeHandler<*>>;\n  */\n\n  // TODO\n\n  addExtra(\n    node: Node,\n    key: string,\n    value: any,\n    enumerable: boolean = true,\n  ): void {\n    if (!node) return;\n\n    const extra = (node.extra = node.extra || {});\n    if (enumerable) {\n      extra[key] = value;\n    } else {\n      Object.defineProperty(extra, key, { enumerable, value });\n    }\n  }\n\n  // Tests whether parsed token is a contextual keyword.\n\n  isContextual(token: TokenType): boolean {\n    return this.state.type === token && !this.state.containsEsc;\n  }\n\n  isUnparsedContextual(nameStart: number, name: string): boolean {\n    const nameEnd = nameStart + name.length;\n    if (this.input.slice(nameStart, nameEnd) === name) {\n      const nextCh = this.input.charCodeAt(nameEnd);\n      return !(\n        isIdentifierChar(nextCh) ||\n        // check if `nextCh is between 0xd800 - 0xdbff,\n        // if `nextCh` is NaN, `NaN & 0xfc00` is 0, the function\n        // returns true\n        (nextCh & 0xfc00) === 0xd800\n      );\n    }\n    return false;\n  }\n\n  isLookaheadContextual(name: string): boolean {\n    const next = this.nextTokenStart();\n    return this.isUnparsedContextual(next, name);\n  }\n\n  // Consumes contextual keyword if possible.\n\n  eatContextual(token: TokenType): boolean {\n    if (this.isContextual(token)) {\n      this.next();\n      return true;\n    }\n    return false;\n  }\n\n  // Asserts that following token is given contextual keyword.\n\n  expectContextual(\n    token: TokenType,\n    toParseError?: ParseErrorConstructor<any>,\n  ): void {\n    if (!this.eatContextual(token)) {\n      if (toParseError != null) {\n        throw this.raise(toParseError, { at: this.state.startLoc });\n      }\n      throw this.unexpected(null, token);\n    }\n  }\n\n  // Test whether a semicolon can be inserted at the current position.\n\n  canInsertSemicolon(): boolean {\n    return (\n      this.match(tt.eof) ||\n      this.match(tt.braceR) ||\n      this.hasPrecedingLineBreak()\n    );\n  }\n\n  hasPrecedingLineBreak(): boolean {\n    return lineBreak.test(\n      this.input.slice(this.state.lastTokEndLoc.index, this.state.start),\n    );\n  }\n\n  hasFollowingLineBreak(): boolean {\n    skipWhiteSpaceToLineBreak.lastIndex = this.state.end;\n    return skipWhiteSpaceToLineBreak.test(this.input);\n  }\n\n  // TODO\n\n  isLineTerminator(): boolean {\n    return this.eat(tt.semi) || this.canInsertSemicolon();\n  }\n\n  // Consume a semicolon, or, failing that, see if we are allowed to\n  // pretend that there is a semicolon at this position.\n\n  semicolon(allowAsi: boolean = true): void {\n    if (allowAsi ? this.isLineTerminator() : this.eat(tt.semi)) return;\n    this.raise(Errors.MissingSemicolon, { at: this.state.lastTokEndLoc });\n  }\n\n  // Expect a token of a given type. If found, consume it, otherwise,\n  // raise an unexpected token error at given pos.\n\n  expect(type: TokenType, loc?: ?Position): void {\n    this.eat(type) || this.unexpected(loc, type);\n  }\n\n  // tryParse will clone parser state.\n  // It is expensive and should be used with cautions\n  tryParse<T: Node | $ReadOnlyArray<Node>>(\n    fn: (abort: (node?: T) => empty) => T,\n    oldState: State = this.state.clone(),\n  ):\n    | TryParse<T, null, false, false, null>\n    | TryParse<T | null, ParseError<any>, boolean, false, State>\n    | TryParse<T | null, null, false, true, State> {\n    const abortSignal: { node: T | null } = { node: null };\n    try {\n      const node = fn((node = null) => {\n        abortSignal.node = node;\n        throw abortSignal;\n      });\n      if (this.state.errors.length > oldState.errors.length) {\n        const failState = this.state;\n        this.state = oldState;\n        // tokensLength should be preserved during error recovery mode\n        // since the parser does not halt and will instead parse the\n        // remaining tokens\n        this.state.tokensLength = failState.tokensLength;\n        return {\n          node,\n          error: (failState.errors[oldState.errors.length]: ParseError<any>),\n          thrown: false,\n          aborted: false,\n          failState,\n        };\n      }\n\n      return {\n        node,\n        error: null,\n        thrown: false,\n        aborted: false,\n        failState: null,\n      };\n    } catch (error) {\n      const failState = this.state;\n      this.state = oldState;\n      if (error instanceof SyntaxError) {\n        return { node: null, error, thrown: true, aborted: false, failState };\n      }\n      if (error === abortSignal) {\n        return {\n          node: abortSignal.node,\n          error: null,\n          thrown: false,\n          aborted: true,\n          failState,\n        };\n      }\n\n      throw error;\n    }\n  }\n\n  checkExpressionErrors(\n    refExpressionErrors: ?ExpressionErrors,\n    andThrow: boolean,\n  ) {\n    if (!refExpressionErrors) return false;\n    const {\n      shorthandAssignLoc,\n      doubleProtoLoc,\n      privateKeyLoc,\n      optionalParametersLoc,\n    } = refExpressionErrors;\n\n    const hasErrors =\n      !!shorthandAssignLoc ||\n      !!doubleProtoLoc ||\n      !!optionalParametersLoc ||\n      !!privateKeyLoc;\n\n    if (!andThrow) {\n      return hasErrors;\n    }\n\n    if (shorthandAssignLoc != null) {\n      this.raise(Errors.InvalidCoverInitializedName, {\n        at: shorthandAssignLoc,\n      });\n    }\n\n    if (doubleProtoLoc != null) {\n      this.raise(Errors.DuplicateProto, { at: doubleProtoLoc });\n    }\n\n    if (privateKeyLoc != null) {\n      this.raise(Errors.UnexpectedPrivateField, { at: privateKeyLoc });\n    }\n\n    if (optionalParametersLoc != null) {\n      this.unexpected(optionalParametersLoc);\n    }\n  }\n\n  /**\n   * Test if current token is a literal property name\n   * https://tc39.es/ecma262/#prod-LiteralPropertyName\n   * LiteralPropertyName:\n   *   IdentifierName\n   *   StringLiteral\n   *   NumericLiteral\n   *   BigIntLiteral\n   */\n  isLiteralPropertyName(): boolean {\n    return tokenIsLiteralPropertyName(this.state.type);\n  }\n\n  /*\n   * Test if given node is a PrivateName\n   * will be overridden in ESTree plugin\n   */\n  isPrivateName(node: Node): boolean {\n    return node.type === \"PrivateName\";\n  }\n\n  /*\n   * Return the string value of a given private name\n   * WITHOUT `#`\n   * @see {@link https://tc39.es/ecma262/#sec-static-semantics-stringvalue}\n   */\n  getPrivateNameSV(node: Node): string {\n    return node.id.name;\n  }\n\n  /*\n   * Return whether the given node is a member/optional chain that\n   * contains a private name as its property\n   * It is overridden in ESTree plugin\n   */\n  hasPropertyAsPrivateName(node: Node): boolean {\n    return (\n      (node.type === \"MemberExpression\" ||\n        node.type === \"OptionalMemberExpression\") &&\n      this.isPrivateName(node.property)\n    );\n  }\n\n  isOptionalChain(node: Node): boolean {\n    return (\n      node.type === \"OptionalMemberExpression\" ||\n      node.type === \"OptionalCallExpression\"\n    );\n  }\n\n  isObjectProperty(node: Node): boolean {\n    return node.type === \"ObjectProperty\";\n  }\n\n  isObjectMethod(node: Node): boolean {\n    return node.type === \"ObjectMethod\";\n  }\n\n  initializeScopes(\n    inModule: boolean = this.options.sourceType === \"module\",\n  ): () => void {\n    // Initialize state\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n\n    const oldExportedIdentifiers = this.exportedIdentifiers;\n    this.exportedIdentifiers = new Set();\n\n    // initialize scopes\n    const oldInModule = this.inModule;\n    this.inModule = inModule;\n\n    const oldScope = this.scope;\n    const ScopeHandler = this.getScopeHandler();\n    this.scope = new ScopeHandler(this, inModule);\n\n    const oldProdParam = this.prodParam;\n    this.prodParam = new ProductionParameterHandler();\n\n    const oldClassScope = this.classScope;\n    this.classScope = new ClassScopeHandler(this);\n\n    const oldExpressionScope = this.expressionScope;\n    this.expressionScope = new ExpressionScopeHandler(this);\n\n    return () => {\n      // Revert state\n      this.state.labels = oldLabels;\n      this.exportedIdentifiers = oldExportedIdentifiers;\n\n      // Revert scopes\n      this.inModule = oldInModule;\n      this.scope = oldScope;\n      this.prodParam = oldProdParam;\n      this.classScope = oldClassScope;\n      this.expressionScope = oldExpressionScope;\n    };\n  }\n\n  enterInitialScopes() {\n    let paramFlags = PARAM;\n    if (this.inModule) {\n      paramFlags |= PARAM_AWAIT;\n    }\n    this.scope.enter(SCOPE_PROGRAM);\n    this.prodParam.enter(paramFlags);\n  }\n\n  checkDestructuringPrivate(refExpressionErrors: ExpressionErrors) {\n    const { privateKeyLoc } = refExpressionErrors;\n    if (privateKeyLoc !== null) {\n      this.expectPlugin(\"destructuringPrivate\", privateKeyLoc);\n    }\n  }\n}\n\n/**\n * The ExpressionErrors is a context struct used to track ambiguous patterns\n * When we are sure the parsed pattern is a RHS, which means it is not a pattern,\n * we will throw on this position on invalid assign syntax, otherwise it will be reset to -1\n *\n * Types of ExpressionErrors:\n *\n * - **shorthandAssignLoc**: track initializer `=` position\n * - **doubleProtoLoc**: track the duplicate `__proto__` key position\n * - **privateKey**: track private key `#p` position\n * - **optionalParametersLoc**: track the optional paramter (`?`).\n * It's only used by typescript and flow plugins\n */\nexport class ExpressionErrors {\n  shorthandAssignLoc: ?Position = null;\n  doubleProtoLoc: ?Position = null;\n  privateKeyLoc: ?Position = null;\n  optionalParametersLoc: ?Position = null;\n}\n","// @flow\n\nimport type Parser from \"./index\";\nimport UtilParser from \"./util\";\nimport { SourceLocation, type Position } from \"../util/location\";\nimport type { Comment, Node as NodeType, NodeBase } from \"../types\";\n\n// Start an AST node, attaching a start offset.\n\nclass Node implements NodeBase {\n  constructor(parser: Parser, pos: number, loc: Position) {\n    this.start = pos;\n    this.end = 0;\n    this.loc = new SourceLocation(loc);\n    if (parser?.options.ranges) this.range = [pos, 0];\n    if (parser?.filename) this.loc.filename = parser.filename;\n  }\n\n  type: string = \"\";\n  declare start: number;\n  declare end: number;\n  declare loc: SourceLocation;\n  declare range: [number, number];\n  declare leadingComments: Array<Comment>;\n  declare trailingComments: Array<Comment>;\n  declare innerComments: Array<Comment>;\n  declare extra: { [key: string]: any };\n}\nconst NodePrototype = Node.prototype;\n\nif (!process.env.BABEL_8_BREAKING) {\n  // $FlowIgnore\n  NodePrototype.__clone = function (): Node {\n    // $FlowIgnore\n    const newNode: any = new Node();\n    const keys = Object.keys(this);\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n      // Do not clone comments that are already attached to the node\n      if (\n        key !== \"leadingComments\" &&\n        key !== \"trailingComments\" &&\n        key !== \"innerComments\"\n      ) {\n        newNode[key] = this[key];\n      }\n    }\n\n    return newNode;\n  };\n}\n\nfunction clonePlaceholder(node: any): any {\n  return cloneIdentifier(node);\n}\n\nexport function cloneIdentifier(node: any): any {\n  // We don't need to clone `typeAnnotations` and `optional`: because\n  // cloneIdentifier is only used in object shorthand and named import/export.\n  // Neither of them allow type annotations after the identifier or optional identifier\n  const { type, start, end, loc, range, extra, name } = node;\n  const cloned = Object.create(NodePrototype);\n  cloned.type = type;\n  cloned.start = start;\n  cloned.end = end;\n  cloned.loc = loc;\n  cloned.range = range;\n  cloned.extra = extra;\n  cloned.name = name;\n  if (type === \"Placeholder\") {\n    cloned.expectedNode = node.expectedNode;\n  }\n  return cloned;\n}\n\nexport function cloneStringLiteral(node: any): any {\n  const { type, start, end, loc, range, extra } = node;\n  if (type === \"Placeholder\") {\n    return clonePlaceholder(node);\n  }\n  const cloned = Object.create(NodePrototype);\n  cloned.type = type;\n  cloned.start = start;\n  cloned.end = end;\n  cloned.loc = loc;\n  cloned.range = range;\n  if (node.raw !== undefined) {\n    // estree set node.raw instead of node.extra\n    cloned.raw = node.raw;\n  } else {\n    cloned.extra = extra;\n  }\n  cloned.value = node.value;\n  return cloned;\n}\n\nexport class NodeUtils extends UtilParser {\n  startNode<T: NodeType>(): T {\n    // $FlowIgnore\n    return new Node(this, this.state.start, this.state.startLoc);\n  }\n\n  startNodeAt<T: NodeType>(pos: number, loc: Position): T {\n    // $FlowIgnore\n    return new Node(this, pos, loc);\n  }\n\n  /** Start a new node with a previous node's location. */\n  startNodeAtNode<T: NodeType>(type: NodeType): T {\n    return this.startNodeAt(type.start, type.loc.start);\n  }\n\n  // Finish an AST node, adding `type` and `end` properties.\n\n  finishNode<T: NodeType>(node: T, type: string): T {\n    return this.finishNodeAt(node, type, this.state.lastTokEndLoc);\n  }\n\n  // Finish node at given position\n\n  finishNodeAt<T: NodeType>(node: T, type: string, endLoc: Position): T {\n    if (process.env.NODE_ENV !== \"production\" && node.end > 0) {\n      throw new Error(\n        \"Do not call finishNode*() twice on the same node.\" +\n          \" Instead use resetEndLocation() or change type directly.\",\n      );\n    }\n    node.type = type;\n    node.end = endLoc.index;\n    node.loc.end = endLoc;\n    if (this.options.ranges) node.range[1] = endLoc.index;\n    if (this.options.attachComment) this.processComment(node);\n    return node;\n  }\n\n  resetStartLocation(node: NodeBase, start: number, startLoc: Position): void {\n    node.start = start;\n    node.loc.start = startLoc;\n    if (this.options.ranges) node.range[0] = start;\n  }\n\n  resetEndLocation(\n    node: NodeBase,\n    endLoc?: Position = this.state.lastTokEndLoc,\n  ): void {\n    node.end = endLoc.index;\n    node.loc.end = endLoc;\n    if (this.options.ranges) node.range[1] = endLoc.index;\n  }\n\n  /**\n   * Reset the start location of node to the start location of locationNode\n   */\n  resetStartLocationFromNode(node: NodeBase, locationNode: NodeBase): void {\n    this.resetStartLocation(node, locationNode.start, locationNode.loc.start);\n  }\n}\n","// @flow\n\n/*:: declare var invariant; */\n\nimport type Parser from \"../../parser\";\nimport {\n  tokenIsIdentifier,\n  tokenIsKeyword,\n  tokenIsKeywordOrIdentifier,\n  tokenIsLiteralPropertyName,\n  tokenLabelName,\n  tt,\n  type TokenType,\n  tokenIsFlowInterfaceOrTypeOrOpaque,\n} from \"../../tokenizer/types\";\nimport * as N from \"../../types\";\nimport { Position } from \"../../util/location\";\nimport { types as tc } from \"../../tokenizer/context\";\nimport * as charCodes from \"charcodes\";\nimport { isIteratorStart } from \"../../util/identifier\";\nimport FlowScopeHandler from \"./scope\";\nimport {\n  BIND_LEXICAL,\n  BIND_VAR,\n  BIND_FUNCTION,\n  BIND_FLOW_DECLARE_FN,\n  SCOPE_ARROW,\n  SCOPE_FUNCTION,\n  SCOPE_OTHER,\n} from \"../../util/scopeflags\";\nimport type { ExpressionErrors } from \"../../parser/util\";\nimport { Errors, ParseErrorEnum } from \"../../parse-error\";\nimport { cloneIdentifier } from \"../../parser/node\";\n\nconst reservedTypes = new Set([\n  \"_\",\n  \"any\",\n  \"bool\",\n  \"boolean\",\n  \"empty\",\n  \"extends\",\n  \"false\",\n  \"interface\",\n  \"mixed\",\n  \"null\",\n  \"number\",\n  \"static\",\n  \"string\",\n  \"true\",\n  \"typeof\",\n  \"void\",\n]);\n\n/* eslint sort-keys: \"error\" */\n// The Errors key follows https://github.com/facebook/flow/blob/master/src/parser/parse_error.ml unless it does not exist\nconst FlowErrors = ParseErrorEnum`flow`(_ => ({\n  AmbiguousConditionalArrow: _(\n    \"Ambiguous expression: wrap the arrow functions in parentheses to disambiguate.\",\n  ),\n  AmbiguousDeclareModuleKind: _(\n    \"Found both `declare module.exports` and `declare export` in the same module. Modules can only have 1 since they are either an ES module or they are a CommonJS module.\",\n  ),\n  // TODO: When we get proper string enums in typescript make this ReservedType.\n  // Not really worth it to do the whole $Values dance with reservedTypes set.\n  AssignReservedType: _<{| reservedType: string |}>(\n    ({ reservedType }) => `Cannot overwrite reserved type ${reservedType}.`,\n  ),\n  DeclareClassElement: _(\n    \"The `declare` modifier can only appear on class fields.\",\n  ),\n  DeclareClassFieldInitializer: _(\n    \"Initializers are not allowed in fields with the `declare` modifier.\",\n  ),\n  DuplicateDeclareModuleExports: _(\n    \"Duplicate `declare module.exports` statement.\",\n  ),\n  EnumBooleanMemberNotInitialized: _<{|\n    memberName: string,\n    enumName: string,\n  |}>(\n    ({ memberName, enumName }) =>\n      `Boolean enum members need to be initialized. Use either \\`${memberName} = true,\\` or \\`${memberName} = false,\\` in enum \\`${enumName}\\`.`,\n  ),\n  EnumDuplicateMemberName: _<{| memberName: string, enumName: string |}>(\n    ({ memberName, enumName }) =>\n      `Enum member names need to be unique, but the name \\`${memberName}\\` has already been used before in enum \\`${enumName}\\`.`,\n  ),\n  EnumInconsistentMemberValues: _<{| enumName: string |}>(\n    ({ enumName }) =>\n      `Enum \\`${enumName}\\` has inconsistent member initializers. Either use no initializers, or consistently use literals (either booleans, numbers, or strings) for all member initializers.`,\n  ),\n  EnumInvalidExplicitType: _<{| invalidEnumType: string, enumName: string |}>(\n    ({ invalidEnumType, enumName }) =>\n      `Enum type \\`${invalidEnumType}\\` is not valid. Use one of \\`boolean\\`, \\`number\\`, \\`string\\`, or \\`symbol\\` in enum \\`${enumName}\\`.`,\n  ),\n  EnumInvalidExplicitTypeUnknownSupplied: _<{| enumName: string |}>(\n    ({ enumName }) =>\n      `Supplied enum type is not valid. Use one of \\`boolean\\`, \\`number\\`, \\`string\\`, or \\`symbol\\` in enum \\`${enumName}\\`.`,\n  ),\n\n  // TODO: When moving to typescript, we should either have each of the\n  // following errors only accept the specific strings they want:\n  //\n  // ...PrimaryType: explicitType: \"string\" | \"number\" | \"boolean\"\n  // ...SymbolType: explicitType: \"symbol\"\n  // ...UnknownType: explicitType: null\n  //\n  // Or, alternatively, merge these three errors together into one\n  // `EnumInvalidMemberInitializer` error that can accept `EnumExplicitType`\n  // without alteration, and then just have its message change based on the\n  // explicitType.\n  EnumInvalidMemberInitializerPrimaryType: _<{|\n    enumName: string,\n    memberName: string,\n    explicitType: EnumExplicitType,\n  |}>(\n    ({ enumName, memberName, explicitType }) =>\n      // $FlowIgnore (coercing null which never actually happens)\n      `Enum \\`${enumName}\\` has type \\`${explicitType}\\`, so the initializer of \\`${memberName}\\` needs to be a ${explicitType} literal.`,\n  ),\n  EnumInvalidMemberInitializerSymbolType: _<{|\n    enumName: string,\n    memberName: string,\n    explicitType: EnumExplicitType,\n  |}>(\n    ({ enumName, memberName }) =>\n      `Symbol enum members cannot be initialized. Use \\`${memberName},\\` in enum \\`${enumName}\\`.`,\n  ),\n  EnumInvalidMemberInitializerUnknownType: _<{|\n    enumName: string,\n    memberName: string,\n    explicitType: EnumExplicitType,\n  |}>(\n    ({ enumName, memberName }) =>\n      `The enum member initializer for \\`${memberName}\\` needs to be a literal (either a boolean, number, or string) in enum \\`${enumName}\\`.`,\n  ),\n  EnumInvalidMemberName: _<{|\n    enumName: string,\n    memberName: string,\n    suggestion: string,\n  |}>(\n    ({ enumName, memberName, suggestion }) =>\n      `Enum member names cannot start with lowercase 'a' through 'z'. Instead of using \\`${memberName}\\`, consider using \\`${suggestion}\\`, in enum \\`${enumName}\\`.`,\n  ),\n  EnumNumberMemberNotInitialized: _<{|\n    enumName: string,\n    memberName: string,\n  |}>(\n    ({ enumName, memberName }) =>\n      `Number enum members need to be initialized, e.g. \\`${memberName} = 1\\` in enum \\`${enumName}\\`.`,\n  ),\n  EnumStringMemberInconsistentlyInitailized: _<{| enumName: string |}>(\n    ({ enumName }) =>\n      `String enum members need to consistently either all use initializers, or use no initializers, in enum \\`${enumName}\\`.`,\n  ),\n  GetterMayNotHaveThisParam: _(\"A getter cannot have a `this` parameter.\"),\n  ImportTypeShorthandOnlyInPureImport: _(\n    \"The `type` and `typeof` keywords on named imports can only be used on regular `import` statements. It cannot be used with `import type` or `import typeof` statements.\",\n  ),\n  InexactInsideExact: _(\n    \"Explicit inexact syntax cannot appear inside an explicit exact object type.\",\n  ),\n  InexactInsideNonObject: _(\n    \"Explicit inexact syntax cannot appear in class or interface definitions.\",\n  ),\n  InexactVariance: _(\"Explicit inexact syntax cannot have variance.\"),\n  InvalidNonTypeImportInDeclareModule: _(\n    \"Imports within a `declare module` body must always be `import type` or `import typeof`.\",\n  ),\n  MissingTypeParamDefault: _(\n    \"Type parameter declaration needs a default, since a preceding type parameter declaration has a default.\",\n  ),\n  NestedDeclareModule: _(\n    \"`declare module` cannot be used inside another `declare module`.\",\n  ),\n  NestedFlowComment: _(\n    \"Cannot have a flow comment inside another flow comment.\",\n  ),\n  PatternIsOptional: _(\n    \"A binding pattern parameter cannot be optional in an implementation signature.\",\n    // For consistency in TypeScript and Flow error codes\n    !process.env.BABEL_8_BREAKING\n      ? { reasonCode: \"OptionalBindingPattern\" }\n      : {},\n  ),\n  SetterMayNotHaveThisParam: _(\"A setter cannot have a `this` parameter.\"),\n  SpreadVariance: _(\"Spread properties cannot have variance.\"),\n  ThisParamAnnotationRequired: _(\n    \"A type annotation is required for the `this` parameter.\",\n  ),\n  ThisParamBannedInConstructor: _(\n    \"Constructors cannot have a `this` parameter; constructors don't bind `this` like other functions.\",\n  ),\n  ThisParamMayNotBeOptional: _(\"The `this` parameter cannot be optional.\"),\n  ThisParamMustBeFirst: _(\n    \"The `this` parameter must be the first function parameter.\",\n  ),\n  ThisParamNoDefault: _(\"The `this` parameter may not have a default value.\"),\n  TypeBeforeInitializer: _(\n    \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`.\",\n  ),\n  TypeCastInPattern: _(\n    \"The type cast expression is expected to be wrapped with parenthesis.\",\n  ),\n  UnexpectedExplicitInexactInObject: _(\n    \"Explicit inexact syntax must appear at the end of an inexact object.\",\n  ),\n  UnexpectedReservedType: _<{| reservedType: string |}>(\n    ({ reservedType }) => `Unexpected reserved type ${reservedType}.`,\n  ),\n  UnexpectedReservedUnderscore: _(\n    \"`_` is only allowed as a type argument to call or new.\",\n  ),\n  UnexpectedSpaceBetweenModuloChecks: _(\n    \"Spaces between `%` and `checks` are not allowed here.\",\n  ),\n  UnexpectedSpreadType: _(\n    \"Spread operator cannot appear in class or interface definitions.\",\n  ),\n  UnexpectedSubtractionOperand: _(\n    'Unexpected token, expected \"number\" or \"bigint\".',\n  ),\n  UnexpectedTokenAfterTypeParameter: _(\n    \"Expected an arrow function after this type parameter declaration.\",\n  ),\n  UnexpectedTypeParameterBeforeAsyncArrowFunction: _(\n    \"Type parameters must come after the async keyword, e.g. instead of `<T> async () => {}`, use `async <T>() => {}`.\",\n  ),\n  UnsupportedDeclareExportKind: _<{|\n    unsupportedExportKind: string,\n    suggestion: string,\n  |}>(\n    ({ unsupportedExportKind, suggestion }) =>\n      `\\`declare export ${unsupportedExportKind}\\` is not supported. Use \\`${suggestion}\\` instead.`,\n  ),\n  UnsupportedStatementInDeclareModule: _(\n    \"Only declares and type imports are allowed inside declare module.\",\n  ),\n  UnterminatedFlowComment: _(\"Unterminated flow-comment.\"),\n}));\n/* eslint-disable sort-keys */\n\nfunction isEsModuleType(bodyElement: N.Node): boolean {\n  return (\n    bodyElement.type === \"DeclareExportAllDeclaration\" ||\n    (bodyElement.type === \"DeclareExportDeclaration\" &&\n      (!bodyElement.declaration ||\n        (bodyElement.declaration.type !== \"TypeAlias\" &&\n          bodyElement.declaration.type !== \"InterfaceDeclaration\")))\n  );\n}\n\nfunction hasTypeImportKind(node: N.Node): boolean {\n  return node.importKind === \"type\" || node.importKind === \"typeof\";\n}\n\nfunction isMaybeDefaultImport(type: TokenType): boolean {\n  return tokenIsKeywordOrIdentifier(type) && type !== tt._from;\n}\n\nconst exportSuggestions = {\n  const: \"declare export var\",\n  let: \"declare export var\",\n  type: \"export type\",\n  interface: \"export interface\",\n};\n\n// Like Array#filter, but returns a tuple [ acceptedElements, discardedElements ]\nfunction partition<T>(\n  list: T[],\n  test: (T, number, T[]) => ?boolean,\n): [T[], T[]] {\n  const list1 = [];\n  const list2 = [];\n  for (let i = 0; i < list.length; i++) {\n    (test(list[i], i, list) ? list1 : list2).push(list[i]);\n  }\n  return [list1, list2];\n}\n\nconst FLOW_PRAGMA_REGEX = /\\*?\\s*@((?:no)?flow)\\b/;\n\n// Flow enums types\ntype EnumExplicitType = null | \"boolean\" | \"number\" | \"string\" | \"symbol\";\ntype EnumContext = {|\n  enumName: string,\n  explicitType: EnumExplicitType,\n  memberName: string,\n|};\ntype EnumMemberInit =\n  | {| type: \"number\", loc: Position, value: N.Node |}\n  | {| type: \"string\", loc: Position, value: N.Node |}\n  | {| type: \"boolean\", loc: Position, value: N.Node |}\n  | {| type: \"invalid\", loc: Position |}\n  | {| type: \"none\", loc: Position |};\n\nexport default (superClass: Class<Parser>): Class<Parser> =>\n  class extends superClass {\n    // The value of the @flow/@noflow pragma. Initially undefined, transitions\n    // to \"@flow\" or \"@noflow\" if we see a pragma. Transitions to null if we are\n    // past the initial comment.\n    flowPragma: void | null | \"flow\" | \"noflow\" = undefined;\n\n    getScopeHandler(): Class<FlowScopeHandler> {\n      return FlowScopeHandler;\n    }\n\n    shouldParseTypes(): boolean {\n      return this.getPluginOption(\"flow\", \"all\") || this.flowPragma === \"flow\";\n    }\n\n    shouldParseEnums(): boolean {\n      return !!this.getPluginOption(\"flow\", \"enums\");\n    }\n\n    finishToken(type: TokenType, val: any): void {\n      if (\n        type !== tt.string &&\n        type !== tt.semi &&\n        type !== tt.interpreterDirective\n      ) {\n        if (this.flowPragma === undefined) {\n          this.flowPragma = null;\n        }\n      }\n      return super.finishToken(type, val);\n    }\n\n    addComment(comment: N.Comment): void {\n      if (this.flowPragma === undefined) {\n        // Try to parse a flow pragma.\n        const matches = FLOW_PRAGMA_REGEX.exec(comment.value);\n        if (!matches) {\n          // do nothing\n        } else if (matches[1] === \"flow\") {\n          this.flowPragma = \"flow\";\n        } else if (matches[1] === \"noflow\") {\n          this.flowPragma = \"noflow\";\n        } else {\n          throw new Error(\"Unexpected flow pragma\");\n        }\n      }\n      return super.addComment(comment);\n    }\n\n    flowParseTypeInitialiser(tok?: TokenType): N.FlowType {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      this.expect(tok || tt.colon);\n\n      const type = this.flowParseType();\n      this.state.inType = oldInType;\n      return type;\n    }\n\n    flowParsePredicate(): N.FlowPredicate {\n      const node = this.startNode();\n      const moduloLoc = this.state.startLoc;\n      this.next(); // eat `%`\n      this.expectContextual(tt._checks);\n      // Force '%' and 'checks' to be adjacent\n      if (this.state.lastTokStart > moduloLoc.index + 1) {\n        this.raise(FlowErrors.UnexpectedSpaceBetweenModuloChecks, {\n          at: moduloLoc,\n        });\n      }\n      if (this.eat(tt.parenL)) {\n        node.value = this.parseExpression();\n        this.expect(tt.parenR);\n        return this.finishNode(node, \"DeclaredPredicate\");\n      } else {\n        return this.finishNode(node, \"InferredPredicate\");\n      }\n    }\n\n    flowParseTypeAndPredicateInitialiser(): [?N.FlowType, ?N.FlowPredicate] {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      this.expect(tt.colon);\n      let type = null;\n      let predicate = null;\n      if (this.match(tt.modulo)) {\n        this.state.inType = oldInType;\n        predicate = this.flowParsePredicate();\n      } else {\n        type = this.flowParseType();\n        this.state.inType = oldInType;\n        if (this.match(tt.modulo)) {\n          predicate = this.flowParsePredicate();\n        }\n      }\n      return [type, predicate];\n    }\n\n    flowParseDeclareClass(node: N.FlowDeclareClass): N.FlowDeclareClass {\n      this.next();\n      this.flowParseInterfaceish(node, /*isClass*/ true);\n      return this.finishNode(node, \"DeclareClass\");\n    }\n\n    flowParseDeclareFunction(\n      node: N.FlowDeclareFunction,\n    ): N.FlowDeclareFunction {\n      this.next();\n\n      const id = (node.id = this.parseIdentifier());\n\n      const typeNode = this.startNode();\n      const typeContainer = this.startNode();\n\n      if (this.match(tt.lt)) {\n        typeNode.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        typeNode.typeParameters = null;\n      }\n\n      this.expect(tt.parenL);\n      const tmp = this.flowParseFunctionTypeParams();\n      typeNode.params = tmp.params;\n      typeNode.rest = tmp.rest;\n      typeNode.this = tmp._this;\n      this.expect(tt.parenR);\n\n      [\n        // $FlowFixMe (destructuring not supported yet)\n        typeNode.returnType,\n        // $FlowFixMe (destructuring not supported yet)\n        node.predicate,\n      ] = this.flowParseTypeAndPredicateInitialiser();\n\n      typeContainer.typeAnnotation = this.finishNode(\n        typeNode,\n        \"FunctionTypeAnnotation\",\n      );\n\n      id.typeAnnotation = this.finishNode(typeContainer, \"TypeAnnotation\");\n\n      this.resetEndLocation(id);\n      this.semicolon();\n\n      this.scope.declareName(\n        node.id.name,\n        BIND_FLOW_DECLARE_FN,\n        node.id.loc.start,\n      );\n\n      return this.finishNode(node, \"DeclareFunction\");\n    }\n\n    flowParseDeclare(\n      node: N.FlowDeclare,\n      insideModule?: boolean,\n    ): N.FlowDeclare {\n      if (this.match(tt._class)) {\n        return this.flowParseDeclareClass(node);\n      } else if (this.match(tt._function)) {\n        return this.flowParseDeclareFunction(node);\n      } else if (this.match(tt._var)) {\n        return this.flowParseDeclareVariable(node);\n      } else if (this.eatContextual(tt._module)) {\n        if (this.match(tt.dot)) {\n          return this.flowParseDeclareModuleExports(node);\n        } else {\n          if (insideModule) {\n            this.raise(FlowErrors.NestedDeclareModule, {\n              at: this.state.lastTokStartLoc,\n            });\n          }\n          return this.flowParseDeclareModule(node);\n        }\n      } else if (this.isContextual(tt._type)) {\n        return this.flowParseDeclareTypeAlias(node);\n      } else if (this.isContextual(tt._opaque)) {\n        return this.flowParseDeclareOpaqueType(node);\n      } else if (this.isContextual(tt._interface)) {\n        return this.flowParseDeclareInterface(node);\n      } else if (this.match(tt._export)) {\n        return this.flowParseDeclareExportDeclaration(node, insideModule);\n      } else {\n        throw this.unexpected();\n      }\n    }\n\n    flowParseDeclareVariable(\n      node: N.FlowDeclareVariable,\n    ): N.FlowDeclareVariable {\n      this.next();\n      node.id = this.flowParseTypeAnnotatableIdentifier(\n        /*allowPrimitiveOverride*/ true,\n      );\n      this.scope.declareName(node.id.name, BIND_VAR, node.id.loc.start);\n      this.semicolon();\n      return this.finishNode(node, \"DeclareVariable\");\n    }\n\n    flowParseDeclareModule(node: N.FlowDeclareModule): N.FlowDeclareModule {\n      this.scope.enter(SCOPE_OTHER);\n\n      if (this.match(tt.string)) {\n        node.id = this.parseExprAtom();\n      } else {\n        node.id = this.parseIdentifier();\n      }\n\n      const bodyNode = (node.body = this.startNode());\n      const body = (bodyNode.body = []);\n      this.expect(tt.braceL);\n      while (!this.match(tt.braceR)) {\n        let bodyNode = this.startNode();\n\n        if (this.match(tt._import)) {\n          this.next();\n          if (!this.isContextual(tt._type) && !this.match(tt._typeof)) {\n            this.raise(FlowErrors.InvalidNonTypeImportInDeclareModule, {\n              at: this.state.lastTokStartLoc,\n            });\n          }\n          this.parseImport(bodyNode);\n        } else {\n          this.expectContextual(\n            tt._declare,\n            FlowErrors.UnsupportedStatementInDeclareModule,\n          );\n\n          bodyNode = this.flowParseDeclare(bodyNode, true);\n        }\n\n        body.push(bodyNode);\n      }\n\n      this.scope.exit();\n\n      this.expect(tt.braceR);\n\n      this.finishNode(bodyNode, \"BlockStatement\");\n\n      let kind = null;\n      let hasModuleExport = false;\n      body.forEach(bodyElement => {\n        if (isEsModuleType(bodyElement)) {\n          if (kind === \"CommonJS\") {\n            this.raise(FlowErrors.AmbiguousDeclareModuleKind, {\n              at: bodyElement,\n            });\n          }\n          kind = \"ES\";\n        } else if (bodyElement.type === \"DeclareModuleExports\") {\n          if (hasModuleExport) {\n            this.raise(FlowErrors.DuplicateDeclareModuleExports, {\n              at: bodyElement,\n            });\n          }\n          if (kind === \"ES\") {\n            this.raise(FlowErrors.AmbiguousDeclareModuleKind, {\n              at: bodyElement,\n            });\n          }\n          kind = \"CommonJS\";\n          hasModuleExport = true;\n        }\n      });\n\n      node.kind = kind || \"CommonJS\";\n      return this.finishNode(node, \"DeclareModule\");\n    }\n\n    flowParseDeclareExportDeclaration(\n      node: N.FlowDeclareExportDeclaration,\n      insideModule: ?boolean,\n    ): N.FlowDeclareExportDeclaration {\n      this.expect(tt._export);\n\n      if (this.eat(tt._default)) {\n        if (this.match(tt._function) || this.match(tt._class)) {\n          // declare export default class ...\n          // declare export default function ...\n          node.declaration = this.flowParseDeclare(this.startNode());\n        } else {\n          // declare export default [type];\n          node.declaration = this.flowParseType();\n          this.semicolon();\n        }\n        node.default = true;\n\n        return this.finishNode(node, \"DeclareExportDeclaration\");\n      } else {\n        if (\n          this.match(tt._const) ||\n          this.isLet() ||\n          ((this.isContextual(tt._type) || this.isContextual(tt._interface)) &&\n            !insideModule)\n        ) {\n          const label = this.state.value;\n          throw this.raise(FlowErrors.UnsupportedDeclareExportKind, {\n            at: this.state.startLoc,\n            unsupportedExportKind: label,\n            suggestion: exportSuggestions[label],\n          });\n        }\n\n        if (\n          this.match(tt._var) || // declare export var ...\n          this.match(tt._function) || // declare export function ...\n          this.match(tt._class) || // declare export class ...\n          this.isContextual(tt._opaque) // declare export opaque ..\n        ) {\n          node.declaration = this.flowParseDeclare(this.startNode());\n          node.default = false;\n\n          return this.finishNode(node, \"DeclareExportDeclaration\");\n        } else if (\n          this.match(tt.star) || // declare export * from ''\n          this.match(tt.braceL) || // declare export {} ...\n          this.isContextual(tt._interface) || // declare export interface ...\n          this.isContextual(tt._type) || // declare export type ...\n          this.isContextual(tt._opaque) // declare export opaque type ...\n        ) {\n          node = this.parseExport(node);\n          if (node.type === \"ExportNamedDeclaration\") {\n            // flow does not support the ExportNamedDeclaration\n            // $FlowIgnore\n            node.type = \"ExportDeclaration\";\n            // $FlowFixMe\n            node.default = false;\n            delete node.exportKind;\n          }\n\n          // $FlowIgnore\n          node.type = \"Declare\" + node.type;\n\n          return node;\n        }\n      }\n\n      throw this.unexpected();\n    }\n\n    flowParseDeclareModuleExports(\n      node: N.FlowDeclareModuleExports,\n    ): N.FlowDeclareModuleExports {\n      this.next();\n      this.expectContextual(tt._exports);\n      node.typeAnnotation = this.flowParseTypeAnnotation();\n      this.semicolon();\n\n      return this.finishNode(node, \"DeclareModuleExports\");\n    }\n\n    flowParseDeclareTypeAlias(\n      node: N.FlowDeclareTypeAlias,\n    ): N.FlowDeclareTypeAlias {\n      this.next();\n      this.flowParseTypeAlias(node);\n      // Don't do finishNode as we don't want to process comments twice\n      node.type = \"DeclareTypeAlias\";\n      return node;\n    }\n\n    flowParseDeclareOpaqueType(\n      node: N.FlowDeclareOpaqueType,\n    ): N.FlowDeclareOpaqueType {\n      this.next();\n      this.flowParseOpaqueType(node, true);\n      // Don't do finishNode as we don't want to process comments twice\n      node.type = \"DeclareOpaqueType\";\n      return node;\n    }\n\n    flowParseDeclareInterface(\n      node: N.FlowDeclareInterface,\n    ): N.FlowDeclareInterface {\n      this.next();\n      this.flowParseInterfaceish(node);\n      return this.finishNode(node, \"DeclareInterface\");\n    }\n\n    // Interfaces\n\n    flowParseInterfaceish(\n      node: N.FlowDeclare,\n      isClass?: boolean = false,\n    ): void {\n      node.id = this.flowParseRestrictedIdentifier(\n        /* liberal */ !isClass,\n        /* declaration */ true,\n      );\n\n      this.scope.declareName(\n        node.id.name,\n        isClass ? BIND_FUNCTION : BIND_LEXICAL,\n        node.id.loc.start,\n      );\n\n      if (this.match(tt.lt)) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        node.typeParameters = null;\n      }\n\n      node.extends = [];\n      node.implements = [];\n      node.mixins = [];\n\n      if (this.eat(tt._extends)) {\n        do {\n          node.extends.push(this.flowParseInterfaceExtends());\n        } while (!isClass && this.eat(tt.comma));\n      }\n\n      if (this.isContextual(tt._mixins)) {\n        this.next();\n        do {\n          node.mixins.push(this.flowParseInterfaceExtends());\n        } while (this.eat(tt.comma));\n      }\n\n      if (this.isContextual(tt._implements)) {\n        this.next();\n        do {\n          node.implements.push(this.flowParseInterfaceExtends());\n        } while (this.eat(tt.comma));\n      }\n\n      node.body = this.flowParseObjectType({\n        allowStatic: isClass,\n        allowExact: false,\n        allowSpread: false,\n        allowProto: isClass,\n        allowInexact: false,\n      });\n    }\n\n    flowParseInterfaceExtends(): N.FlowInterfaceExtends {\n      const node = this.startNode();\n\n      node.id = this.flowParseQualifiedTypeIdentifier();\n      if (this.match(tt.lt)) {\n        node.typeParameters = this.flowParseTypeParameterInstantiation();\n      } else {\n        node.typeParameters = null;\n      }\n\n      return this.finishNode(node, \"InterfaceExtends\");\n    }\n\n    flowParseInterface(node: N.FlowInterface): N.FlowInterface {\n      this.flowParseInterfaceish(node);\n      return this.finishNode(node, \"InterfaceDeclaration\");\n    }\n\n    checkNotUnderscore(word: string) {\n      if (word === \"_\") {\n        this.raise(FlowErrors.UnexpectedReservedUnderscore, {\n          at: this.state.startLoc,\n        });\n      }\n    }\n\n    checkReservedType(word: string, startLoc: Position, declaration?: boolean) {\n      if (!reservedTypes.has(word)) return;\n\n      this.raise(\n        declaration\n          ? FlowErrors.AssignReservedType\n          : FlowErrors.UnexpectedReservedType,\n        {\n          at: startLoc,\n          reservedType: word,\n        },\n      );\n    }\n\n    flowParseRestrictedIdentifier(\n      liberal?: boolean,\n      declaration?: boolean,\n    ): N.Identifier {\n      this.checkReservedType(\n        this.state.value,\n        this.state.startLoc,\n        declaration,\n      );\n      return this.parseIdentifier(liberal);\n    }\n\n    // Type aliases\n\n    flowParseTypeAlias(node: N.FlowTypeAlias): N.FlowTypeAlias {\n      node.id = this.flowParseRestrictedIdentifier(\n        /* liberal */ false,\n        /* declaration */ true,\n      );\n      this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.loc.start);\n\n      if (this.match(tt.lt)) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        node.typeParameters = null;\n      }\n\n      node.right = this.flowParseTypeInitialiser(tt.eq);\n      this.semicolon();\n\n      return this.finishNode(node, \"TypeAlias\");\n    }\n\n    flowParseOpaqueType(\n      node: N.FlowOpaqueType,\n      declare: boolean,\n    ): N.FlowOpaqueType {\n      this.expectContextual(tt._type);\n      node.id = this.flowParseRestrictedIdentifier(\n        /* liberal */ true,\n        /* declaration */ true,\n      );\n      this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.loc.start);\n\n      if (this.match(tt.lt)) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        node.typeParameters = null;\n      }\n\n      // Parse the supertype\n      node.supertype = null;\n      if (this.match(tt.colon)) {\n        node.supertype = this.flowParseTypeInitialiser(tt.colon);\n      }\n\n      node.impltype = null;\n      if (!declare) {\n        node.impltype = this.flowParseTypeInitialiser(tt.eq);\n      }\n      this.semicolon();\n\n      return this.finishNode(node, \"OpaqueType\");\n    }\n\n    // Type annotations\n\n    flowParseTypeParameter(requireDefault?: boolean = false): N.TypeParameter {\n      const nodeStartLoc = this.state.startLoc;\n\n      const node = this.startNode();\n\n      const variance = this.flowParseVariance();\n\n      const ident = this.flowParseTypeAnnotatableIdentifier();\n      node.name = ident.name;\n      node.variance = variance;\n      node.bound = ident.typeAnnotation;\n\n      if (this.match(tt.eq)) {\n        this.eat(tt.eq);\n        node.default = this.flowParseType();\n      } else {\n        if (requireDefault) {\n          this.raise(FlowErrors.MissingTypeParamDefault, { at: nodeStartLoc });\n        }\n      }\n\n      return this.finishNode(node, \"TypeParameter\");\n    }\n\n    flowParseTypeParameterDeclaration(): N.TypeParameterDeclaration {\n      const oldInType = this.state.inType;\n      const node = this.startNode();\n      node.params = [];\n\n      this.state.inType = true;\n\n      // istanbul ignore else: this condition is already checked at all call sites\n      if (this.match(tt.lt) || this.match(tt.jsxTagStart)) {\n        this.next();\n      } else {\n        this.unexpected();\n      }\n\n      let defaultRequired = false;\n\n      do {\n        const typeParameter = this.flowParseTypeParameter(defaultRequired);\n\n        node.params.push(typeParameter);\n\n        if (typeParameter.default) {\n          defaultRequired = true;\n        }\n\n        if (!this.match(tt.gt)) {\n          this.expect(tt.comma);\n        }\n      } while (!this.match(tt.gt));\n      this.expect(tt.gt);\n\n      this.state.inType = oldInType;\n\n      return this.finishNode(node, \"TypeParameterDeclaration\");\n    }\n\n    flowParseTypeParameterInstantiation(): N.TypeParameterInstantiation {\n      const node = this.startNode();\n      const oldInType = this.state.inType;\n      node.params = [];\n\n      this.state.inType = true;\n\n      this.expect(tt.lt);\n      const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n      this.state.noAnonFunctionType = false;\n      while (!this.match(tt.gt)) {\n        node.params.push(this.flowParseType());\n        if (!this.match(tt.gt)) {\n          this.expect(tt.comma);\n        }\n      }\n      this.state.noAnonFunctionType = oldNoAnonFunctionType;\n      this.expect(tt.gt);\n\n      this.state.inType = oldInType;\n\n      return this.finishNode(node, \"TypeParameterInstantiation\");\n    }\n\n    flowParseTypeParameterInstantiationCallOrNew(): N.TypeParameterInstantiation {\n      const node = this.startNode();\n      const oldInType = this.state.inType;\n      node.params = [];\n\n      this.state.inType = true;\n\n      this.expect(tt.lt);\n      while (!this.match(tt.gt)) {\n        node.params.push(this.flowParseTypeOrImplicitInstantiation());\n        if (!this.match(tt.gt)) {\n          this.expect(tt.comma);\n        }\n      }\n      this.expect(tt.gt);\n\n      this.state.inType = oldInType;\n\n      return this.finishNode(node, \"TypeParameterInstantiation\");\n    }\n\n    flowParseInterfaceType(): N.FlowInterfaceType {\n      const node = this.startNode();\n      this.expectContextual(tt._interface);\n\n      node.extends = [];\n      if (this.eat(tt._extends)) {\n        do {\n          node.extends.push(this.flowParseInterfaceExtends());\n        } while (this.eat(tt.comma));\n      }\n\n      node.body = this.flowParseObjectType({\n        allowStatic: false,\n        allowExact: false,\n        allowSpread: false,\n        allowProto: false,\n        allowInexact: false,\n      });\n\n      return this.finishNode(node, \"InterfaceTypeAnnotation\");\n    }\n\n    flowParseObjectPropertyKey(): N.Expression {\n      return this.match(tt.num) || this.match(tt.string)\n        ? this.parseExprAtom()\n        : this.parseIdentifier(true);\n    }\n\n    flowParseObjectTypeIndexer(\n      node: N.FlowObjectTypeIndexer,\n      isStatic: boolean,\n      variance: ?N.FlowVariance,\n    ): N.FlowObjectTypeIndexer {\n      node.static = isStatic;\n\n      // Note: bracketL has already been consumed\n      if (this.lookahead().type === tt.colon) {\n        node.id = this.flowParseObjectPropertyKey();\n        node.key = this.flowParseTypeInitialiser();\n      } else {\n        node.id = null;\n        node.key = this.flowParseType();\n      }\n      this.expect(tt.bracketR);\n      node.value = this.flowParseTypeInitialiser();\n      node.variance = variance;\n\n      return this.finishNode(node, \"ObjectTypeIndexer\");\n    }\n\n    flowParseObjectTypeInternalSlot(\n      node: N.FlowObjectTypeInternalSlot,\n      isStatic: boolean,\n    ): N.FlowObjectTypeInternalSlot {\n      node.static = isStatic;\n      // Note: both bracketL have already been consumed\n      node.id = this.flowParseObjectPropertyKey();\n      this.expect(tt.bracketR);\n      this.expect(tt.bracketR);\n      if (this.match(tt.lt) || this.match(tt.parenL)) {\n        node.method = true;\n        node.optional = false;\n        node.value = this.flowParseObjectTypeMethodish(\n          this.startNodeAt(node.start, node.loc.start),\n        );\n      } else {\n        node.method = false;\n        if (this.eat(tt.question)) {\n          node.optional = true;\n        }\n        node.value = this.flowParseTypeInitialiser();\n      }\n      return this.finishNode(node, \"ObjectTypeInternalSlot\");\n    }\n\n    flowParseObjectTypeMethodish(\n      node: N.FlowFunctionTypeAnnotation,\n    ): N.FlowFunctionTypeAnnotation {\n      node.params = [];\n      node.rest = null;\n      node.typeParameters = null;\n      node.this = null;\n\n      if (this.match(tt.lt)) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      this.expect(tt.parenL);\n      if (this.match(tt._this)) {\n        node.this = this.flowParseFunctionTypeParam(/* first */ true);\n        // match Flow parser behavior\n        node.this.name = null;\n        if (!this.match(tt.parenR)) {\n          this.expect(tt.comma);\n        }\n      }\n      while (!this.match(tt.parenR) && !this.match(tt.ellipsis)) {\n        node.params.push(this.flowParseFunctionTypeParam(false));\n        if (!this.match(tt.parenR)) {\n          this.expect(tt.comma);\n        }\n      }\n\n      if (this.eat(tt.ellipsis)) {\n        node.rest = this.flowParseFunctionTypeParam(false);\n      }\n      this.expect(tt.parenR);\n      node.returnType = this.flowParseTypeInitialiser();\n\n      return this.finishNode(node, \"FunctionTypeAnnotation\");\n    }\n\n    flowParseObjectTypeCallProperty(\n      node: N.FlowObjectTypeCallProperty,\n      isStatic: boolean,\n    ): N.FlowObjectTypeCallProperty {\n      const valueNode = this.startNode();\n      node.static = isStatic;\n      node.value = this.flowParseObjectTypeMethodish(valueNode);\n      return this.finishNode(node, \"ObjectTypeCallProperty\");\n    }\n\n    flowParseObjectType({\n      allowStatic,\n      allowExact,\n      allowSpread,\n      allowProto,\n      allowInexact,\n    }: {\n      allowStatic: boolean,\n      allowExact: boolean,\n      allowSpread: boolean,\n      allowProto: boolean,\n      allowInexact: boolean,\n    }): N.FlowObjectTypeAnnotation {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n\n      const nodeStart = this.startNode();\n\n      nodeStart.callProperties = [];\n      nodeStart.properties = [];\n      nodeStart.indexers = [];\n      nodeStart.internalSlots = [];\n\n      let endDelim;\n      let exact;\n      let inexact = false;\n      if (allowExact && this.match(tt.braceBarL)) {\n        this.expect(tt.braceBarL);\n        endDelim = tt.braceBarR;\n        exact = true;\n      } else {\n        this.expect(tt.braceL);\n        endDelim = tt.braceR;\n        exact = false;\n      }\n\n      nodeStart.exact = exact;\n\n      while (!this.match(endDelim)) {\n        let isStatic = false;\n        let protoStartLoc: ?Position = null;\n        let inexactStartLoc: ?Position = null;\n        const node = this.startNode();\n\n        if (allowProto && this.isContextual(tt._proto)) {\n          const lookahead = this.lookahead();\n\n          if (lookahead.type !== tt.colon && lookahead.type !== tt.question) {\n            this.next();\n            protoStartLoc = this.state.startLoc;\n            allowStatic = false;\n          }\n        }\n\n        if (allowStatic && this.isContextual(tt._static)) {\n          const lookahead = this.lookahead();\n\n          // static is a valid identifier name\n          if (lookahead.type !== tt.colon && lookahead.type !== tt.question) {\n            this.next();\n            isStatic = true;\n          }\n        }\n\n        const variance = this.flowParseVariance();\n\n        if (this.eat(tt.bracketL)) {\n          if (protoStartLoc != null) {\n            this.unexpected(protoStartLoc);\n          }\n          if (this.eat(tt.bracketL)) {\n            if (variance) {\n              this.unexpected(variance.loc.start);\n            }\n            nodeStart.internalSlots.push(\n              this.flowParseObjectTypeInternalSlot(node, isStatic),\n            );\n          } else {\n            nodeStart.indexers.push(\n              this.flowParseObjectTypeIndexer(node, isStatic, variance),\n            );\n          }\n        } else if (this.match(tt.parenL) || this.match(tt.lt)) {\n          if (protoStartLoc != null) {\n            this.unexpected(protoStartLoc);\n          }\n          if (variance) {\n            this.unexpected(variance.loc.start);\n          }\n          nodeStart.callProperties.push(\n            this.flowParseObjectTypeCallProperty(node, isStatic),\n          );\n        } else {\n          let kind = \"init\";\n\n          if (this.isContextual(tt._get) || this.isContextual(tt._set)) {\n            const lookahead = this.lookahead();\n            if (tokenIsLiteralPropertyName(lookahead.type)) {\n              kind = this.state.value;\n              this.next();\n            }\n          }\n\n          const propOrInexact = this.flowParseObjectTypeProperty(\n            node,\n            isStatic,\n            protoStartLoc,\n            variance,\n            kind,\n            allowSpread,\n            allowInexact ?? !exact,\n          );\n\n          if (propOrInexact === null) {\n            inexact = true;\n            inexactStartLoc = this.state.lastTokStartLoc;\n          } else {\n            nodeStart.properties.push(propOrInexact);\n          }\n        }\n\n        this.flowObjectTypeSemicolon();\n\n        if (\n          inexactStartLoc &&\n          !this.match(tt.braceR) &&\n          !this.match(tt.braceBarR)\n        ) {\n          this.raise(FlowErrors.UnexpectedExplicitInexactInObject, {\n            at: inexactStartLoc,\n          });\n        }\n      }\n\n      this.expect(endDelim);\n\n      /* The inexact flag should only be added on ObjectTypeAnnotations that\n       * are not the body of an interface, declare interface, or declare class.\n       * Since spreads are only allowed in object types, checking that is\n       * sufficient here.\n       */\n      if (allowSpread) {\n        nodeStart.inexact = inexact;\n      }\n\n      const out = this.finishNode(nodeStart, \"ObjectTypeAnnotation\");\n\n      this.state.inType = oldInType;\n\n      return out;\n    }\n\n    flowParseObjectTypeProperty(\n      node: N.FlowObjectTypeProperty | N.FlowObjectTypeSpreadProperty,\n      isStatic: boolean,\n      protoStartLoc: ?Position,\n      variance: ?N.FlowVariance,\n      kind: string,\n      allowSpread: boolean,\n      allowInexact: boolean,\n    ): (N.FlowObjectTypeProperty | N.FlowObjectTypeSpreadProperty) | null {\n      if (this.eat(tt.ellipsis)) {\n        const isInexactToken =\n          this.match(tt.comma) ||\n          this.match(tt.semi) ||\n          this.match(tt.braceR) ||\n          this.match(tt.braceBarR);\n\n        if (isInexactToken) {\n          if (!allowSpread) {\n            this.raise(FlowErrors.InexactInsideNonObject, {\n              at: this.state.lastTokStartLoc,\n            });\n          } else if (!allowInexact) {\n            this.raise(FlowErrors.InexactInsideExact, {\n              at: this.state.lastTokStartLoc,\n            });\n          }\n          if (variance) {\n            this.raise(FlowErrors.InexactVariance, { at: variance });\n          }\n\n          return null;\n        }\n\n        if (!allowSpread) {\n          this.raise(FlowErrors.UnexpectedSpreadType, {\n            at: this.state.lastTokStartLoc,\n          });\n        }\n        if (protoStartLoc != null) {\n          this.unexpected(protoStartLoc);\n        }\n        if (variance) {\n          this.raise(FlowErrors.SpreadVariance, { at: variance });\n        }\n\n        node.argument = this.flowParseType();\n        return this.finishNode(node, \"ObjectTypeSpreadProperty\");\n      } else {\n        node.key = this.flowParseObjectPropertyKey();\n        node.static = isStatic;\n        node.proto = protoStartLoc != null;\n        node.kind = kind;\n\n        let optional = false;\n        if (this.match(tt.lt) || this.match(tt.parenL)) {\n          // This is a method property\n          node.method = true;\n\n          if (protoStartLoc != null) {\n            this.unexpected(protoStartLoc);\n          }\n          if (variance) {\n            this.unexpected(variance.loc.start);\n          }\n\n          node.value = this.flowParseObjectTypeMethodish(\n            this.startNodeAt(node.start, node.loc.start),\n          );\n          if (kind === \"get\" || kind === \"set\") {\n            this.flowCheckGetterSetterParams(node);\n          }\n          /** Declared classes/interfaces do not allow spread */\n          if (\n            !allowSpread &&\n            node.key.name === \"constructor\" &&\n            node.value.this\n          ) {\n            this.raise(FlowErrors.ThisParamBannedInConstructor, {\n              at: node.value.this,\n            });\n          }\n        } else {\n          if (kind !== \"init\") this.unexpected();\n\n          node.method = false;\n\n          if (this.eat(tt.question)) {\n            optional = true;\n          }\n          node.value = this.flowParseTypeInitialiser();\n          node.variance = variance;\n        }\n\n        node.optional = optional;\n\n        return this.finishNode(node, \"ObjectTypeProperty\");\n      }\n    }\n\n    // This is similar to checkGetterSetterParams, but as\n    // @babel/parser uses non estree properties we cannot reuse it here\n    flowCheckGetterSetterParams(\n      property: N.FlowObjectTypeProperty | N.FlowObjectTypeSpreadProperty,\n    ): void {\n      const paramCount = property.kind === \"get\" ? 0 : 1;\n      const length =\n        property.value.params.length + (property.value.rest ? 1 : 0);\n\n      if (property.value.this) {\n        this.raise(\n          property.kind === \"get\"\n            ? FlowErrors.GetterMayNotHaveThisParam\n            : FlowErrors.SetterMayNotHaveThisParam,\n          { at: property.value.this },\n        );\n      }\n\n      if (length !== paramCount) {\n        this.raise(\n          property.kind === \"get\"\n            ? Errors.BadGetterArity\n            : Errors.BadSetterArity,\n          { at: property },\n        );\n      }\n\n      if (property.kind === \"set\" && property.value.rest) {\n        this.raise(Errors.BadSetterRestParameter, { at: property });\n      }\n    }\n\n    flowObjectTypeSemicolon(): void {\n      if (\n        !this.eat(tt.semi) &&\n        !this.eat(tt.comma) &&\n        !this.match(tt.braceR) &&\n        !this.match(tt.braceBarR)\n      ) {\n        this.unexpected();\n      }\n    }\n\n    flowParseQualifiedTypeIdentifier(\n      startPos?: number,\n      startLoc?: Position,\n      id?: N.Identifier,\n    ): N.FlowQualifiedTypeIdentifier {\n      startPos = startPos || this.state.start;\n      startLoc = startLoc || this.state.startLoc;\n      let node = id || this.flowParseRestrictedIdentifier(true);\n\n      while (this.eat(tt.dot)) {\n        const node2 = this.startNodeAt(startPos, startLoc);\n        node2.qualification = node;\n        node2.id = this.flowParseRestrictedIdentifier(true);\n        node = this.finishNode(node2, \"QualifiedTypeIdentifier\");\n      }\n\n      return node;\n    }\n\n    flowParseGenericType(\n      startPos: number,\n      startLoc: Position,\n      id: N.Identifier,\n    ): N.FlowGenericTypeAnnotation {\n      const node = this.startNodeAt(startPos, startLoc);\n\n      node.typeParameters = null;\n      node.id = this.flowParseQualifiedTypeIdentifier(startPos, startLoc, id);\n\n      if (this.match(tt.lt)) {\n        node.typeParameters = this.flowParseTypeParameterInstantiation();\n      }\n\n      return this.finishNode(node, \"GenericTypeAnnotation\");\n    }\n\n    flowParseTypeofType(): N.FlowTypeofTypeAnnotation {\n      const node = this.startNode();\n      this.expect(tt._typeof);\n      node.argument = this.flowParsePrimaryType();\n      return this.finishNode(node, \"TypeofTypeAnnotation\");\n    }\n\n    flowParseTupleType(): N.FlowTupleTypeAnnotation {\n      const node = this.startNode();\n      node.types = [];\n      this.expect(tt.bracketL);\n      // We allow trailing commas\n      while (this.state.pos < this.length && !this.match(tt.bracketR)) {\n        node.types.push(this.flowParseType());\n        if (this.match(tt.bracketR)) break;\n        this.expect(tt.comma);\n      }\n      this.expect(tt.bracketR);\n      return this.finishNode(node, \"TupleTypeAnnotation\");\n    }\n\n    flowParseFunctionTypeParam(first: boolean): N.FlowFunctionTypeParam {\n      let name = null;\n      let optional = false;\n      let typeAnnotation = null;\n      const node = this.startNode();\n      const lh = this.lookahead();\n      const isThis = this.state.type === tt._this;\n\n      if (lh.type === tt.colon || lh.type === tt.question) {\n        if (isThis && !first) {\n          this.raise(FlowErrors.ThisParamMustBeFirst, { at: node });\n        }\n        name = this.parseIdentifier(isThis);\n        if (this.eat(tt.question)) {\n          optional = true;\n          if (isThis) {\n            this.raise(FlowErrors.ThisParamMayNotBeOptional, { at: node });\n          }\n        }\n        typeAnnotation = this.flowParseTypeInitialiser();\n      } else {\n        typeAnnotation = this.flowParseType();\n      }\n      node.name = name;\n      node.optional = optional;\n      node.typeAnnotation = typeAnnotation;\n      return this.finishNode(node, \"FunctionTypeParam\");\n    }\n\n    reinterpretTypeAsFunctionTypeParam(\n      type: N.FlowType,\n    ): N.FlowFunctionTypeParam {\n      const node = this.startNodeAt(type.start, type.loc.start);\n      node.name = null;\n      node.optional = false;\n      node.typeAnnotation = type;\n      return this.finishNode(node, \"FunctionTypeParam\");\n    }\n\n    flowParseFunctionTypeParams(params: N.FlowFunctionTypeParam[] = []): {\n      params: N.FlowFunctionTypeParam[],\n      rest: ?N.FlowFunctionTypeParam,\n      _this: ?N.FlowFunctionTypeParam,\n    } {\n      let rest: ?N.FlowFunctionTypeParam = null;\n      let _this: ?N.FlowFunctionTypeParam = null;\n      if (this.match(tt._this)) {\n        _this = this.flowParseFunctionTypeParam(/* first */ true);\n        // match Flow parser behavior\n        _this.name = null;\n        if (!this.match(tt.parenR)) {\n          this.expect(tt.comma);\n        }\n      }\n      while (!this.match(tt.parenR) && !this.match(tt.ellipsis)) {\n        params.push(this.flowParseFunctionTypeParam(false));\n        if (!this.match(tt.parenR)) {\n          this.expect(tt.comma);\n        }\n      }\n      if (this.eat(tt.ellipsis)) {\n        rest = this.flowParseFunctionTypeParam(false);\n      }\n      return { params, rest, _this };\n    }\n\n    flowIdentToTypeAnnotation(\n      startPos: number,\n      startLoc: Position,\n      node: N.FlowTypeAnnotation,\n      id: N.Identifier,\n    ): N.FlowTypeAnnotation {\n      switch (id.name) {\n        case \"any\":\n          return this.finishNode(node, \"AnyTypeAnnotation\");\n\n        case \"bool\":\n        case \"boolean\":\n          return this.finishNode(node, \"BooleanTypeAnnotation\");\n\n        case \"mixed\":\n          return this.finishNode(node, \"MixedTypeAnnotation\");\n\n        case \"empty\":\n          return this.finishNode(node, \"EmptyTypeAnnotation\");\n\n        case \"number\":\n          return this.finishNode(node, \"NumberTypeAnnotation\");\n\n        case \"string\":\n          return this.finishNode(node, \"StringTypeAnnotation\");\n\n        case \"symbol\":\n          return this.finishNode(node, \"SymbolTypeAnnotation\");\n\n        default:\n          this.checkNotUnderscore(id.name);\n          return this.flowParseGenericType(startPos, startLoc, id);\n      }\n    }\n\n    // The parsing of types roughly parallels the parsing of expressions, and\n    // primary types are kind of like primary expressions...they're the\n    // primitives with which other types are constructed.\n    flowParsePrimaryType(): N.FlowTypeAnnotation {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      const node = this.startNode();\n      let tmp;\n      let type;\n      let isGroupedType = false;\n      const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n\n      switch (this.state.type) {\n        case tt.braceL:\n          return this.flowParseObjectType({\n            allowStatic: false,\n            allowExact: false,\n            allowSpread: true,\n            allowProto: false,\n            allowInexact: true,\n          });\n\n        case tt.braceBarL:\n          return this.flowParseObjectType({\n            allowStatic: false,\n            allowExact: true,\n            allowSpread: true,\n            allowProto: false,\n            allowInexact: false,\n          });\n\n        case tt.bracketL:\n          this.state.noAnonFunctionType = false;\n          type = this.flowParseTupleType();\n          this.state.noAnonFunctionType = oldNoAnonFunctionType;\n          return type;\n\n        case tt.lt:\n          node.typeParameters = this.flowParseTypeParameterDeclaration();\n          this.expect(tt.parenL);\n          tmp = this.flowParseFunctionTypeParams();\n          node.params = tmp.params;\n          node.rest = tmp.rest;\n          node.this = tmp._this;\n          this.expect(tt.parenR);\n\n          this.expect(tt.arrow);\n\n          node.returnType = this.flowParseType();\n\n          return this.finishNode(node, \"FunctionTypeAnnotation\");\n\n        case tt.parenL:\n          this.next();\n\n          // Check to see if this is actually a grouped type\n          if (!this.match(tt.parenR) && !this.match(tt.ellipsis)) {\n            if (tokenIsIdentifier(this.state.type) || this.match(tt._this)) {\n              const token = this.lookahead().type;\n              isGroupedType = token !== tt.question && token !== tt.colon;\n            } else {\n              isGroupedType = true;\n            }\n          }\n\n          if (isGroupedType) {\n            this.state.noAnonFunctionType = false;\n            type = this.flowParseType();\n            this.state.noAnonFunctionType = oldNoAnonFunctionType;\n\n            // A `,` or a `) =>` means this is an anonymous function type\n            if (\n              this.state.noAnonFunctionType ||\n              !(\n                this.match(tt.comma) ||\n                (this.match(tt.parenR) && this.lookahead().type === tt.arrow)\n              )\n            ) {\n              this.expect(tt.parenR);\n              return type;\n            } else {\n              // Eat a comma if there is one\n              this.eat(tt.comma);\n            }\n          }\n\n          if (type) {\n            tmp = this.flowParseFunctionTypeParams([\n              this.reinterpretTypeAsFunctionTypeParam(type),\n            ]);\n          } else {\n            tmp = this.flowParseFunctionTypeParams();\n          }\n\n          node.params = tmp.params;\n          node.rest = tmp.rest;\n          node.this = tmp._this;\n\n          this.expect(tt.parenR);\n\n          this.expect(tt.arrow);\n\n          node.returnType = this.flowParseType();\n\n          node.typeParameters = null;\n\n          return this.finishNode(node, \"FunctionTypeAnnotation\");\n\n        case tt.string:\n          return this.parseLiteral<N.StringLiteralTypeAnnotation>(\n            this.state.value,\n            \"StringLiteralTypeAnnotation\",\n          );\n\n        case tt._true:\n        case tt._false:\n          node.value = this.match(tt._true);\n          this.next();\n          return this.finishNode<N.BooleanLiteralTypeAnnotation>(\n            node,\n            \"BooleanLiteralTypeAnnotation\",\n          );\n\n        case tt.plusMin:\n          if (this.state.value === \"-\") {\n            this.next();\n            if (this.match(tt.num)) {\n              return this.parseLiteralAtNode<N.NumberLiteralTypeAnnotation>(\n                -this.state.value,\n                \"NumberLiteralTypeAnnotation\",\n                node,\n              );\n            }\n\n            if (this.match(tt.bigint)) {\n              return this.parseLiteralAtNode<N.BigIntLiteralTypeAnnotation>(\n                -this.state.value,\n                \"BigIntLiteralTypeAnnotation\",\n                node,\n              );\n            }\n\n            throw this.raise(FlowErrors.UnexpectedSubtractionOperand, {\n              at: this.state.startLoc,\n            });\n          }\n\n          throw this.unexpected();\n        case tt.num:\n          return this.parseLiteral(\n            this.state.value,\n            \"NumberLiteralTypeAnnotation\",\n          );\n\n        case tt.bigint:\n          return this.parseLiteral(\n            this.state.value,\n            \"BigIntLiteralTypeAnnotation\",\n          );\n\n        case tt._void:\n          this.next();\n          return this.finishNode(node, \"VoidTypeAnnotation\");\n\n        case tt._null:\n          this.next();\n          return this.finishNode(node, \"NullLiteralTypeAnnotation\");\n\n        case tt._this:\n          this.next();\n          return this.finishNode(node, \"ThisTypeAnnotation\");\n\n        case tt.star:\n          this.next();\n          return this.finishNode(node, \"ExistsTypeAnnotation\");\n\n        case tt._typeof:\n          return this.flowParseTypeofType();\n\n        default:\n          if (tokenIsKeyword(this.state.type)) {\n            const label = tokenLabelName(this.state.type);\n            this.next();\n            return super.createIdentifier(node, label);\n          } else if (tokenIsIdentifier(this.state.type)) {\n            if (this.isContextual(tt._interface)) {\n              return this.flowParseInterfaceType();\n            }\n\n            return this.flowIdentToTypeAnnotation(\n              startPos,\n              startLoc,\n              node,\n              this.parseIdentifier(),\n            );\n          }\n      }\n\n      throw this.unexpected();\n    }\n\n    flowParsePostfixType(): N.FlowTypeAnnotation {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      let type = this.flowParsePrimaryType();\n      let seenOptionalIndexedAccess = false;\n      while (\n        (this.match(tt.bracketL) || this.match(tt.questionDot)) &&\n        !this.canInsertSemicolon()\n      ) {\n        const node = this.startNodeAt(startPos, startLoc);\n        const optional = this.eat(tt.questionDot);\n        seenOptionalIndexedAccess = seenOptionalIndexedAccess || optional;\n        this.expect(tt.bracketL);\n        if (!optional && this.match(tt.bracketR)) {\n          node.elementType = type;\n          this.next(); // eat `]`\n          type = this.finishNode(node, \"ArrayTypeAnnotation\");\n        } else {\n          node.objectType = type;\n          node.indexType = this.flowParseType();\n          this.expect(tt.bracketR);\n          if (seenOptionalIndexedAccess) {\n            node.optional = optional;\n            type = this.finishNode<N.FlowOptionalIndexedAccessType>(\n              node,\n              \"OptionalIndexedAccessType\",\n            );\n          } else {\n            type = this.finishNode<N.FlowIndexedAccessType>(\n              node,\n              \"IndexedAccessType\",\n            );\n          }\n        }\n      }\n      return type;\n    }\n\n    flowParsePrefixType(): N.FlowTypeAnnotation {\n      const node = this.startNode();\n      if (this.eat(tt.question)) {\n        node.typeAnnotation = this.flowParsePrefixType();\n        return this.finishNode(node, \"NullableTypeAnnotation\");\n      } else {\n        return this.flowParsePostfixType();\n      }\n    }\n\n    flowParseAnonFunctionWithoutParens(): N.FlowTypeAnnotation {\n      const param = this.flowParsePrefixType();\n      if (!this.state.noAnonFunctionType && this.eat(tt.arrow)) {\n        // TODO: This should be a type error. Passing in a SourceLocation, and it expects a Position.\n        const node = this.startNodeAt(param.start, param.loc.start);\n        node.params = [this.reinterpretTypeAsFunctionTypeParam(param)];\n        node.rest = null;\n        node.this = null;\n        node.returnType = this.flowParseType();\n        node.typeParameters = null;\n        return this.finishNode(node, \"FunctionTypeAnnotation\");\n      }\n      return param;\n    }\n\n    flowParseIntersectionType(): N.FlowTypeAnnotation {\n      const node = this.startNode();\n      this.eat(tt.bitwiseAND);\n      const type = this.flowParseAnonFunctionWithoutParens();\n      node.types = [type];\n      while (this.eat(tt.bitwiseAND)) {\n        node.types.push(this.flowParseAnonFunctionWithoutParens());\n      }\n      return node.types.length === 1\n        ? type\n        : this.finishNode(node, \"IntersectionTypeAnnotation\");\n    }\n\n    flowParseUnionType(): N.FlowTypeAnnotation {\n      const node = this.startNode();\n      this.eat(tt.bitwiseOR);\n      const type = this.flowParseIntersectionType();\n      node.types = [type];\n      while (this.eat(tt.bitwiseOR)) {\n        node.types.push(this.flowParseIntersectionType());\n      }\n      return node.types.length === 1\n        ? type\n        : this.finishNode(node, \"UnionTypeAnnotation\");\n    }\n\n    flowParseType(): N.FlowTypeAnnotation {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      const type = this.flowParseUnionType();\n      this.state.inType = oldInType;\n      return type;\n    }\n\n    flowParseTypeOrImplicitInstantiation(): N.FlowTypeAnnotation {\n      if (this.state.type === tt.name && this.state.value === \"_\") {\n        const startPos = this.state.start;\n        const startLoc = this.state.startLoc;\n        const node = this.parseIdentifier();\n        return this.flowParseGenericType(startPos, startLoc, node);\n      } else {\n        return this.flowParseType();\n      }\n    }\n\n    flowParseTypeAnnotation(): N.FlowTypeAnnotation {\n      const node = this.startNode();\n      node.typeAnnotation = this.flowParseTypeInitialiser();\n      return this.finishNode(node, \"TypeAnnotation\");\n    }\n\n    flowParseTypeAnnotatableIdentifier(\n      allowPrimitiveOverride?: boolean,\n    ): N.Identifier {\n      const ident = allowPrimitiveOverride\n        ? this.parseIdentifier()\n        : this.flowParseRestrictedIdentifier();\n      if (this.match(tt.colon)) {\n        ident.typeAnnotation = this.flowParseTypeAnnotation();\n        this.resetEndLocation(ident);\n      }\n      return ident;\n    }\n\n    typeCastToParameter(node: N.Node): N.Node {\n      node.expression.typeAnnotation = node.typeAnnotation;\n\n      this.resetEndLocation(node.expression, node.typeAnnotation.loc.end);\n\n      return node.expression;\n    }\n\n    flowParseVariance(): ?N.FlowVariance {\n      let variance = null;\n      if (this.match(tt.plusMin)) {\n        variance = this.startNode();\n        if (this.state.value === \"+\") {\n          variance.kind = \"plus\";\n        } else {\n          variance.kind = \"minus\";\n        }\n        this.next();\n        this.finishNode(variance, \"Variance\");\n      }\n      return variance;\n    }\n\n    // ==================================\n    // Overrides\n    // ==================================\n\n    parseFunctionBody(\n      node: N.Function,\n      allowExpressionBody: ?boolean,\n      isMethod?: boolean = false,\n    ): void {\n      if (allowExpressionBody) {\n        return this.forwardNoArrowParamsConversionAt(node, () =>\n          super.parseFunctionBody(node, true, isMethod),\n        );\n      }\n\n      return super.parseFunctionBody(node, false, isMethod);\n    }\n\n    parseFunctionBodyAndFinish(\n      node: N.BodilessFunctionOrMethodBase,\n      type: string,\n      isMethod?: boolean = false,\n    ): void {\n      if (this.match(tt.colon)) {\n        const typeNode = this.startNode();\n\n        [\n          // $FlowFixMe (destructuring not supported yet)\n          typeNode.typeAnnotation,\n          // $FlowFixMe (destructuring not supported yet)\n          node.predicate,\n        ] = this.flowParseTypeAndPredicateInitialiser();\n\n        node.returnType = typeNode.typeAnnotation\n          ? this.finishNode(typeNode, \"TypeAnnotation\")\n          : null;\n      }\n\n      super.parseFunctionBodyAndFinish(node, type, isMethod);\n    }\n\n    // interfaces and enums\n    parseStatement(context: ?string, topLevel?: boolean): N.Statement {\n      // strict mode handling of `interface` since it's a reserved word\n      if (this.state.strict && this.isContextual(tt._interface)) {\n        const lookahead = this.lookahead();\n        if (tokenIsKeywordOrIdentifier(lookahead.type)) {\n          const node = this.startNode();\n          this.next();\n          return this.flowParseInterface(node);\n        }\n      } else if (this.shouldParseEnums() && this.isContextual(tt._enum)) {\n        const node = this.startNode();\n        this.next();\n        return this.flowParseEnumDeclaration(node);\n      }\n      const stmt = super.parseStatement(context, topLevel);\n      // We will parse a flow pragma in any comment before the first statement.\n      if (this.flowPragma === undefined && !this.isValidDirective(stmt)) {\n        this.flowPragma = null;\n      }\n      return stmt;\n    }\n\n    // declares, interfaces and type aliases\n    parseExpressionStatement(\n      node: N.ExpressionStatement,\n      expr: N.Expression,\n    ): N.ExpressionStatement {\n      if (expr.type === \"Identifier\") {\n        if (expr.name === \"declare\") {\n          if (\n            this.match(tt._class) ||\n            tokenIsIdentifier(this.state.type) ||\n            this.match(tt._function) ||\n            this.match(tt._var) ||\n            this.match(tt._export)\n          ) {\n            return this.flowParseDeclare(node);\n          }\n        } else if (tokenIsIdentifier(this.state.type)) {\n          if (expr.name === \"interface\") {\n            return this.flowParseInterface(node);\n          } else if (expr.name === \"type\") {\n            return this.flowParseTypeAlias(node);\n          } else if (expr.name === \"opaque\") {\n            return this.flowParseOpaqueType(node, false);\n          }\n        }\n      }\n\n      return super.parseExpressionStatement(node, expr);\n    }\n\n    // export type\n    shouldParseExportDeclaration(): boolean {\n      const { type } = this.state;\n      if (\n        tokenIsFlowInterfaceOrTypeOrOpaque(type) ||\n        (this.shouldParseEnums() && type === tt._enum)\n      ) {\n        return !this.state.containsEsc;\n      }\n      return super.shouldParseExportDeclaration();\n    }\n\n    isExportDefaultSpecifier(): boolean {\n      const { type } = this.state;\n      if (\n        tokenIsFlowInterfaceOrTypeOrOpaque(type) ||\n        (this.shouldParseEnums() && type === tt._enum)\n      ) {\n        return this.state.containsEsc;\n      }\n\n      return super.isExportDefaultSpecifier();\n    }\n\n    parseExportDefaultExpression(): N.Expression | N.Declaration {\n      if (this.shouldParseEnums() && this.isContextual(tt._enum)) {\n        const node = this.startNode();\n        this.next();\n        return this.flowParseEnumDeclaration(node);\n      }\n      return super.parseExportDefaultExpression();\n    }\n\n    parseConditional(\n      expr: N.Expression,\n      startPos: number,\n      startLoc: Position,\n      refExpressionErrors?: ?ExpressionErrors,\n    ): N.Expression {\n      if (!this.match(tt.question)) return expr;\n\n      if (this.state.maybeInArrowParameters) {\n        const nextCh = this.lookaheadCharCode();\n        // These tokens cannot start an expression, so if one of them follows\n        // ? then we are probably in an arrow function parameters list and we\n        // don't parse the conditional expression.\n        if (\n          nextCh === charCodes.comma || // (a?, b) => c\n          nextCh === charCodes.equalsTo || // (a? = b) => c\n          nextCh === charCodes.colon || // (a?: b) => c\n          nextCh === charCodes.rightParenthesis // (a?) => c\n        ) {\n          /*:: invariant(refExpressionErrors != null) */\n          this.setOptionalParametersError(refExpressionErrors);\n          return expr;\n        }\n      }\n\n      this.expect(tt.question);\n      const state = this.state.clone();\n      const originalNoArrowAt = this.state.noArrowAt;\n      const node = this.startNodeAt(startPos, startLoc);\n      let { consequent, failed } = this.tryParseConditionalConsequent();\n      let [valid, invalid] = this.getArrowLikeExpressions(consequent);\n\n      if (failed || invalid.length > 0) {\n        const noArrowAt = [...originalNoArrowAt];\n\n        if (invalid.length > 0) {\n          this.state = state;\n          this.state.noArrowAt = noArrowAt;\n\n          for (let i = 0; i < invalid.length; i++) {\n            noArrowAt.push(invalid[i].start);\n          }\n\n          ({ consequent, failed } = this.tryParseConditionalConsequent());\n          [valid, invalid] = this.getArrowLikeExpressions(consequent);\n        }\n\n        if (failed && valid.length > 1) {\n          // if there are two or more possible correct ways of parsing, throw an\n          // error.\n          // e.g.   Source: a ? (b): c => (d): e => f\n          //      Result 1: a ? b : (c => ((d): e => f))\n          //      Result 2: a ? ((b): c => d) : (e => f)\n          this.raise(FlowErrors.AmbiguousConditionalArrow, {\n            at: state.startLoc,\n          });\n        }\n\n        if (failed && valid.length === 1) {\n          this.state = state;\n          noArrowAt.push(valid[0].start);\n          this.state.noArrowAt = noArrowAt;\n          ({ consequent, failed } = this.tryParseConditionalConsequent());\n        }\n      }\n\n      this.getArrowLikeExpressions(consequent, true);\n\n      this.state.noArrowAt = originalNoArrowAt;\n      this.expect(tt.colon);\n\n      node.test = expr;\n      node.consequent = consequent;\n      node.alternate = this.forwardNoArrowParamsConversionAt(node, () =>\n        this.parseMaybeAssign(undefined, undefined),\n      );\n\n      return this.finishNode(node, \"ConditionalExpression\");\n    }\n\n    tryParseConditionalConsequent(): {\n      consequent: N.Expression,\n      failed: boolean,\n    } {\n      this.state.noArrowParamsConversionAt.push(this.state.start);\n\n      const consequent = this.parseMaybeAssignAllowIn();\n      const failed = !this.match(tt.colon);\n\n      this.state.noArrowParamsConversionAt.pop();\n\n      return { consequent, failed };\n    }\n\n    // Given an expression, walks through out its arrow functions whose body is\n    // an expression and through out conditional expressions. It returns every\n    // function which has been parsed with a return type but could have been\n    // parenthesized expressions.\n    // These functions are separated into two arrays: one containing the ones\n    // whose parameters can be converted to assignable lists, one containing the\n    // others.\n    getArrowLikeExpressions(\n      node: N.Expression,\n      disallowInvalid?: boolean,\n    ): [N.ArrowFunctionExpression[], N.ArrowFunctionExpression[]] {\n      const stack = [node];\n      const arrows: N.ArrowFunctionExpression[] = [];\n\n      while (stack.length !== 0) {\n        const node = stack.pop();\n        if (node.type === \"ArrowFunctionExpression\") {\n          if (node.typeParameters || !node.returnType) {\n            // This is an arrow expression without ambiguity, so check its parameters\n            this.finishArrowValidation(node);\n          } else {\n            arrows.push(node);\n          }\n          stack.push(node.body);\n        } else if (node.type === \"ConditionalExpression\") {\n          stack.push(node.consequent);\n          stack.push(node.alternate);\n        }\n      }\n\n      if (disallowInvalid) {\n        arrows.forEach(node => this.finishArrowValidation(node));\n        return [arrows, []];\n      }\n\n      return partition(arrows, node =>\n        node.params.every(param => this.isAssignable(param, true)),\n      );\n    }\n\n    finishArrowValidation(node: N.ArrowFunctionExpression) {\n      this.toAssignableList(\n        // node.params is Expression[] instead of $ReadOnlyArray<Pattern> because it\n        // has not been converted yet.\n        ((node.params: any): N.Expression[]),\n        node.extra?.trailingCommaLoc,\n        /* isLHS */ false,\n      );\n      // Enter scope, as checkParams defines bindings\n      this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\n      // Use super's method to force the parameters to be checked\n      super.checkParams(node, false, true);\n      this.scope.exit();\n    }\n\n    forwardNoArrowParamsConversionAt<T>(node: N.Node, parse: () => T): T {\n      let result: T;\n      if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n        this.state.noArrowParamsConversionAt.push(this.state.start);\n        result = parse();\n        this.state.noArrowParamsConversionAt.pop();\n      } else {\n        result = parse();\n      }\n\n      return result;\n    }\n\n    parseParenItem(\n      node: N.Expression,\n      startPos: number,\n      startLoc: Position,\n    ): N.Expression {\n      node = super.parseParenItem(node, startPos, startLoc);\n      if (this.eat(tt.question)) {\n        node.optional = true;\n        // Include questionmark in location of node\n        // Don't use this.finishNode() as otherwise we might process comments twice and\n        // include already consumed parens\n        this.resetEndLocation(node);\n      }\n\n      if (this.match(tt.colon)) {\n        const typeCastNode = this.startNodeAt(startPos, startLoc);\n        typeCastNode.expression = node;\n        typeCastNode.typeAnnotation = this.flowParseTypeAnnotation();\n\n        return this.finishNode(typeCastNode, \"TypeCastExpression\");\n      }\n\n      return node;\n    }\n\n    assertModuleNodeAllowed(node: N.Node) {\n      if (\n        (node.type === \"ImportDeclaration\" &&\n          (node.importKind === \"type\" || node.importKind === \"typeof\")) ||\n        (node.type === \"ExportNamedDeclaration\" &&\n          node.exportKind === \"type\") ||\n        (node.type === \"ExportAllDeclaration\" && node.exportKind === \"type\")\n      ) {\n        // Allow Flowtype imports and exports in all conditions because\n        // Flow itself does not care about 'sourceType'.\n        return;\n      }\n\n      super.assertModuleNodeAllowed(node);\n    }\n\n    parseExport(node: N.Node): N.AnyExport {\n      const decl = super.parseExport(node);\n      if (\n        decl.type === \"ExportNamedDeclaration\" ||\n        decl.type === \"ExportAllDeclaration\"\n      ) {\n        decl.exportKind = decl.exportKind || \"value\";\n      }\n      return decl;\n    }\n\n    parseExportDeclaration(node: N.ExportNamedDeclaration): ?N.Declaration {\n      if (this.isContextual(tt._type)) {\n        node.exportKind = \"type\";\n\n        const declarationNode = this.startNode();\n        this.next();\n\n        if (this.match(tt.braceL)) {\n          // export type { foo, bar };\n          node.specifiers = this.parseExportSpecifiers(\n            /* isInTypeExport */ true,\n          );\n          this.parseExportFrom(node);\n          return null;\n        } else {\n          // export type Foo = Bar;\n          return this.flowParseTypeAlias(declarationNode);\n        }\n      } else if (this.isContextual(tt._opaque)) {\n        node.exportKind = \"type\";\n\n        const declarationNode = this.startNode();\n        this.next();\n        // export opaque type Foo = Bar;\n        return this.flowParseOpaqueType(declarationNode, false);\n      } else if (this.isContextual(tt._interface)) {\n        node.exportKind = \"type\";\n        const declarationNode = this.startNode();\n        this.next();\n        return this.flowParseInterface(declarationNode);\n      } else if (this.shouldParseEnums() && this.isContextual(tt._enum)) {\n        node.exportKind = \"value\";\n        const declarationNode = this.startNode();\n        this.next();\n        return this.flowParseEnumDeclaration(declarationNode);\n      } else {\n        return super.parseExportDeclaration(node);\n      }\n    }\n\n    eatExportStar(node: N.Node): boolean {\n      if (super.eatExportStar(...arguments)) return true;\n\n      if (this.isContextual(tt._type) && this.lookahead().type === tt.star) {\n        node.exportKind = \"type\";\n        this.next();\n        this.next();\n        return true;\n      }\n\n      return false;\n    }\n\n    maybeParseExportNamespaceSpecifier(node: N.Node): boolean {\n      const { startLoc } = this.state;\n      const hasNamespace = super.maybeParseExportNamespaceSpecifier(node);\n      if (hasNamespace && node.exportKind === \"type\") {\n        this.unexpected(startLoc);\n      }\n      return hasNamespace;\n    }\n\n    parseClassId(node: N.Class, isStatement: boolean, optionalId: ?boolean) {\n      super.parseClassId(node, isStatement, optionalId);\n      if (this.match(tt.lt)) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n    }\n\n    parseClassMember(\n      classBody: N.ClassBody,\n      member: any,\n      state: N.ParseClassMemberState,\n    ): void {\n      const { startLoc } = this.state;\n      if (this.isContextual(tt._declare)) {\n        if (this.parseClassMemberFromModifier(classBody, member)) {\n          // 'declare' is a class element name\n          return;\n        }\n\n        member.declare = true;\n      }\n\n      super.parseClassMember(classBody, member, state);\n\n      if (member.declare) {\n        if (\n          member.type !== \"ClassProperty\" &&\n          member.type !== \"ClassPrivateProperty\" &&\n          member.type !== \"PropertyDefinition\" // Used by estree plugin\n        ) {\n          this.raise(FlowErrors.DeclareClassElement, { at: startLoc });\n        } else if (member.value) {\n          this.raise(FlowErrors.DeclareClassFieldInitializer, {\n            at: member.value,\n          });\n        }\n      }\n    }\n\n    isIterator(word: string): boolean {\n      return word === \"iterator\" || word === \"asyncIterator\";\n    }\n\n    readIterator(): void {\n      const word = super.readWord1();\n      const fullWord = \"@@\" + word;\n\n      // Allow @@iterator and @@asyncIterator as a identifier only inside type\n      if (!this.isIterator(word) || !this.state.inType) {\n        this.raise(Errors.InvalidIdentifier, {\n          at: this.state.curPosition(),\n          identifierName: fullWord,\n        });\n      }\n\n      this.finishToken(tt.name, fullWord);\n    }\n\n    // ensure that inside flow types, we bypass the jsx parser plugin\n    getTokenFromCode(code: number): void {\n      const next = this.input.charCodeAt(this.state.pos + 1);\n      if (code === charCodes.leftCurlyBrace && next === charCodes.verticalBar) {\n        return this.finishOp(tt.braceBarL, 2);\n      } else if (\n        this.state.inType &&\n        (code === charCodes.greaterThan || code === charCodes.lessThan)\n      ) {\n        return this.finishOp(code === charCodes.greaterThan ? tt.gt : tt.lt, 1);\n      } else if (this.state.inType && code === charCodes.questionMark) {\n        if (next === charCodes.dot) {\n          return this.finishOp(tt.questionDot, 2);\n        }\n        // allow double nullable types in Flow: ??string\n        return this.finishOp(tt.question, 1);\n      } else if (\n        isIteratorStart(code, next, this.input.charCodeAt(this.state.pos + 2))\n      ) {\n        this.state.pos += 2; // eat \"@@\"\n        return this.readIterator();\n      } else {\n        return super.getTokenFromCode(code);\n      }\n    }\n\n    isAssignable(node: N.Node, isBinding?: boolean): boolean {\n      if (node.type === \"TypeCastExpression\") {\n        return this.isAssignable(node.expression, isBinding);\n      } else {\n        return super.isAssignable(node, isBinding);\n      }\n    }\n\n    toAssignable(node: N.Node, isLHS: boolean = false): void {\n      if (\n        !isLHS &&\n        node.type === \"AssignmentExpression\" &&\n        node.left.type === \"TypeCastExpression\"\n      ) {\n        node.left = this.typeCastToParameter(node.left);\n      }\n      super.toAssignable(...arguments);\n    }\n\n    // turn type casts that we found in function parameter head into type annotated params\n    toAssignableList(\n      exprList: N.Expression[],\n      trailingCommaLoc?: ?Position,\n      isLHS: boolean,\n    ): void {\n      for (let i = 0; i < exprList.length; i++) {\n        const expr = exprList[i];\n        if (expr?.type === \"TypeCastExpression\") {\n          exprList[i] = this.typeCastToParameter(expr);\n        }\n      }\n      super.toAssignableList(exprList, trailingCommaLoc, isLHS);\n    }\n\n    // this is a list of nodes, from something like a call expression, we need to filter the\n    // type casts that we've found that are illegal in this context\n    toReferencedList(\n      exprList: $ReadOnlyArray<?N.Expression>,\n      isParenthesizedExpr?: boolean,\n    ): $ReadOnlyArray<?N.Expression> {\n      for (let i = 0; i < exprList.length; i++) {\n        const expr = exprList[i];\n        if (\n          expr &&\n          expr.type === \"TypeCastExpression\" &&\n          !expr.extra?.parenthesized &&\n          (exprList.length > 1 || !isParenthesizedExpr)\n        ) {\n          this.raise(FlowErrors.TypeCastInPattern, {\n            at: expr.typeAnnotation,\n          });\n        }\n      }\n\n      return exprList;\n    }\n\n    parseArrayLike(\n      close: TokenType,\n      canBePattern: boolean,\n      isTuple: boolean,\n      refExpressionErrors: ?ExpressionErrors,\n    ): N.ArrayExpression | N.TupleExpression {\n      const node = super.parseArrayLike(\n        close,\n        canBePattern,\n        isTuple,\n        refExpressionErrors,\n      );\n\n      // This could be an array pattern:\n      //   ([a: string, b: string]) => {}\n      // In this case, we don't have to call toReferencedList. We will\n      // call it, if needed, when we are sure that it is a parenthesized\n      // expression by calling toReferencedListDeep.\n      if (canBePattern && !this.state.maybeInArrowParameters) {\n        this.toReferencedList(node.elements);\n      }\n\n      return node;\n    }\n\n    isValidLVal(type: string, ...rest) {\n      return type === \"TypeCastExpression\" || super.isValidLVal(type, ...rest);\n    }\n\n    // parse class property type annotations\n    parseClassProperty(node: N.ClassProperty): N.ClassProperty {\n      if (this.match(tt.colon)) {\n        node.typeAnnotation = this.flowParseTypeAnnotation();\n      }\n      return super.parseClassProperty(node);\n    }\n\n    parseClassPrivateProperty(\n      node: N.ClassPrivateProperty,\n    ): N.ClassPrivateProperty {\n      if (this.match(tt.colon)) {\n        node.typeAnnotation = this.flowParseTypeAnnotation();\n      }\n      return super.parseClassPrivateProperty(node);\n    }\n\n    // determine whether or not we're currently in the position where a class method would appear\n    isClassMethod(): boolean {\n      return this.match(tt.lt) || super.isClassMethod();\n    }\n\n    // determine whether or not we're currently in the position where a class property would appear\n    isClassProperty(): boolean {\n      return this.match(tt.colon) || super.isClassProperty();\n    }\n\n    isNonstaticConstructor(method: N.ClassMethod | N.ClassProperty): boolean {\n      return !this.match(tt.colon) && super.isNonstaticConstructor(method);\n    }\n\n    // parse type parameters for class methods\n    pushClassMethod(\n      classBody: N.ClassBody,\n      method: N.ClassMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isConstructor: boolean,\n      allowsDirectSuper: boolean,\n    ): void {\n      if ((method: $FlowFixMe).variance) {\n        this.unexpected((method: $FlowFixMe).variance.loc.start);\n      }\n      delete (method: $FlowFixMe).variance;\n      if (this.match(tt.lt)) {\n        method.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      super.pushClassMethod(\n        classBody,\n        method,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowsDirectSuper,\n      );\n\n      if (method.params && isConstructor) {\n        const params = method.params;\n        if (params.length > 0 && this.isThisParam(params[0])) {\n          this.raise(FlowErrors.ThisParamBannedInConstructor, { at: method });\n        }\n        // estree support\n      } else if (\n        // $FlowFixMe flow does not know about the face that estree can replace ClassMethod with MethodDefinition\n        method.type === \"MethodDefinition\" &&\n        isConstructor &&\n        method.value.params\n      ) {\n        const params = method.value.params;\n        if (params.length > 0 && this.isThisParam(params[0])) {\n          this.raise(FlowErrors.ThisParamBannedInConstructor, { at: method });\n        }\n      }\n    }\n\n    pushClassPrivateMethod(\n      classBody: N.ClassBody,\n      method: N.ClassPrivateMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n    ): void {\n      if ((method: $FlowFixMe).variance) {\n        this.unexpected((method: $FlowFixMe).variance.loc.start);\n      }\n      delete (method: $FlowFixMe).variance;\n      if (this.match(tt.lt)) {\n        method.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n    }\n\n    // parse a the super class type parameters and implements\n    parseClassSuper(node: N.Class): void {\n      super.parseClassSuper(node);\n      if (node.superClass && this.match(tt.lt)) {\n        node.superTypeParameters = this.flowParseTypeParameterInstantiation();\n      }\n      if (this.isContextual(tt._implements)) {\n        this.next();\n        const implemented: N.FlowClassImplements[] = (node.implements = []);\n        do {\n          const node = this.startNode();\n          node.id = this.flowParseRestrictedIdentifier(/*liberal*/ true);\n          if (this.match(tt.lt)) {\n            node.typeParameters = this.flowParseTypeParameterInstantiation();\n          } else {\n            node.typeParameters = null;\n          }\n          implemented.push(this.finishNode(node, \"ClassImplements\"));\n        } while (this.eat(tt.comma));\n      }\n    }\n\n    checkGetterSetterParams(method: N.ObjectMethod | N.ClassMethod): void {\n      super.checkGetterSetterParams(method);\n      const params = this.getObjectOrClassMethodParams(method);\n      if (params.length > 0) {\n        const param = params[0];\n        if (this.isThisParam(param) && method.kind === \"get\") {\n          this.raise(FlowErrors.GetterMayNotHaveThisParam, { at: param });\n        } else if (this.isThisParam(param)) {\n          this.raise(FlowErrors.SetterMayNotHaveThisParam, { at: param });\n        }\n      }\n    }\n\n    parsePropertyNamePrefixOperator(\n      node: N.ObjectOrClassMember | N.ClassMember,\n    ): void {\n      node.variance = this.flowParseVariance();\n    }\n\n    // parse type parameters for object method shorthand\n    parseObjPropValue(\n      prop: N.ObjectMember,\n      startPos: ?number,\n      startLoc: ?Position,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isPattern: boolean,\n      isAccessor: boolean,\n      refExpressionErrors: ?ExpressionErrors,\n    ): void {\n      if ((prop: $FlowFixMe).variance) {\n        this.unexpected((prop: $FlowFixMe).variance.loc.start);\n      }\n      delete (prop: $FlowFixMe).variance;\n\n      let typeParameters;\n\n      // method shorthand\n      if (this.match(tt.lt) && !isAccessor) {\n        typeParameters = this.flowParseTypeParameterDeclaration();\n        if (!this.match(tt.parenL)) this.unexpected();\n      }\n\n      super.parseObjPropValue(\n        prop,\n        startPos,\n        startLoc,\n        isGenerator,\n        isAsync,\n        isPattern,\n        isAccessor,\n        refExpressionErrors,\n      );\n\n      // add typeParameters if we found them\n      if (typeParameters) {\n        (prop.value || prop).typeParameters = typeParameters;\n      }\n    }\n\n    parseAssignableListItemTypes(param: N.Pattern): N.Pattern {\n      if (this.eat(tt.question)) {\n        if (param.type !== \"Identifier\") {\n          this.raise(FlowErrors.PatternIsOptional, { at: param });\n        }\n        if (this.isThisParam(param)) {\n          this.raise(FlowErrors.ThisParamMayNotBeOptional, { at: param });\n        }\n\n        ((param: any): N.Identifier).optional = true;\n      }\n      if (this.match(tt.colon)) {\n        param.typeAnnotation = this.flowParseTypeAnnotation();\n      } else if (this.isThisParam(param)) {\n        this.raise(FlowErrors.ThisParamAnnotationRequired, { at: param });\n      }\n\n      if (this.match(tt.eq) && this.isThisParam(param)) {\n        this.raise(FlowErrors.ThisParamNoDefault, { at: param });\n      }\n\n      this.resetEndLocation(param);\n      return param;\n    }\n\n    parseMaybeDefault(\n      startPos?: ?number,\n      startLoc?: ?Position,\n      left?: ?N.Pattern,\n    ): N.Pattern {\n      const node = super.parseMaybeDefault(startPos, startLoc, left);\n\n      if (\n        node.type === \"AssignmentPattern\" &&\n        node.typeAnnotation &&\n        node.right.start < node.typeAnnotation.start\n      ) {\n        this.raise(FlowErrors.TypeBeforeInitializer, {\n          at: node.typeAnnotation,\n        });\n      }\n\n      return node;\n    }\n\n    shouldParseDefaultImport(node: N.ImportDeclaration): boolean {\n      if (!hasTypeImportKind(node)) {\n        return super.shouldParseDefaultImport(node);\n      }\n\n      return isMaybeDefaultImport(this.state.type);\n    }\n\n    parseImportSpecifierLocal(\n      node: N.ImportDeclaration,\n      specifier: N.Node,\n      type: string,\n    ): void {\n      specifier.local = hasTypeImportKind(node)\n        ? this.flowParseRestrictedIdentifier(\n            /* liberal */ true,\n            /* declaration */ true,\n          )\n        : this.parseIdentifier();\n\n      node.specifiers.push(this.finishImportSpecifier(specifier, type));\n    }\n\n    // parse typeof and type imports\n    maybeParseDefaultImportSpecifier(node: N.ImportDeclaration): boolean {\n      node.importKind = \"value\";\n\n      let kind = null;\n      if (this.match(tt._typeof)) {\n        kind = \"typeof\";\n      } else if (this.isContextual(tt._type)) {\n        kind = \"type\";\n      }\n      if (kind) {\n        const lh = this.lookahead();\n        const { type } = lh;\n\n        // import type * is not allowed\n        if (kind === \"type\" && type === tt.star) {\n          // FIXME: lh.start?\n          this.unexpected(null, lh.type);\n        }\n\n        if (\n          isMaybeDefaultImport(type) ||\n          type === tt.braceL ||\n          type === tt.star\n        ) {\n          this.next();\n          node.importKind = kind;\n        }\n      }\n\n      return super.maybeParseDefaultImportSpecifier(node);\n    }\n\n    // parse import-type/typeof shorthand\n    parseImportSpecifier(\n      specifier: any,\n      importedIsString: boolean,\n      isInTypeOnlyImport: boolean,\n      // eslint-disable-next-line no-unused-vars\n      isMaybeTypeOnly: boolean,\n    ): N.ImportSpecifier {\n      const firstIdent = specifier.imported;\n\n      let specifierTypeKind = null;\n      if (firstIdent.type === \"Identifier\") {\n        if (firstIdent.name === \"type\") {\n          specifierTypeKind = \"type\";\n        } else if (firstIdent.name === \"typeof\") {\n          specifierTypeKind = \"typeof\";\n        }\n      }\n\n      let isBinding = false;\n      if (this.isContextual(tt._as) && !this.isLookaheadContextual(\"as\")) {\n        const as_ident = this.parseIdentifier(true);\n        if (\n          specifierTypeKind !== null &&\n          !tokenIsKeywordOrIdentifier(this.state.type)\n        ) {\n          // `import {type as ,` or `import {type as }`\n          specifier.imported = as_ident;\n          specifier.importKind = specifierTypeKind;\n          specifier.local = cloneIdentifier(as_ident);\n        } else {\n          // `import {type as foo`\n          specifier.imported = firstIdent;\n          specifier.importKind = null;\n          specifier.local = this.parseIdentifier();\n        }\n      } else {\n        if (\n          specifierTypeKind !== null &&\n          tokenIsKeywordOrIdentifier(this.state.type)\n        ) {\n          // `import {type foo`\n          specifier.imported = this.parseIdentifier(true);\n          specifier.importKind = specifierTypeKind;\n        } else {\n          if (importedIsString) {\n            /*:: invariant(firstIdent instanceof N.StringLiteral) */\n            throw this.raise(Errors.ImportBindingIsString, {\n              at: specifier,\n              importName: firstIdent.value,\n            });\n          }\n          /*:: invariant(firstIdent instanceof N.Node) */\n          specifier.imported = firstIdent;\n          specifier.importKind = null;\n        }\n\n        if (this.eatContextual(tt._as)) {\n          specifier.local = this.parseIdentifier();\n        } else {\n          isBinding = true;\n          specifier.local = cloneIdentifier(specifier.imported);\n        }\n      }\n\n      const specifierIsTypeImport = hasTypeImportKind(specifier);\n\n      if (isInTypeOnlyImport && specifierIsTypeImport) {\n        this.raise(FlowErrors.ImportTypeShorthandOnlyInPureImport, {\n          at: specifier,\n        });\n      }\n\n      if (isInTypeOnlyImport || specifierIsTypeImport) {\n        this.checkReservedType(\n          specifier.local.name,\n          specifier.local.loc.start,\n          /* declaration */ true,\n        );\n      }\n\n      if (isBinding && !isInTypeOnlyImport && !specifierIsTypeImport) {\n        this.checkReservedWord(\n          specifier.local.name,\n          specifier.loc.start,\n          true,\n          true,\n        );\n      }\n\n      return this.finishImportSpecifier(specifier, \"ImportSpecifier\");\n    }\n\n    parseBindingAtom(): N.Pattern {\n      switch (this.state.type) {\n        case tt._this:\n          // \"this\" may be the name of a parameter, so allow it.\n          return this.parseIdentifier(/* liberal */ true);\n        default:\n          return super.parseBindingAtom();\n      }\n    }\n\n    // parse function type parameters - function foo<T>() {}\n    parseFunctionParams(node: N.Function, allowModifiers?: boolean): void {\n      // $FlowFixMe\n      const kind = node.kind;\n      if (kind !== \"get\" && kind !== \"set\" && this.match(tt.lt)) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n      super.parseFunctionParams(node, allowModifiers);\n    }\n\n    // parse flow type annotations on variable declarator heads - let foo: string = bar\n    parseVarId(\n      decl: N.VariableDeclarator,\n      kind: \"var\" | \"let\" | \"const\",\n    ): void {\n      super.parseVarId(decl, kind);\n      if (this.match(tt.colon)) {\n        decl.id.typeAnnotation = this.flowParseTypeAnnotation();\n        this.resetEndLocation(decl.id); // set end position to end of type\n      }\n    }\n\n    // parse the return type of an async arrow function - let foo = (async (): number => {});\n    parseAsyncArrowFromCallExpression(\n      node: N.ArrowFunctionExpression,\n      call: N.CallExpression,\n    ): N.ArrowFunctionExpression {\n      if (this.match(tt.colon)) {\n        const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n        this.state.noAnonFunctionType = true;\n        node.returnType = this.flowParseTypeAnnotation();\n        this.state.noAnonFunctionType = oldNoAnonFunctionType;\n      }\n\n      return super.parseAsyncArrowFromCallExpression(node, call);\n    }\n\n    // todo description\n    shouldParseAsyncArrow(): boolean {\n      return this.match(tt.colon) || super.shouldParseAsyncArrow();\n    }\n\n    // We need to support type parameter declarations for arrow functions. This\n    // is tricky. There are three situations we need to handle\n    //\n    // 1. This is either JSX or an arrow function. We'll try JSX first. If that\n    //    fails, we'll try an arrow function. If that fails, we'll throw the JSX\n    //    error.\n    // 2. This is an arrow function. We'll parse the type parameter declaration,\n    //    parse the rest, make sure the rest is an arrow function, and go from\n    //    there\n    // 3. This is neither. Just call the super method\n    parseMaybeAssign(\n      refExpressionErrors?: ?ExpressionErrors,\n      afterLeftParse?: Function,\n    ): N.Expression {\n      let state = null;\n\n      let jsx;\n\n      if (\n        this.hasPlugin(\"jsx\") &&\n        (this.match(tt.jsxTagStart) || this.match(tt.lt))\n      ) {\n        state = this.state.clone();\n\n        jsx = this.tryParse(\n          () => super.parseMaybeAssign(refExpressionErrors, afterLeftParse),\n          state,\n        );\n\n        /*:: invariant(!jsx.aborted) */\n        /*:: invariant(jsx.node != null) */\n        if (!jsx.error) return jsx.node;\n\n        // Remove `tc.j_expr` and `tc.j_oTag` from context added\n        // by parsing `jsxTagStart` to stop the JSX plugin from\n        // messing with the tokens\n        const { context } = this.state;\n        const currentContext = context[context.length - 1];\n        if (currentContext === tc.j_oTag || currentContext === tc.j_expr) {\n          context.pop();\n        }\n      }\n\n      if (jsx?.error || this.match(tt.lt)) {\n        state = state || this.state.clone();\n\n        let typeParameters;\n\n        const arrow = this.tryParse(abort => {\n          typeParameters = this.flowParseTypeParameterDeclaration();\n\n          const arrowExpression = this.forwardNoArrowParamsConversionAt(\n            typeParameters,\n            () => {\n              const result = super.parseMaybeAssign(\n                refExpressionErrors,\n                afterLeftParse,\n              );\n\n              this.resetStartLocationFromNode(result, typeParameters);\n\n              return result;\n            },\n          );\n\n          // <T>(() => {});\n          // <T>(() => {}: any);\n          if (arrowExpression.extra?.parenthesized) abort();\n\n          // The above can return a TypeCastExpression when the arrow\n          // expression is not wrapped in parens. See also `this.parseParenItem`.\n          // (<T>() => {}: any);\n          const expr = this.maybeUnwrapTypeCastExpression(arrowExpression);\n\n          if (expr.type !== \"ArrowFunctionExpression\") abort();\n\n          expr.typeParameters = typeParameters;\n          this.resetStartLocationFromNode(expr, typeParameters);\n\n          return arrowExpression;\n        }, state);\n\n        let arrowExpression: ?(\n          | N.ArrowFunctionExpression\n          | N.TypeCastExpression\n        ) = null;\n\n        if (\n          arrow.node &&\n          this.maybeUnwrapTypeCastExpression(arrow.node).type ===\n            \"ArrowFunctionExpression\"\n        ) {\n          if (!arrow.error && !arrow.aborted) {\n            // <T> async () => {}\n            if (arrow.node.async) {\n              /*:: invariant(typeParameters) */\n              this.raise(\n                FlowErrors.UnexpectedTypeParameterBeforeAsyncArrowFunction,\n                { at: typeParameters },\n              );\n            }\n\n            return arrow.node;\n          }\n\n          arrowExpression = arrow.node;\n        }\n\n        // If we are here, both JSX and Flow parsing attempts failed.\n        // Give the precedence to the JSX error, except if JSX had an\n        // unrecoverable error while Flow didn't.\n        // If the error is recoverable, we can only re-report it if there is\n        // a node we can return.\n\n        if (jsx?.node) {\n          /*:: invariant(jsx.failState) */\n          this.state = jsx.failState;\n          return jsx.node;\n        }\n\n        if (arrowExpression) {\n          /*:: invariant(arrow.failState) */\n          this.state = arrow.failState;\n          return arrowExpression;\n        }\n\n        if (jsx?.thrown) throw jsx.error;\n        if (arrow.thrown) throw arrow.error;\n\n        /*:: invariant(typeParameters) */\n        throw this.raise(FlowErrors.UnexpectedTokenAfterTypeParameter, {\n          at: typeParameters,\n        });\n      }\n\n      return super.parseMaybeAssign(refExpressionErrors, afterLeftParse);\n    }\n\n    // handle return types for arrow functions\n    parseArrow(node: N.ArrowFunctionExpression): ?N.ArrowFunctionExpression {\n      if (this.match(tt.colon)) {\n        const result = this.tryParse(() => {\n          const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n          this.state.noAnonFunctionType = true;\n\n          const typeNode = this.startNode();\n\n          [\n            // $FlowFixMe (destructuring not supported yet)\n            typeNode.typeAnnotation,\n            // $FlowFixMe (destructuring not supported yet)\n            node.predicate,\n          ] = this.flowParseTypeAndPredicateInitialiser();\n\n          this.state.noAnonFunctionType = oldNoAnonFunctionType;\n\n          if (this.canInsertSemicolon()) this.unexpected();\n          if (!this.match(tt.arrow)) this.unexpected();\n\n          return typeNode;\n        });\n\n        if (result.thrown) return null;\n        /*:: invariant(result.node) */\n\n        if (result.error) this.state = result.failState;\n\n        // assign after it is clear it is an arrow\n        node.returnType = result.node.typeAnnotation\n          ? this.finishNode(result.node, \"TypeAnnotation\")\n          : null;\n      }\n\n      return super.parseArrow(node);\n    }\n\n    shouldParseArrow(params: Array<N.Node>): boolean {\n      return this.match(tt.colon) || super.shouldParseArrow(params);\n    }\n\n    setArrowFunctionParameters(\n      node: N.ArrowFunctionExpression,\n      params: N.Expression[],\n    ): void {\n      if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n        node.params = params;\n      } else {\n        super.setArrowFunctionParameters(node, params);\n      }\n    }\n\n    checkParams(\n      node: N.Function,\n      allowDuplicates: boolean,\n      isArrowFunction: ?boolean,\n    ): void {\n      if (\n        isArrowFunction &&\n        this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1\n      ) {\n        return;\n      }\n\n      // ensure the `this` param is first, if it exists\n      for (let i = 0; i < node.params.length; i++) {\n        if (this.isThisParam(node.params[i]) && i > 0) {\n          this.raise(FlowErrors.ThisParamMustBeFirst, { at: node.params[i] });\n        }\n      }\n\n      return super.checkParams(...arguments);\n    }\n\n    parseParenAndDistinguishExpression(canBeArrow: boolean): N.Expression {\n      return super.parseParenAndDistinguishExpression(\n        canBeArrow && this.state.noArrowAt.indexOf(this.state.start) === -1,\n      );\n    }\n\n    parseSubscripts(\n      base: N.Expression,\n      startPos: number,\n      startLoc: Position,\n      noCalls?: ?boolean,\n    ): N.Expression {\n      if (\n        base.type === \"Identifier\" &&\n        base.name === \"async\" &&\n        this.state.noArrowAt.indexOf(startPos) !== -1\n      ) {\n        this.next();\n\n        const node = this.startNodeAt(startPos, startLoc);\n        node.callee = base;\n        node.arguments = this.parseCallExpressionArguments(tt.parenR, false);\n        base = this.finishNode(node, \"CallExpression\");\n      } else if (\n        base.type === \"Identifier\" &&\n        base.name === \"async\" &&\n        this.match(tt.lt)\n      ) {\n        const state = this.state.clone();\n        const arrow = this.tryParse(\n          abort =>\n            this.parseAsyncArrowWithTypeParameters(startPos, startLoc) ||\n            abort(),\n          state,\n        );\n\n        /*:: invariant(arrow.node != null) */\n        if (!arrow.error && !arrow.aborted) return arrow.node;\n\n        const result = this.tryParse(\n          () => super.parseSubscripts(base, startPos, startLoc, noCalls),\n          state,\n        );\n\n        if (result.node && !result.error) return result.node;\n\n        if (arrow.node) {\n          this.state = arrow.failState;\n          return arrow.node;\n        }\n\n        if (result.node) {\n          this.state = result.failState;\n          return result.node;\n        }\n\n        throw arrow.error || result.error;\n      }\n\n      return super.parseSubscripts(base, startPos, startLoc, noCalls);\n    }\n\n    parseSubscript(\n      base: N.Expression,\n      startPos: number,\n      startLoc: Position,\n      noCalls: ?boolean,\n      subscriptState: N.ParseSubscriptState,\n    ): N.Expression {\n      if (this.match(tt.questionDot) && this.isLookaheadToken_lt()) {\n        subscriptState.optionalChainMember = true;\n        if (noCalls) {\n          subscriptState.stop = true;\n          return base;\n        }\n        this.next();\n        const node: N.OptionalCallExpression = this.startNodeAt(\n          startPos,\n          startLoc,\n        );\n        node.callee = base;\n        node.typeArguments = this.flowParseTypeParameterInstantiation();\n        this.expect(tt.parenL);\n        // $FlowFixMe\n        node.arguments = this.parseCallExpressionArguments(tt.parenR, false);\n        node.optional = true;\n        return this.finishCallExpression(node, /* optional */ true);\n      } else if (!noCalls && this.shouldParseTypes() && this.match(tt.lt)) {\n        const node = this.startNodeAt(startPos, startLoc);\n        node.callee = base;\n\n        const result = this.tryParse(() => {\n          node.typeArguments =\n            this.flowParseTypeParameterInstantiationCallOrNew();\n          this.expect(tt.parenL);\n          node.arguments = this.parseCallExpressionArguments(tt.parenR, false);\n          if (subscriptState.optionalChainMember) node.optional = false;\n          return this.finishCallExpression(\n            node,\n            subscriptState.optionalChainMember,\n          );\n        });\n\n        if (result.node) {\n          if (result.error) this.state = result.failState;\n          return result.node;\n        }\n      }\n\n      return super.parseSubscript(\n        base,\n        startPos,\n        startLoc,\n        noCalls,\n        subscriptState,\n      );\n    }\n\n    parseNewCallee(node: N.NewExpression): void {\n      super.parseNewCallee(node);\n\n      let targs = null;\n      if (this.shouldParseTypes() && this.match(tt.lt)) {\n        targs = this.tryParse(() =>\n          this.flowParseTypeParameterInstantiationCallOrNew(),\n        ).node;\n      }\n      node.typeArguments = targs;\n    }\n\n    parseAsyncArrowWithTypeParameters(\n      startPos: number,\n      startLoc: Position,\n    ): ?N.ArrowFunctionExpression {\n      const node = this.startNodeAt(startPos, startLoc);\n      this.parseFunctionParams(node);\n      if (!this.parseArrow(node)) return;\n      return this.parseArrowExpression(\n        node,\n        /* params */ undefined,\n        /* isAsync */ true,\n      );\n    }\n\n    readToken_mult_modulo(code: number): void {\n      const next = this.input.charCodeAt(this.state.pos + 1);\n      if (\n        code === charCodes.asterisk &&\n        next === charCodes.slash &&\n        this.state.hasFlowComment\n      ) {\n        this.state.hasFlowComment = false;\n        this.state.pos += 2;\n        this.nextToken();\n        return;\n      }\n\n      super.readToken_mult_modulo(code);\n    }\n\n    readToken_pipe_amp(code: number): void {\n      const next = this.input.charCodeAt(this.state.pos + 1);\n      if (\n        code === charCodes.verticalBar &&\n        next === charCodes.rightCurlyBrace\n      ) {\n        // '|}'\n        this.finishOp(tt.braceBarR, 2);\n        return;\n      }\n\n      super.readToken_pipe_amp(code);\n    }\n\n    parseTopLevel(file: N.File, program: N.Program): N.File {\n      const fileNode = super.parseTopLevel(file, program);\n      if (this.state.hasFlowComment) {\n        this.raise(FlowErrors.UnterminatedFlowComment, {\n          at: this.state.curPosition(),\n        });\n      }\n      return fileNode;\n    }\n\n    skipBlockComment(): N.CommentBlock | void {\n      if (this.hasPlugin(\"flowComments\") && this.skipFlowComment()) {\n        if (this.state.hasFlowComment) {\n          throw this.raise(FlowErrors.NestedFlowComment, {\n            at: this.state.startLoc,\n          });\n        }\n        this.hasFlowCommentCompletion();\n        this.state.pos += this.skipFlowComment();\n        this.state.hasFlowComment = true;\n        return;\n      }\n\n      if (this.state.hasFlowComment) {\n        const end = this.input.indexOf(\"*-/\", this.state.pos + 2);\n        if (end === -1) {\n          throw this.raise(Errors.UnterminatedComment, {\n            at: this.state.curPosition(),\n          });\n        }\n        this.state.pos = end + 2 + 3;\n        return;\n      }\n\n      return super.skipBlockComment();\n    }\n\n    skipFlowComment(): number | boolean {\n      const { pos } = this.state;\n      let shiftToFirstNonWhiteSpace = 2;\n      while (\n        [charCodes.space, charCodes.tab].includes(\n          this.input.charCodeAt(pos + shiftToFirstNonWhiteSpace),\n        )\n      ) {\n        shiftToFirstNonWhiteSpace++;\n      }\n\n      const ch2 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos);\n      const ch3 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos + 1);\n\n      if (ch2 === charCodes.colon && ch3 === charCodes.colon) {\n        return shiftToFirstNonWhiteSpace + 2; // check for /*::\n      }\n      if (\n        this.input.slice(\n          shiftToFirstNonWhiteSpace + pos,\n          shiftToFirstNonWhiteSpace + pos + 12,\n        ) === \"flow-include\"\n      ) {\n        return shiftToFirstNonWhiteSpace + 12; // check for /*flow-include\n      }\n      if (ch2 === charCodes.colon && ch3 !== charCodes.colon) {\n        return shiftToFirstNonWhiteSpace; // check for /*:, advance up to :\n      }\n      return false;\n    }\n\n    hasFlowCommentCompletion(): void {\n      const end = this.input.indexOf(\"*/\", this.state.pos);\n      if (end === -1) {\n        throw this.raise(Errors.UnterminatedComment, {\n          at: this.state.curPosition(),\n        });\n      }\n    }\n\n    // Flow enum parsing\n\n    flowEnumErrorBooleanMemberNotInitialized(\n      loc: Position,\n      { enumName, memberName }: { enumName: string, memberName: string },\n    ): void {\n      this.raise(FlowErrors.EnumBooleanMemberNotInitialized, {\n        at: loc,\n        memberName,\n        enumName,\n      });\n    }\n\n    flowEnumErrorInvalidMemberInitializer(\n      loc: Position,\n      enumContext: EnumContext,\n    ) {\n      return this.raise(\n        !enumContext.explicitType\n          ? FlowErrors.EnumInvalidMemberInitializerUnknownType\n          : enumContext.explicitType === \"symbol\"\n          ? FlowErrors.EnumInvalidMemberInitializerSymbolType\n          : FlowErrors.EnumInvalidMemberInitializerPrimaryType,\n        {\n          at: loc,\n          ...enumContext,\n        },\n      );\n    }\n\n    flowEnumErrorNumberMemberNotInitialized(\n      loc: Position,\n      { enumName, memberName }: { enumName: string, memberName: string },\n    ): void {\n      this.raise(FlowErrors.EnumNumberMemberNotInitialized, {\n        at: loc,\n        enumName,\n        memberName,\n      });\n    }\n\n    flowEnumErrorStringMemberInconsistentlyInitailized(\n      node: N.Node,\n      { enumName }: { enumName: string },\n    ): void {\n      this.raise(FlowErrors.EnumStringMemberInconsistentlyInitailized, {\n        at: node,\n        enumName,\n      });\n    }\n\n    flowEnumMemberInit(): EnumMemberInit {\n      const startLoc = this.state.startLoc;\n      const endOfInit = () => this.match(tt.comma) || this.match(tt.braceR);\n      switch (this.state.type) {\n        case tt.num: {\n          const literal = this.parseNumericLiteral(this.state.value);\n          if (endOfInit()) {\n            return { type: \"number\", loc: literal.loc.start, value: literal };\n          }\n          return { type: \"invalid\", loc: startLoc };\n        }\n        case tt.string: {\n          const literal = this.parseStringLiteral(this.state.value);\n          if (endOfInit()) {\n            return { type: \"string\", loc: literal.loc.start, value: literal };\n          }\n          return { type: \"invalid\", loc: startLoc };\n        }\n        case tt._true:\n        case tt._false: {\n          const literal = this.parseBooleanLiteral(this.match(tt._true));\n          if (endOfInit()) {\n            return {\n              type: \"boolean\",\n              loc: literal.loc.start,\n              value: literal,\n            };\n          }\n          return { type: \"invalid\", loc: startLoc };\n        }\n        default:\n          return { type: \"invalid\", loc: startLoc };\n      }\n    }\n\n    flowEnumMemberRaw(): { id: N.Node, init: EnumMemberInit } {\n      const loc = this.state.startLoc;\n      const id = this.parseIdentifier(true);\n      const init = this.eat(tt.eq)\n        ? this.flowEnumMemberInit()\n        : { type: \"none\", loc };\n      return { id, init };\n    }\n\n    flowEnumCheckExplicitTypeMismatch(\n      loc: Position,\n      context: EnumContext,\n      expectedType: EnumExplicitType,\n    ): void {\n      const { explicitType } = context;\n      if (explicitType === null) {\n        return;\n      }\n      if (explicitType !== expectedType) {\n        this.flowEnumErrorInvalidMemberInitializer(loc, context);\n      }\n    }\n\n    flowEnumMembers({\n      enumName,\n      explicitType,\n    }: {\n      enumName: string,\n      explicitType: EnumExplicitType,\n    }): {|\n      members: {|\n        booleanMembers: Array<N.Node>,\n        numberMembers: Array<N.Node>,\n        stringMembers: Array<N.Node>,\n        defaultedMembers: Array<N.Node>,\n      |},\n      hasUnknownMembers: boolean,\n    |} {\n      const seenNames = new Set();\n      const members = {\n        booleanMembers: [],\n        numberMembers: [],\n        stringMembers: [],\n        defaultedMembers: [],\n      };\n      let hasUnknownMembers = false;\n      while (!this.match(tt.braceR)) {\n        if (this.eat(tt.ellipsis)) {\n          hasUnknownMembers = true;\n          break;\n        }\n        const memberNode = this.startNode();\n        const { id, init } = this.flowEnumMemberRaw();\n        const memberName = id.name;\n        if (memberName === \"\") {\n          continue;\n        }\n        if (/^[a-z]/.test(memberName)) {\n          this.raise(FlowErrors.EnumInvalidMemberName, {\n            at: id,\n            memberName,\n            suggestion: memberName[0].toUpperCase() + memberName.slice(1),\n            enumName,\n          });\n        }\n        if (seenNames.has(memberName)) {\n          this.raise(FlowErrors.EnumDuplicateMemberName, {\n            at: id,\n            memberName,\n            enumName,\n          });\n        }\n        seenNames.add(memberName);\n        const context = { enumName, explicitType, memberName };\n        memberNode.id = id;\n        switch (init.type) {\n          case \"boolean\": {\n            this.flowEnumCheckExplicitTypeMismatch(\n              init.loc,\n              context,\n              \"boolean\",\n            );\n            memberNode.init = init.value;\n            members.booleanMembers.push(\n              this.finishNode(memberNode, \"EnumBooleanMember\"),\n            );\n            break;\n          }\n          case \"number\": {\n            this.flowEnumCheckExplicitTypeMismatch(init.loc, context, \"number\");\n            memberNode.init = init.value;\n            members.numberMembers.push(\n              this.finishNode(memberNode, \"EnumNumberMember\"),\n            );\n            break;\n          }\n          case \"string\": {\n            this.flowEnumCheckExplicitTypeMismatch(init.loc, context, \"string\");\n            memberNode.init = init.value;\n            members.stringMembers.push(\n              this.finishNode(memberNode, \"EnumStringMember\"),\n            );\n            break;\n          }\n          case \"invalid\": {\n            throw this.flowEnumErrorInvalidMemberInitializer(init.loc, context);\n          }\n          case \"none\": {\n            switch (explicitType) {\n              case \"boolean\":\n                this.flowEnumErrorBooleanMemberNotInitialized(\n                  init.loc,\n                  context,\n                );\n                break;\n              case \"number\":\n                this.flowEnumErrorNumberMemberNotInitialized(init.loc, context);\n                break;\n              default:\n                members.defaultedMembers.push(\n                  this.finishNode(memberNode, \"EnumDefaultedMember\"),\n                );\n            }\n          }\n        }\n\n        if (!this.match(tt.braceR)) {\n          this.expect(tt.comma);\n        }\n      }\n      return { members, hasUnknownMembers };\n    }\n\n    flowEnumStringMembers(\n      initializedMembers: Array<N.Node>,\n      defaultedMembers: Array<N.Node>,\n      { enumName }: { enumName: string },\n    ): Array<N.Node> {\n      if (initializedMembers.length === 0) {\n        return defaultedMembers;\n      } else if (defaultedMembers.length === 0) {\n        return initializedMembers;\n      } else if (defaultedMembers.length > initializedMembers.length) {\n        for (const member of initializedMembers) {\n          this.flowEnumErrorStringMemberInconsistentlyInitailized(member, {\n            enumName,\n          });\n        }\n        return defaultedMembers;\n      } else {\n        for (const member of defaultedMembers) {\n          this.flowEnumErrorStringMemberInconsistentlyInitailized(member, {\n            enumName,\n          });\n        }\n        return initializedMembers;\n      }\n    }\n\n    flowEnumParseExplicitType({\n      enumName,\n    }: {\n      enumName: string,\n    }): EnumExplicitType {\n      if (!this.eatContextual(tt._of)) return null;\n\n      if (!tokenIsIdentifier(this.state.type)) {\n        throw this.raise(FlowErrors.EnumInvalidExplicitTypeUnknownSupplied, {\n          at: this.state.startLoc,\n          enumName,\n        });\n      }\n\n      const { value } = this.state;\n      this.next();\n\n      if (\n        value !== \"boolean\" &&\n        value !== \"number\" &&\n        value !== \"string\" &&\n        value !== \"symbol\"\n      ) {\n        this.raise(FlowErrors.EnumInvalidExplicitType, {\n          at: this.state.startLoc,\n          enumName,\n          invalidEnumType: value,\n        });\n      }\n\n      return value;\n    }\n\n    flowEnumBody(node: N.Node, id: N.Node): N.Node {\n      const enumName = id.name;\n      const nameLoc = id.loc.start;\n      const explicitType = this.flowEnumParseExplicitType({ enumName });\n      this.expect(tt.braceL);\n      const { members, hasUnknownMembers } = this.flowEnumMembers({\n        enumName,\n        explicitType,\n      });\n      node.hasUnknownMembers = hasUnknownMembers;\n\n      switch (explicitType) {\n        case \"boolean\":\n          node.explicitType = true;\n          node.members = members.booleanMembers;\n          this.expect(tt.braceR);\n          return this.finishNode(node, \"EnumBooleanBody\");\n        case \"number\":\n          node.explicitType = true;\n          node.members = members.numberMembers;\n          this.expect(tt.braceR);\n          return this.finishNode(node, \"EnumNumberBody\");\n        case \"string\":\n          node.explicitType = true;\n          node.members = this.flowEnumStringMembers(\n            members.stringMembers,\n            members.defaultedMembers,\n            { enumName },\n          );\n          this.expect(tt.braceR);\n          return this.finishNode(node, \"EnumStringBody\");\n        case \"symbol\":\n          node.members = members.defaultedMembers;\n          this.expect(tt.braceR);\n          return this.finishNode(node, \"EnumSymbolBody\");\n        default: {\n          // `explicitType` is `null`\n          const empty = () => {\n            node.members = [];\n            this.expect(tt.braceR);\n            return this.finishNode(node, \"EnumStringBody\");\n          };\n          node.explicitType = false;\n\n          const boolsLen = members.booleanMembers.length;\n          const numsLen = members.numberMembers.length;\n          const strsLen = members.stringMembers.length;\n          const defaultedLen = members.defaultedMembers.length;\n\n          if (!boolsLen && !numsLen && !strsLen && !defaultedLen) {\n            return empty();\n          } else if (!boolsLen && !numsLen) {\n            node.members = this.flowEnumStringMembers(\n              members.stringMembers,\n              members.defaultedMembers,\n              { enumName },\n            );\n            this.expect(tt.braceR);\n            return this.finishNode(node, \"EnumStringBody\");\n          } else if (!numsLen && !strsLen && boolsLen >= defaultedLen) {\n            for (const member of members.defaultedMembers) {\n              this.flowEnumErrorBooleanMemberNotInitialized(member.loc.start, {\n                enumName,\n                memberName: member.id.name,\n              });\n            }\n            node.members = members.booleanMembers;\n            this.expect(tt.braceR);\n            return this.finishNode(node, \"EnumBooleanBody\");\n          } else if (!boolsLen && !strsLen && numsLen >= defaultedLen) {\n            for (const member of members.defaultedMembers) {\n              this.flowEnumErrorNumberMemberNotInitialized(member.loc.start, {\n                enumName,\n                memberName: member.id.name,\n              });\n            }\n            node.members = members.numberMembers;\n            this.expect(tt.braceR);\n            return this.finishNode(node, \"EnumNumberBody\");\n          } else {\n            this.raise(FlowErrors.EnumInconsistentMemberValues, {\n              at: nameLoc,\n              enumName,\n            });\n            return empty();\n          }\n        }\n      }\n    }\n\n    flowParseEnumDeclaration(node: N.Node): N.Node {\n      const id = this.parseIdentifier();\n      node.id = id;\n      node.body = this.flowEnumBody(this.startNode(), id);\n      return this.finishNode(node, \"EnumDeclaration\");\n    }\n\n    // check if the next token is a tt.lt\n    isLookaheadToken_lt(): boolean {\n      const next = this.nextTokenStart();\n      if (this.input.charCodeAt(next) === charCodes.lessThan) {\n        const afterNext = this.input.charCodeAt(next + 1);\n        return (\n          afterNext !== charCodes.lessThan && afterNext !== charCodes.equalsTo\n        );\n      }\n      return false;\n    }\n\n    maybeUnwrapTypeCastExpression(node: N.Node) {\n      return node.type === \"TypeCastExpression\" ? node.expression : node;\n    }\n  };\n","// @flow\n\nconst entities: { [name: string]: string, __proto__: null } = {\n  __proto__: null,\n  quot: \"\\u0022\",\n  amp: \"&\",\n  apos: \"\\u0027\",\n  lt: \"<\",\n  gt: \">\",\n  nbsp: \"\\u00A0\",\n  iexcl: \"\\u00A1\",\n  cent: \"\\u00A2\",\n  pound: \"\\u00A3\",\n  curren: \"\\u00A4\",\n  yen: \"\\u00A5\",\n  brvbar: \"\\u00A6\",\n  sect: \"\\u00A7\",\n  uml: \"\\u00A8\",\n  copy: \"\\u00A9\",\n  ordf: \"\\u00AA\",\n  laquo: \"\\u00AB\",\n  not: \"\\u00AC\",\n  shy: \"\\u00AD\",\n  reg: \"\\u00AE\",\n  macr: \"\\u00AF\",\n  deg: \"\\u00B0\",\n  plusmn: \"\\u00B1\",\n  sup2: \"\\u00B2\",\n  sup3: \"\\u00B3\",\n  acute: \"\\u00B4\",\n  micro: \"\\u00B5\",\n  para: \"\\u00B6\",\n  middot: \"\\u00B7\",\n  cedil: \"\\u00B8\",\n  sup1: \"\\u00B9\",\n  ordm: \"\\u00BA\",\n  raquo: \"\\u00BB\",\n  frac14: \"\\u00BC\",\n  frac12: \"\\u00BD\",\n  frac34: \"\\u00BE\",\n  iquest: \"\\u00BF\",\n  Agrave: \"\\u00C0\",\n  Aacute: \"\\u00C1\",\n  Acirc: \"\\u00C2\",\n  Atilde: \"\\u00C3\",\n  Auml: \"\\u00C4\",\n  Aring: \"\\u00C5\",\n  AElig: \"\\u00C6\",\n  Ccedil: \"\\u00C7\",\n  Egrave: \"\\u00C8\",\n  Eacute: \"\\u00C9\",\n  Ecirc: \"\\u00CA\",\n  Euml: \"\\u00CB\",\n  Igrave: \"\\u00CC\",\n  Iacute: \"\\u00CD\",\n  Icirc: \"\\u00CE\",\n  Iuml: \"\\u00CF\",\n  ETH: \"\\u00D0\",\n  Ntilde: \"\\u00D1\",\n  Ograve: \"\\u00D2\",\n  Oacute: \"\\u00D3\",\n  Ocirc: \"\\u00D4\",\n  Otilde: \"\\u00D5\",\n  Ouml: \"\\u00D6\",\n  times: \"\\u00D7\",\n  Oslash: \"\\u00D8\",\n  Ugrave: \"\\u00D9\",\n  Uacute: \"\\u00DA\",\n  Ucirc: \"\\u00DB\",\n  Uuml: \"\\u00DC\",\n  Yacute: \"\\u00DD\",\n  THORN: \"\\u00DE\",\n  szlig: \"\\u00DF\",\n  agrave: \"\\u00E0\",\n  aacute: \"\\u00E1\",\n  acirc: \"\\u00E2\",\n  atilde: \"\\u00E3\",\n  auml: \"\\u00E4\",\n  aring: \"\\u00E5\",\n  aelig: \"\\u00E6\",\n  ccedil: \"\\u00E7\",\n  egrave: \"\\u00E8\",\n  eacute: \"\\u00E9\",\n  ecirc: \"\\u00EA\",\n  euml: \"\\u00EB\",\n  igrave: \"\\u00EC\",\n  iacute: \"\\u00ED\",\n  icirc: \"\\u00EE\",\n  iuml: \"\\u00EF\",\n  eth: \"\\u00F0\",\n  ntilde: \"\\u00F1\",\n  ograve: \"\\u00F2\",\n  oacute: \"\\u00F3\",\n  ocirc: \"\\u00F4\",\n  otilde: \"\\u00F5\",\n  ouml: \"\\u00F6\",\n  divide: \"\\u00F7\",\n  oslash: \"\\u00F8\",\n  ugrave: \"\\u00F9\",\n  uacute: \"\\u00FA\",\n  ucirc: \"\\u00FB\",\n  uuml: \"\\u00FC\",\n  yacute: \"\\u00FD\",\n  thorn: \"\\u00FE\",\n  yuml: \"\\u00FF\",\n  OElig: \"\\u0152\",\n  oelig: \"\\u0153\",\n  Scaron: \"\\u0160\",\n  scaron: \"\\u0161\",\n  Yuml: \"\\u0178\",\n  fnof: \"\\u0192\",\n  circ: \"\\u02C6\",\n  tilde: \"\\u02DC\",\n  Alpha: \"\\u0391\",\n  Beta: \"\\u0392\",\n  Gamma: \"\\u0393\",\n  Delta: \"\\u0394\",\n  Epsilon: \"\\u0395\",\n  Zeta: \"\\u0396\",\n  Eta: \"\\u0397\",\n  Theta: \"\\u0398\",\n  Iota: \"\\u0399\",\n  Kappa: \"\\u039A\",\n  Lambda: \"\\u039B\",\n  Mu: \"\\u039C\",\n  Nu: \"\\u039D\",\n  Xi: \"\\u039E\",\n  Omicron: \"\\u039F\",\n  Pi: \"\\u03A0\",\n  Rho: \"\\u03A1\",\n  Sigma: \"\\u03A3\",\n  Tau: \"\\u03A4\",\n  Upsilon: \"\\u03A5\",\n  Phi: \"\\u03A6\",\n  Chi: \"\\u03A7\",\n  Psi: \"\\u03A8\",\n  Omega: \"\\u03A9\",\n  alpha: \"\\u03B1\",\n  beta: \"\\u03B2\",\n  gamma: \"\\u03B3\",\n  delta: \"\\u03B4\",\n  epsilon: \"\\u03B5\",\n  zeta: \"\\u03B6\",\n  eta: \"\\u03B7\",\n  theta: \"\\u03B8\",\n  iota: \"\\u03B9\",\n  kappa: \"\\u03BA\",\n  lambda: \"\\u03BB\",\n  mu: \"\\u03BC\",\n  nu: \"\\u03BD\",\n  xi: \"\\u03BE\",\n  omicron: \"\\u03BF\",\n  pi: \"\\u03C0\",\n  rho: \"\\u03C1\",\n  sigmaf: \"\\u03C2\",\n  sigma: \"\\u03C3\",\n  tau: \"\\u03C4\",\n  upsilon: \"\\u03C5\",\n  phi: \"\\u03C6\",\n  chi: \"\\u03C7\",\n  psi: \"\\u03C8\",\n  omega: \"\\u03C9\",\n  thetasym: \"\\u03D1\",\n  upsih: \"\\u03D2\",\n  piv: \"\\u03D6\",\n  ensp: \"\\u2002\",\n  emsp: \"\\u2003\",\n  thinsp: \"\\u2009\",\n  zwnj: \"\\u200C\",\n  zwj: \"\\u200D\",\n  lrm: \"\\u200E\",\n  rlm: \"\\u200F\",\n  ndash: \"\\u2013\",\n  mdash: \"\\u2014\",\n  lsquo: \"\\u2018\",\n  rsquo: \"\\u2019\",\n  sbquo: \"\\u201A\",\n  ldquo: \"\\u201C\",\n  rdquo: \"\\u201D\",\n  bdquo: \"\\u201E\",\n  dagger: \"\\u2020\",\n  Dagger: \"\\u2021\",\n  bull: \"\\u2022\",\n  hellip: \"\\u2026\",\n  permil: \"\\u2030\",\n  prime: \"\\u2032\",\n  Prime: \"\\u2033\",\n  lsaquo: \"\\u2039\",\n  rsaquo: \"\\u203A\",\n  oline: \"\\u203E\",\n  frasl: \"\\u2044\",\n  euro: \"\\u20AC\",\n  image: \"\\u2111\",\n  weierp: \"\\u2118\",\n  real: \"\\u211C\",\n  trade: \"\\u2122\",\n  alefsym: \"\\u2135\",\n  larr: \"\\u2190\",\n  uarr: \"\\u2191\",\n  rarr: \"\\u2192\",\n  darr: \"\\u2193\",\n  harr: \"\\u2194\",\n  crarr: \"\\u21B5\",\n  lArr: \"\\u21D0\",\n  uArr: \"\\u21D1\",\n  rArr: \"\\u21D2\",\n  dArr: \"\\u21D3\",\n  hArr: \"\\u21D4\",\n  forall: \"\\u2200\",\n  part: \"\\u2202\",\n  exist: \"\\u2203\",\n  empty: \"\\u2205\",\n  nabla: \"\\u2207\",\n  isin: \"\\u2208\",\n  notin: \"\\u2209\",\n  ni: \"\\u220B\",\n  prod: \"\\u220F\",\n  sum: \"\\u2211\",\n  minus: \"\\u2212\",\n  lowast: \"\\u2217\",\n  radic: \"\\u221A\",\n  prop: \"\\u221D\",\n  infin: \"\\u221E\",\n  ang: \"\\u2220\",\n  and: \"\\u2227\",\n  or: \"\\u2228\",\n  cap: \"\\u2229\",\n  cup: \"\\u222A\",\n  int: \"\\u222B\",\n  there4: \"\\u2234\",\n  sim: \"\\u223C\",\n  cong: \"\\u2245\",\n  asymp: \"\\u2248\",\n  ne: \"\\u2260\",\n  equiv: \"\\u2261\",\n  le: \"\\u2264\",\n  ge: \"\\u2265\",\n  sub: \"\\u2282\",\n  sup: \"\\u2283\",\n  nsub: \"\\u2284\",\n  sube: \"\\u2286\",\n  supe: \"\\u2287\",\n  oplus: \"\\u2295\",\n  otimes: \"\\u2297\",\n  perp: \"\\u22A5\",\n  sdot: \"\\u22C5\",\n  lceil: \"\\u2308\",\n  rceil: \"\\u2309\",\n  lfloor: \"\\u230A\",\n  rfloor: \"\\u230B\",\n  lang: \"\\u2329\",\n  rang: \"\\u232A\",\n  loz: \"\\u25CA\",\n  spades: \"\\u2660\",\n  clubs: \"\\u2663\",\n  hearts: \"\\u2665\",\n  diams: \"\\u2666\",\n};\nexport default entities;\n","// @flow\n\nimport * as charCodes from \"charcodes\";\n\nimport XHTMLEntities from \"./xhtml\";\nimport type Parser from \"../../parser\";\nimport type { ExpressionErrors } from \"../../parser/util\";\nimport {\n  tokenComesBeforeExpression,\n  tokenIsKeyword,\n  tokenLabelName,\n  type TokenType,\n  tt,\n} from \"../../tokenizer/types\";\nimport { TokContext, types as tc } from \"../../tokenizer/context\";\nimport * as N from \"../../types\";\nimport { isIdentifierChar, isIdentifierStart } from \"../../util/identifier\";\nimport type { Position } from \"../../util/location\";\nimport { isNewLine } from \"../../util/whitespace\";\nimport { Errors, ParseErrorEnum } from \"../../parse-error\";\n\n/* eslint sort-keys: \"error\" */\nconst JsxErrors = ParseErrorEnum`jsx`(_ => ({\n  AttributeIsEmpty: _(\n    \"JSX attributes must only be assigned a non-empty expression.\",\n  ),\n  MissingClosingTagElement: _<{| openingTagName: string |}>(\n    ({ openingTagName }) =>\n      `Expected corresponding JSX closing tag for <${openingTagName}>.`,\n  ),\n  MissingClosingTagFragment: _(\n    \"Expected corresponding JSX closing tag for <>.\",\n  ),\n  UnexpectedSequenceExpression: _(\n    \"Sequence expressions cannot be directly nested inside JSX. Did you mean to wrap it in parentheses (...)?\",\n  ),\n  // FIXME: Unify with Errors.UnexpectedToken\n  UnexpectedToken: _<{| unexpected: string, HTMLEntity: string |}>(\n    ({ unexpected, HTMLEntity }) =>\n      `Unexpected token \\`${unexpected}\\`. Did you mean \\`${HTMLEntity}\\` or \\`{'${unexpected}'}\\`?`,\n  ),\n  UnsupportedJsxValue: _(\n    \"JSX value should be either an expression or a quoted JSX text.\",\n  ),\n  UnterminatedJsxContent: _(\"Unterminated JSX contents.\"),\n  UnwrappedAdjacentJSXElements: _(\n    \"Adjacent JSX elements must be wrapped in an enclosing tag. Did you want a JSX fragment <>...</>?\",\n  ),\n}));\n\n/* eslint-disable sort-keys */\n\nfunction isFragment(object: ?N.JSXElement): boolean {\n  return object\n    ? object.type === \"JSXOpeningFragment\" ||\n        object.type === \"JSXClosingFragment\"\n    : false;\n}\n\n// Transforms JSX element name to string.\n\nfunction getQualifiedJSXName(\n  object: N.JSXIdentifier | N.JSXNamespacedName | N.JSXMemberExpression,\n): string {\n  if (object.type === \"JSXIdentifier\") {\n    return object.name;\n  }\n\n  if (object.type === \"JSXNamespacedName\") {\n    return object.namespace.name + \":\" + object.name.name;\n  }\n\n  if (object.type === \"JSXMemberExpression\") {\n    return (\n      getQualifiedJSXName(object.object) +\n      \".\" +\n      getQualifiedJSXName(object.property)\n    );\n  }\n\n  // istanbul ignore next\n  throw new Error(\"Node had unexpected type: \" + object.type);\n}\n\nexport default (superClass: Class<Parser>): Class<Parser> =>\n  class extends superClass {\n    // Reads inline JSX contents token.\n\n    jsxReadToken(): void {\n      let out = \"\";\n      let chunkStart = this.state.pos;\n      for (;;) {\n        if (this.state.pos >= this.length) {\n          throw this.raise(JsxErrors.UnterminatedJsxContent, {\n            at: this.state.startLoc,\n          });\n        }\n\n        const ch = this.input.charCodeAt(this.state.pos);\n\n        switch (ch) {\n          case charCodes.lessThan:\n          case charCodes.leftCurlyBrace:\n            if (this.state.pos === this.state.start) {\n              if (ch === charCodes.lessThan && this.state.canStartJSXElement) {\n                ++this.state.pos;\n                return this.finishToken(tt.jsxTagStart);\n              }\n              return super.getTokenFromCode(ch);\n            }\n            out += this.input.slice(chunkStart, this.state.pos);\n            return this.finishToken(tt.jsxText, out);\n\n          case charCodes.ampersand:\n            out += this.input.slice(chunkStart, this.state.pos);\n            out += this.jsxReadEntity();\n            chunkStart = this.state.pos;\n            break;\n\n          case charCodes.greaterThan:\n          case charCodes.rightCurlyBrace:\n            if (process.env.BABEL_8_BREAKING) {\n              this.raise(JsxErrors.UnexpectedToken, {\n                at: this.state.curPosition(),\n                unexpected: this.input[this.state.pos],\n                HTMLEntity:\n                  ch === charCodes.rightCurlyBrace ? \"&rbrace;\" : \"&gt;\",\n              });\n            }\n          /* falls through */\n\n          default:\n            if (isNewLine(ch)) {\n              out += this.input.slice(chunkStart, this.state.pos);\n              out += this.jsxReadNewLine(true);\n              chunkStart = this.state.pos;\n            } else {\n              ++this.state.pos;\n            }\n        }\n      }\n    }\n\n    jsxReadNewLine(normalizeCRLF: boolean): string {\n      const ch = this.input.charCodeAt(this.state.pos);\n      let out;\n      ++this.state.pos;\n      if (\n        ch === charCodes.carriageReturn &&\n        this.input.charCodeAt(this.state.pos) === charCodes.lineFeed\n      ) {\n        ++this.state.pos;\n        out = normalizeCRLF ? \"\\n\" : \"\\r\\n\";\n      } else {\n        out = String.fromCharCode(ch);\n      }\n      ++this.state.curLine;\n      this.state.lineStart = this.state.pos;\n\n      return out;\n    }\n\n    jsxReadString(quote: number): void {\n      let out = \"\";\n      let chunkStart = ++this.state.pos;\n      for (;;) {\n        if (this.state.pos >= this.length) {\n          throw this.raise(Errors.UnterminatedString, {\n            at: this.state.startLoc,\n          });\n        }\n\n        const ch = this.input.charCodeAt(this.state.pos);\n        if (ch === quote) break;\n        if (ch === charCodes.ampersand) {\n          out += this.input.slice(chunkStart, this.state.pos);\n          out += this.jsxReadEntity();\n          chunkStart = this.state.pos;\n        } else if (isNewLine(ch)) {\n          out += this.input.slice(chunkStart, this.state.pos);\n          out += this.jsxReadNewLine(false);\n          chunkStart = this.state.pos;\n        } else {\n          ++this.state.pos;\n        }\n      }\n      out += this.input.slice(chunkStart, this.state.pos++);\n      return this.finishToken(tt.string, out);\n    }\n\n    jsxReadEntity(): string {\n      const startPos = ++this.state.pos;\n      if (this.codePointAtPos(this.state.pos) === charCodes.numberSign) {\n        ++this.state.pos;\n\n        let radix = 10;\n        if (this.codePointAtPos(this.state.pos) === charCodes.lowercaseX) {\n          radix = 16;\n          ++this.state.pos;\n        }\n\n        const codePoint = this.readInt(\n          radix,\n          /* len */ undefined,\n          /* forceLen */ false,\n          /* allowNumSeparator */ \"bail\",\n        );\n        if (\n          codePoint !== null &&\n          this.codePointAtPos(this.state.pos) === charCodes.semicolon\n        ) {\n          ++this.state.pos;\n          return String.fromCodePoint(codePoint);\n        }\n      } else {\n        let count = 0;\n        let semi = false;\n        while (\n          count++ < 10 &&\n          this.state.pos < this.length &&\n          !(semi = this.codePointAtPos(this.state.pos) == charCodes.semicolon)\n        ) {\n          ++this.state.pos;\n        }\n\n        if (semi) {\n          const desc = this.input.slice(startPos, this.state.pos);\n          const entity = XHTMLEntities[desc];\n          ++this.state.pos;\n\n          if (entity) {\n            return entity;\n          }\n        }\n      }\n\n      // Not a valid entity\n      this.state.pos = startPos;\n      return \"&\";\n    }\n\n    // Read a JSX identifier (valid tag or attribute name).\n    //\n    // Optimized version since JSX identifiers can\"t contain\n    // escape characters and so can be read as single slice.\n    // Also assumes that first character was already checked\n    // by isIdentifierStart in readToken.\n\n    jsxReadWord(): void {\n      let ch;\n      const start = this.state.pos;\n      do {\n        ch = this.input.charCodeAt(++this.state.pos);\n      } while (isIdentifierChar(ch) || ch === charCodes.dash);\n      return this.finishToken(\n        tt.jsxName,\n        this.input.slice(start, this.state.pos),\n      );\n    }\n\n    // Parse next token as JSX identifier\n\n    jsxParseIdentifier(): N.JSXIdentifier {\n      const node = this.startNode();\n      if (this.match(tt.jsxName)) {\n        node.name = this.state.value;\n      } else if (tokenIsKeyword(this.state.type)) {\n        node.name = tokenLabelName(this.state.type);\n      } else {\n        this.unexpected();\n      }\n      this.next();\n      return this.finishNode(node, \"JSXIdentifier\");\n    }\n\n    // Parse namespaced identifier.\n\n    jsxParseNamespacedName(): N.JSXNamespacedName {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      const name = this.jsxParseIdentifier();\n      if (!this.eat(tt.colon)) return name;\n\n      const node = this.startNodeAt(startPos, startLoc);\n      node.namespace = name;\n      node.name = this.jsxParseIdentifier();\n      return this.finishNode(node, \"JSXNamespacedName\");\n    }\n\n    // Parses element name in any form - namespaced, member\n    // or single identifier.\n\n    jsxParseElementName():\n      | N.JSXIdentifier\n      | N.JSXNamespacedName\n      | N.JSXMemberExpression {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      let node = this.jsxParseNamespacedName();\n      if (node.type === \"JSXNamespacedName\") {\n        return node;\n      }\n      while (this.eat(tt.dot)) {\n        const newNode = this.startNodeAt(startPos, startLoc);\n        newNode.object = node;\n        newNode.property = this.jsxParseIdentifier();\n        node = this.finishNode(newNode, \"JSXMemberExpression\");\n      }\n      return node;\n    }\n\n    // Parses any type of JSX attribute value.\n\n    jsxParseAttributeValue(): N.Expression {\n      let node;\n      switch (this.state.type) {\n        case tt.braceL:\n          node = this.startNode();\n          this.setContext(tc.brace);\n          this.next();\n          node = this.jsxParseExpressionContainer(node, tc.j_oTag);\n          if (node.expression.type === \"JSXEmptyExpression\") {\n            this.raise(JsxErrors.AttributeIsEmpty, { at: node });\n          }\n          return node;\n\n        case tt.jsxTagStart:\n        case tt.string:\n          return this.parseExprAtom();\n\n        default:\n          throw this.raise(JsxErrors.UnsupportedJsxValue, {\n            at: this.state.startLoc,\n          });\n      }\n    }\n\n    // JSXEmptyExpression is unique type since it doesn't actually parse anything,\n    // and so it should start at the end of last read token (left brace) and finish\n    // at the beginning of the next one (right brace).\n\n    jsxParseEmptyExpression(): N.JSXEmptyExpression {\n      const node = this.startNodeAt(\n        this.state.lastTokEndLoc.index,\n        this.state.lastTokEndLoc,\n      );\n      return this.finishNodeAt(node, \"JSXEmptyExpression\", this.state.startLoc);\n    }\n\n    // Parse JSX spread child\n\n    jsxParseSpreadChild(node: N.JSXSpreadChild): N.JSXSpreadChild {\n      this.next(); // ellipsis\n      node.expression = this.parseExpression();\n      this.setContext(tc.j_oTag);\n      this.state.canStartJSXElement = true;\n      this.expect(tt.braceR);\n\n      return this.finishNode(node, \"JSXSpreadChild\");\n    }\n\n    // Parses JSX expression enclosed into curly brackets.\n\n    jsxParseExpressionContainer(\n      node: N.JSXExpressionContainer,\n      previousContext: TokContext,\n    ): N.JSXExpressionContainer {\n      if (this.match(tt.braceR)) {\n        node.expression = this.jsxParseEmptyExpression();\n      } else {\n        const expression = this.parseExpression();\n\n        if (process.env.BABEL_8_BREAKING) {\n          if (\n            expression.type === \"SequenceExpression\" &&\n            !expression.extra?.parenthesized\n          ) {\n            this.raise(JsxErrors.UnexpectedSequenceExpression, {\n              at: expression.expressions[1],\n            });\n          }\n        }\n\n        node.expression = expression;\n      }\n      this.setContext(previousContext);\n      this.state.canStartJSXElement = true;\n      this.expect(tt.braceR);\n\n      return this.finishNode(node, \"JSXExpressionContainer\");\n    }\n\n    // Parses following JSX attribute name-value pair.\n\n    jsxParseAttribute(): N.JSXAttribute {\n      const node = this.startNode();\n      if (this.match(tt.braceL)) {\n        this.setContext(tc.brace);\n        this.next();\n        this.expect(tt.ellipsis);\n        node.argument = this.parseMaybeAssignAllowIn();\n        this.setContext(tc.j_oTag);\n        this.state.canStartJSXElement = true;\n        this.expect(tt.braceR);\n        return this.finishNode(node, \"JSXSpreadAttribute\");\n      }\n      node.name = this.jsxParseNamespacedName();\n      node.value = this.eat(tt.eq) ? this.jsxParseAttributeValue() : null;\n      return this.finishNode(node, \"JSXAttribute\");\n    }\n\n    // Parses JSX opening tag starting after \"<\".\n\n    jsxParseOpeningElementAt(\n      startPos: number,\n      startLoc: Position,\n    ): N.JSXOpeningElement {\n      const node = this.startNodeAt(startPos, startLoc);\n      if (this.eat(tt.jsxTagEnd)) {\n        return this.finishNode(node, \"JSXOpeningFragment\");\n      }\n      node.name = this.jsxParseElementName();\n      return this.jsxParseOpeningElementAfterName(node);\n    }\n\n    jsxParseOpeningElementAfterName(\n      node: N.JSXOpeningElement,\n    ): N.JSXOpeningElement {\n      const attributes: N.JSXAttribute[] = [];\n      while (!this.match(tt.slash) && !this.match(tt.jsxTagEnd)) {\n        attributes.push(this.jsxParseAttribute());\n      }\n      node.attributes = attributes;\n      node.selfClosing = this.eat(tt.slash);\n      this.expect(tt.jsxTagEnd);\n      return this.finishNode(node, \"JSXOpeningElement\");\n    }\n\n    // Parses JSX closing tag starting after \"</\".\n\n    jsxParseClosingElementAt(\n      startPos: number,\n      startLoc: Position,\n    ): N.JSXClosingElement {\n      const node = this.startNodeAt(startPos, startLoc);\n      if (this.eat(tt.jsxTagEnd)) {\n        return this.finishNode(node, \"JSXClosingFragment\");\n      }\n      node.name = this.jsxParseElementName();\n      this.expect(tt.jsxTagEnd);\n      return this.finishNode(node, \"JSXClosingElement\");\n    }\n\n    // Parses entire JSX element, including it\"s opening tag\n    // (starting after \"<\"), attributes, contents and closing tag.\n\n    jsxParseElementAt(startPos: number, startLoc: Position): N.JSXElement {\n      const node = this.startNodeAt(startPos, startLoc);\n      const children = [];\n      const openingElement = this.jsxParseOpeningElementAt(startPos, startLoc);\n      let closingElement = null;\n\n      if (!openingElement.selfClosing) {\n        contents: for (;;) {\n          switch (this.state.type) {\n            case tt.jsxTagStart:\n              startPos = this.state.start;\n              startLoc = this.state.startLoc;\n              this.next();\n              if (this.eat(tt.slash)) {\n                closingElement = this.jsxParseClosingElementAt(\n                  startPos,\n                  startLoc,\n                );\n                break contents;\n              }\n              children.push(this.jsxParseElementAt(startPos, startLoc));\n              break;\n\n            case tt.jsxText:\n              children.push(this.parseExprAtom());\n              break;\n\n            case tt.braceL: {\n              const node = this.startNode();\n              this.setContext(tc.brace);\n              this.next();\n              if (this.match(tt.ellipsis)) {\n                children.push(this.jsxParseSpreadChild(node));\n              } else {\n                children.push(\n                  this.jsxParseExpressionContainer(node, tc.j_expr),\n                );\n              }\n\n              break;\n            }\n            // istanbul ignore next - should never happen\n            default:\n              throw this.unexpected();\n          }\n        }\n\n        if (\n          isFragment(openingElement) &&\n          !isFragment(closingElement) &&\n          closingElement !== null\n        ) {\n          this.raise(JsxErrors.MissingClosingTagFragment, {\n            at: closingElement,\n          });\n        } else if (!isFragment(openingElement) && isFragment(closingElement)) {\n          this.raise(JsxErrors.MissingClosingTagElement, {\n            // $FlowIgnore\n            at: closingElement,\n            openingTagName: getQualifiedJSXName(openingElement.name),\n          });\n        } else if (!isFragment(openingElement) && !isFragment(closingElement)) {\n          if (\n            // $FlowIgnore\n            getQualifiedJSXName(closingElement.name) !==\n            getQualifiedJSXName(openingElement.name)\n          ) {\n            this.raise(JsxErrors.MissingClosingTagElement, {\n              // $FlowIgnore\n              at: closingElement,\n              openingTagName: getQualifiedJSXName(openingElement.name),\n            });\n          }\n        }\n      }\n\n      if (isFragment(openingElement)) {\n        node.openingFragment = openingElement;\n        node.closingFragment = closingElement;\n      } else {\n        node.openingElement = openingElement;\n        node.closingElement = closingElement;\n      }\n      node.children = children;\n      if (this.match(tt.lt)) {\n        throw this.raise(JsxErrors.UnwrappedAdjacentJSXElements, {\n          at: this.state.startLoc,\n        });\n      }\n\n      return isFragment(openingElement)\n        ? this.finishNode(node, \"JSXFragment\")\n        : this.finishNode(node, \"JSXElement\");\n    }\n\n    // Parses entire JSX element from current position.\n\n    jsxParseElement(): N.JSXElement {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      this.next();\n      return this.jsxParseElementAt(startPos, startLoc);\n    }\n\n    setContext(newContext: TokContext) {\n      const { context } = this.state;\n      context[context.length - 1] = newContext;\n    }\n\n    // ==================================\n    // Overrides\n    // ==================================\n\n    parseExprAtom(refExpressionErrors: ?ExpressionErrors): N.Expression {\n      if (this.match(tt.jsxText)) {\n        return this.parseLiteral(this.state.value, \"JSXText\");\n      } else if (this.match(tt.jsxTagStart)) {\n        return this.jsxParseElement();\n      } else if (\n        this.match(tt.lt) &&\n        this.input.charCodeAt(this.state.pos) !== charCodes.exclamationMark\n      ) {\n        // In case we encounter an lt token here it will always be the start of\n        // jsx as the lt sign is not allowed in places that expect an expression\n        this.replaceToken(tt.jsxTagStart);\n        return this.jsxParseElement();\n      } else {\n        return super.parseExprAtom(refExpressionErrors);\n      }\n    }\n\n    skipSpace() {\n      const curContext = this.curContext();\n      if (!curContext.preserveSpace) super.skipSpace();\n    }\n\n    getTokenFromCode(code: number): void {\n      const context = this.curContext();\n\n      if (context === tc.j_expr) {\n        return this.jsxReadToken();\n      }\n\n      if (context === tc.j_oTag || context === tc.j_cTag) {\n        if (isIdentifierStart(code)) {\n          return this.jsxReadWord();\n        }\n\n        if (code === charCodes.greaterThan) {\n          ++this.state.pos;\n          return this.finishToken(tt.jsxTagEnd);\n        }\n\n        if (\n          (code === charCodes.quotationMark || code === charCodes.apostrophe) &&\n          context === tc.j_oTag\n        ) {\n          return this.jsxReadString(code);\n        }\n      }\n\n      if (\n        code === charCodes.lessThan &&\n        this.state.canStartJSXElement &&\n        this.input.charCodeAt(this.state.pos + 1) !== charCodes.exclamationMark\n      ) {\n        ++this.state.pos;\n        return this.finishToken(tt.jsxTagStart);\n      }\n\n      return super.getTokenFromCode(code);\n    }\n\n    updateContext(prevType: TokenType): void {\n      const { context, type } = this.state;\n      if (type === tt.slash && prevType === tt.jsxTagStart) {\n        // do not consider JSX expr -> JSX open tag -> ... anymore\n        // reconsider as closing tag context\n        context.splice(-2, 2, tc.j_cTag);\n        this.state.canStartJSXElement = false;\n      } else if (type === tt.jsxTagStart) {\n        // start opening tag context\n        context.push(tc.j_oTag);\n      } else if (type === tt.jsxTagEnd) {\n        const out = context[context.length - 1];\n        if ((out === tc.j_oTag && prevType === tt.slash) || out === tc.j_cTag) {\n          context.pop();\n          this.state.canStartJSXElement =\n            context[context.length - 1] === tc.j_expr;\n        } else {\n          this.setContext(tc.j_expr);\n          this.state.canStartJSXElement = true;\n        }\n      } else {\n        this.state.canStartJSXElement = tokenComesBeforeExpression(type);\n      }\n    }\n  };\n","// @flow\n\nimport { Position } from \"../../util/location\";\nimport ScopeHandler, { Scope } from \"../../util/scope\";\nimport {\n  BIND_KIND_TYPE,\n  BIND_FLAGS_TS_ENUM,\n  BIND_FLAGS_TS_CONST_ENUM,\n  BIND_FLAGS_TS_EXPORT_ONLY,\n  BIND_KIND_VALUE,\n  BIND_FLAGS_CLASS,\n  type ScopeFlags,\n  type BindingTypes,\n} from \"../../util/scopeflags\";\nimport * as N from \"../../types\";\n\nclass TypeScriptScope extends Scope {\n  types: Set<string> = new Set();\n\n  // enums (which are also in .types)\n  enums: Set<string> = new Set();\n\n  // const enums (which are also in .enums and .types)\n  constEnums: Set<string> = new Set();\n\n  // classes (which are also in .lexical) and interface (which are also in .types)\n  classes: Set<string> = new Set();\n\n  // namespaces and ambient functions (or classes) are too difficult to track,\n  // especially without type analysis.\n  // We need to track them anyway, to avoid \"X is not defined\" errors\n  // when exporting them.\n  exportOnlyBindings: Set<string> = new Set();\n}\n\n// See https://github.com/babel/babel/pull/9766#discussion_r268920730 for an\n// explanation of how typescript handles scope.\n\nexport default class TypeScriptScopeHandler extends ScopeHandler<TypeScriptScope> {\n  createScope(flags: ScopeFlags): TypeScriptScope {\n    return new TypeScriptScope(flags);\n  }\n\n  declareName(name: string, bindingType: BindingTypes, loc: Position) {\n    const scope = this.currentScope();\n    if (bindingType & BIND_FLAGS_TS_EXPORT_ONLY) {\n      this.maybeExportDefined(scope, name);\n      scope.exportOnlyBindings.add(name);\n      return;\n    }\n\n    super.declareName(...arguments);\n\n    if (bindingType & BIND_KIND_TYPE) {\n      if (!(bindingType & BIND_KIND_VALUE)) {\n        // \"Value\" bindings have already been registered by the superclass.\n        this.checkRedeclarationInScope(scope, name, bindingType, loc);\n        this.maybeExportDefined(scope, name);\n      }\n      scope.types.add(name);\n    }\n    if (bindingType & BIND_FLAGS_TS_ENUM) scope.enums.add(name);\n    if (bindingType & BIND_FLAGS_TS_CONST_ENUM) scope.constEnums.add(name);\n    if (bindingType & BIND_FLAGS_CLASS) scope.classes.add(name);\n  }\n\n  isRedeclaredInScope(\n    scope: TypeScriptScope,\n    name: string,\n    bindingType: BindingTypes,\n  ): boolean {\n    if (scope.enums.has(name)) {\n      if (bindingType & BIND_FLAGS_TS_ENUM) {\n        // Enums can be merged with other enums if they are both\n        //  const or both non-const.\n        const isConst = !!(bindingType & BIND_FLAGS_TS_CONST_ENUM);\n        const wasConst = scope.constEnums.has(name);\n        return isConst !== wasConst;\n      }\n      return true;\n    }\n    if (bindingType & BIND_FLAGS_CLASS && scope.classes.has(name)) {\n      if (scope.lexical.has(name)) {\n        // Classes can be merged with interfaces\n        return !!(bindingType & BIND_KIND_VALUE);\n      } else {\n        // Interface can be merged with other classes or interfaces\n        return false;\n      }\n    }\n    if (bindingType & BIND_KIND_TYPE && scope.types.has(name)) {\n      return true;\n    }\n\n    return super.isRedeclaredInScope(...arguments);\n  }\n\n  checkLocalExport(id: N.Identifier) {\n    const topLevelScope = this.scopeStack[0];\n    const { name } = id;\n    if (\n      !topLevelScope.types.has(name) &&\n      !topLevelScope.exportOnlyBindings.has(name)\n    ) {\n      super.checkLocalExport(id);\n    }\n  }\n}\n","// @flow\n\n/*:: declare var invariant; */\n\nimport type State from \"../../tokenizer/state\";\nimport {\n  tokenIsIdentifier,\n  tokenIsTSDeclarationStart,\n  tokenIsTSTypeOperator,\n  tokenOperatorPrecedence,\n  tokenIsKeywordOrIdentifier,\n  tt,\n  type TokenType,\n  tokenIsTemplate,\n  tokenCanStartExpression,\n} from \"../../tokenizer/types\";\nimport { types as tc } from \"../../tokenizer/context\";\nimport * as N from \"../../types\";\nimport { Position, createPositionWithColumnOffset } from \"../../util/location\";\nimport type Parser from \"../../parser\";\nimport {\n  type BindingTypes,\n  SCOPE_TS_MODULE,\n  SCOPE_OTHER,\n  BIND_TS_ENUM,\n  BIND_TS_CONST_ENUM,\n  BIND_TS_TYPE,\n  BIND_TS_INTERFACE,\n  BIND_TS_AMBIENT,\n  BIND_TS_NAMESPACE,\n  BIND_CLASS,\n  BIND_LEXICAL,\n  BIND_NONE,\n} from \"../../util/scopeflags\";\nimport TypeScriptScopeHandler from \"./scope\";\nimport * as charCodes from \"charcodes\";\nimport type { ExpressionErrors } from \"../../parser/util\";\nimport { PARAM } from \"../../util/production-parameter\";\nimport { Errors, ParseErrorEnum } from \"../../parse-error\";\nimport { cloneIdentifier } from \"../../parser/node\";\n\nconst getOwn = (object, key) =>\n  Object.hasOwnProperty.call(object, key) && object[key];\n\ntype TsModifier =\n  | \"readonly\"\n  | \"abstract\"\n  | \"declare\"\n  | \"static\"\n  | \"override\"\n  | N.Accessibility\n  | N.VarianceAnnotations;\n\nfunction nonNull<T>(x: ?T): T {\n  if (x == null) {\n    // $FlowIgnore\n    throw new Error(`Unexpected ${x} value.`);\n  }\n  return x;\n}\n\nfunction assert(x: boolean): void {\n  if (!x) {\n    throw new Error(\"Assert fail\");\n  }\n}\n\ntype ParsingContext =\n  | \"EnumMembers\"\n  | \"HeritageClauseElement\"\n  | \"TupleElementTypes\"\n  | \"TypeMembers\"\n  | \"TypeParametersOrArguments\";\n\n/* eslint sort-keys: \"error\" */\nconst TSErrors = ParseErrorEnum`typescript`(_ => ({\n  AbstractMethodHasImplementation: _<{| methodName: string |}>(\n    ({ methodName }) =>\n      `Method '${methodName}' cannot have an implementation because it is marked abstract.`,\n  ),\n  AbstractPropertyHasInitializer: _<{| propertyName: string |}>(\n    ({ propertyName }) =>\n      `Property '${propertyName}' cannot have an initializer because it is marked abstract.`,\n  ),\n  AccesorCannotDeclareThisParameter: _(\n    \"'get' and 'set' accessors cannot declare 'this' parameters.\",\n  ),\n  AccesorCannotHaveTypeParameters: _(\n    \"An accessor cannot have type parameters.\",\n  ),\n  CannotFindName: _<{| name: string |}>(\n    ({ name }) => `Cannot find name '${name}'.`,\n  ),\n  ClassMethodHasDeclare: _(\"Class methods cannot have the 'declare' modifier.\"),\n  ClassMethodHasReadonly: _(\n    \"Class methods cannot have the 'readonly' modifier.\",\n  ),\n  ConstInitiailizerMustBeStringOrNumericLiteralOrLiteralEnumReference: _(\n    \"A 'const' initializer in an ambient context must be a string or numeric literal or literal enum reference.\",\n  ),\n  ConstructorHasTypeParameters: _(\n    \"Type parameters cannot appear on a constructor declaration.\",\n  ),\n  DeclareAccessor: _<{| kind: \"get\" | \"set\" |}>(\n    ({ kind }) => `'declare' is not allowed in ${kind}ters.`,\n  ),\n  DeclareClassFieldHasInitializer: _(\n    \"Initializers are not allowed in ambient contexts.\",\n  ),\n  DeclareFunctionHasImplementation: _(\n    \"An implementation cannot be declared in ambient contexts.\",\n  ),\n  DuplicateAccessibilityModifier: _<{| modifier: N.Accessibility |}>(\n    // `Accessibility modifier already seen: ${modifier}` would be more helpful.\n    // eslint-disable-next-line no-unused-vars\n    ({ modifier }) => `Accessibility modifier already seen.`,\n  ),\n  DuplicateModifier: _<{| modifier: TsModifier |}>(\n    ({ modifier }) => `Duplicate modifier: '${modifier}'.`,\n  ),\n  // `token` matches the terminology used by typescript:\n  // https://github.com/microsoft/TypeScript/blob/main/src/compiler/types.ts#L2915\n  EmptyHeritageClauseType: _<{| token: \"extends\" | \"implements\" |}>(\n    ({ token }) => `'${token}' list cannot be empty.`,\n  ),\n  EmptyTypeArguments: _(\"Type argument list cannot be empty.\"),\n  EmptyTypeParameters: _(\"Type parameter list cannot be empty.\"),\n  ExpectedAmbientAfterExportDeclare: _(\n    \"'export declare' must be followed by an ambient declaration.\",\n  ),\n  ImportAliasHasImportType: _(\"An import alias can not use 'import type'.\"),\n  IncompatibleModifiers: _<{| modifiers: [TsModifier, TsModifier] |}>(\n    ({ modifiers }) =>\n      `'${modifiers[0]}' modifier cannot be used with '${modifiers[1]}' modifier.`,\n  ),\n  IndexSignatureHasAbstract: _(\n    \"Index signatures cannot have the 'abstract' modifier.\",\n  ),\n  IndexSignatureHasAccessibility: _<{| modifier: N.Accessibility |}>(\n    ({ modifier }) =>\n      `Index signatures cannot have an accessibility modifier ('${modifier}').`,\n  ),\n  IndexSignatureHasDeclare: _(\n    \"Index signatures cannot have the 'declare' modifier.\",\n  ),\n  IndexSignatureHasOverride: _(\n    \"'override' modifier cannot appear on an index signature.\",\n  ),\n  IndexSignatureHasStatic: _(\n    \"Index signatures cannot have the 'static' modifier.\",\n  ),\n  InitializerNotAllowedInAmbientContext: _(\n    \"Initializers are not allowed in ambient contexts.\",\n  ),\n  InvalidModifierOnTypeMember: _<{| modifier: TsModifier |}>(\n    ({ modifier }) => `'${modifier}' modifier cannot appear on a type member.`,\n  ),\n  InvalidModifierOnTypeParameter: _<{| modifier: TsModifier |}>(\n    ({ modifier }) =>\n      `'${modifier}' modifier cannot appear on a type parameter.`,\n  ),\n  InvalidModifierOnTypeParameterPositions: _<{| modifier: TsModifier |}>(\n    ({ modifier }) =>\n      `'${modifier}' modifier can only appear on a type parameter of a class, interface or type alias.`,\n  ),\n  InvalidModifiersOrder: _<{| orderedModifiers: [TsModifier, TsModifier] |}>(\n    ({ orderedModifiers }) =>\n      `'${orderedModifiers[0]}' modifier must precede '${orderedModifiers[1]}' modifier.`,\n  ),\n  InvalidPropertyAccessAfterInstantiationExpression: _(\n    \"Invalid property access after an instantiation expression. \" +\n      \"You can either wrap the instantiation expression in parentheses, or delete the type arguments.\",\n  ),\n  InvalidTupleMemberLabel: _(\n    \"Tuple members must be labeled with a simple identifier.\",\n  ),\n  MissingInterfaceName: _(\n    \"'interface' declarations must be followed by an identifier.\",\n  ),\n  MixedLabeledAndUnlabeledElements: _(\n    \"Tuple members must all have names or all not have names.\",\n  ),\n  NonAbstractClassHasAbstractMethod: _(\n    \"Abstract methods can only appear within an abstract class.\",\n  ),\n  NonClassMethodPropertyHasAbstractModifer: _(\n    \"'abstract' modifier can only appear on a class, method, or property declaration.\",\n  ),\n  OptionalTypeBeforeRequired: _(\n    \"A required element cannot follow an optional element.\",\n  ),\n  OverrideNotInSubClass: _(\n    \"This member cannot have an 'override' modifier because its containing class does not extend another class.\",\n  ),\n  PatternIsOptional: _(\n    \"A binding pattern parameter cannot be optional in an implementation signature.\",\n  ),\n  PrivateElementHasAbstract: _(\n    \"Private elements cannot have the 'abstract' modifier.\",\n  ),\n  PrivateElementHasAccessibility: _<{| modifier: N.Accessibility |}>(\n    ({ modifier }) =>\n      `Private elements cannot have an accessibility modifier ('${modifier}').`,\n  ),\n  ReadonlyForMethodSignature: _(\n    \"'readonly' modifier can only appear on a property declaration or index signature.\",\n  ),\n  ReservedArrowTypeParam: _(\n    \"This syntax is reserved in files with the .mts or .cts extension. Add a trailing comma, as in `<T,>() => ...`.\",\n  ),\n  ReservedTypeAssertion: _(\n    \"This syntax is reserved in files with the .mts or .cts extension. Use an `as` expression instead.\",\n  ),\n  SetAccesorCannotHaveOptionalParameter: _(\n    \"A 'set' accessor cannot have an optional parameter.\",\n  ),\n  SetAccesorCannotHaveRestParameter: _(\n    \"A 'set' accessor cannot have rest parameter.\",\n  ),\n  SetAccesorCannotHaveReturnType: _(\n    \"A 'set' accessor cannot have a return type annotation.\",\n  ),\n  SingleTypeParameterWithoutTrailingComma: _<{| typeParameterName: string |}>(\n    ({ typeParameterName }) =>\n      `Single type parameter ${typeParameterName} should have a trailing comma. Example usage: <${typeParameterName},>.`,\n  ),\n  StaticBlockCannotHaveModifier: _(\n    \"Static class blocks cannot have any modifier.\",\n  ),\n  TypeAnnotationAfterAssign: _(\n    \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`.\",\n  ),\n  TypeImportCannotSpecifyDefaultAndNamed: _(\n    \"A type-only import can specify a default import or named bindings, but not both.\",\n  ),\n  TypeModifierIsUsedInTypeExports: _(\n    \"The 'type' modifier cannot be used on a named export when 'export type' is used on its export statement.\",\n  ),\n  TypeModifierIsUsedInTypeImports: _(\n    \"The 'type' modifier cannot be used on a named import when 'import type' is used on its import statement.\",\n  ),\n  UnexpectedParameterModifier: _(\n    \"A parameter property is only allowed in a constructor implementation.\",\n  ),\n  UnexpectedReadonly: _(\n    \"'readonly' type modifier is only permitted on array and tuple literal types.\",\n  ),\n  UnexpectedTypeAnnotation: _(\"Did not expect a type annotation here.\"),\n  UnexpectedTypeCastInParameter: _(\n    \"Unexpected type cast in parameter position.\",\n  ),\n  UnsupportedImportTypeArgument: _(\n    \"Argument in a type import must be a string literal.\",\n  ),\n  UnsupportedParameterPropertyKind: _(\n    \"A parameter property may not be declared using a binding pattern.\",\n  ),\n  UnsupportedSignatureParameterKind: _<{| type: string |}>(\n    ({ type }) =>\n      `Name in a signature must be an Identifier, ObjectPattern or ArrayPattern, instead got ${type}.`,\n  ),\n}));\n\n/* eslint-disable sort-keys */\n\n// Doesn't handle \"void\" or \"null\" because those are keywords, not identifiers.\n// It also doesn't handle \"intrinsic\", since usually it's not a keyword.\nfunction keywordTypeFromName(\n  value: string,\n): N.TsKeywordTypeType | typeof undefined {\n  switch (value) {\n    case \"any\":\n      return \"TSAnyKeyword\";\n    case \"boolean\":\n      return \"TSBooleanKeyword\";\n    case \"bigint\":\n      return \"TSBigIntKeyword\";\n    case \"never\":\n      return \"TSNeverKeyword\";\n    case \"number\":\n      return \"TSNumberKeyword\";\n    case \"object\":\n      return \"TSObjectKeyword\";\n    case \"string\":\n      return \"TSStringKeyword\";\n    case \"symbol\":\n      return \"TSSymbolKeyword\";\n    case \"undefined\":\n      return \"TSUndefinedKeyword\";\n    case \"unknown\":\n      return \"TSUnknownKeyword\";\n    default:\n      return undefined;\n  }\n}\n\nfunction tsIsAccessModifier(modifier: string): boolean %checks {\n  return (\n    modifier === \"private\" || modifier === \"public\" || modifier === \"protected\"\n  );\n}\n\nfunction tsIsVarianceAnnotations(modifier: string): boolean %checks {\n  return modifier === \"in\" || modifier === \"out\";\n}\n\nexport default (superClass: Class<Parser>): Class<Parser> =>\n  class extends superClass {\n    getScopeHandler(): Class<TypeScriptScopeHandler> {\n      return TypeScriptScopeHandler;\n    }\n\n    tsIsIdentifier(): boolean {\n      // TODO: actually a bit more complex in TypeScript, but shouldn't matter.\n      // See https://github.com/Microsoft/TypeScript/issues/15008\n      return tokenIsIdentifier(this.state.type);\n    }\n\n    tsTokenCanFollowModifier() {\n      return (\n        (this.match(tt.bracketL) ||\n          this.match(tt.braceL) ||\n          this.match(tt.star) ||\n          this.match(tt.ellipsis) ||\n          this.match(tt.privateName) ||\n          this.isLiteralPropertyName()) &&\n        !this.hasPrecedingLineBreak()\n      );\n    }\n\n    tsNextTokenCanFollowModifier() {\n      // Note: TypeScript's implementation is much more complicated because\n      // more things are considered modifiers there.\n      // This implementation only handles modifiers not handled by @babel/parser itself. And \"static\".\n      // TODO: Would be nice to avoid lookahead. Want a hasLineBreakUpNext() method...\n      this.next();\n      return this.tsTokenCanFollowModifier();\n    }\n\n    /** Parses a modifier matching one the given modifier names. */\n    tsParseModifier<T: TsModifier>(\n      allowedModifiers: T[],\n      stopOnStartOfClassStaticBlock?: boolean,\n    ): ?T {\n      if (!tokenIsIdentifier(this.state.type) && this.state.type !== tt._in) {\n        return undefined;\n      }\n\n      const modifier = this.state.value;\n      if (allowedModifiers.indexOf(modifier) !== -1) {\n        if (stopOnStartOfClassStaticBlock && this.tsIsStartOfStaticBlocks()) {\n          return undefined;\n        }\n        if (this.tsTryParse(this.tsNextTokenCanFollowModifier.bind(this))) {\n          return modifier;\n        }\n      }\n      return undefined;\n    }\n\n    /** Parses a list of modifiers, in any order.\n     *  If you need a specific order, you must call this function multiple times:\n     *    this.tsParseModifiers({ modified: node, allowedModifiers: [\"public\"] });\n     *    this.tsParseModifiers({ modified: node, allowedModifiers: [\"abstract\", \"readonly\"] });\n     */\n    tsParseModifiers({\n      modified,\n      allowedModifiers,\n      disallowedModifiers,\n      stopOnStartOfClassStaticBlock,\n      errorTemplate = TSErrors.InvalidModifierOnTypeMember,\n    }: {\n      modified: {\n        [key: TsModifier]: ?true,\n        accessibility?: N.Accessibility,\n      },\n      allowedModifiers: TsModifier[],\n      disallowedModifiers?: TsModifier[],\n      stopOnStartOfClassStaticBlock?: boolean,\n      // FIXME: make sure errorTemplate can receive `modifier`\n      errorTemplate?: any,\n    }): void {\n      const enforceOrder = (loc, modifier, before, after) => {\n        if (modifier === before && modified[after]) {\n          this.raise(TSErrors.InvalidModifiersOrder, {\n            at: loc,\n            orderedModifiers: [before, after],\n          });\n        }\n      };\n      const incompatible = (loc, modifier, mod1, mod2) => {\n        if (\n          (modified[mod1] && modifier === mod2) ||\n          (modified[mod2] && modifier === mod1)\n        ) {\n          this.raise(TSErrors.IncompatibleModifiers, {\n            at: loc,\n            modifiers: [mod1, mod2],\n          });\n        }\n      };\n\n      for (;;) {\n        const { startLoc } = this.state;\n        const modifier: ?TsModifier = this.tsParseModifier(\n          allowedModifiers.concat(disallowedModifiers ?? []),\n          stopOnStartOfClassStaticBlock,\n        );\n\n        if (!modifier) break;\n\n        if (tsIsAccessModifier(modifier)) {\n          if (modified.accessibility) {\n            this.raise(TSErrors.DuplicateAccessibilityModifier, {\n              at: startLoc,\n              modifier,\n            });\n          } else {\n            enforceOrder(startLoc, modifier, modifier, \"override\");\n            enforceOrder(startLoc, modifier, modifier, \"static\");\n            enforceOrder(startLoc, modifier, modifier, \"readonly\");\n\n            modified.accessibility = modifier;\n          }\n        } else if (tsIsVarianceAnnotations(modifier)) {\n          if (modified[modifier]) {\n            this.raise(TSErrors.DuplicateModifier, { at: startLoc, modifier });\n          }\n          modified[modifier] = true;\n\n          enforceOrder(startLoc, modifier, \"in\", \"out\");\n        } else {\n          if (Object.hasOwnProperty.call(modified, modifier)) {\n            this.raise(TSErrors.DuplicateModifier, { at: startLoc, modifier });\n          } else {\n            enforceOrder(startLoc, modifier, \"static\", \"readonly\");\n            enforceOrder(startLoc, modifier, \"static\", \"override\");\n            enforceOrder(startLoc, modifier, \"override\", \"readonly\");\n            enforceOrder(startLoc, modifier, \"abstract\", \"override\");\n\n            incompatible(startLoc, modifier, \"declare\", \"override\");\n            incompatible(startLoc, modifier, \"static\", \"abstract\");\n          }\n          modified[modifier] = true;\n        }\n\n        if (disallowedModifiers?.includes(modifier)) {\n          this.raise(errorTemplate, {\n            at: startLoc,\n            modifier,\n          });\n        }\n      }\n    }\n\n    tsIsListTerminator(kind: ParsingContext): boolean {\n      switch (kind) {\n        case \"EnumMembers\":\n        case \"TypeMembers\":\n          return this.match(tt.braceR);\n        case \"HeritageClauseElement\":\n          return this.match(tt.braceL);\n        case \"TupleElementTypes\":\n          return this.match(tt.bracketR);\n        case \"TypeParametersOrArguments\":\n          return this.match(tt.gt);\n      }\n\n      throw new Error(\"Unreachable\");\n    }\n\n    tsParseList<T: N.Node>(kind: ParsingContext, parseElement: () => T): T[] {\n      const result: T[] = [];\n      while (!this.tsIsListTerminator(kind)) {\n        // Skipping \"parseListElement\" from the TS source since that's just for error handling.\n        result.push(parseElement());\n      }\n      return result;\n    }\n\n    tsParseDelimitedList<T: N.Node>(\n      kind: ParsingContext,\n      parseElement: () => T,\n      refTrailingCommaPos?: { value: number },\n    ): T[] {\n      return nonNull(\n        this.tsParseDelimitedListWorker(\n          kind,\n          parseElement,\n          /* expectSuccess */ true,\n          refTrailingCommaPos,\n        ),\n      );\n    }\n\n    /**\n     * If !expectSuccess, returns undefined instead of failing to parse.\n     * If expectSuccess, parseElement should always return a defined value.\n     */\n    tsParseDelimitedListWorker<T: N.Node>(\n      kind: ParsingContext,\n      parseElement: () => ?T,\n      expectSuccess: boolean,\n      refTrailingCommaPos?: { value: number },\n    ): ?(T[]) {\n      const result = [];\n      let trailingCommaPos = -1;\n\n      for (;;) {\n        if (this.tsIsListTerminator(kind)) {\n          break;\n        }\n        trailingCommaPos = -1;\n\n        const element = parseElement();\n        if (element == null) {\n          return undefined;\n        }\n        result.push(element);\n\n        if (this.eat(tt.comma)) {\n          trailingCommaPos = this.state.lastTokStart;\n          continue;\n        }\n\n        if (this.tsIsListTerminator(kind)) {\n          break;\n        }\n\n        if (expectSuccess) {\n          // This will fail with an error about a missing comma\n          this.expect(tt.comma);\n        }\n        return undefined;\n      }\n\n      if (refTrailingCommaPos) {\n        refTrailingCommaPos.value = trailingCommaPos;\n      }\n\n      return result;\n    }\n\n    tsParseBracketedList<T: N.Node>(\n      kind: ParsingContext,\n      parseElement: () => T,\n      bracket: boolean,\n      skipFirstToken: boolean,\n      refTrailingCommaPos?: { value: number },\n    ): T[] {\n      if (!skipFirstToken) {\n        if (bracket) {\n          this.expect(tt.bracketL);\n        } else {\n          this.expect(tt.lt);\n        }\n      }\n\n      const result = this.tsParseDelimitedList(\n        kind,\n        parseElement,\n        refTrailingCommaPos,\n      );\n\n      if (bracket) {\n        this.expect(tt.bracketR);\n      } else {\n        this.expect(tt.gt);\n      }\n\n      return result;\n    }\n\n    tsParseImportType(): N.TsImportType {\n      const node: N.TsImportType = this.startNode();\n      this.expect(tt._import);\n      this.expect(tt.parenL);\n      if (!this.match(tt.string)) {\n        this.raise(TSErrors.UnsupportedImportTypeArgument, {\n          at: this.state.startLoc,\n        });\n      }\n\n      // For compatibility to estree we cannot call parseLiteral directly here\n      node.argument = this.parseExprAtom();\n      this.expect(tt.parenR);\n\n      if (this.eat(tt.dot)) {\n        // In this instance, the entity name will actually itself be a\n        // qualifier, so allow it to be a reserved word as well.\n        node.qualifier = this.tsParseEntityName();\n      }\n      if (this.match(tt.lt)) {\n        node.typeParameters = this.tsParseTypeArguments();\n      }\n      return this.finishNode(node, \"TSImportType\");\n    }\n\n    tsParseEntityName(allowReservedWords: boolean = true): N.TsEntityName {\n      let entity: N.TsEntityName = this.parseIdentifier(allowReservedWords);\n      while (this.eat(tt.dot)) {\n        const node: N.TsQualifiedName = this.startNodeAtNode(entity);\n        node.left = entity;\n        node.right = this.parseIdentifier(allowReservedWords);\n        entity = this.finishNode(node, \"TSQualifiedName\");\n      }\n      return entity;\n    }\n\n    tsParseTypeReference(): N.TsTypeReference {\n      const node: N.TsTypeReference = this.startNode();\n      node.typeName = this.tsParseEntityName();\n      if (!this.hasPrecedingLineBreak() && this.match(tt.lt)) {\n        node.typeParameters = this.tsParseTypeArguments();\n      }\n      return this.finishNode(node, \"TSTypeReference\");\n    }\n\n    tsParseThisTypePredicate(lhs: N.TsThisType): N.TsTypePredicate {\n      this.next();\n      const node: N.TsTypePredicate = this.startNodeAtNode(lhs);\n      node.parameterName = lhs;\n      node.typeAnnotation = this.tsParseTypeAnnotation(/* eatColon */ false);\n      node.asserts = false;\n      return this.finishNode(node, \"TSTypePredicate\");\n    }\n\n    tsParseThisTypeNode(): N.TsThisType {\n      const node: N.TsThisType = this.startNode();\n      this.next();\n      return this.finishNode(node, \"TSThisType\");\n    }\n\n    tsParseTypeQuery(): N.TsTypeQuery {\n      const node: N.TsTypeQuery = this.startNode();\n      this.expect(tt._typeof);\n      if (this.match(tt._import)) {\n        node.exprName = this.tsParseImportType();\n      } else {\n        node.exprName = this.tsParseEntityName();\n      }\n      if (!this.hasPrecedingLineBreak() && this.match(tt.lt)) {\n        node.typeParameters = this.tsParseTypeArguments();\n      }\n      return this.finishNode(node, \"TSTypeQuery\");\n    }\n\n    tsParseInOutModifiers(node: N.TsTypeParameter) {\n      this.tsParseModifiers({\n        modified: node,\n        allowedModifiers: [\"in\", \"out\"],\n        disallowedModifiers: [\n          \"public\",\n          \"private\",\n          \"protected\",\n          \"readonly\",\n          \"declare\",\n          \"abstract\",\n          \"override\",\n        ],\n        errorTemplate: TSErrors.InvalidModifierOnTypeParameter,\n      });\n    }\n\n    // for better error recover\n    tsParseNoneModifiers(node: N.TsTypeParameter) {\n      this.tsParseModifiers({\n        modified: node,\n        allowedModifiers: [],\n        disallowedModifiers: [\"in\", \"out\"],\n        errorTemplate: TSErrors.InvalidModifierOnTypeParameterPositions,\n      });\n    }\n\n    tsParseTypeParameter(\n      parseModifiers: (\n        node: N.TsTypeParameter,\n      ) => void = this.tsParseNoneModifiers.bind(this),\n    ): N.TsTypeParameter {\n      const node: N.TsTypeParameter = this.startNode();\n\n      parseModifiers(node);\n\n      node.name = this.tsParseTypeParameterName();\n      node.constraint = this.tsEatThenParseType(tt._extends);\n      node.default = this.tsEatThenParseType(tt.eq);\n      return this.finishNode(node, \"TSTypeParameter\");\n    }\n\n    tsTryParseTypeParameters(\n      parseModifiers: ?(node: N.TsTypeParameter) => void,\n    ): ?N.TsTypeParameterDeclaration {\n      if (this.match(tt.lt)) {\n        return this.tsParseTypeParameters(parseModifiers);\n      }\n    }\n\n    tsParseTypeParameters(parseModifiers: ?(node: N.TsTypeParameter) => void) {\n      const node: N.TsTypeParameterDeclaration = this.startNode();\n\n      if (this.match(tt.lt) || this.match(tt.jsxTagStart)) {\n        this.next();\n      } else {\n        this.unexpected();\n      }\n\n      const refTrailingCommaPos = { value: -1 };\n\n      node.params = this.tsParseBracketedList(\n        \"TypeParametersOrArguments\",\n        this.tsParseTypeParameter.bind(this, parseModifiers),\n        /* bracket */ false,\n        /* skipFirstToken */ true,\n        refTrailingCommaPos,\n      );\n      if (node.params.length === 0) {\n        this.raise(TSErrors.EmptyTypeParameters, { at: node });\n      }\n      if (refTrailingCommaPos.value !== -1) {\n        this.addExtra(node, \"trailingComma\", refTrailingCommaPos.value);\n      }\n      return this.finishNode(node, \"TSTypeParameterDeclaration\");\n    }\n\n    tsTryNextParseConstantContext(): ?N.TsTypeReference {\n      if (this.lookahead().type !== tt._const) return null;\n\n      this.next();\n      const typeReference = this.tsParseTypeReference();\n\n      // If the type reference has type parameters, then you are using it as a\n      // type and not as a const signifier. We'll *never* be able to find this\n      // name, since const isn't allowed as a type name. So in this instance we\n      // get to pretend we're the type checker.\n      if (typeReference.typeParameters) {\n        this.raise(TSErrors.CannotFindName, {\n          at: typeReference.typeName,\n          name: \"const\",\n        });\n      }\n\n      return typeReference;\n    }\n\n    // Note: In TypeScript implementation we must provide `yieldContext` and `awaitContext`,\n    // but here it's always false, because this is only used for types.\n    tsFillSignature(\n      returnToken: TokenType,\n      signature: N.TsSignatureDeclaration,\n    ): void {\n      // Arrow fns *must* have return token (`=>`). Normal functions can omit it.\n      const returnTokenRequired = returnToken === tt.arrow;\n\n      // https://github.com/babel/babel/issues/9231\n      const paramsKey = process.env.BABEL_8_BREAKING ? \"params\" : \"parameters\";\n      const returnTypeKey = process.env.BABEL_8_BREAKING\n        ? \"returnType\"\n        : \"typeAnnotation\";\n\n      signature.typeParameters = this.tsTryParseTypeParameters();\n      this.expect(tt.parenL);\n      signature[paramsKey] = this.tsParseBindingListForSignature();\n      if (returnTokenRequired) {\n        signature[returnTypeKey] =\n          this.tsParseTypeOrTypePredicateAnnotation(returnToken);\n      } else if (this.match(returnToken)) {\n        signature[returnTypeKey] =\n          this.tsParseTypeOrTypePredicateAnnotation(returnToken);\n      }\n    }\n\n    tsParseBindingListForSignature(): $ReadOnlyArray<\n      N.Identifier | N.RestElement | N.ObjectPattern | N.ArrayPattern,\n    > {\n      return this.parseBindingList(tt.parenR, charCodes.rightParenthesis).map(\n        pattern => {\n          if (\n            pattern.type !== \"Identifier\" &&\n            pattern.type !== \"RestElement\" &&\n            pattern.type !== \"ObjectPattern\" &&\n            pattern.type !== \"ArrayPattern\"\n          ) {\n            this.raise(TSErrors.UnsupportedSignatureParameterKind, {\n              at: pattern,\n              type: pattern.type,\n            });\n          }\n          return (pattern: any);\n        },\n      );\n    }\n\n    tsParseTypeMemberSemicolon(): void {\n      if (!this.eat(tt.comma) && !this.isLineTerminator()) {\n        this.expect(tt.semi);\n      }\n    }\n\n    tsParseSignatureMember(\n      kind: \"TSCallSignatureDeclaration\" | \"TSConstructSignatureDeclaration\",\n      node: N.TsCallSignatureDeclaration | N.TsConstructSignatureDeclaration,\n    ): N.TsCallSignatureDeclaration | N.TsConstructSignatureDeclaration {\n      this.tsFillSignature(tt.colon, node);\n      this.tsParseTypeMemberSemicolon();\n      return this.finishNode(node, kind);\n    }\n\n    tsIsUnambiguouslyIndexSignature() {\n      this.next(); // Skip '{'\n      if (tokenIsIdentifier(this.state.type)) {\n        this.next();\n        return this.match(tt.colon);\n      }\n      return false;\n    }\n\n    tsTryParseIndexSignature(node: N.Node): ?N.TsIndexSignature {\n      if (\n        !(\n          this.match(tt.bracketL) &&\n          this.tsLookAhead(this.tsIsUnambiguouslyIndexSignature.bind(this))\n        )\n      ) {\n        return undefined;\n      }\n\n      this.expect(tt.bracketL);\n      const id = this.parseIdentifier();\n      id.typeAnnotation = this.tsParseTypeAnnotation();\n      this.resetEndLocation(id); // set end position to end of type\n\n      this.expect(tt.bracketR);\n      node.parameters = [id];\n\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) node.typeAnnotation = type;\n      this.tsParseTypeMemberSemicolon();\n      return this.finishNode(node, \"TSIndexSignature\");\n    }\n\n    tsParsePropertyOrMethodSignature(\n      node: N.TsPropertySignature | N.TsMethodSignature,\n      readonly: boolean,\n    ): N.TsPropertySignature | N.TsMethodSignature {\n      if (this.eat(tt.question)) node.optional = true;\n      const nodeAny: any = node;\n\n      if (this.match(tt.parenL) || this.match(tt.lt)) {\n        if (readonly) {\n          this.raise(TSErrors.ReadonlyForMethodSignature, { at: node });\n        }\n        const method: N.TsMethodSignature = nodeAny;\n        if (method.kind && this.match(tt.lt)) {\n          this.raise(TSErrors.AccesorCannotHaveTypeParameters, {\n            at: this.state.curPosition(),\n          });\n        }\n        this.tsFillSignature(tt.colon, method);\n        this.tsParseTypeMemberSemicolon();\n        const paramsKey = process.env.BABEL_8_BREAKING\n          ? \"params\"\n          : \"parameters\";\n        const returnTypeKey = process.env.BABEL_8_BREAKING\n          ? \"returnType\"\n          : \"typeAnnotation\";\n        if (method.kind === \"get\") {\n          if (method[paramsKey].length > 0) {\n            this.raise(Errors.BadGetterArity, { at: this.state.curPosition() });\n            if (this.isThisParam(method[paramsKey][0])) {\n              this.raise(TSErrors.AccesorCannotDeclareThisParameter, {\n                at: this.state.curPosition(),\n              });\n            }\n          }\n        } else if (method.kind === \"set\") {\n          if (method[paramsKey].length !== 1) {\n            this.raise(Errors.BadSetterArity, { at: this.state.curPosition() });\n          } else {\n            const firstParameter = method[paramsKey][0];\n            if (this.isThisParam(firstParameter)) {\n              this.raise(TSErrors.AccesorCannotDeclareThisParameter, {\n                at: this.state.curPosition(),\n              });\n            }\n            if (\n              firstParameter.type === \"Identifier\" &&\n              firstParameter.optional\n            ) {\n              this.raise(TSErrors.SetAccesorCannotHaveOptionalParameter, {\n                at: this.state.curPosition(),\n              });\n            }\n            if (firstParameter.type === \"RestElement\") {\n              this.raise(TSErrors.SetAccesorCannotHaveRestParameter, {\n                at: this.state.curPosition(),\n              });\n            }\n          }\n          if (method[returnTypeKey]) {\n            this.raise(TSErrors.SetAccesorCannotHaveReturnType, {\n              at: method[returnTypeKey],\n            });\n          }\n        } else {\n          method.kind = \"method\";\n        }\n        return this.finishNode(method, \"TSMethodSignature\");\n      } else {\n        const property: N.TsPropertySignature = nodeAny;\n        if (readonly) property.readonly = true;\n        const type = this.tsTryParseTypeAnnotation();\n        if (type) property.typeAnnotation = type;\n        this.tsParseTypeMemberSemicolon();\n        return this.finishNode(property, \"TSPropertySignature\");\n      }\n    }\n\n    tsParseTypeMember(): N.TsTypeElement {\n      const node: any = this.startNode();\n\n      if (this.match(tt.parenL) || this.match(tt.lt)) {\n        return this.tsParseSignatureMember(\"TSCallSignatureDeclaration\", node);\n      }\n\n      if (this.match(tt._new)) {\n        const id: N.Identifier = this.startNode();\n        this.next();\n        if (this.match(tt.parenL) || this.match(tt.lt)) {\n          return this.tsParseSignatureMember(\n            \"TSConstructSignatureDeclaration\",\n            node,\n          );\n        } else {\n          node.key = this.createIdentifier(id, \"new\");\n          return this.tsParsePropertyOrMethodSignature(node, false);\n        }\n      }\n\n      this.tsParseModifiers({\n        modified: node,\n        allowedModifiers: [\"readonly\"],\n        disallowedModifiers: [\n          \"declare\",\n          \"abstract\",\n          \"private\",\n          \"protected\",\n          \"public\",\n          \"static\",\n          \"override\",\n        ],\n      });\n\n      const idx = this.tsTryParseIndexSignature(node);\n      if (idx) {\n        return idx;\n      }\n\n      this.parsePropertyName(node);\n      if (\n        !node.computed &&\n        node.key.type === \"Identifier\" &&\n        (node.key.name === \"get\" || node.key.name === \"set\") &&\n        this.tsTokenCanFollowModifier()\n      ) {\n        node.kind = node.key.name;\n        this.parsePropertyName(node);\n      }\n      return this.tsParsePropertyOrMethodSignature(node, !!node.readonly);\n    }\n\n    tsParseTypeLiteral(): N.TsTypeLiteral {\n      const node: N.TsTypeLiteral = this.startNode();\n      node.members = this.tsParseObjectTypeMembers();\n      return this.finishNode(node, \"TSTypeLiteral\");\n    }\n\n    tsParseObjectTypeMembers(): $ReadOnlyArray<N.TsTypeElement> {\n      this.expect(tt.braceL);\n      const members = this.tsParseList(\n        \"TypeMembers\",\n        this.tsParseTypeMember.bind(this),\n      );\n      this.expect(tt.braceR);\n      return members;\n    }\n\n    tsIsStartOfMappedType(): boolean {\n      this.next();\n      if (this.eat(tt.plusMin)) {\n        return this.isContextual(tt._readonly);\n      }\n      if (this.isContextual(tt._readonly)) {\n        this.next();\n      }\n      if (!this.match(tt.bracketL)) {\n        return false;\n      }\n      this.next();\n      if (!this.tsIsIdentifier()) {\n        return false;\n      }\n      this.next();\n      return this.match(tt._in);\n    }\n\n    tsParseMappedTypeParameter(): N.TsTypeParameter {\n      const node: N.TsTypeParameter = this.startNode();\n      node.name = this.tsParseTypeParameterName();\n      node.constraint = this.tsExpectThenParseType(tt._in);\n      return this.finishNode(node, \"TSTypeParameter\");\n    }\n\n    tsParseMappedType(): N.TsMappedType {\n      const node: N.TsMappedType = this.startNode();\n\n      this.expect(tt.braceL);\n\n      if (this.match(tt.plusMin)) {\n        node.readonly = this.state.value;\n        this.next();\n        this.expectContextual(tt._readonly);\n      } else if (this.eatContextual(tt._readonly)) {\n        node.readonly = true;\n      }\n\n      this.expect(tt.bracketL);\n      node.typeParameter = this.tsParseMappedTypeParameter();\n      node.nameType = this.eatContextual(tt._as) ? this.tsParseType() : null;\n\n      this.expect(tt.bracketR);\n\n      if (this.match(tt.plusMin)) {\n        node.optional = this.state.value;\n        this.next();\n        this.expect(tt.question);\n      } else if (this.eat(tt.question)) {\n        node.optional = true;\n      }\n\n      node.typeAnnotation = this.tsTryParseType();\n      this.semicolon();\n      this.expect(tt.braceR);\n\n      return this.finishNode(node, \"TSMappedType\");\n    }\n\n    tsParseTupleType(): N.TsTupleType {\n      const node: N.TsTupleType = this.startNode();\n      node.elementTypes = this.tsParseBracketedList(\n        \"TupleElementTypes\",\n        this.tsParseTupleElementType.bind(this),\n        /* bracket */ true,\n        /* skipFirstToken */ false,\n      );\n\n      // Validate the elementTypes to ensure that no mandatory elements\n      // follow optional elements\n      let seenOptionalElement = false;\n      let labeledElements = null;\n      node.elementTypes.forEach(elementNode => {\n        let { type } = elementNode;\n\n        if (\n          seenOptionalElement &&\n          type !== \"TSRestType\" &&\n          type !== \"TSOptionalType\" &&\n          !(type === \"TSNamedTupleMember\" && elementNode.optional)\n        ) {\n          this.raise(TSErrors.OptionalTypeBeforeRequired, {\n            at: elementNode,\n          });\n        }\n\n        // Flow doesn't support ||=\n        seenOptionalElement =\n          seenOptionalElement ||\n          (type === \"TSNamedTupleMember\" && elementNode.optional) ||\n          type === \"TSOptionalType\";\n\n        // When checking labels, check the argument of the spread operator\n        if (type === \"TSRestType\") {\n          elementNode = elementNode.typeAnnotation;\n          type = elementNode.type;\n        }\n\n        const isLabeled = type === \"TSNamedTupleMember\";\n        // Flow doesn't support ??=\n        labeledElements = labeledElements ?? isLabeled;\n        if (labeledElements !== isLabeled) {\n          this.raise(TSErrors.MixedLabeledAndUnlabeledElements, {\n            at: elementNode,\n          });\n        }\n      });\n\n      return this.finishNode(node, \"TSTupleType\");\n    }\n\n    tsParseTupleElementType(): N.TsType | N.TsNamedTupleMember {\n      // parses `...TsType[]`\n\n      const { start: startPos, startLoc } = this.state;\n\n      const rest = this.eat(tt.ellipsis);\n      let type = this.tsParseType();\n      const optional = this.eat(tt.question);\n      const labeled = this.eat(tt.colon);\n\n      if (labeled) {\n        const labeledNode: N.TsNamedTupleMember = this.startNodeAtNode(type);\n        labeledNode.optional = optional;\n\n        if (\n          type.type === \"TSTypeReference\" &&\n          !type.typeParameters &&\n          type.typeName.type === \"Identifier\"\n        ) {\n          labeledNode.label = (type.typeName: N.Identifier);\n        } else {\n          this.raise(TSErrors.InvalidTupleMemberLabel, { at: type });\n          // This produces an invalid AST, but at least we don't drop\n          // nodes representing the invalid source.\n          // $FlowIgnore\n          labeledNode.label = type;\n        }\n\n        labeledNode.elementType = this.tsParseType();\n        type = this.finishNode(labeledNode, \"TSNamedTupleMember\");\n      } else if (optional) {\n        const optionalTypeNode: N.TsOptionalType = this.startNodeAtNode(type);\n        optionalTypeNode.typeAnnotation = type;\n        type = this.finishNode(optionalTypeNode, \"TSOptionalType\");\n      }\n\n      if (rest) {\n        const restNode: N.TsRestType = this.startNodeAt(startPos, startLoc);\n        restNode.typeAnnotation = type;\n        type = this.finishNode(restNode, \"TSRestType\");\n      }\n\n      return type;\n    }\n\n    tsParseParenthesizedType(): N.TsParenthesizedType {\n      const node = this.startNode();\n      this.expect(tt.parenL);\n      node.typeAnnotation = this.tsParseType();\n      this.expect(tt.parenR);\n      return this.finishNode(node, \"TSParenthesizedType\");\n    }\n\n    tsParseFunctionOrConstructorType(\n      type: \"TSFunctionType\" | \"TSConstructorType\",\n      abstract?: boolean,\n    ): N.TsFunctionOrConstructorType {\n      const node: N.TsFunctionOrConstructorType = this.startNode();\n      if (type === \"TSConstructorType\") {\n        // $FlowIgnore\n        node.abstract = !!abstract;\n        if (abstract) this.next();\n        this.next(); // eat `new`\n      }\n      this.tsInAllowConditionalTypesContext(() =>\n        this.tsFillSignature(tt.arrow, node),\n      );\n      return this.finishNode(node, type);\n    }\n\n    tsParseLiteralTypeNode(): N.TsLiteralType {\n      const node: N.TsLiteralType = this.startNode();\n      node.literal = (() => {\n        switch (this.state.type) {\n          case tt.num:\n          case tt.bigint:\n          case tt.string:\n          case tt._true:\n          case tt._false:\n            // For compatibility to estree we cannot call parseLiteral directly here\n            return this.parseExprAtom();\n          default:\n            throw this.unexpected();\n        }\n      })();\n      return this.finishNode(node, \"TSLiteralType\");\n    }\n\n    tsParseTemplateLiteralType(): N.TsType {\n      const node: N.TsLiteralType = this.startNode();\n      node.literal = this.parseTemplate(false);\n      return this.finishNode(node, \"TSLiteralType\");\n    }\n\n    parseTemplateSubstitution(): N.TsType {\n      if (this.state.inType) return this.tsParseType();\n      return super.parseTemplateSubstitution();\n    }\n\n    tsParseThisTypeOrThisTypePredicate(): N.TsThisType | N.TsTypePredicate {\n      const thisKeyword = this.tsParseThisTypeNode();\n      if (this.isContextual(tt._is) && !this.hasPrecedingLineBreak()) {\n        return this.tsParseThisTypePredicate(thisKeyword);\n      } else {\n        return thisKeyword;\n      }\n    }\n\n    tsParseNonArrayType(): N.TsType {\n      switch (this.state.type) {\n        case tt.string:\n        case tt.num:\n        case tt.bigint:\n        case tt._true:\n        case tt._false:\n          return this.tsParseLiteralTypeNode();\n        case tt.plusMin:\n          if (this.state.value === \"-\") {\n            const node: N.TsLiteralType = this.startNode();\n            const nextToken = this.lookahead();\n            if (nextToken.type !== tt.num && nextToken.type !== tt.bigint) {\n              throw this.unexpected();\n            }\n            node.literal = this.parseMaybeUnary();\n            return this.finishNode(node, \"TSLiteralType\");\n          }\n          break;\n        case tt._this:\n          return this.tsParseThisTypeOrThisTypePredicate();\n        case tt._typeof:\n          return this.tsParseTypeQuery();\n        case tt._import:\n          return this.tsParseImportType();\n        case tt.braceL:\n          return this.tsLookAhead(this.tsIsStartOfMappedType.bind(this))\n            ? this.tsParseMappedType()\n            : this.tsParseTypeLiteral();\n        case tt.bracketL:\n          return this.tsParseTupleType();\n        case tt.parenL:\n          if (process.env.BABEL_8_BREAKING) {\n            if (!this.options.createParenthesizedExpressions) {\n              const startPos = this.state.start;\n              this.next();\n              const type = this.tsParseType();\n              this.expect(tt.parenR);\n              this.addExtra(type, \"parenthesized\", true);\n              this.addExtra(type, \"parenStart\", startPos);\n              return type;\n            }\n          }\n\n          return this.tsParseParenthesizedType();\n        case tt.templateNonTail:\n        case tt.templateTail:\n          return this.tsParseTemplateLiteralType();\n        default: {\n          const { type } = this.state;\n          if (\n            tokenIsIdentifier(type) ||\n            type === tt._void ||\n            type === tt._null\n          ) {\n            const nodeType =\n              type === tt._void\n                ? \"TSVoidKeyword\"\n                : type === tt._null\n                ? \"TSNullKeyword\"\n                : keywordTypeFromName(this.state.value);\n            if (\n              nodeType !== undefined &&\n              this.lookaheadCharCode() !== charCodes.dot\n            ) {\n              const node: N.TsKeywordType = this.startNode();\n              this.next();\n              return this.finishNode(node, nodeType);\n            }\n            return this.tsParseTypeReference();\n          }\n        }\n      }\n\n      throw this.unexpected();\n    }\n\n    tsParseArrayTypeOrHigher(): N.TsType {\n      let type = this.tsParseNonArrayType();\n      while (!this.hasPrecedingLineBreak() && this.eat(tt.bracketL)) {\n        if (this.match(tt.bracketR)) {\n          const node: N.TsArrayType = this.startNodeAtNode(type);\n          node.elementType = type;\n          this.expect(tt.bracketR);\n          type = this.finishNode(node, \"TSArrayType\");\n        } else {\n          const node: N.TsIndexedAccessType = this.startNodeAtNode(type);\n          node.objectType = type;\n          node.indexType = this.tsParseType();\n          this.expect(tt.bracketR);\n          type = this.finishNode(node, \"TSIndexedAccessType\");\n        }\n      }\n      return type;\n    }\n\n    tsParseTypeOperator(): N.TsTypeOperator {\n      const node: N.TsTypeOperator = this.startNode();\n      const operator = this.state.value;\n      this.next(); // eat operator\n      node.operator = operator;\n      node.typeAnnotation = this.tsParseTypeOperatorOrHigher();\n\n      if (operator === \"readonly\") {\n        this.tsCheckTypeAnnotationForReadOnly(node);\n      }\n\n      return this.finishNode(node, \"TSTypeOperator\");\n    }\n\n    tsCheckTypeAnnotationForReadOnly(node: N.Node) {\n      switch (node.typeAnnotation.type) {\n        case \"TSTupleType\":\n        case \"TSArrayType\":\n          return;\n        default:\n          this.raise(TSErrors.UnexpectedReadonly, { at: node });\n      }\n    }\n\n    tsParseInferType(): N.TsInferType {\n      const node = this.startNode();\n      this.expectContextual(tt._infer);\n      const typeParameter = this.startNode();\n      typeParameter.name = this.tsParseTypeParameterName();\n      typeParameter.constraint = this.tsTryParse(() =>\n        this.tsParseConstraintForInferType(),\n      );\n      node.typeParameter = this.finishNode(typeParameter, \"TSTypeParameter\");\n      return this.finishNode(node, \"TSInferType\");\n    }\n\n    tsParseConstraintForInferType() {\n      if (this.eat(tt._extends)) {\n        const constraint = this.tsInDisallowConditionalTypesContext(() =>\n          this.tsParseType(),\n        );\n        if (\n          this.state.inDisallowConditionalTypesContext ||\n          !this.match(tt.question)\n        ) {\n          return constraint;\n        }\n      }\n    }\n\n    tsParseTypeOperatorOrHigher(): N.TsType {\n      const isTypeOperator =\n        tokenIsTSTypeOperator(this.state.type) && !this.state.containsEsc;\n      return isTypeOperator\n        ? this.tsParseTypeOperator()\n        : this.isContextual(tt._infer)\n        ? this.tsParseInferType()\n        : this.tsInAllowConditionalTypesContext(() =>\n            this.tsParseArrayTypeOrHigher(),\n          );\n    }\n\n    tsParseUnionOrIntersectionType(\n      kind: \"TSUnionType\" | \"TSIntersectionType\",\n      parseConstituentType: () => N.TsType,\n      operator: TokenType,\n    ): N.TsType {\n      const node: N.TsUnionType | N.TsIntersectionType = this.startNode();\n      const hasLeadingOperator = this.eat(operator);\n      const types = [];\n      do {\n        types.push(parseConstituentType());\n      } while (this.eat(operator));\n      if (types.length === 1 && !hasLeadingOperator) {\n        return types[0];\n      }\n      node.types = types;\n      return this.finishNode(node, kind);\n    }\n\n    tsParseIntersectionTypeOrHigher(): N.TsType {\n      return this.tsParseUnionOrIntersectionType(\n        \"TSIntersectionType\",\n        this.tsParseTypeOperatorOrHigher.bind(this),\n        tt.bitwiseAND,\n      );\n    }\n\n    tsParseUnionTypeOrHigher() {\n      return this.tsParseUnionOrIntersectionType(\n        \"TSUnionType\",\n        this.tsParseIntersectionTypeOrHigher.bind(this),\n        tt.bitwiseOR,\n      );\n    }\n\n    tsIsStartOfFunctionType() {\n      if (this.match(tt.lt)) {\n        return true;\n      }\n      return (\n        this.match(tt.parenL) &&\n        this.tsLookAhead(this.tsIsUnambiguouslyStartOfFunctionType.bind(this))\n      );\n    }\n\n    tsSkipParameterStart(): boolean {\n      if (tokenIsIdentifier(this.state.type) || this.match(tt._this)) {\n        this.next();\n        return true;\n      }\n\n      if (this.match(tt.braceL)) {\n        // Return true if we can parse an object pattern without errors\n        const { errors } = this.state;\n        const previousErrorCount = errors.length;\n        try {\n          this.parseObjectLike(tt.braceR, true);\n          return errors.length === previousErrorCount;\n        } catch {\n          return false;\n        }\n      }\n\n      if (this.match(tt.bracketL)) {\n        this.next();\n        // Return true if we can parse an array pattern without errors\n        const { errors } = this.state;\n        const previousErrorCount = errors.length;\n        try {\n          this.parseBindingList(\n            tt.bracketR,\n            charCodes.rightSquareBracket,\n            true,\n          );\n          return errors.length === previousErrorCount;\n        } catch {\n          return false;\n        }\n      }\n\n      return false;\n    }\n\n    tsIsUnambiguouslyStartOfFunctionType(): boolean {\n      this.next();\n      if (this.match(tt.parenR) || this.match(tt.ellipsis)) {\n        // ( )\n        // ( ...\n        return true;\n      }\n      if (this.tsSkipParameterStart()) {\n        if (\n          this.match(tt.colon) ||\n          this.match(tt.comma) ||\n          this.match(tt.question) ||\n          this.match(tt.eq)\n        ) {\n          // ( xxx :\n          // ( xxx ,\n          // ( xxx ?\n          // ( xxx =\n          return true;\n        }\n        if (this.match(tt.parenR)) {\n          this.next();\n          if (this.match(tt.arrow)) {\n            // ( xxx ) =>\n            return true;\n          }\n        }\n      }\n      return false;\n    }\n\n    tsParseTypeOrTypePredicateAnnotation(\n      returnToken: TokenType,\n    ): N.TsTypeAnnotation {\n      return this.tsInType(() => {\n        const t: N.TsTypeAnnotation = this.startNode();\n        this.expect(returnToken);\n\n        const node = this.startNode<N.TsTypePredicate>();\n\n        const asserts = !!this.tsTryParse(\n          this.tsParseTypePredicateAsserts.bind(this),\n        );\n\n        if (asserts && this.match(tt._this)) {\n          // When asserts is false, thisKeyword is handled by tsParseNonArrayType\n          // : asserts this is type\n          let thisTypePredicate = this.tsParseThisTypeOrThisTypePredicate();\n          // if it turns out to be a `TSThisType`, wrap it with `TSTypePredicate`\n          // : asserts this\n          if (thisTypePredicate.type === \"TSThisType\") {\n            node.parameterName = (thisTypePredicate: N.TsThisType);\n            node.asserts = true;\n            (node: N.TsTypePredicate).typeAnnotation = null;\n            thisTypePredicate = this.finishNode(node, \"TSTypePredicate\");\n          } else {\n            this.resetStartLocationFromNode(thisTypePredicate, node);\n            (thisTypePredicate: N.TsTypePredicate).asserts = true;\n          }\n          t.typeAnnotation = thisTypePredicate;\n          return this.finishNode(t, \"TSTypeAnnotation\");\n        }\n\n        const typePredicateVariable =\n          this.tsIsIdentifier() &&\n          this.tsTryParse(this.tsParseTypePredicatePrefix.bind(this));\n\n        if (!typePredicateVariable) {\n          if (!asserts) {\n            // : type\n            return this.tsParseTypeAnnotation(/* eatColon */ false, t);\n          }\n\n          // : asserts foo\n          node.parameterName = this.parseIdentifier();\n          node.asserts = asserts;\n          (node: N.TsTypePredicate).typeAnnotation = null;\n          t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n          return this.finishNode(t, \"TSTypeAnnotation\");\n        }\n\n        // : asserts foo is type\n        const type = this.tsParseTypeAnnotation(/* eatColon */ false);\n        node.parameterName = typePredicateVariable;\n        node.typeAnnotation = type;\n        node.asserts = asserts;\n        t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n        return this.finishNode(t, \"TSTypeAnnotation\");\n      });\n    }\n\n    tsTryParseTypeOrTypePredicateAnnotation(): ?N.TsTypeAnnotation {\n      return this.match(tt.colon)\n        ? this.tsParseTypeOrTypePredicateAnnotation(tt.colon)\n        : undefined;\n    }\n\n    tsTryParseTypeAnnotation(): ?N.TsTypeAnnotation {\n      return this.match(tt.colon) ? this.tsParseTypeAnnotation() : undefined;\n    }\n\n    tsTryParseType(): ?N.TsType {\n      return this.tsEatThenParseType(tt.colon);\n    }\n\n    tsParseTypePredicatePrefix(): ?N.Identifier {\n      const id = this.parseIdentifier();\n      if (this.isContextual(tt._is) && !this.hasPrecedingLineBreak()) {\n        this.next();\n        return id;\n      }\n    }\n\n    tsParseTypePredicateAsserts(): boolean {\n      if (this.state.type !== tt._asserts) {\n        return false;\n      }\n      const containsEsc = this.state.containsEsc;\n      this.next();\n      if (!tokenIsIdentifier(this.state.type) && !this.match(tt._this)) {\n        return false;\n      }\n\n      if (containsEsc) {\n        this.raise(Errors.InvalidEscapedReservedWord, {\n          at: this.state.lastTokStartLoc,\n          reservedWord: \"asserts\",\n        });\n      }\n\n      return true;\n    }\n\n    tsParseTypeAnnotation(\n      eatColon = true,\n      t: N.TsTypeAnnotation = this.startNode(),\n    ): N.TsTypeAnnotation {\n      this.tsInType(() => {\n        if (eatColon) this.expect(tt.colon);\n        t.typeAnnotation = this.tsParseType();\n      });\n      return this.finishNode(t, \"TSTypeAnnotation\");\n    }\n\n    /** Be sure to be in a type context before calling this, using `tsInType`. */\n    tsParseType(): N.TsType {\n      // Need to set `state.inType` so that we don't parse JSX in a type context.\n      assert(this.state.inType);\n      const type = this.tsParseNonConditionalType();\n\n      if (\n        this.state.inDisallowConditionalTypesContext ||\n        this.hasPrecedingLineBreak() ||\n        !this.eat(tt._extends)\n      ) {\n        return type;\n      }\n      const node: N.TsConditionalType = this.startNodeAtNode(type);\n      node.checkType = type;\n\n      node.extendsType = this.tsInDisallowConditionalTypesContext(() =>\n        this.tsParseNonConditionalType(),\n      );\n\n      this.expect(tt.question);\n      node.trueType = this.tsInAllowConditionalTypesContext(() =>\n        this.tsParseType(),\n      );\n\n      this.expect(tt.colon);\n      node.falseType = this.tsInAllowConditionalTypesContext(() =>\n        this.tsParseType(),\n      );\n\n      return this.finishNode(node, \"TSConditionalType\");\n    }\n\n    isAbstractConstructorSignature(): boolean {\n      return (\n        this.isContextual(tt._abstract) && this.lookahead().type === tt._new\n      );\n    }\n\n    tsParseNonConditionalType(): N.TsType {\n      if (this.tsIsStartOfFunctionType()) {\n        return this.tsParseFunctionOrConstructorType(\"TSFunctionType\");\n      }\n      if (this.match(tt._new)) {\n        // As in `new () => Date`\n        return this.tsParseFunctionOrConstructorType(\"TSConstructorType\");\n      } else if (this.isAbstractConstructorSignature()) {\n        // As in `abstract new () => Date`\n        return this.tsParseFunctionOrConstructorType(\n          \"TSConstructorType\",\n          /* abstract */ true,\n        );\n      }\n      return this.tsParseUnionTypeOrHigher();\n    }\n\n    tsParseTypeAssertion(): N.TsTypeAssertion {\n      if (this.getPluginOption(\"typescript\", \"disallowAmbiguousJSXLike\")) {\n        this.raise(TSErrors.ReservedTypeAssertion, { at: this.state.startLoc });\n      }\n\n      const node: N.TsTypeAssertion = this.startNode();\n      const _const = this.tsTryNextParseConstantContext();\n      node.typeAnnotation = _const || this.tsNextThenParseType();\n      this.expect(tt.gt);\n      node.expression = this.parseMaybeUnary();\n      return this.finishNode(node, \"TSTypeAssertion\");\n    }\n\n    tsParseHeritageClause(\n      token: \"extends\" | \"implements\",\n    ): $ReadOnlyArray<N.TsExpressionWithTypeArguments> {\n      const originalStartLoc = this.state.startLoc;\n\n      const delimitedList = this.tsParseDelimitedList(\n        \"HeritageClauseElement\",\n        () => {\n          const node: N.TsExpressionWithTypeArguments = this.startNode();\n          node.expression = this.tsParseEntityName();\n          if (this.match(tt.lt)) {\n            node.typeParameters = this.tsParseTypeArguments();\n          }\n\n          return this.finishNode(node, \"TSExpressionWithTypeArguments\");\n        },\n      );\n\n      if (!delimitedList.length) {\n        this.raise(TSErrors.EmptyHeritageClauseType, {\n          at: originalStartLoc,\n          token,\n        });\n      }\n\n      return delimitedList;\n    }\n\n    tsParseInterfaceDeclaration(\n      node: N.TsInterfaceDeclaration,\n      properties: { declare?: true } = {},\n    ): ?N.TsInterfaceDeclaration {\n      if (this.hasFollowingLineBreak()) return null;\n      this.expectContextual(tt._interface);\n      if (properties.declare) node.declare = true;\n      if (tokenIsIdentifier(this.state.type)) {\n        node.id = this.parseIdentifier();\n        this.checkIdentifier(node.id, BIND_TS_INTERFACE);\n      } else {\n        node.id = null;\n        this.raise(TSErrors.MissingInterfaceName, { at: this.state.startLoc });\n      }\n\n      node.typeParameters = this.tsTryParseTypeParameters(\n        this.tsParseInOutModifiers.bind(this),\n      );\n      if (this.eat(tt._extends)) {\n        node.extends = this.tsParseHeritageClause(\"extends\");\n      }\n      const body: N.TSInterfaceBody = this.startNode();\n      body.body = this.tsInType(this.tsParseObjectTypeMembers.bind(this));\n      node.body = this.finishNode(body, \"TSInterfaceBody\");\n      return this.finishNode(node, \"TSInterfaceDeclaration\");\n    }\n\n    tsParseTypeAliasDeclaration(\n      node: N.TsTypeAliasDeclaration,\n    ): N.TsTypeAliasDeclaration {\n      node.id = this.parseIdentifier();\n      this.checkIdentifier(node.id, BIND_TS_TYPE);\n\n      node.typeAnnotation = this.tsInType(() => {\n        node.typeParameters = this.tsTryParseTypeParameters(\n          this.tsParseInOutModifiers.bind(this),\n        );\n\n        this.expect(tt.eq);\n\n        if (\n          this.isContextual(tt._intrinsic) &&\n          this.lookahead().type !== tt.dot\n        ) {\n          const node: N.TsKeywordType = this.startNode();\n          this.next();\n          return this.finishNode(node, \"TSIntrinsicKeyword\");\n        }\n\n        return this.tsParseType();\n      });\n\n      this.semicolon();\n      return this.finishNode(node, \"TSTypeAliasDeclaration\");\n    }\n\n    tsInNoContext<T>(cb: () => T): T {\n      const oldContext = this.state.context;\n      this.state.context = [oldContext[0]];\n      try {\n        return cb();\n      } finally {\n        this.state.context = oldContext;\n      }\n    }\n\n    /**\n     * Runs `cb` in a type context.\n     * This should be called one token *before* the first type token,\n     * so that the call to `next()` is run in type context.\n     */\n    tsInType<T>(cb: () => T): T {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      try {\n        return cb();\n      } finally {\n        this.state.inType = oldInType;\n      }\n    }\n\n    tsInDisallowConditionalTypesContext<T>(cb: () => T): T {\n      const oldInDisallowConditionalTypesContext =\n        this.state.inDisallowConditionalTypesContext;\n      this.state.inDisallowConditionalTypesContext = true;\n      try {\n        return cb();\n      } finally {\n        this.state.inDisallowConditionalTypesContext =\n          oldInDisallowConditionalTypesContext;\n      }\n    }\n\n    tsInAllowConditionalTypesContext<T>(cb: () => T): T {\n      const oldInDisallowConditionalTypesContext =\n        this.state.inDisallowConditionalTypesContext;\n      this.state.inDisallowConditionalTypesContext = false;\n      try {\n        return cb();\n      } finally {\n        this.state.inDisallowConditionalTypesContext =\n          oldInDisallowConditionalTypesContext;\n      }\n    }\n\n    tsEatThenParseType(token: TokenType): N.TsType | typeof undefined {\n      return !this.match(token) ? undefined : this.tsNextThenParseType();\n    }\n\n    tsExpectThenParseType(token: TokenType): N.TsType {\n      return this.tsDoThenParseType(() => this.expect(token));\n    }\n\n    tsNextThenParseType(): N.TsType {\n      return this.tsDoThenParseType(() => this.next());\n    }\n\n    tsDoThenParseType(cb: () => void): N.TsType {\n      return this.tsInType(() => {\n        cb();\n        return this.tsParseType();\n      });\n    }\n\n    tsParseEnumMember(): N.TsEnumMember {\n      const node: N.TsEnumMember = this.startNode();\n      // Computed property names are grammar errors in an enum, so accept just string literal or identifier.\n      node.id = this.match(tt.string)\n        ? this.parseExprAtom()\n        : this.parseIdentifier(/* liberal */ true);\n      if (this.eat(tt.eq)) {\n        node.initializer = this.parseMaybeAssignAllowIn();\n      }\n      return this.finishNode(node, \"TSEnumMember\");\n    }\n\n    tsParseEnumDeclaration(\n      node: N.TsEnumDeclaration,\n      properties: { const?: true, declare?: true } = {},\n    ): N.TsEnumDeclaration {\n      if (properties.const) node.const = true;\n      if (properties.declare) node.declare = true;\n      this.expectContextual(tt._enum);\n      node.id = this.parseIdentifier();\n      this.checkIdentifier(\n        node.id,\n        node.const ? BIND_TS_CONST_ENUM : BIND_TS_ENUM,\n      );\n\n      this.expect(tt.braceL);\n      node.members = this.tsParseDelimitedList(\n        \"EnumMembers\",\n        this.tsParseEnumMember.bind(this),\n      );\n      this.expect(tt.braceR);\n      return this.finishNode(node, \"TSEnumDeclaration\");\n    }\n\n    tsParseModuleBlock(): N.TsModuleBlock {\n      const node: N.TsModuleBlock = this.startNode();\n      this.scope.enter(SCOPE_OTHER);\n\n      this.expect(tt.braceL);\n      // Inside of a module block is considered \"top-level\", meaning it can have imports and exports.\n      this.parseBlockOrModuleBlockBody(\n        (node.body = []),\n        /* directives */ undefined,\n        /* topLevel */ true,\n        /* end */ tt.braceR,\n      );\n      this.scope.exit();\n      return this.finishNode(node, \"TSModuleBlock\");\n    }\n\n    tsParseModuleOrNamespaceDeclaration(\n      node: N.TsModuleDeclaration,\n      nested?: boolean = false,\n    ): N.TsModuleDeclaration {\n      node.id = this.parseIdentifier();\n\n      if (!nested) {\n        this.checkIdentifier(node.id, BIND_TS_NAMESPACE);\n      }\n\n      if (this.eat(tt.dot)) {\n        const inner = this.startNode();\n        this.tsParseModuleOrNamespaceDeclaration(inner, true);\n        node.body = inner;\n      } else {\n        this.scope.enter(SCOPE_TS_MODULE);\n        this.prodParam.enter(PARAM);\n        node.body = this.tsParseModuleBlock();\n        this.prodParam.exit();\n        this.scope.exit();\n      }\n      return this.finishNode(node, \"TSModuleDeclaration\");\n    }\n\n    tsParseAmbientExternalModuleDeclaration(\n      node: N.TsModuleDeclaration,\n    ): N.TsModuleDeclaration {\n      if (this.isContextual(tt._global)) {\n        node.global = true;\n        node.id = this.parseIdentifier();\n      } else if (this.match(tt.string)) {\n        node.id = this.parseExprAtom();\n      } else {\n        this.unexpected();\n      }\n      if (this.match(tt.braceL)) {\n        this.scope.enter(SCOPE_TS_MODULE);\n        this.prodParam.enter(PARAM);\n        node.body = this.tsParseModuleBlock();\n        this.prodParam.exit();\n        this.scope.exit();\n      } else {\n        this.semicolon();\n      }\n\n      return this.finishNode(node, \"TSModuleDeclaration\");\n    }\n\n    tsParseImportEqualsDeclaration(\n      node: N.TsImportEqualsDeclaration,\n      isExport?: boolean,\n    ): N.TsImportEqualsDeclaration {\n      node.isExport = isExport || false;\n      node.id = this.parseIdentifier();\n      this.checkIdentifier(node.id, BIND_LEXICAL);\n      this.expect(tt.eq);\n      const moduleReference = this.tsParseModuleReference();\n      if (\n        node.importKind === \"type\" &&\n        moduleReference.type !== \"TSExternalModuleReference\"\n      ) {\n        this.raise(TSErrors.ImportAliasHasImportType, {\n          at: moduleReference,\n        });\n      }\n      node.moduleReference = moduleReference;\n      this.semicolon();\n      return this.finishNode(node, \"TSImportEqualsDeclaration\");\n    }\n\n    tsIsExternalModuleReference(): boolean {\n      return (\n        this.isContextual(tt._require) &&\n        this.lookaheadCharCode() === charCodes.leftParenthesis\n      );\n    }\n\n    tsParseModuleReference(): N.TsModuleReference {\n      return this.tsIsExternalModuleReference()\n        ? this.tsParseExternalModuleReference()\n        : this.tsParseEntityName(/* allowReservedWords */ false);\n    }\n\n    tsParseExternalModuleReference(): N.TsExternalModuleReference {\n      const node: N.TsExternalModuleReference = this.startNode();\n      this.expectContextual(tt._require);\n      this.expect(tt.parenL);\n      if (!this.match(tt.string)) {\n        throw this.unexpected();\n      }\n      // For compatibility to estree we cannot call parseLiteral directly here\n      node.expression = this.parseExprAtom();\n      this.expect(tt.parenR);\n      return this.finishNode(node, \"TSExternalModuleReference\");\n    }\n\n    // Utilities\n\n    tsLookAhead<T>(f: () => T): T {\n      const state = this.state.clone();\n      const res = f();\n      this.state = state;\n      return res;\n    }\n\n    tsTryParseAndCatch<T: ?N.NodeBase>(f: () => T): ?T {\n      const result = this.tryParse(abort => f() || abort());\n\n      if (result.aborted || !result.node) return undefined;\n      if (result.error) this.state = result.failState;\n      return result.node;\n    }\n\n    tsTryParse<T>(f: () => ?T): ?T {\n      const state = this.state.clone();\n      const result = f();\n      if (result !== undefined && result !== false) {\n        return result;\n      } else {\n        this.state = state;\n        return undefined;\n      }\n    }\n\n    tsTryParseDeclare(nany: any): ?N.Declaration {\n      if (this.isLineTerminator()) {\n        return;\n      }\n      let starttype = this.state.type;\n      let kind;\n\n      if (this.isContextual(tt._let)) {\n        starttype = tt._var;\n        kind = \"let\";\n      }\n\n      return this.tsInAmbientContext(() => {\n        if (starttype === tt._function) {\n          nany.declare = true;\n          return this.parseFunctionStatement(\n            nany,\n            /* async */ false,\n            /* declarationPosition */ true,\n          );\n        }\n\n        if (starttype === tt._class) {\n          // While this is also set by tsParseExpressionStatement, we need to set it\n          // before parsing the class declaration to know how to register it in the scope.\n          nany.declare = true;\n          return this.parseClass(\n            nany,\n            /* isStatement */ true,\n            /* optionalId */ false,\n          );\n        }\n\n        if (starttype === tt._enum) {\n          return this.tsParseEnumDeclaration(nany, { declare: true });\n        }\n\n        if (starttype === tt._global) {\n          return this.tsParseAmbientExternalModuleDeclaration(nany);\n        }\n\n        if (starttype === tt._const || starttype === tt._var) {\n          if (!this.match(tt._const) || !this.isLookaheadContextual(\"enum\")) {\n            nany.declare = true;\n            return this.parseVarStatement(nany, kind || this.state.value, true);\n          }\n\n          // `const enum = 0;` not allowed because \"enum\" is a strict mode reserved word.\n          this.expect(tt._const);\n          return this.tsParseEnumDeclaration(nany, {\n            const: true,\n            declare: true,\n          });\n        }\n\n        if (starttype === tt._interface) {\n          const result = this.tsParseInterfaceDeclaration(nany, {\n            declare: true,\n          });\n          if (result) return result;\n        }\n\n        if (tokenIsIdentifier(starttype)) {\n          return this.tsParseDeclaration(\n            nany,\n            this.state.value,\n            /* next */ true,\n          );\n        }\n      });\n    }\n\n    // Note: this won't be called unless the keyword is allowed in `shouldParseExportDeclaration`.\n    tsTryParseExportDeclaration(): ?N.Declaration {\n      return this.tsParseDeclaration(\n        this.startNode(),\n        this.state.value,\n        /* next */ true,\n      );\n    }\n\n    tsParseExpressionStatement(node: any, expr: N.Identifier): ?N.Declaration {\n      switch (expr.name) {\n        case \"declare\": {\n          const declaration = this.tsTryParseDeclare(node);\n          if (declaration) {\n            declaration.declare = true;\n            return declaration;\n          }\n          break;\n        }\n        case \"global\":\n          // `global { }` (with no `declare`) may appear inside an ambient module declaration.\n          // Would like to use tsParseAmbientExternalModuleDeclaration here, but already ran past \"global\".\n          if (this.match(tt.braceL)) {\n            this.scope.enter(SCOPE_TS_MODULE);\n            this.prodParam.enter(PARAM);\n            const mod: N.TsModuleDeclaration = node;\n            mod.global = true;\n            mod.id = expr;\n            mod.body = this.tsParseModuleBlock();\n            this.scope.exit();\n            this.prodParam.exit();\n            return this.finishNode(mod, \"TSModuleDeclaration\");\n          }\n          break;\n\n        default:\n          return this.tsParseDeclaration(node, expr.name, /* next */ false);\n      }\n    }\n\n    // Common to tsTryParseDeclare, tsTryParseExportDeclaration, and tsParseExpressionStatement.\n    tsParseDeclaration(\n      node: any,\n      value: string,\n      next: boolean,\n    ): ?N.Declaration {\n      // no declaration apart from enum can be followed by a line break.\n      switch (value) {\n        case \"abstract\":\n          if (\n            this.tsCheckLineTerminator(next) &&\n            (this.match(tt._class) || tokenIsIdentifier(this.state.type))\n          ) {\n            return this.tsParseAbstractDeclaration(node);\n          }\n          break;\n\n        case \"module\":\n          if (this.tsCheckLineTerminator(next)) {\n            if (this.match(tt.string)) {\n              return this.tsParseAmbientExternalModuleDeclaration(node);\n            } else if (tokenIsIdentifier(this.state.type)) {\n              return this.tsParseModuleOrNamespaceDeclaration(node);\n            }\n          }\n          break;\n\n        case \"namespace\":\n          if (\n            this.tsCheckLineTerminator(next) &&\n            tokenIsIdentifier(this.state.type)\n          ) {\n            return this.tsParseModuleOrNamespaceDeclaration(node);\n          }\n          break;\n\n        case \"type\":\n          if (\n            this.tsCheckLineTerminator(next) &&\n            tokenIsIdentifier(this.state.type)\n          ) {\n            return this.tsParseTypeAliasDeclaration(node);\n          }\n          break;\n      }\n    }\n\n    tsCheckLineTerminator(next: boolean) {\n      if (next) {\n        if (this.hasFollowingLineBreak()) return false;\n        this.next();\n        return true;\n      }\n      return !this.isLineTerminator();\n    }\n\n    tsTryParseGenericAsyncArrowFunction(\n      startPos: number,\n      startLoc: Position,\n    ): ?N.ArrowFunctionExpression {\n      if (!this.match(tt.lt)) {\n        return undefined;\n      }\n\n      const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n      this.state.maybeInArrowParameters = true;\n\n      const res: ?N.ArrowFunctionExpression = this.tsTryParseAndCatch(() => {\n        const node: N.ArrowFunctionExpression = this.startNodeAt(\n          startPos,\n          startLoc,\n        );\n        node.typeParameters = this.tsParseTypeParameters();\n        // Don't use overloaded parseFunctionParams which would look for \"<\" again.\n        super.parseFunctionParams(node);\n        node.returnType = this.tsTryParseTypeOrTypePredicateAnnotation();\n        this.expect(tt.arrow);\n        return node;\n      });\n\n      this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n\n      if (!res) {\n        return undefined;\n      }\n\n      return this.parseArrowExpression(\n        res,\n        /* params are already set */ null,\n        /* async */ true,\n      );\n    }\n\n    // Used when parsing type arguments from ES productions, where the first token\n    // has been created without state.inType. Thus we need to rescan the lt token.\n    tsParseTypeArgumentsInExpression(): N.TsTypeParameterInstantiation | void {\n      if (this.reScan_lt() !== tt.lt) {\n        return undefined;\n      }\n      return this.tsParseTypeArguments();\n    }\n\n    tsParseTypeArguments(): N.TsTypeParameterInstantiation {\n      const node = this.startNode();\n      node.params = this.tsInType(() =>\n        // Temporarily remove a JSX parsing context, which makes us scan different tokens.\n        this.tsInNoContext(() => {\n          this.expect(tt.lt);\n          return this.tsParseDelimitedList(\n            \"TypeParametersOrArguments\",\n            this.tsParseType.bind(this),\n          );\n        }),\n      );\n      if (node.params.length === 0) {\n        this.raise(TSErrors.EmptyTypeArguments, { at: node });\n      }\n      this.expect(tt.gt);\n      return this.finishNode(node, \"TSTypeParameterInstantiation\");\n    }\n\n    tsIsDeclarationStart(): boolean {\n      return tokenIsTSDeclarationStart(this.state.type);\n    }\n\n    // ======================================================\n    // OVERRIDES\n    // ======================================================\n\n    isExportDefaultSpecifier(): boolean {\n      if (this.tsIsDeclarationStart()) return false;\n      return super.isExportDefaultSpecifier();\n    }\n\n    parseAssignableListItem(\n      allowModifiers: ?boolean,\n      decorators: N.Decorator[],\n    ): N.Pattern | N.TSParameterProperty {\n      // Store original location/position to include modifiers in range\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n\n      let accessibility: ?N.Accessibility;\n      let readonly = false;\n      let override = false;\n      if (allowModifiers !== undefined) {\n        const modified = {};\n        this.tsParseModifiers({\n          modified,\n          allowedModifiers: [\n            \"public\",\n            \"private\",\n            \"protected\",\n            \"override\",\n            \"readonly\",\n          ],\n        });\n        accessibility = modified.accessibility;\n        override = modified.override;\n        readonly = modified.readonly;\n        if (\n          allowModifiers === false &&\n          (accessibility || readonly || override)\n        ) {\n          this.raise(TSErrors.UnexpectedParameterModifier, { at: startLoc });\n        }\n      }\n\n      const left = this.parseMaybeDefault();\n      this.parseAssignableListItemTypes(left);\n      const elt = this.parseMaybeDefault(left.start, left.loc.start, left);\n      if (accessibility || readonly || override) {\n        const pp: N.TSParameterProperty = this.startNodeAt(startPos, startLoc);\n        if (decorators.length) {\n          pp.decorators = decorators;\n        }\n        if (accessibility) pp.accessibility = accessibility;\n        if (readonly) pp.readonly = readonly;\n        if (override) pp.override = override;\n        if (elt.type !== \"Identifier\" && elt.type !== \"AssignmentPattern\") {\n          this.raise(TSErrors.UnsupportedParameterPropertyKind, { at: pp });\n        }\n        pp.parameter = ((elt: any): N.Identifier | N.AssignmentPattern);\n        return this.finishNode(pp, \"TSParameterProperty\");\n      }\n\n      if (decorators.length) {\n        left.decorators = decorators;\n      }\n\n      return elt;\n    }\n\n    isSimpleParameter(node) {\n      return (\n        (node.type === \"TSParameterProperty\" &&\n          super.isSimpleParameter(node.parameter)) ||\n        super.isSimpleParameter(node)\n      );\n    }\n\n    parseFunctionBodyAndFinish(\n      node: N.BodilessFunctionOrMethodBase,\n      type: string,\n      isMethod?: boolean = false,\n    ): void {\n      if (this.match(tt.colon)) {\n        node.returnType = this.tsParseTypeOrTypePredicateAnnotation(tt.colon);\n      }\n\n      const bodilessType =\n        type === \"FunctionDeclaration\"\n          ? \"TSDeclareFunction\"\n          : type === \"ClassMethod\" || type === \"ClassPrivateMethod\"\n          ? \"TSDeclareMethod\"\n          : undefined;\n      if (bodilessType && !this.match(tt.braceL) && this.isLineTerminator()) {\n        this.finishNode(node, bodilessType);\n        return;\n      }\n      if (bodilessType === \"TSDeclareFunction\" && this.state.isAmbientContext) {\n        this.raise(TSErrors.DeclareFunctionHasImplementation, { at: node });\n        if (\n          // $FlowIgnore\n          node.declare\n        ) {\n          super.parseFunctionBodyAndFinish(node, bodilessType, isMethod);\n          return;\n        }\n      }\n\n      super.parseFunctionBodyAndFinish(node, type, isMethod);\n    }\n\n    registerFunctionStatementId(node: N.Function): void {\n      if (!node.body && node.id) {\n        // Function ids are validated after parsing their body.\n        // For bodyless function, we need to do it here.\n        this.checkIdentifier(node.id, BIND_TS_AMBIENT);\n      } else {\n        super.registerFunctionStatementId(...arguments);\n      }\n    }\n\n    tsCheckForInvalidTypeCasts(items: $ReadOnlyArray<?N.Expression>) {\n      items.forEach(node => {\n        if (node?.type === \"TSTypeCastExpression\") {\n          this.raise(TSErrors.UnexpectedTypeAnnotation, {\n            at: node.typeAnnotation,\n          });\n        }\n      });\n    }\n\n    toReferencedList(\n      exprList: $ReadOnlyArray<?N.Expression>,\n      isInParens?: boolean, // eslint-disable-line no-unused-vars\n    ): $ReadOnlyArray<?N.Expression> {\n      // Handles invalid scenarios like: `f(a:b)`, `(a:b);`, and `(a:b,c:d)`.\n      //\n      // Note that `f<T>(a:b)` goes through a different path and is handled\n      // in `parseSubscript` directly.\n      this.tsCheckForInvalidTypeCasts(exprList);\n      return exprList;\n    }\n\n    parseArrayLike(...args): N.ArrayExpression | N.TupleExpression {\n      const node = super.parseArrayLike(...args);\n\n      if (node.type === \"ArrayExpression\") {\n        this.tsCheckForInvalidTypeCasts(node.elements);\n      }\n\n      return node;\n    }\n\n    parseSubscript(\n      base: N.Expression,\n      startPos: number,\n      startLoc: Position,\n      noCalls: ?boolean,\n      state: N.ParseSubscriptState,\n    ): N.Expression {\n      if (!this.hasPrecedingLineBreak() && this.match(tt.bang)) {\n        // When ! is consumed as a postfix operator (non-null assertion),\n        // disallow JSX tag forming after. e.g. When parsing `p! < n.p!`\n        // `<n.p` can not be a start of JSX tag\n        this.state.canStartJSXElement = false;\n        this.next();\n\n        const nonNullExpression: N.TsNonNullExpression = this.startNodeAt(\n          startPos,\n          startLoc,\n        );\n        nonNullExpression.expression = base;\n        return this.finishNode(nonNullExpression, \"TSNonNullExpression\");\n      }\n\n      let isOptionalCall = false;\n      if (\n        this.match(tt.questionDot) &&\n        this.lookaheadCharCode() === charCodes.lessThan\n      ) {\n        if (noCalls) {\n          state.stop = true;\n          return base;\n        }\n        state.optionalChainMember = isOptionalCall = true;\n        this.next();\n      }\n\n      // handles 'f<<T>'\n      if (this.match(tt.lt) || this.match(tt.bitShiftL)) {\n        let missingParenErrorLoc;\n        // tsTryParseAndCatch is expensive, so avoid if not necessary.\n        // There are number of things we are going to \"maybe\" parse, like type arguments on\n        // tagged template expressions. If any of them fail, walk it back and continue.\n        const result = this.tsTryParseAndCatch(() => {\n          if (!noCalls && this.atPossibleAsyncArrow(base)) {\n            // Almost certainly this is a generic async function `async <T>() => ...\n            // But it might be a call with a type argument `async<T>();`\n            const asyncArrowFn = this.tsTryParseGenericAsyncArrowFunction(\n              startPos,\n              startLoc,\n            );\n            if (asyncArrowFn) {\n              return asyncArrowFn;\n            }\n          }\n\n          const typeArguments = this.tsParseTypeArgumentsInExpression();\n          if (!typeArguments) return;\n\n          if (isOptionalCall && !this.match(tt.parenL)) {\n            missingParenErrorLoc = this.state.curPosition();\n            return;\n          }\n\n          if (tokenIsTemplate(this.state.type)) {\n            const result = this.parseTaggedTemplateExpression(\n              base,\n              startPos,\n              startLoc,\n              state,\n            );\n            result.typeParameters = typeArguments;\n            return result;\n          }\n\n          if (!noCalls && this.eat(tt.parenL)) {\n            const node: N.CallExpression = this.startNodeAt(startPos, startLoc);\n            node.callee = base;\n            // possibleAsync always false here, because we would have handled it above.\n            // $FlowIgnore (won't be any undefined arguments)\n            node.arguments = this.parseCallExpressionArguments(\n              tt.parenR,\n              /* possibleAsync */ false,\n            );\n\n            // Handles invalid case: `f<T>(a:b)`\n            this.tsCheckForInvalidTypeCasts(node.arguments);\n\n            node.typeParameters = typeArguments;\n            if (state.optionalChainMember) {\n              // $FlowIgnore\n              node.optional = isOptionalCall;\n            }\n\n            return this.finishCallExpression(node, state.optionalChainMember);\n          }\n\n          const tokenType = this.state.type;\n          if (\n            // a<b>>c is not (a<b>)>c, but a<(b>>c)\n            tokenType === tt.gt ||\n            // a<b>c is (a<b)>c\n            (tokenType !== tt.parenL &&\n              tokenCanStartExpression(tokenType) &&\n              !this.hasPrecedingLineBreak())\n          ) {\n            // Bail out.\n            return;\n          }\n\n          const node: N.TsInstantiationExpression = this.startNodeAt(\n            startPos,\n            startLoc,\n          );\n          node.expression = base;\n          node.typeParameters = typeArguments;\n          return this.finishNode(node, \"TSInstantiationExpression\");\n        });\n\n        if (missingParenErrorLoc) {\n          this.unexpected(missingParenErrorLoc, tt.parenL);\n        }\n\n        if (result) {\n          if (\n            result.type === \"TSInstantiationExpression\" &&\n            (this.match(tt.dot) ||\n              (this.match(tt.questionDot) &&\n                this.lookaheadCharCode() !== charCodes.leftParenthesis))\n          ) {\n            this.raise(\n              TSErrors.InvalidPropertyAccessAfterInstantiationExpression,\n              { at: this.state.startLoc },\n            );\n          }\n          return result;\n        }\n      }\n\n      return super.parseSubscript(base, startPos, startLoc, noCalls, state);\n    }\n\n    parseNewCallee(node: N.NewExpression): void {\n      super.parseNewCallee(node);\n\n      const { callee } = node;\n      if (\n        callee.type === \"TSInstantiationExpression\" &&\n        !callee.extra?.parenthesized\n      ) {\n        node.typeParameters = callee.typeParameters;\n        node.callee = callee.expression;\n      }\n    }\n\n    parseExprOp(\n      left: N.Expression,\n      leftStartPos: number,\n      leftStartLoc: Position,\n      minPrec: number,\n    ) {\n      if (\n        tokenOperatorPrecedence(tt._in) > minPrec &&\n        !this.hasPrecedingLineBreak() &&\n        this.isContextual(tt._as)\n      ) {\n        const node: N.TsAsExpression = this.startNodeAt(\n          leftStartPos,\n          leftStartLoc,\n        );\n        node.expression = left;\n        const _const = this.tsTryNextParseConstantContext();\n        if (_const) {\n          node.typeAnnotation = _const;\n        } else {\n          node.typeAnnotation = this.tsNextThenParseType();\n        }\n        this.finishNode(node, \"TSAsExpression\");\n        // rescan `<`, `>` because they were scanned when this.state.inType was true\n        this.reScan_lt_gt();\n        return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec);\n      }\n\n      return super.parseExprOp(left, leftStartPos, leftStartLoc, minPrec);\n    }\n\n    checkReservedWord(\n      word: string,\n      startLoc: Position,\n      checkKeywords: boolean,\n      isBinding: boolean,\n    ): void {\n      // Strict mode words may be allowed as in `declare namespace N { const static: number; }`.\n      // And we have a type checker anyway, so don't bother having the parser do it.\n      if (!this.state.isAmbientContext) {\n        super.checkReservedWord(word, startLoc, checkKeywords, isBinding);\n      }\n    }\n\n    /*\n    Don't bother doing this check in TypeScript code because:\n    1. We may have a nested export statement with the same name:\n      export const x = 0;\n      export namespace N {\n        export const x = 1;\n      }\n    2. We have a type checker to warn us about this sort of thing.\n    */\n    checkDuplicateExports() {}\n\n    parseImport(node: N.Node): N.AnyImport {\n      node.importKind = \"value\";\n      if (\n        tokenIsIdentifier(this.state.type) ||\n        this.match(tt.star) ||\n        this.match(tt.braceL)\n      ) {\n        let ahead = this.lookahead();\n\n        if (\n          this.isContextual(tt._type) &&\n          // import type, { a } from \"b\";\n          ahead.type !== tt.comma &&\n          // import type from \"a\";\n          ahead.type !== tt._from &&\n          // import type = require(\"a\");\n          ahead.type !== tt.eq\n        ) {\n          node.importKind = \"type\";\n          this.next();\n          ahead = this.lookahead();\n        }\n\n        if (tokenIsIdentifier(this.state.type) && ahead.type === tt.eq) {\n          return this.tsParseImportEqualsDeclaration(node);\n        }\n      }\n\n      const importNode = super.parseImport(node);\n      /*:: invariant(importNode.type !== \"TSImportEqualsDeclaration\") */\n\n      // `import type` can only be used on imports with named imports or with a\n      // default import - but not both\n      if (\n        importNode.importKind === \"type\" &&\n        importNode.specifiers.length > 1 &&\n        importNode.specifiers[0].type === \"ImportDefaultSpecifier\"\n      ) {\n        this.raise(TSErrors.TypeImportCannotSpecifyDefaultAndNamed, {\n          at: importNode,\n        });\n      }\n\n      return importNode;\n    }\n\n    parseExport(node: N.Node): N.AnyExport {\n      if (this.match(tt._import)) {\n        // `export import A = B;`\n        this.next(); // eat `tt._import`\n        if (\n          this.isContextual(tt._type) &&\n          this.lookaheadCharCode() !== charCodes.equalsTo\n        ) {\n          node.importKind = \"type\";\n          this.next(); // eat \"type\"\n        } else {\n          node.importKind = \"value\";\n        }\n        return this.tsParseImportEqualsDeclaration(node, /* isExport */ true);\n      } else if (this.eat(tt.eq)) {\n        // `export = x;`\n        const assign: N.TsExportAssignment = node;\n        assign.expression = this.parseExpression();\n        this.semicolon();\n        return this.finishNode(assign, \"TSExportAssignment\");\n      } else if (this.eatContextual(tt._as)) {\n        // `export as namespace A;`\n        const decl: N.TsNamespaceExportDeclaration = node;\n        // See `parseNamespaceExportDeclaration` in TypeScript's own parser\n        this.expectContextual(tt._namespace);\n        decl.id = this.parseIdentifier();\n        this.semicolon();\n        return this.finishNode(decl, \"TSNamespaceExportDeclaration\");\n      } else {\n        if (\n          this.isContextual(tt._type) &&\n          this.lookahead().type === tt.braceL\n        ) {\n          this.next();\n          node.exportKind = \"type\";\n        } else {\n          node.exportKind = \"value\";\n        }\n\n        return super.parseExport(node);\n      }\n    }\n\n    isAbstractClass(): boolean {\n      return (\n        this.isContextual(tt._abstract) && this.lookahead().type === tt._class\n      );\n    }\n\n    parseExportDefaultExpression(): N.Expression | N.Declaration {\n      if (this.isAbstractClass()) {\n        const cls = this.startNode();\n        this.next(); // Skip \"abstract\"\n        cls.abstract = true;\n        this.parseClass(cls, true, true);\n        return cls;\n      }\n\n      // export default interface allowed in:\n      // https://github.com/Microsoft/TypeScript/pull/16040\n      if (this.match(tt._interface)) {\n        const result = this.tsParseInterfaceDeclaration(this.startNode());\n        if (result) return result;\n      }\n\n      return super.parseExportDefaultExpression();\n    }\n\n    parseVarStatement(\n      node: N.VariableDeclaration,\n      kind: \"var\" | \"let\" | \"const\",\n      allowMissingInitializer: boolean = false,\n    ) {\n      const { isAmbientContext } = this.state;\n      const declaration = super.parseVarStatement(\n        node,\n        kind,\n        allowMissingInitializer || isAmbientContext,\n      );\n\n      if (!isAmbientContext) return declaration;\n\n      for (const { id, init } of declaration.declarations) {\n        // Empty initializer is the easy case that we want.\n        if (!init) continue;\n\n        // var and let aren't ever allowed initializers.\n        //\n        // If a const declaration has no type annotation and is initiailized to\n        // a string literal, numeric literal, or enum reference, then it is\n        // allowed. In an ideal world, we'd check whether init was *actually* an\n        // enum reference, but we allow anything that \"could be\" a literal enum\n        // in `isPossiblyLiteralEnum` since we don't have all the information\n        // that the typescript compiler has.\n        if (kind !== \"const\" || !!id.typeAnnotation) {\n          this.raise(TSErrors.InitializerNotAllowedInAmbientContext, {\n            at: init,\n          });\n        } else if (\n          init.type !== \"StringLiteral\" &&\n          init.type !== \"BooleanLiteral\" &&\n          init.type !== \"NumericLiteral\" &&\n          init.type !== \"BigIntLiteral\" &&\n          (init.type !== \"TemplateLiteral\" || init.expressions.length > 0) &&\n          !isPossiblyLiteralEnum(init)\n        ) {\n          this.raise(\n            TSErrors.ConstInitiailizerMustBeStringOrNumericLiteralOrLiteralEnumReference,\n            { at: init },\n          );\n        }\n      }\n\n      return declaration;\n    }\n\n    parseStatementContent(context: ?string, topLevel: ?boolean): N.Statement {\n      if (this.match(tt._const) && this.isLookaheadContextual(\"enum\")) {\n        const node: N.TsEnumDeclaration = this.startNode();\n        this.expect(tt._const); // eat 'const'\n        return this.tsParseEnumDeclaration(node, { const: true });\n      }\n\n      if (this.isContextual(tt._enum)) {\n        return this.tsParseEnumDeclaration(this.startNode());\n      }\n\n      if (this.isContextual(tt._interface)) {\n        const result = this.tsParseInterfaceDeclaration(this.startNode());\n        if (result) return result;\n      }\n\n      return super.parseStatementContent(context, topLevel);\n    }\n\n    parseAccessModifier(): ?N.Accessibility {\n      return this.tsParseModifier([\"public\", \"protected\", \"private\"]);\n    }\n\n    tsHasSomeModifiers(member: any, modifiers: TsModifier[]): boolean {\n      return modifiers.some(modifier => {\n        if (tsIsAccessModifier(modifier)) {\n          return member.accessibility === modifier;\n        }\n        return !!member[modifier];\n      });\n    }\n\n    tsIsStartOfStaticBlocks() {\n      return (\n        this.isContextual(tt._static) &&\n        this.lookaheadCharCode() === charCodes.leftCurlyBrace\n      );\n    }\n\n    parseClassMember(\n      classBody: N.ClassBody,\n      member: any,\n      state: N.ParseClassMemberState,\n    ): void {\n      const modifiers = [\n        \"declare\",\n        \"private\",\n        \"public\",\n        \"protected\",\n        \"override\",\n        \"abstract\",\n        \"readonly\",\n        \"static\",\n      ];\n      this.tsParseModifiers({\n        modified: member,\n        allowedModifiers: modifiers,\n        disallowedModifiers: [\"in\", \"out\"],\n        stopOnStartOfClassStaticBlock: true,\n        errorTemplate: TSErrors.InvalidModifierOnTypeParameterPositions,\n      });\n\n      const callParseClassMemberWithIsStatic = () => {\n        if (this.tsIsStartOfStaticBlocks()) {\n          this.next(); // eat \"static\"\n          this.next(); // eat \"{\"\n          if (this.tsHasSomeModifiers(member, modifiers)) {\n            this.raise(TSErrors.StaticBlockCannotHaveModifier, {\n              at: this.state.curPosition(),\n            });\n          }\n          this.parseClassStaticBlock(classBody, ((member: any): N.StaticBlock));\n        } else {\n          this.parseClassMemberWithIsStatic(\n            classBody,\n            member,\n            state,\n            !!member.static,\n          );\n        }\n      };\n      if (member.declare) {\n        this.tsInAmbientContext(callParseClassMemberWithIsStatic);\n      } else {\n        callParseClassMemberWithIsStatic();\n      }\n    }\n\n    parseClassMemberWithIsStatic(\n      classBody: N.ClassBody,\n      member: N.ClassMember | N.TsIndexSignature,\n      state: N.ParseClassMemberState,\n      isStatic: boolean,\n    ): void {\n      const idx = this.tsTryParseIndexSignature(member);\n      if (idx) {\n        classBody.body.push(idx);\n\n        if ((member: any).abstract) {\n          this.raise(TSErrors.IndexSignatureHasAbstract, { at: member });\n        }\n        if ((member: any).accessibility) {\n          this.raise(TSErrors.IndexSignatureHasAccessibility, {\n            at: member,\n            modifier: (member: any).accessibility,\n          });\n        }\n        if ((member: any).declare) {\n          this.raise(TSErrors.IndexSignatureHasDeclare, { at: member });\n        }\n        if ((member: any).override) {\n          this.raise(TSErrors.IndexSignatureHasOverride, { at: member });\n        }\n\n        return;\n      }\n\n      if (!this.state.inAbstractClass && (member: any).abstract) {\n        this.raise(TSErrors.NonAbstractClassHasAbstractMethod, {\n          at: member,\n        });\n      }\n\n      if ((member: any).override) {\n        if (!state.hadSuperClass) {\n          this.raise(TSErrors.OverrideNotInSubClass, { at: member });\n        }\n      }\n\n      /*:: invariant(member.type !== \"TSIndexSignature\") */\n\n      super.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n    }\n\n    parsePostMemberNameModifiers(\n      methodOrProp: N.ClassMethod | N.ClassProperty | N.ClassPrivateProperty,\n    ): void {\n      const optional = this.eat(tt.question);\n      if (optional) methodOrProp.optional = true;\n\n      if ((methodOrProp: any).readonly && this.match(tt.parenL)) {\n        this.raise(TSErrors.ClassMethodHasReadonly, { at: methodOrProp });\n      }\n\n      if ((methodOrProp: any).declare && this.match(tt.parenL)) {\n        this.raise(TSErrors.ClassMethodHasDeclare, { at: methodOrProp });\n      }\n    }\n\n    // Note: The reason we do this in `parseExpressionStatement` and not `parseStatement`\n    // is that e.g. `type()` is valid JS, so we must try parsing that first.\n    // If it's really a type, we will parse `type` as the statement, and can correct it here\n    // by parsing the rest.\n    parseExpressionStatement(\n      node: N.ExpressionStatement,\n      expr: N.Expression,\n    ): N.Statement {\n      const decl =\n        expr.type === \"Identifier\"\n          ? this.tsParseExpressionStatement(node, expr)\n          : undefined;\n      return decl || super.parseExpressionStatement(node, expr);\n    }\n\n    // export type\n    // Should be true for anything parsed by `tsTryParseExportDeclaration`.\n    shouldParseExportDeclaration(): boolean {\n      if (this.tsIsDeclarationStart()) return true;\n      return super.shouldParseExportDeclaration();\n    }\n\n    // An apparent conditional expression could actually be an optional parameter in an arrow function.\n    parseConditional(\n      expr: N.Expression,\n      startPos: number,\n      startLoc: Position,\n      refExpressionErrors?: ?ExpressionErrors,\n    ): N.Expression {\n      // only do the expensive clone if there is a question mark\n      // and if we come from inside parens\n      if (!this.state.maybeInArrowParameters || !this.match(tt.question)) {\n        return super.parseConditional(\n          expr,\n          startPos,\n          startLoc,\n          refExpressionErrors,\n        );\n      }\n\n      const result = this.tryParse(() =>\n        super.parseConditional(expr, startPos, startLoc),\n      );\n\n      if (!result.node) {\n        if (result.error) {\n          /*:: invariant(refExpressionErrors != null) */\n          super.setOptionalParametersError(refExpressionErrors, result.error);\n        }\n\n        return expr;\n      }\n      if (result.error) this.state = result.failState;\n      return result.node;\n    }\n\n    // Note: These \"type casts\" are *not* valid TS expressions.\n    // But we parse them here and change them when completing the arrow function.\n    parseParenItem(\n      node: N.Expression,\n      startPos: number,\n      startLoc: Position,\n    ): N.Expression {\n      node = super.parseParenItem(node, startPos, startLoc);\n      if (this.eat(tt.question)) {\n        node.optional = true;\n        // Include questionmark in location of node\n        // Don't use this.finishNode() as otherwise we might process comments twice and\n        // include already consumed parens\n        this.resetEndLocation(node);\n      }\n\n      if (this.match(tt.colon)) {\n        const typeCastNode: N.TsTypeCastExpression = this.startNodeAt(\n          startPos,\n          startLoc,\n        );\n        typeCastNode.expression = node;\n        typeCastNode.typeAnnotation = this.tsParseTypeAnnotation();\n\n        return this.finishNode(typeCastNode, \"TSTypeCastExpression\");\n      }\n\n      return node;\n    }\n\n    parseExportDeclaration(node: N.ExportNamedDeclaration): ?N.Declaration {\n      if (!this.state.isAmbientContext && this.isContextual(tt._declare)) {\n        return this.tsInAmbientContext(() => this.parseExportDeclaration(node));\n      }\n\n      // Store original location/position\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n\n      const isDeclare = this.eatContextual(tt._declare);\n\n      if (\n        isDeclare &&\n        (this.isContextual(tt._declare) || !this.shouldParseExportDeclaration())\n      ) {\n        throw this.raise(TSErrors.ExpectedAmbientAfterExportDeclare, {\n          at: this.state.startLoc,\n        });\n      }\n\n      const isIdentifier = tokenIsIdentifier(this.state.type);\n      const declaration: ?N.Declaration =\n        (isIdentifier && this.tsTryParseExportDeclaration()) ||\n        super.parseExportDeclaration(node);\n\n      if (!declaration) return null;\n\n      if (\n        declaration.type === \"TSInterfaceDeclaration\" ||\n        declaration.type === \"TSTypeAliasDeclaration\" ||\n        isDeclare\n      ) {\n        node.exportKind = \"type\";\n      }\n\n      if (isDeclare) {\n        // Reset location to include `declare` in range\n        this.resetStartLocation(declaration, startPos, startLoc);\n\n        declaration.declare = true;\n      }\n\n      return declaration;\n    }\n\n    parseClassId(\n      node: N.Class,\n      isStatement: boolean,\n      optionalId: ?boolean,\n    ): void {\n      if ((!isStatement || optionalId) && this.isContextual(tt._implements)) {\n        return;\n      }\n\n      super.parseClassId(\n        node,\n        isStatement,\n        optionalId,\n        (node: any).declare ? BIND_TS_AMBIENT : BIND_CLASS,\n      );\n      const typeParameters = this.tsTryParseTypeParameters(\n        this.tsParseInOutModifiers.bind(this),\n      );\n      if (typeParameters) node.typeParameters = typeParameters;\n    }\n\n    parseClassPropertyAnnotation(\n      node: N.ClassProperty | N.ClassPrivateProperty,\n    ): void {\n      if (!node.optional && this.eat(tt.bang)) {\n        node.definite = true;\n      }\n\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) node.typeAnnotation = type;\n    }\n\n    parseClassProperty(node: N.ClassProperty): N.ClassProperty {\n      this.parseClassPropertyAnnotation(node);\n\n      if (this.state.isAmbientContext && this.match(tt.eq)) {\n        this.raise(TSErrors.DeclareClassFieldHasInitializer, {\n          at: this.state.startLoc,\n        });\n      }\n      if (node.abstract && this.match(tt.eq)) {\n        const { key } = node;\n        this.raise(TSErrors.AbstractPropertyHasInitializer, {\n          at: this.state.startLoc,\n          propertyName:\n            key.type === \"Identifier\" && !node.computed\n              ? key.name\n              : `[${this.input.slice(key.start, key.end)}]`,\n        });\n      }\n\n      return super.parseClassProperty(node);\n    }\n\n    parseClassPrivateProperty(\n      node: N.ClassPrivateProperty,\n    ): N.ClassPrivateProperty {\n      // $FlowIgnore\n      if (node.abstract) {\n        this.raise(TSErrors.PrivateElementHasAbstract, { at: node });\n      }\n\n      // $FlowIgnore\n      if (node.accessibility) {\n        this.raise(TSErrors.PrivateElementHasAccessibility, {\n          at: node,\n          modifier: node.accessibility,\n        });\n      }\n\n      this.parseClassPropertyAnnotation(node);\n      return super.parseClassPrivateProperty(node);\n    }\n\n    pushClassMethod(\n      classBody: N.ClassBody,\n      method: N.ClassMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isConstructor: boolean,\n      allowsDirectSuper: boolean,\n    ): void {\n      const typeParameters = this.tsTryParseTypeParameters();\n      if (typeParameters && isConstructor) {\n        this.raise(TSErrors.ConstructorHasTypeParameters, {\n          at: typeParameters,\n        });\n      }\n\n      // $FlowIgnore\n      const { declare = false, kind } = method;\n\n      if (declare && (kind === \"get\" || kind === \"set\")) {\n        this.raise(TSErrors.DeclareAccessor, { at: method, kind });\n      }\n      if (typeParameters) method.typeParameters = typeParameters;\n      super.pushClassMethod(\n        classBody,\n        method,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowsDirectSuper,\n      );\n    }\n\n    pushClassPrivateMethod(\n      classBody: N.ClassBody,\n      method: N.ClassPrivateMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n    ): void {\n      const typeParameters = this.tsTryParseTypeParameters();\n      if (typeParameters) method.typeParameters = typeParameters;\n      super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n    }\n\n    declareClassPrivateMethodInScope(\n      node: N.ClassPrivateMethod | N.EstreeMethodDefinition | N.TSDeclareMethod,\n      kind: number,\n    ) {\n      if (node.type === \"TSDeclareMethod\") return;\n      // This happens when using the \"estree\" plugin.\n      if (node.type === \"MethodDefinition\" && !node.value.body) return;\n\n      super.declareClassPrivateMethodInScope(node, kind);\n    }\n\n    parseClassSuper(node: N.Class): void {\n      super.parseClassSuper(node);\n      // handle `extends f<<T>\n      if (node.superClass && (this.match(tt.lt) || this.match(tt.bitShiftL))) {\n        node.superTypeParameters = this.tsParseTypeArgumentsInExpression();\n      }\n      if (this.eatContextual(tt._implements)) {\n        node.implements = this.tsParseHeritageClause(\"implements\");\n      }\n    }\n\n    parseObjPropValue(prop: N.ObjectMember, ...args): void {\n      const typeParameters = this.tsTryParseTypeParameters();\n      if (typeParameters) prop.typeParameters = typeParameters;\n\n      super.parseObjPropValue(prop, ...args);\n    }\n\n    parseFunctionParams(node: N.Function, allowModifiers?: boolean): void {\n      const typeParameters = this.tsTryParseTypeParameters();\n      if (typeParameters) node.typeParameters = typeParameters;\n      super.parseFunctionParams(node, allowModifiers);\n    }\n\n    // `let x: number;`\n    parseVarId(\n      decl: N.VariableDeclarator,\n      kind: \"var\" | \"let\" | \"const\",\n    ): void {\n      super.parseVarId(decl, kind);\n      if (\n        decl.id.type === \"Identifier\" &&\n        !this.hasPrecedingLineBreak() &&\n        this.eat(tt.bang)\n      ) {\n        decl.definite = true;\n      }\n\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) {\n        decl.id.typeAnnotation = type;\n        this.resetEndLocation(decl.id); // set end position to end of type\n      }\n    }\n\n    // parse the return type of an async arrow function - let foo = (async (): number => {});\n    parseAsyncArrowFromCallExpression(\n      node: N.ArrowFunctionExpression,\n      call: N.CallExpression,\n    ): N.ArrowFunctionExpression {\n      if (this.match(tt.colon)) {\n        node.returnType = this.tsParseTypeAnnotation();\n      }\n      return super.parseAsyncArrowFromCallExpression(node, call);\n    }\n\n    parseMaybeAssign(...args): N.Expression {\n      // Note: When the JSX plugin is on, type assertions (`<T> x`) aren't valid syntax.\n\n      let state: ?State;\n      let jsx;\n      let typeCast;\n\n      if (\n        this.hasPlugin(\"jsx\") &&\n        (this.match(tt.jsxTagStart) || this.match(tt.lt))\n      ) {\n        // Prefer to parse JSX if possible. But may be an arrow fn.\n        state = this.state.clone();\n\n        jsx = this.tryParse(() => super.parseMaybeAssign(...args), state);\n\n        /*:: invariant(!jsx.aborted) */\n        /*:: invariant(jsx.node != null) */\n        if (!jsx.error) return jsx.node;\n\n        // Remove `tc.j_expr` or `tc.j_oTag` from context added\n        // by parsing `jsxTagStart` to stop the JSX plugin from\n        // messing with the tokens\n        const { context } = this.state;\n        const currentContext = context[context.length - 1];\n        if (currentContext === tc.j_oTag || currentContext === tc.j_expr) {\n          context.pop();\n        }\n      }\n\n      if (!jsx?.error && !this.match(tt.lt)) {\n        return super.parseMaybeAssign(...args);\n      }\n\n      // Either way, we're looking at a '<': tt.jsxTagStart or relational.\n\n      // If the state was cloned in the JSX parsing branch above but there\n      // have been any error in the tryParse call, this.state is set to state\n      // so we still need to clone it.\n      if (!state || state === this.state) state = this.state.clone();\n\n      let typeParameters: ?N.TsTypeParameterDeclaration;\n      const arrow = this.tryParse(abort => {\n        // This is similar to TypeScript's `tryParseParenthesizedArrowFunctionExpression`.\n        typeParameters = this.tsParseTypeParameters();\n        const expr = super.parseMaybeAssign(...args);\n\n        if (\n          expr.type !== \"ArrowFunctionExpression\" ||\n          expr.extra?.parenthesized\n        ) {\n          abort();\n        }\n\n        // Correct TypeScript code should have at least 1 type parameter, but don't crash on bad code.\n        if (typeParameters?.params.length !== 0) {\n          this.resetStartLocationFromNode(expr, typeParameters);\n        }\n        expr.typeParameters = typeParameters;\n\n        if (process.env.BABEL_8_BREAKING) {\n          if (\n            this.hasPlugin(\"jsx\") &&\n            expr.typeParameters.params.length === 1 &&\n            !expr.typeParameters.extra?.trailingComma\n          ) {\n            // report error if single type parameter used without trailing comma.\n            const parameter = expr.typeParameters.params[0];\n            if (!parameter.constraint) {\n              // A single type parameter must either have constraints\n              // or a trailing comma, otherwise it's ambiguous with JSX.\n              this.raise(TSErrors.SingleTypeParameterWithoutTrailingComma, {\n                at: createPositionWithColumnOffset(parameter.loc.end, 1),\n                typeParameterName: parameter.name.name,\n              });\n            }\n          }\n        }\n\n        return expr;\n      }, state);\n\n      /*:: invariant(arrow.node != null) */\n      if (!arrow.error && !arrow.aborted) {\n        // This error is reported outside of the this.tryParse call so that\n        // in case of <T>(x) => 2, we don't consider <T>(x) as a type assertion\n        // because of this error.\n        if (typeParameters) this.reportReservedArrowTypeParam(typeParameters);\n        return arrow.node;\n      }\n\n      if (!jsx) {\n        // Try parsing a type cast instead of an arrow function.\n        // This will never happen outside of JSX.\n        // (Because in JSX the '<' should be a jsxTagStart and not a relational.\n        assert(!this.hasPlugin(\"jsx\"));\n\n        // This will start with a type assertion (via parseMaybeUnary).\n        // But don't directly call `this.tsParseTypeAssertion` because we want to handle any binary after it.\n        typeCast = this.tryParse(() => super.parseMaybeAssign(...args), state);\n        /*:: invariant(!typeCast.aborted) */\n        /*:: invariant(typeCast.node != null) */\n        if (!typeCast.error) return typeCast.node;\n      }\n\n      if (jsx?.node) {\n        /*:: invariant(jsx.failState) */\n        this.state = jsx.failState;\n        return jsx.node;\n      }\n\n      if (arrow.node) {\n        /*:: invariant(arrow.failState) */\n        this.state = arrow.failState;\n        if (typeParameters) this.reportReservedArrowTypeParam(typeParameters);\n        return arrow.node;\n      }\n\n      if (typeCast?.node) {\n        /*:: invariant(typeCast.failState) */\n        this.state = typeCast.failState;\n        return typeCast.node;\n      }\n\n      if (jsx?.thrown) throw jsx.error;\n      if (arrow.thrown) throw arrow.error;\n      if (typeCast?.thrown) throw typeCast.error;\n\n      throw jsx?.error || arrow.error || typeCast?.error;\n    }\n\n    reportReservedArrowTypeParam(node: any) {\n      if (\n        node.params.length === 1 &&\n        !node.extra?.trailingComma &&\n        this.getPluginOption(\"typescript\", \"disallowAmbiguousJSXLike\")\n      ) {\n        this.raise(TSErrors.ReservedArrowTypeParam, { at: node });\n      }\n    }\n\n    // Handle type assertions\n    parseMaybeUnary(refExpressionErrors?: ?ExpressionErrors): N.Expression {\n      if (!this.hasPlugin(\"jsx\") && this.match(tt.lt)) {\n        return this.tsParseTypeAssertion();\n      } else {\n        return super.parseMaybeUnary(refExpressionErrors);\n      }\n    }\n\n    parseArrow(node: N.ArrowFunctionExpression): ?N.ArrowFunctionExpression {\n      if (this.match(tt.colon)) {\n        // This is different from how the TS parser does it.\n        // TS uses lookahead. The Babel Parser parses it as a parenthesized expression and converts.\n\n        const result = this.tryParse(abort => {\n          const returnType = this.tsParseTypeOrTypePredicateAnnotation(\n            tt.colon,\n          );\n          if (this.canInsertSemicolon() || !this.match(tt.arrow)) abort();\n          return returnType;\n        });\n\n        if (result.aborted) return;\n\n        if (!result.thrown) {\n          if (result.error) this.state = result.failState;\n          node.returnType = result.node;\n        }\n      }\n\n      return super.parseArrow(node);\n    }\n\n    // Allow type annotations inside of a parameter list.\n    parseAssignableListItemTypes(param: N.Pattern) {\n      if (this.eat(tt.question)) {\n        if (\n          param.type !== \"Identifier\" &&\n          !this.state.isAmbientContext &&\n          !this.state.inType\n        ) {\n          this.raise(TSErrors.PatternIsOptional, { at: param });\n        }\n\n        ((param: any): N.Identifier).optional = true;\n      }\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) param.typeAnnotation = type;\n      this.resetEndLocation(param);\n\n      return param;\n    }\n\n    isAssignable(node: N.Node, isBinding?: boolean): boolean {\n      switch (node.type) {\n        case \"TSTypeCastExpression\":\n          return this.isAssignable(node.expression, isBinding);\n        case \"TSParameterProperty\":\n          return true;\n        default:\n          return super.isAssignable(node, isBinding);\n      }\n    }\n\n    toAssignable(node: N.Node, isLHS: boolean = false): void {\n      switch (node.type) {\n        case \"ParenthesizedExpression\":\n          this.toAssignableParenthesizedExpression(node, isLHS);\n          break;\n        case \"TSAsExpression\":\n        case \"TSNonNullExpression\":\n        case \"TSTypeAssertion\":\n          if (isLHS) {\n            this.expressionScope.recordArrowParemeterBindingError(\n              TSErrors.UnexpectedTypeCastInParameter,\n              { at: node },\n            );\n          } else {\n            this.raise(TSErrors.UnexpectedTypeCastInParameter, { at: node });\n          }\n          this.toAssignable(node.expression, isLHS);\n          break;\n        case \"AssignmentExpression\":\n          if (!isLHS && node.left.type === \"TSTypeCastExpression\") {\n            node.left = this.typeCastToParameter(node.left);\n          }\n        /* fall through */\n        default:\n          super.toAssignable(node, isLHS);\n      }\n    }\n\n    toAssignableParenthesizedExpression(node: N.Node, isLHS: boolean): void {\n      switch (node.expression.type) {\n        case \"TSAsExpression\":\n        case \"TSNonNullExpression\":\n        case \"TSTypeAssertion\":\n        case \"ParenthesizedExpression\":\n          this.toAssignable(node.expression, isLHS);\n          break;\n        default:\n          super.toAssignable(node, isLHS);\n      }\n    }\n\n    checkToRestConversion(node: N.Node, allowPattern: boolean): void {\n      switch (node.type) {\n        case \"TSAsExpression\":\n        case \"TSTypeAssertion\":\n        case \"TSNonNullExpression\":\n          this.checkToRestConversion(node.expression, false);\n          break;\n        default:\n          super.checkToRestConversion(node, allowPattern);\n      }\n    }\n\n    isValidLVal(\n      type: string,\n      isUnparenthesizedInAssign: boolean,\n      binding: BindingTypes,\n    ) {\n      return (\n        getOwn(\n          {\n            // Allow \"typecasts\" to appear on the left of assignment expressions,\n            // because it may be in an arrow function.\n            // e.g. `const f = (foo: number = 0) => foo;`\n            TSTypeCastExpression: true,\n            TSParameterProperty: \"parameter\",\n            TSNonNullExpression: \"expression\",\n            TSAsExpression: (binding !== BIND_NONE ||\n              !isUnparenthesizedInAssign) && [\"expression\", true],\n            TSTypeAssertion: (binding !== BIND_NONE ||\n              !isUnparenthesizedInAssign) && [\"expression\", true],\n          },\n          type,\n        ) || super.isValidLVal(type, isUnparenthesizedInAssign, binding)\n      );\n    }\n\n    parseBindingAtom(): N.Pattern {\n      switch (this.state.type) {\n        case tt._this:\n          // \"this\" may be the name of a parameter, so allow it.\n          return this.parseIdentifier(/* liberal */ true);\n        default:\n          return super.parseBindingAtom();\n      }\n    }\n\n    parseMaybeDecoratorArguments(expr: N.Expression): N.Expression {\n      // handles `@f<<T>`\n      if (this.match(tt.lt) || this.match(tt.bitShiftL)) {\n        const typeArguments = this.tsParseTypeArgumentsInExpression();\n\n        if (this.match(tt.parenL)) {\n          const call = super.parseMaybeDecoratorArguments(expr);\n          call.typeParameters = typeArguments;\n          return call;\n        }\n\n        this.unexpected(null, tt.parenL);\n      }\n\n      return super.parseMaybeDecoratorArguments(expr);\n    }\n\n    checkCommaAfterRest(close): boolean {\n      if (\n        this.state.isAmbientContext &&\n        this.match(tt.comma) &&\n        this.lookaheadCharCode() === close\n      ) {\n        this.next();\n        return false;\n      } else {\n        return super.checkCommaAfterRest(close);\n      }\n    }\n\n    // === === === === === === === === === === === === === === === ===\n    // Note: All below methods are duplicates of something in flow.js.\n    // Not sure what the best way to combine these is.\n    // === === === === === === === === === === === === === === === ===\n\n    isClassMethod(): boolean {\n      return this.match(tt.lt) || super.isClassMethod();\n    }\n\n    isClassProperty(): boolean {\n      return (\n        this.match(tt.bang) || this.match(tt.colon) || super.isClassProperty()\n      );\n    }\n\n    parseMaybeDefault(...args): N.Pattern {\n      const node = super.parseMaybeDefault(...args);\n\n      if (\n        node.type === \"AssignmentPattern\" &&\n        node.typeAnnotation &&\n        node.right.start < node.typeAnnotation.start\n      ) {\n        this.raise(TSErrors.TypeAnnotationAfterAssign, {\n          at: node.typeAnnotation,\n        });\n      }\n\n      return node;\n    }\n\n    // ensure that inside types, we bypass the jsx parser plugin\n    getTokenFromCode(code: number): void {\n      if (this.state.inType) {\n        if (code === charCodes.greaterThan) {\n          return this.finishOp(tt.gt, 1);\n        }\n        if (code === charCodes.lessThan) {\n          return this.finishOp(tt.lt, 1);\n        }\n      }\n      return super.getTokenFromCode(code);\n    }\n\n    // used after we have finished parsing types\n    reScan_lt_gt() {\n      const { type } = this.state;\n      if (type === tt.lt) {\n        this.state.pos -= 1;\n        this.readToken_lt();\n      } else if (type === tt.gt) {\n        this.state.pos -= 1;\n        this.readToken_gt();\n      }\n    }\n\n    reScan_lt() {\n      const { type } = this.state;\n      if (type === tt.bitShiftL) {\n        this.state.pos -= 2;\n        this.finishOp(tt.lt, 1);\n        return tt.lt;\n      }\n      return type;\n    }\n\n    toAssignableList(exprList: N.Expression[]): void {\n      for (let i = 0; i < exprList.length; i++) {\n        const expr = exprList[i];\n        if (expr?.type === \"TSTypeCastExpression\") {\n          exprList[i] = this.typeCastToParameter(expr);\n        }\n      }\n      super.toAssignableList(...arguments);\n    }\n\n    typeCastToParameter(node: N.TsTypeCastExpression): N.Node {\n      node.expression.typeAnnotation = node.typeAnnotation;\n\n      this.resetEndLocation(node.expression, node.typeAnnotation.loc.end);\n\n      return node.expression;\n    }\n\n    shouldParseArrow(params: Array<N.Node>) {\n      if (this.match(tt.colon)) {\n        return params.every(expr => this.isAssignable(expr, true));\n      }\n      return super.shouldParseArrow(params);\n    }\n\n    shouldParseAsyncArrow(): boolean {\n      return this.match(tt.colon) || super.shouldParseAsyncArrow();\n    }\n\n    canHaveLeadingDecorator() {\n      // Avoid unnecessary lookahead in checking for abstract class unless needed!\n      return super.canHaveLeadingDecorator() || this.isAbstractClass();\n    }\n\n    jsxParseOpeningElementAfterName(\n      node: N.JSXOpeningElement,\n    ): N.JSXOpeningElement {\n      // handles `<Component<<T>`\n      if (this.match(tt.lt) || this.match(tt.bitShiftL)) {\n        const typeArguments = this.tsTryParseAndCatch(() =>\n          this.tsParseTypeArgumentsInExpression(),\n        );\n        if (typeArguments) node.typeParameters = typeArguments;\n      }\n      return super.jsxParseOpeningElementAfterName(node);\n    }\n\n    getGetterSetterExpectedParamCount(\n      method: N.ObjectMethod | N.ClassMethod,\n    ): number {\n      const baseCount = super.getGetterSetterExpectedParamCount(method);\n      const params = this.getObjectOrClassMethodParams(method);\n      const firstParam = params[0];\n      const hasContextParam = firstParam && this.isThisParam(firstParam);\n\n      return hasContextParam ? baseCount + 1 : baseCount;\n    }\n\n    parseCatchClauseParam(): N.Pattern {\n      const param = super.parseCatchClauseParam();\n      const type = this.tsTryParseTypeAnnotation();\n\n      if (type) {\n        param.typeAnnotation = type;\n        this.resetEndLocation(param);\n      }\n\n      return param;\n    }\n\n    tsInAmbientContext<T>(cb: () => T): T {\n      const oldIsAmbientContext = this.state.isAmbientContext;\n      this.state.isAmbientContext = true;\n      try {\n        return cb();\n      } finally {\n        this.state.isAmbientContext = oldIsAmbientContext;\n      }\n    }\n\n    parseClass<T: N.Class>(node: T, ...args: any[]): T {\n      const oldInAbstractClass = this.state.inAbstractClass;\n      this.state.inAbstractClass = !!(node: any).abstract;\n      try {\n        return super.parseClass(node, ...args);\n      } finally {\n        this.state.inAbstractClass = oldInAbstractClass;\n      }\n    }\n\n    tsParseAbstractDeclaration(\n      node: any,\n    ): N.ClassDeclaration | ?N.TsInterfaceDeclaration {\n      if (this.match(tt._class)) {\n        node.abstract = true;\n        return this.parseClass<N.ClassDeclaration>(\n          (node: N.ClassDeclaration),\n          /* isStatement */ true,\n          /* optionalId */ false,\n        );\n      } else if (this.isContextual(tt._interface)) {\n        // for invalid abstract interface\n\n        // To avoid\n        //   abstract interface\n        //   Foo {}\n        if (!this.hasFollowingLineBreak()) {\n          node.abstract = true;\n          this.raise(TSErrors.NonClassMethodPropertyHasAbstractModifer, {\n            at: node,\n          });\n          return this.tsParseInterfaceDeclaration(\n            (node: N.TsInterfaceDeclaration),\n          );\n        }\n      } else {\n        this.unexpected(null, tt._class);\n      }\n    }\n\n    parseMethod(...args: any[]) {\n      const method = super.parseMethod(...args);\n      if (method.abstract) {\n        const hasBody = this.hasPlugin(\"estree\")\n          ? !!method.value.body\n          : !!method.body;\n        if (hasBody) {\n          const { key } = method;\n          this.raise(TSErrors.AbstractMethodHasImplementation, {\n            at: method,\n            methodName:\n              key.type === \"Identifier\" && !method.computed\n                ? key.name\n                : `[${this.input.slice(key.start, key.end)}]`,\n          });\n        }\n      }\n      return method;\n    }\n\n    tsParseTypeParameterName(): N.Identifier | string {\n      const typeName: N.Identifier = this.parseIdentifier();\n      return process.env.BABEL_8_BREAKING ? typeName : typeName.name;\n    }\n\n    shouldParseAsAmbientContext(): boolean {\n      return !!this.getPluginOption(\"typescript\", \"dts\");\n    }\n\n    parse() {\n      if (this.shouldParseAsAmbientContext()) {\n        this.state.isAmbientContext = true;\n      }\n      return super.parse();\n    }\n\n    getExpression() {\n      if (this.shouldParseAsAmbientContext()) {\n        this.state.isAmbientContext = true;\n      }\n      return super.getExpression();\n    }\n\n    parseExportSpecifier(\n      node: any,\n      isString: boolean,\n      isInTypeExport: boolean,\n      isMaybeTypeOnly: boolean,\n    ) {\n      if (!isString && isMaybeTypeOnly) {\n        this.parseTypeOnlyImportExportSpecifier(\n          node,\n          /* isImport */ false,\n          isInTypeExport,\n        );\n        return this.finishNode<N.ExportSpecifier>(node, \"ExportSpecifier\");\n      }\n      node.exportKind = \"value\";\n      return super.parseExportSpecifier(\n        node,\n        isString,\n        isInTypeExport,\n        isMaybeTypeOnly,\n      );\n    }\n\n    parseImportSpecifier(\n      specifier: any,\n      importedIsString: boolean,\n      isInTypeOnlyImport: boolean,\n      isMaybeTypeOnly: boolean,\n    ): N.ImportSpecifier {\n      if (!importedIsString && isMaybeTypeOnly) {\n        this.parseTypeOnlyImportExportSpecifier(\n          specifier,\n          /* isImport */ true,\n          isInTypeOnlyImport,\n        );\n        return this.finishNode<N.ImportSpecifier>(specifier, \"ImportSpecifier\");\n      }\n      specifier.importKind = \"value\";\n      return super.parseImportSpecifier(\n        specifier,\n        importedIsString,\n        isInTypeOnlyImport,\n        isMaybeTypeOnly,\n      );\n    }\n\n    parseTypeOnlyImportExportSpecifier(\n      node: any,\n      isImport: boolean,\n      isInTypeOnlyImportExport: boolean,\n    ): void {\n      const leftOfAsKey = isImport ? \"imported\" : \"local\";\n      const rightOfAsKey = isImport ? \"local\" : \"exported\";\n\n      let leftOfAs = node[leftOfAsKey];\n      let rightOfAs;\n\n      let hasTypeSpecifier = false;\n      let canParseAsKeyword = true;\n\n      const loc = leftOfAs.loc.start;\n\n      // https://github.com/microsoft/TypeScript/blob/fc4f9d83d5939047aa6bb2a43965c6e9bbfbc35b/src/compiler/parser.ts#L7411-L7456\n      // import { type } from \"mod\";          - hasTypeSpecifier: false, leftOfAs: type\n      // import { type as } from \"mod\";       - hasTypeSpecifier: true,  leftOfAs: as\n      // import { type as as } from \"mod\";    - hasTypeSpecifier: false, leftOfAs: type, rightOfAs: as\n      // import { type as as as } from \"mod\"; - hasTypeSpecifier: true,  leftOfAs: as,   rightOfAs: as\n      if (this.isContextual(tt._as)) {\n        // { type as ...? }\n        const firstAs = this.parseIdentifier();\n        if (this.isContextual(tt._as)) {\n          // { type as as ...? }\n          const secondAs = this.parseIdentifier();\n          if (tokenIsKeywordOrIdentifier(this.state.type)) {\n            // { type as as something }\n            hasTypeSpecifier = true;\n            leftOfAs = firstAs;\n            rightOfAs = isImport\n              ? this.parseIdentifier()\n              : this.parseModuleExportName();\n            canParseAsKeyword = false;\n          } else {\n            // { type as as }\n            rightOfAs = secondAs;\n            canParseAsKeyword = false;\n          }\n        } else if (tokenIsKeywordOrIdentifier(this.state.type)) {\n          // { type as something }\n          canParseAsKeyword = false;\n          rightOfAs = isImport\n            ? this.parseIdentifier()\n            : this.parseModuleExportName();\n        } else {\n          // { type as }\n          hasTypeSpecifier = true;\n          leftOfAs = firstAs;\n        }\n      } else if (tokenIsKeywordOrIdentifier(this.state.type)) {\n        // { type something ...? }\n        hasTypeSpecifier = true;\n        if (isImport) {\n          leftOfAs = this.parseIdentifier(true);\n          if (!this.isContextual(tt._as)) {\n            this.checkReservedWord(\n              leftOfAs.name,\n              leftOfAs.loc.start,\n              true,\n              true,\n            );\n          }\n        } else {\n          leftOfAs = this.parseModuleExportName();\n        }\n      }\n      if (hasTypeSpecifier && isInTypeOnlyImportExport) {\n        this.raise(\n          isImport\n            ? TSErrors.TypeModifierIsUsedInTypeImports\n            : TSErrors.TypeModifierIsUsedInTypeExports,\n          { at: loc },\n        );\n      }\n\n      node[leftOfAsKey] = leftOfAs;\n      node[rightOfAsKey] = rightOfAs;\n\n      const kindKey = isImport ? \"importKind\" : \"exportKind\";\n      node[kindKey] = hasTypeSpecifier ? \"type\" : \"value\";\n\n      if (canParseAsKeyword && this.eatContextual(tt._as)) {\n        node[rightOfAsKey] = isImport\n          ? this.parseIdentifier()\n          : this.parseModuleExportName();\n      }\n      if (!node[rightOfAsKey]) {\n        node[rightOfAsKey] = cloneIdentifier(node[leftOfAsKey]);\n      }\n      if (isImport) {\n        this.checkIdentifier(node[rightOfAsKey], BIND_LEXICAL);\n      }\n    }\n  };\n\nfunction isPossiblyLiteralEnum(expression: N.Expression): boolean {\n  if (expression.type !== \"MemberExpression\") return false;\n\n  const { computed, property } = expression;\n\n  if (\n    computed &&\n    property.type !== \"StringLiteral\" &&\n    (property.type !== \"TemplateLiteral\" || property.expressions.length > 0)\n  ) {\n    return false;\n  }\n\n  return isUncomputedMemberExpressionChain(expression.object);\n}\n\nfunction isUncomputedMemberExpressionChain(expression: N.Expression): boolean {\n  if (expression.type === \"Identifier\") return true;\n  if (expression.type !== \"MemberExpression\") return false;\n  if (expression.computed) return false;\n\n  return isUncomputedMemberExpressionChain(expression.object);\n}\n","// @flow\n\nimport * as charCodes from \"charcodes\";\n\nimport { tokenLabelName, tt } from \"../tokenizer/types\";\nimport type Parser from \"../parser\";\nimport * as N from \"../types\";\nimport { ParseErrorEnum } from \"../parse-error\";\n\nexport type PlaceholderTypes =\n  | \"Identifier\"\n  | \"StringLiteral\"\n  | \"Expression\"\n  | \"Statement\"\n  | \"Declaration\"\n  | \"BlockStatement\"\n  | \"ClassBody\"\n  | \"Pattern\";\n\n// $PropertyType doesn't support enums. Use a fake \"switch\" (GetPlaceholderNode)\n//type MaybePlaceholder<T: PlaceholderTypes> = $PropertyType<N, T> | N.Placeholder<T>;\n\ntype _Switch<Value, Cases, Index> = $Call<\n  (\n    $ElementType<$ElementType<Cases, Index>, 0>,\n  ) => $ElementType<$ElementType<Cases, Index>, 1>,\n  Value,\n>;\ntype $Switch<Value, Cases> = _Switch<Value, Cases, *>;\n\ntype NodeOf<T: PlaceholderTypes> = $Switch<\n  T,\n  [\n    [\"Identifier\", N.Identifier],\n    [\"StringLiteral\", N.StringLiteral],\n    [\"Expression\", N.Expression],\n    [\"Statement\", N.Statement],\n    [\"Declaration\", N.Declaration],\n    [\"BlockStatement\", N.BlockStatement],\n    [\"ClassBody\", N.ClassBody],\n    [\"Pattern\", N.Pattern],\n  ],\n>;\n\n// Placeholder<T> breaks everything, because its type is incompatible with\n// the substituted nodes.\ntype MaybePlaceholder<T: PlaceholderTypes> = NodeOf<T>; // | Placeholder<T>\n\n/* eslint sort-keys: \"error\" */\nconst PlaceholderErrors = ParseErrorEnum`placeholders`(_ => ({\n  ClassNameIsRequired: _(\"A class name is required.\"),\n  UnexpectedSpace: _(\"Unexpected space in placeholder.\"),\n}));\n/* eslint-disable sort-keys */\n\nexport default (superClass: Class<Parser>): Class<Parser> =>\n  class extends superClass {\n    parsePlaceholder<T: PlaceholderTypes>(\n      expectedNode: T,\n    ): /*?N.Placeholder<T>*/ ?MaybePlaceholder<T> {\n      if (this.match(tt.placeholder)) {\n        const node = this.startNode();\n        this.next();\n        this.assertNoSpace();\n\n        // We can't use this.parseIdentifier because\n        // we don't want nested placeholders.\n        node.name = super.parseIdentifier(/* liberal */ true);\n\n        this.assertNoSpace();\n        this.expect(tt.placeholder);\n        return this.finishPlaceholder(node, expectedNode);\n      }\n    }\n\n    finishPlaceholder<T: PlaceholderTypes>(\n      node: N.Node,\n      expectedNode: T,\n    ): /*N.Placeholder<T>*/ MaybePlaceholder<T> {\n      const isFinished = !!(node.expectedNode && node.type === \"Placeholder\");\n      node.expectedNode = expectedNode;\n\n      return isFinished ? node : this.finishNode(node, \"Placeholder\");\n    }\n\n    /* ============================================================ *\n     * tokenizer/index.js                                           *\n     * ============================================================ */\n\n    getTokenFromCode(code: number) {\n      if (\n        code === charCodes.percentSign &&\n        this.input.charCodeAt(this.state.pos + 1) === charCodes.percentSign\n      ) {\n        return this.finishOp(tt.placeholder, 2);\n      }\n\n      return super.getTokenFromCode(...arguments);\n    }\n\n    /* ============================================================ *\n     * parser/expression.js                                         *\n     * ============================================================ */\n\n    parseExprAtom(): MaybePlaceholder<\"Expression\"> {\n      return (\n        this.parsePlaceholder(\"Expression\") || super.parseExprAtom(...arguments)\n      );\n    }\n\n    parseIdentifier(): MaybePlaceholder<\"Identifier\"> {\n      // NOTE: This function only handles identifiers outside of\n      // expressions and binding patterns, since they are already\n      // handled by the parseExprAtom and parseBindingAtom functions.\n      // This is needed, for example, to parse \"class %%NAME%% {}\".\n      return (\n        this.parsePlaceholder(\"Identifier\") ||\n        super.parseIdentifier(...arguments)\n      );\n    }\n\n    checkReservedWord(word: string): void {\n      // Sometimes we call #checkReservedWord(node.name), expecting\n      // that node is an Identifier. If it is a Placeholder, name\n      // will be undefined.\n      if (word !== undefined) super.checkReservedWord(...arguments);\n    }\n\n    /* ============================================================ *\n     * parser/lval.js                                               *\n     * ============================================================ */\n\n    parseBindingAtom(): MaybePlaceholder<\"Pattern\"> {\n      return (\n        this.parsePlaceholder(\"Pattern\") || super.parseBindingAtom(...arguments)\n      );\n    }\n\n    isValidLVal(type: string, ...rest) {\n      return type === \"Placeholder\" || super.isValidLVal(type, ...rest);\n    }\n\n    toAssignable(node: N.Node): void {\n      if (\n        node &&\n        node.type === \"Placeholder\" &&\n        node.expectedNode === \"Expression\"\n      ) {\n        node.expectedNode = \"Pattern\";\n      } else {\n        super.toAssignable(...arguments);\n      }\n    }\n\n    /* ============================================================ *\n     * parser/statement.js                                          *\n     * ============================================================ */\n\n    isLet(context: ?string): boolean {\n      if (super.isLet(context)) {\n        return true;\n      }\n\n      // Replicate the original checks that lead to looking ahead for an\n      // identifier.\n      if (!this.isContextual(tt._let)) {\n        return false;\n      }\n      if (context) return false;\n\n      // Accept \"let %%\" as the start of \"let %%placeholder%%\", as though the\n      // placeholder were an identifier.\n      const nextToken = this.lookahead();\n      if (nextToken.type === tt.placeholder) {\n        return true;\n      }\n\n      return false;\n    }\n\n    verifyBreakContinue(node: N.BreakStatement | N.ContinueStatement) {\n      if (node.label && node.label.type === \"Placeholder\") return;\n      super.verifyBreakContinue(...arguments);\n    }\n\n    parseExpressionStatement(\n      node: MaybePlaceholder<\"Statement\">,\n      expr: N.Expression,\n    ): MaybePlaceholder<\"Statement\"> {\n      if (\n        expr.type !== \"Placeholder\" ||\n        (expr.extra && expr.extra.parenthesized)\n      ) {\n        return super.parseExpressionStatement(...arguments);\n      }\n\n      if (this.match(tt.colon)) {\n        const stmt: N.LabeledStatement = node;\n        stmt.label = this.finishPlaceholder(expr, \"Identifier\");\n        this.next();\n        stmt.body = this.parseStatement(\"label\");\n        return this.finishNode(stmt, \"LabeledStatement\");\n      }\n\n      this.semicolon();\n\n      node.name = expr.name;\n      return this.finishPlaceholder(node, \"Statement\");\n    }\n\n    parseBlock(): MaybePlaceholder<\"BlockStatement\"> {\n      return (\n        this.parsePlaceholder(\"BlockStatement\") ||\n        super.parseBlock(...arguments)\n      );\n    }\n\n    parseFunctionId(): ?MaybePlaceholder<\"Identifier\"> {\n      return (\n        this.parsePlaceholder(\"Identifier\") ||\n        super.parseFunctionId(...arguments)\n      );\n    }\n\n    parseClass<T: N.Class>(\n      node: T,\n      isStatement: /* T === ClassDeclaration */ boolean,\n      optionalId?: boolean,\n    ): T {\n      const type = isStatement ? \"ClassDeclaration\" : \"ClassExpression\";\n\n      this.next();\n      this.takeDecorators(node);\n      const oldStrict = this.state.strict;\n\n      const placeholder = this.parsePlaceholder(\"Identifier\");\n      if (placeholder) {\n        if (\n          this.match(tt._extends) ||\n          this.match(tt.placeholder) ||\n          this.match(tt.braceL)\n        ) {\n          node.id = placeholder;\n        } else if (optionalId || !isStatement) {\n          node.id = null;\n          node.body = this.finishPlaceholder(placeholder, \"ClassBody\");\n          return this.finishNode(node, type);\n        } else {\n          throw this.raise(PlaceholderErrors.ClassNameIsRequired, {\n            at: this.state.startLoc,\n          });\n        }\n      } else {\n        this.parseClassId(node, isStatement, optionalId);\n      }\n\n      this.parseClassSuper(node);\n      node.body =\n        this.parsePlaceholder(\"ClassBody\") ||\n        this.parseClassBody(!!node.superClass, oldStrict);\n      return this.finishNode(node, type);\n    }\n\n    parseExport(node: N.Node): N.Node {\n      const placeholder = this.parsePlaceholder(\"Identifier\");\n      if (!placeholder) return super.parseExport(...arguments);\n\n      if (!this.isContextual(tt._from) && !this.match(tt.comma)) {\n        // export %%DECL%%;\n        node.specifiers = [];\n        node.source = null;\n        node.declaration = this.finishPlaceholder(placeholder, \"Declaration\");\n        return this.finishNode(node, \"ExportNamedDeclaration\");\n      }\n\n      // export %%NAME%% from \"foo\";\n      this.expectPlugin(\"exportDefaultFrom\");\n      const specifier = this.startNode();\n      specifier.exported = placeholder;\n      node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n\n      return super.parseExport(node);\n    }\n\n    isExportDefaultSpecifier(): boolean {\n      if (this.match(tt._default)) {\n        const next = this.nextTokenStart();\n        if (this.isUnparsedContextual(next, \"from\")) {\n          if (\n            this.input.startsWith(\n              tokenLabelName(tt.placeholder),\n              this.nextTokenStartSince(next + 4),\n            )\n          ) {\n            return true;\n          }\n        }\n      }\n      return super.isExportDefaultSpecifier();\n    }\n\n    maybeParseExportDefaultSpecifier(node: N.Node): boolean {\n      if (node.specifiers && node.specifiers.length > 0) {\n        // \"export %%NAME%%\" has already been parsed by #parseExport.\n        return true;\n      }\n      return super.maybeParseExportDefaultSpecifier(...arguments);\n    }\n\n    checkExport(node: N.ExportNamedDeclaration): void {\n      const { specifiers } = node;\n      if (specifiers?.length) {\n        node.specifiers = specifiers.filter(\n          node => node.exported.type === \"Placeholder\",\n        );\n      }\n      super.checkExport(node);\n      node.specifiers = specifiers;\n    }\n\n    parseImport(\n      node: N.Node,\n    ): N.ImportDeclaration | N.TsImportEqualsDeclaration {\n      const placeholder = this.parsePlaceholder(\"Identifier\");\n      if (!placeholder) return super.parseImport(...arguments);\n\n      node.specifiers = [];\n\n      if (!this.isContextual(tt._from) && !this.match(tt.comma)) {\n        // import %%STRING%%;\n        node.source = this.finishPlaceholder(placeholder, \"StringLiteral\");\n        this.semicolon();\n        return this.finishNode(node, \"ImportDeclaration\");\n      }\n\n      // import %%DEFAULT%% ...\n      const specifier = this.startNodeAtNode(placeholder);\n      specifier.local = placeholder;\n      this.finishNode(specifier, \"ImportDefaultSpecifier\");\n      node.specifiers.push(specifier);\n\n      if (this.eat(tt.comma)) {\n        // import %%DEFAULT%%, * as ...\n        const hasStarImport = this.maybeParseStarImportSpecifier(node);\n\n        // import %%DEFAULT%%, { ...\n        if (!hasStarImport) this.parseNamedImportSpecifiers(node);\n      }\n\n      this.expectContextual(tt._from);\n      node.source = this.parseImportSource();\n      this.semicolon();\n      return this.finishNode(node, \"ImportDeclaration\");\n    }\n\n    parseImportSource(): MaybePlaceholder<\"StringLiteral\"> {\n      // import ... from %%STRING%%;\n\n      return (\n        this.parsePlaceholder(\"StringLiteral\") ||\n        super.parseImportSource(...arguments)\n      );\n    }\n\n    // Throws if the current token and the prev one are separated by a space.\n    assertNoSpace(): void {\n      if (this.state.start > this.state.lastTokEndLoc.index) {\n        this.raise(PlaceholderErrors.UnexpectedSpace, {\n          at: this.state.lastTokEndLoc,\n        });\n      }\n    }\n  };\n","// @flow\n\nimport type Parser from \"./parser\";\nimport type { PluginConfig } from \"./parser/base\";\n\nexport type Plugin = PluginConfig;\n\nexport type PluginList = $ReadOnlyArray<PluginConfig>;\n\nexport type MixinPlugin = (superClass: Class<Parser>) => Class<Parser>;\n\n// This function’s second parameter accepts either a string (plugin name) or an\n// array pair (plugin name and options object). If an options object is given,\n// then each value is non-recursively checked for identity with the actual\n// option value of each plugin in the first argument (which is an array of\n// plugin names or array pairs).\nexport function hasPlugin(\n  plugins: PluginList,\n  expectedConfig: PluginConfig,\n): boolean {\n  // The expectedOptions object is by default an empty object if the given\n  // expectedConfig argument does not give an options object (i.e., if it is a\n  // string).\n  const [expectedName, expectedOptions] =\n    typeof expectedConfig === \"string\" ? [expectedConfig, {}] : expectedConfig;\n\n  const expectedKeys = Object.keys(expectedOptions);\n\n  const expectedOptionsIsEmpty = expectedKeys.length === 0;\n\n  return plugins.some(p => {\n    if (typeof p === \"string\") {\n      return expectedOptionsIsEmpty && p === expectedName;\n    } else {\n      const [pluginName, pluginOptions] = p;\n      if (pluginName !== expectedName) {\n        return false;\n      }\n      for (const key of expectedKeys) {\n        if (pluginOptions[key] !== expectedOptions[key]) {\n          return false;\n        }\n      }\n      return true;\n    }\n  });\n}\n\nexport function getPluginOption(\n  plugins: PluginList,\n  name: string,\n  option: string,\n) {\n  const plugin = plugins.find(plugin => {\n    if (Array.isArray(plugin)) {\n      return plugin[0] === name;\n    } else {\n      return plugin === name;\n    }\n  });\n\n  if (plugin && Array.isArray(plugin)) {\n    return plugin[1][option];\n  }\n\n  return null;\n}\n\nconst PIPELINE_PROPOSALS = [\"minimal\", \"fsharp\", \"hack\", \"smart\"];\nconst TOPIC_TOKENS = [\"^^\", \"@@\", \"^\", \"%\", \"#\"];\nconst RECORD_AND_TUPLE_SYNTAX_TYPES = [\"hash\", \"bar\"];\n\nexport function validatePlugins(plugins: PluginList) {\n  if (hasPlugin(plugins, \"decorators\")) {\n    if (hasPlugin(plugins, \"decorators-legacy\")) {\n      throw new Error(\n        \"Cannot use the decorators and decorators-legacy plugin together\",\n      );\n    }\n\n    const decoratorsBeforeExport = getPluginOption(\n      plugins,\n      \"decorators\",\n      \"decoratorsBeforeExport\",\n    );\n    if (decoratorsBeforeExport == null) {\n      throw new Error(\n        \"The 'decorators' plugin requires a 'decoratorsBeforeExport' option,\" +\n          \" whose value must be a boolean. If you are migrating from\" +\n          \" Babylon/Babel 6 or want to use the old decorators proposal, you\" +\n          \" should use the 'decorators-legacy' plugin instead of 'decorators'.\",\n      );\n    } else if (typeof decoratorsBeforeExport !== \"boolean\") {\n      throw new Error(\"'decoratorsBeforeExport' must be a boolean.\");\n    }\n  }\n\n  if (hasPlugin(plugins, \"flow\") && hasPlugin(plugins, \"typescript\")) {\n    throw new Error(\"Cannot combine flow and typescript plugins.\");\n  }\n\n  if (hasPlugin(plugins, \"placeholders\") && hasPlugin(plugins, \"v8intrinsic\")) {\n    throw new Error(\"Cannot combine placeholders and v8intrinsic plugins.\");\n  }\n\n  if (hasPlugin(plugins, \"pipelineOperator\")) {\n    const proposal = getPluginOption(plugins, \"pipelineOperator\", \"proposal\");\n\n    if (!PIPELINE_PROPOSALS.includes(proposal)) {\n      const proposalList = PIPELINE_PROPOSALS.map(p => `\"${p}\"`).join(\", \");\n      throw new Error(\n        `\"pipelineOperator\" requires \"proposal\" option whose value must be one of: ${proposalList}.`,\n      );\n    }\n\n    const tupleSyntaxIsHash = hasPlugin(plugins, [\n      \"recordAndTuple\",\n      { syntaxType: \"hash\" },\n    ]);\n\n    if (proposal === \"hack\") {\n      if (hasPlugin(plugins, \"placeholders\")) {\n        throw new Error(\n          \"Cannot combine placeholders plugin and Hack-style pipes.\",\n        );\n      }\n\n      if (hasPlugin(plugins, \"v8intrinsic\")) {\n        throw new Error(\n          \"Cannot combine v8intrinsic plugin and Hack-style pipes.\",\n        );\n      }\n\n      const topicToken = getPluginOption(\n        plugins,\n        \"pipelineOperator\",\n        \"topicToken\",\n      );\n\n      if (!TOPIC_TOKENS.includes(topicToken)) {\n        const tokenList = TOPIC_TOKENS.map(t => `\"${t}\"`).join(\", \");\n\n        throw new Error(\n          `\"pipelineOperator\" in \"proposal\": \"hack\" mode also requires a \"topicToken\" option whose value must be one of: ${tokenList}.`,\n        );\n      }\n\n      if (topicToken === \"#\" && tupleSyntaxIsHash) {\n        throw new Error(\n          'Plugin conflict between `[\"pipelineOperator\", { proposal: \"hack\", topicToken: \"#\" }]` and `[\"recordAndtuple\", { syntaxType: \"hash\"}]`.',\n        );\n      }\n    } else if (proposal === \"smart\" && tupleSyntaxIsHash) {\n      throw new Error(\n        'Plugin conflict between `[\"pipelineOperator\", { proposal: \"smart\" }]` and `[\"recordAndtuple\", { syntaxType: \"hash\"}]`.',\n      );\n    }\n  }\n\n  if (hasPlugin(plugins, \"moduleAttributes\")) {\n    if (process.env.BABEL_8_BREAKING) {\n      throw new Error(\n        \"`moduleAttributes` has been removed in Babel 8, please use `importAssertions` parser plugin, or `@babel/plugin-syntax-import-assertions`.\",\n      );\n    } else {\n      if (hasPlugin(plugins, \"importAssertions\")) {\n        throw new Error(\n          \"Cannot combine importAssertions and moduleAttributes plugins.\",\n        );\n      }\n      const moduleAttributesVersionPluginOption = getPluginOption(\n        plugins,\n        \"moduleAttributes\",\n        \"version\",\n      );\n      if (moduleAttributesVersionPluginOption !== \"may-2020\") {\n        throw new Error(\n          \"The 'moduleAttributes' plugin requires a 'version' option,\" +\n            \" representing the last proposal update. Currently, the\" +\n            \" only supported value is 'may-2020'.\",\n        );\n      }\n    }\n  }\n\n  if (\n    hasPlugin(plugins, \"recordAndTuple\") &&\n    !RECORD_AND_TUPLE_SYNTAX_TYPES.includes(\n      getPluginOption(plugins, \"recordAndTuple\", \"syntaxType\"),\n    )\n  ) {\n    throw new Error(\n      \"'recordAndTuple' requires 'syntaxType' option whose value should be one of: \" +\n        RECORD_AND_TUPLE_SYNTAX_TYPES.map(p => `'${p}'`).join(\", \"),\n    );\n  }\n\n  if (\n    hasPlugin(plugins, \"asyncDoExpressions\") &&\n    !hasPlugin(plugins, \"doExpressions\")\n  ) {\n    const error = new Error(\n      \"'asyncDoExpressions' requires 'doExpressions', please add 'doExpressions' to parser plugins.\",\n    );\n    // $FlowIgnore\n    error.missingPlugins = \"doExpressions\"; // so @babel/core can provide better error message\n    throw error;\n  }\n}\n\n// These plugins are defined using a mixin which extends the parser class.\n\nimport estree from \"./plugins/estree\";\nimport flow from \"./plugins/flow\";\nimport jsx from \"./plugins/jsx\";\nimport typescript from \"./plugins/typescript\";\nimport placeholders from \"./plugins/placeholders\";\nimport v8intrinsic from \"./plugins/v8intrinsic\";\n\n// NOTE: order is important. estree must come first; placeholders must come last.\nexport const mixinPlugins: { [name: string]: MixinPlugin } = {\n  estree,\n  jsx,\n  flow,\n  typescript,\n  v8intrinsic,\n  placeholders,\n};\n\nexport const mixinPluginNames: $ReadOnlyArray<string> =\n  Object.keys(mixinPlugins);\n","import type Parser from \"../parser\";\nimport { tokenIsIdentifier, tt } from \"../tokenizer/types\";\nimport * as N from \"../types\";\n\nexport default (superClass: Class<Parser>): Class<Parser> =>\n  class extends superClass {\n    parseV8Intrinsic(): N.Expression {\n      if (this.match(tt.modulo)) {\n        const v8IntrinsicStartLoc = this.state.startLoc;\n        // let the `loc` of Identifier starts from `%`\n        const node = this.startNode();\n        this.next(); // eat '%'\n        if (tokenIsIdentifier(this.state.type)) {\n          const name = this.parseIdentifierName(this.state.start);\n          const identifier = this.createIdentifier(node, name);\n          identifier.type = \"V8IntrinsicIdentifier\";\n          if (this.match(tt.parenL)) {\n            return identifier;\n          }\n        }\n        this.unexpected(v8IntrinsicStartLoc);\n      }\n    }\n\n    /* ============================================================ *\n     * parser/expression.js                                         *\n     * ============================================================ */\n\n    parseExprAtom(): N.Expression {\n      return this.parseV8Intrinsic() || super.parseExprAtom(...arguments);\n    }\n  };\n","// @flow\n\nimport type { PluginList } from \"./plugin-utils\";\n\n// A second optional argument can be given to further configure\n// the parser process. These options are recognized:\n\nexport type SourceType = \"script\" | \"module\" | \"unambiguous\";\n\nexport type Options = {\n  sourceType: SourceType,\n  sourceFilename?: string,\n  startColumn: number,\n  startLine: number,\n  allowAwaitOutsideFunction: boolean,\n  allowReturnOutsideFunction: boolean,\n  allowImportExportEverywhere: boolean,\n  allowSuperOutsideMethod: boolean,\n  allowUndeclaredExports: boolean,\n  plugins: PluginList,\n  strictMode: ?boolean,\n  ranges: boolean,\n  tokens: boolean,\n  createParenthesizedExpressions: boolean,\n  errorRecovery: boolean,\n  attachComment: boolean,\n};\n\nexport const defaultOptions: Options = {\n  // Source type (\"script\" or \"module\") for different semantics\n  sourceType: \"script\",\n  // Source filename.\n  sourceFilename: undefined,\n  // Column (0-based) from which to start counting source. Useful for\n  // integration with other tools.\n  startColumn: 0,\n  // Line (1-based) from which to start counting source. Useful for\n  // integration with other tools.\n  startLine: 1,\n  // When enabled, await at the top level is not considered an\n  // error.\n  allowAwaitOutsideFunction: false,\n  // When enabled, a return at the top level is not considered an\n  // error.\n  allowReturnOutsideFunction: false,\n  // When enabled, import/export statements are not constrained to\n  // appearing at the top of the program.\n  allowImportExportEverywhere: false,\n  // TODO\n  allowSuperOutsideMethod: false,\n  // When enabled, export statements can reference undeclared variables.\n  allowUndeclaredExports: false,\n  // An array of plugins to enable\n  plugins: [],\n  // TODO\n  strictMode: null,\n  // Nodes have their start and end characters offsets recorded in\n  // `start` and `end` properties (directly on the node, rather than\n  // the `loc` object, which holds line/column data. To also add a\n  // [semi-standardized][range] `range` property holding a `[start,\n  // end]` array with the same numbers, set the `ranges` option to\n  // `true`.\n  //\n  // [range]: https://bugzilla.mozilla.org/show_bug.cgi?id=745678\n  ranges: false,\n  // Adds all parsed tokens to a `tokens` property on the `File` node\n  tokens: false,\n  // Whether to create ParenthesizedExpression AST nodes (if false\n  // the parser sets extra.parenthesized on the expression nodes instead).\n  createParenthesizedExpressions: false,\n  // When enabled, errors are attached to the AST instead of being directly thrown.\n  // Some errors will still throw, because @babel/parser can't always recover.\n  errorRecovery: false,\n  // When enabled, comments will be attached to adjacent AST nodes as one of\n  // `leadingComments`, `trailingComments` and `innerComments`. The comment attachment\n  // is vital to preserve comments after transform. If you don't print AST back,\n  // consider set this option to `false` for performance\n  attachComment: true,\n};\n\n// Interpret and default an options object\n\nexport function getOptions(opts: ?Options): Options {\n  const options: any = {};\n  for (const key of Object.keys(defaultOptions)) {\n    options[key] = opts && opts[key] != null ? opts[key] : defaultOptions[key];\n  }\n  return options;\n}\n","// @flow\n\n/*:: declare var invariant; */\nimport * as charCodes from \"charcodes\";\nimport { tt, type TokenType } from \"../tokenizer/types\";\nimport type {\n  TSParameterProperty,\n  Decorator,\n  Expression,\n  Identifier,\n  Node,\n  Pattern,\n  RestElement,\n  SpreadElement,\n  /*:: ObjectOrClassMember, */\n  /*:: ClassMember, */\n  ObjectMember,\n  /*:: TsNamedTypeElementBase, */\n  /*:: PrivateName, */\n  /*:: ObjectExpression, */\n  /*:: ObjectPattern, */\n} from \"../types\";\nimport type { Pos, Position } from \"../util/location\";\nimport {\n  isStrictBindOnlyReservedWord,\n  isStrictBindReservedWord,\n} from \"../util/identifier\";\nimport { NodeUtils } from \"./node\";\nimport {\n  type BindingTypes,\n  BIND_NONE,\n  BIND_SCOPE_LEXICAL,\n} from \"../util/scopeflags\";\nimport { ExpressionErrors } from \"./util\";\nimport { Errors, type LValAncestor } from \"../parse-error\";\n\nconst getOwn = (object, key) =>\n  Object.hasOwnProperty.call(object, key) && object[key];\n\nconst unwrapParenthesizedExpression = (node: Node): Node => {\n  return node.type === \"ParenthesizedExpression\"\n    ? unwrapParenthesizedExpression(node.expression)\n    : node;\n};\n\nexport default class LValParser extends NodeUtils {\n  // Forward-declaration: defined in expression.js\n  /*::\n  +parseIdentifier: (liberal?: boolean) => Identifier;\n  +parseMaybeAssignAllowIn: (\n    refExpressionErrors?: ?ExpressionErrors,\n    afterLeftParse?: Function,\n    refNeedsArrowPos?: ?Pos,\n  ) => Expression;\n  +parseObjectLike: <T: ObjectPattern | ObjectExpression>(\n    close: TokenType,\n    isPattern: boolean,\n    isRecord?: ?boolean,\n    refExpressionErrors?: ?ExpressionErrors,\n  ) => T;\n  +parseObjPropValue: (\n    prop: any,\n    startPos: ?number,\n    startLoc: ?Position,\n    isGenerator: boolean,\n    isAsync: boolean,\n    isPattern: boolean,\n    isAccessor: boolean,\n    refExpressionErrors?: ?ExpressionErrors,\n  ) => void;\n  +parsePropertyName: (\n    prop: ObjectOrClassMember | ClassMember | TsNamedTypeElementBase,\n  ) => Expression | Identifier;\n  +parsePrivateName: () => PrivateName\n  */\n  // Forward-declaration: defined in statement.js\n  /*::\n  +parseDecorator: () => Decorator;\n  */\n\n  /**\n   * Convert existing expression atom to assignable pattern\n   * if possible. Also checks invalid destructuring targets:\n\n   - Parenthesized Destructuring patterns\n   - RestElement is not the last element\n   - Missing `=` in assignment pattern\n\n   NOTE: There is a corresponding \"isAssignable\" method.\n   When this one is updated, please check if also that one needs to be updated.\n\n   * @param {Node} node The expression atom\n   * @param {boolean} [isLHS=false] Whether we are parsing a LeftHandSideExpression.\n   *                                If isLHS is `true`, the following cases are allowed: `[(a)] = [0]`, `[(a.b)] = [0]`\n   *                                If isLHS is `false`, we are in an arrow function parameters list.\n   * @memberof LValParser\n   */\n  toAssignable(node: Node, isLHS: boolean = false): void {\n    let parenthesized = undefined;\n    if (node.type === \"ParenthesizedExpression\" || node.extra?.parenthesized) {\n      parenthesized = unwrapParenthesizedExpression(node);\n      if (isLHS) {\n        // an LHS can be reinterpreted to a binding pattern but not vice versa.\n        // therefore a parenthesized identifier is ambiguous until we are sure it is an assignment expression\n        // i.e. `([(a) = []] = []) => {}`\n        // see also `recordArrowParemeterBindingError` signature in packages/babel-parser/src/util/expression-scope.js\n        if (parenthesized.type === \"Identifier\") {\n          this.expressionScope.recordArrowParemeterBindingError(\n            Errors.InvalidParenthesizedAssignment,\n            { at: node },\n          );\n        } else if (parenthesized.type !== \"MemberExpression\") {\n          // A parenthesized member expression can be in LHS but not in pattern.\n          // If the LHS is later interpreted as a pattern, `checkLVal` will throw for member expression binding\n          // i.e. `([(a.b) = []] = []) => {}`\n          this.raise(Errors.InvalidParenthesizedAssignment, { at: node });\n        }\n      } else {\n        this.raise(Errors.InvalidParenthesizedAssignment, { at: node });\n      }\n    }\n\n    switch (node.type) {\n      case \"Identifier\":\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"AssignmentPattern\":\n      case \"RestElement\":\n        break;\n\n      case \"ObjectExpression\":\n        node.type = \"ObjectPattern\";\n        for (\n          let i = 0, length = node.properties.length, last = length - 1;\n          i < length;\n          i++\n        ) {\n          const prop = node.properties[i];\n          const isLast = i === last;\n          this.toAssignableObjectExpressionProp(prop, isLast, isLHS);\n\n          if (\n            isLast &&\n            prop.type === \"RestElement\" &&\n            node.extra?.trailingCommaLoc\n          ) {\n            this.raise(Errors.RestTrailingComma, {\n              at: node.extra.trailingCommaLoc,\n            });\n          }\n        }\n        break;\n\n      case \"ObjectProperty\": {\n        const { key, value } = node;\n        if (this.isPrivateName(key)) {\n          this.classScope.usePrivateName(\n            this.getPrivateNameSV(key),\n            key.loc.start,\n          );\n        }\n        this.toAssignable(value, isLHS);\n        break;\n      }\n\n      case \"SpreadElement\": {\n        throw new Error(\n          \"Internal @babel/parser error (this is a bug, please report it).\" +\n            \" SpreadElement should be converted by .toAssignable's caller.\",\n        );\n      }\n\n      case \"ArrayExpression\":\n        node.type = \"ArrayPattern\";\n        this.toAssignableList(\n          node.elements,\n          node.extra?.trailingCommaLoc,\n          isLHS,\n        );\n        break;\n\n      case \"AssignmentExpression\":\n        if (node.operator !== \"=\") {\n          this.raise(Errors.MissingEqInAssignment, { at: node.left.loc.end });\n        }\n\n        node.type = \"AssignmentPattern\";\n        delete node.operator;\n        this.toAssignable(node.left, isLHS);\n        break;\n\n      case \"ParenthesizedExpression\":\n        /*::invariant (parenthesized !== undefined) */\n        this.toAssignable(parenthesized, isLHS);\n        break;\n\n      default:\n      // We don't know how to deal with this node. It will\n      // be reported by a later call to checkLVal\n    }\n  }\n\n  toAssignableObjectExpressionProp(\n    prop: Node,\n    isLast: boolean,\n    isLHS: boolean,\n  ) {\n    if (prop.type === \"ObjectMethod\") {\n      this.raise(\n        prop.kind === \"get\" || prop.kind === \"set\"\n          ? Errors.PatternHasAccessor\n          : Errors.PatternHasMethod,\n        { at: prop.key },\n      );\n    } else if (prop.type === \"SpreadElement\") {\n      prop.type = \"RestElement\";\n      const arg = prop.argument;\n      this.checkToRestConversion(arg, /* allowPattern */ false);\n      this.toAssignable(arg, isLHS);\n\n      if (!isLast) {\n        this.raise(Errors.RestTrailingComma, { at: prop });\n      }\n    } else {\n      this.toAssignable(prop, isLHS);\n    }\n  }\n\n  // Convert list of expression atoms to binding list.\n\n  toAssignableList(\n    exprList: Expression[],\n    trailingCommaLoc?: ?Position,\n    isLHS: boolean,\n  ): void {\n    const end = exprList.length - 1;\n\n    for (let i = 0; i <= end; i++) {\n      const elt = exprList[i];\n      if (!elt) continue;\n\n      if (elt.type === \"SpreadElement\") {\n        elt.type = \"RestElement\";\n        const arg = elt.argument;\n        this.checkToRestConversion(arg, /* allowPattern */ true);\n        this.toAssignable(arg, isLHS);\n      } else {\n        this.toAssignable(elt, isLHS);\n      }\n\n      if (elt.type === \"RestElement\") {\n        if (i < end) {\n          this.raise(Errors.RestTrailingComma, { at: elt });\n        } else if (trailingCommaLoc) {\n          this.raise(Errors.RestTrailingComma, { at: trailingCommaLoc });\n        }\n      }\n    }\n  }\n\n  isAssignable(node: Node, isBinding?: boolean): boolean {\n    switch (node.type) {\n      case \"Identifier\":\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"AssignmentPattern\":\n      case \"RestElement\":\n        return true;\n\n      case \"ObjectExpression\": {\n        const last = node.properties.length - 1;\n        return node.properties.every((prop, i) => {\n          return (\n            prop.type !== \"ObjectMethod\" &&\n            (i === last || prop.type !== \"SpreadElement\") &&\n            this.isAssignable(prop)\n          );\n        });\n      }\n\n      case \"ObjectProperty\":\n        return this.isAssignable(node.value);\n\n      case \"SpreadElement\":\n        return this.isAssignable(node.argument);\n\n      case \"ArrayExpression\":\n        return node.elements.every(\n          element => element === null || this.isAssignable(element),\n        );\n\n      case \"AssignmentExpression\":\n        return node.operator === \"=\";\n\n      case \"ParenthesizedExpression\":\n        return this.isAssignable(node.expression);\n\n      case \"MemberExpression\":\n      case \"OptionalMemberExpression\":\n        return !isBinding;\n\n      default:\n        return false;\n    }\n  }\n\n  // Convert list of expression atoms to a list of\n\n  toReferencedList(\n    exprList: $ReadOnlyArray<?Expression>,\n    isParenthesizedExpr?: boolean, // eslint-disable-line no-unused-vars\n  ): $ReadOnlyArray<?Expression> {\n    return exprList;\n  }\n\n  toReferencedListDeep(\n    exprList: $ReadOnlyArray<?Expression>,\n    isParenthesizedExpr?: boolean,\n  ): void {\n    this.toReferencedList(exprList, isParenthesizedExpr);\n\n    for (const expr of exprList) {\n      if (expr?.type === \"ArrayExpression\") {\n        this.toReferencedListDeep(expr.elements);\n      }\n    }\n  }\n\n  // Parses spread element.\n\n  parseSpread(\n    refExpressionErrors: ?ExpressionErrors,\n    refNeedsArrowPos?: ?Pos,\n  ): SpreadElement {\n    const node = this.startNode();\n    this.next();\n    node.argument = this.parseMaybeAssignAllowIn(\n      refExpressionErrors,\n      undefined,\n      refNeedsArrowPos,\n    );\n    return this.finishNode(node, \"SpreadElement\");\n  }\n\n  // https://tc39.es/ecma262/#prod-BindingRestProperty\n  // https://tc39.es/ecma262/#prod-BindingRestElement\n  parseRestBinding(): RestElement {\n    const node = this.startNode();\n    this.next(); // eat `...`\n    node.argument = this.parseBindingAtom();\n    return this.finishNode(node, \"RestElement\");\n  }\n\n  // Parses lvalue (assignable) atom.\n  parseBindingAtom(): Pattern {\n    // https://tc39.es/ecma262/#prod-BindingPattern\n    switch (this.state.type) {\n      case tt.bracketL: {\n        const node = this.startNode();\n        this.next();\n        node.elements = this.parseBindingList(\n          tt.bracketR,\n          charCodes.rightSquareBracket,\n          true,\n        );\n        return this.finishNode(node, \"ArrayPattern\");\n      }\n\n      case tt.braceL:\n        return this.parseObjectLike(tt.braceR, true);\n    }\n\n    // https://tc39.es/ecma262/#prod-BindingIdentifier\n    return this.parseIdentifier();\n  }\n\n  // https://tc39.es/ecma262/#prod-BindingElementList\n  parseBindingList(\n    close: TokenType,\n    closeCharCode: $Values<typeof charCodes>,\n    allowEmpty?: boolean,\n    allowModifiers?: boolean,\n  ): $ReadOnlyArray<Pattern | TSParameterProperty> {\n    const elts: Array<Pattern | TSParameterProperty> = [];\n    let first = true;\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n      }\n      if (allowEmpty && this.match(tt.comma)) {\n        // $FlowFixMe This method returns `$ReadOnlyArray<?Pattern>` if `allowEmpty` is set.\n        elts.push(null);\n      } else if (this.eat(close)) {\n        break;\n      } else if (this.match(tt.ellipsis)) {\n        elts.push(this.parseAssignableListItemTypes(this.parseRestBinding()));\n        if (!this.checkCommaAfterRest(closeCharCode)) {\n          this.expect(close);\n          break;\n        }\n      } else {\n        const decorators = [];\n        if (this.match(tt.at) && this.hasPlugin(\"decorators\")) {\n          this.raise(Errors.UnsupportedParameterDecorator, {\n            at: this.state.startLoc,\n          });\n        }\n        // invariant: hasPlugin(\"decorators-legacy\")\n        while (this.match(tt.at)) {\n          decorators.push(this.parseDecorator());\n        }\n        elts.push(this.parseAssignableListItem(allowModifiers, decorators));\n      }\n    }\n    return elts;\n  }\n\n  // https://tc39.es/ecma262/#prod-BindingRestProperty\n  parseBindingRestProperty(prop: RestElement): RestElement {\n    this.next(); // eat '...'\n    // Don't use parseRestBinding() as we only allow Identifier here.\n    prop.argument = this.parseIdentifier();\n    this.checkCommaAfterRest(charCodes.rightCurlyBrace);\n    return this.finishNode(prop, \"RestElement\");\n  }\n\n  // https://tc39.es/ecma262/#prod-BindingProperty\n  parseBindingProperty(): ObjectMember | RestElement {\n    const prop = this.startNode();\n    const { type, start: startPos, startLoc } = this.state;\n    if (type === tt.ellipsis) {\n      return this.parseBindingRestProperty(prop);\n    } else if (type === tt.privateName) {\n      this.expectPlugin(\"destructuringPrivate\", startLoc);\n      this.classScope.usePrivateName(this.state.value, startLoc);\n      prop.key = this.parsePrivateName();\n    } else {\n      this.parsePropertyName(prop);\n    }\n    prop.method = false;\n    this.parseObjPropValue(\n      prop,\n      startPos,\n      startLoc,\n      false /* isGenerator */,\n      false /* isAsync */,\n      true /* isPattern */,\n      false /* isAccessor */,\n    );\n\n    return prop;\n  }\n\n  parseAssignableListItem(\n    allowModifiers: ?boolean,\n    decorators: Decorator[],\n  ): Pattern | TSParameterProperty {\n    const left = this.parseMaybeDefault();\n    this.parseAssignableListItemTypes(left);\n    const elt = this.parseMaybeDefault(left.start, left.loc.start, left);\n    if (decorators.length) {\n      left.decorators = decorators;\n    }\n    return elt;\n  }\n\n  // Used by flow/typescript plugin to add type annotations to binding elements\n  parseAssignableListItemTypes(param: Pattern): Pattern {\n    return param;\n  }\n\n  // Parses assignment pattern around given atom if possible.\n  // https://tc39.es/ecma262/#prod-BindingElement\n  parseMaybeDefault(\n    startPos?: ?number,\n    startLoc?: ?Position,\n    left?: ?Pattern,\n  ): Pattern {\n    startLoc = startLoc ?? this.state.startLoc;\n    startPos = startPos ?? this.state.start;\n    // $FlowIgnore\n    left = left ?? this.parseBindingAtom();\n    if (!this.eat(tt.eq)) return left;\n\n    const node = this.startNodeAt(startPos, startLoc);\n    node.left = left;\n    node.right = this.parseMaybeAssignAllowIn();\n    return this.finishNode(node, \"AssignmentPattern\");\n  }\n  /**\n   * Return information use in determining whether a Node of a given type is an LVal,\n   * possibly given certain additional context information.\n   *\n   * Subclasser notes: This method has kind of a lot of mixed, but related,\n   * responsibilities. If we can definitively determine with the information\n   * provided that this either *is* or *isn't* a valid `LVal`, then the return\n   * value is easy: just return `true` or `false`. However, if it is a valid\n   * LVal *ancestor*, and thus it's descendents must be subsquently visited to\n   * continue the \"investigation\", then this method should return the relevant\n   * child key as a `string`. In some special cases, you additionally want to\n   * convey that this node should be treated as if it were parenthesized. In\n   * that case, a tuple of [key: string, parenthesized: boolean] is returned.\n   * The `string`-only return option is actually just a shorthand for:\n   * `[key: string, parenthesized: false]`.\n   *\n   * @param {NodeType} type A Node `type` string\n   * @param {boolean} isUnparenthesizedInAssign\n   *        Whether the node in question is unparenthesized and its parent\n   *        is either an assignment pattern or an assignment expression.\n   * @param {BindingTypes} binding\n   *        The binding operation that is being considered for this potential\n   *        LVal.\n   * @returns { boolean | string | [string, boolean] }\n   *          `true` or `false` if we can immediately determine whether the node\n   *          type in question can be treated as an `LVal`.\n   *          A `string` key to traverse if we must check this child.\n   *          A `[string, boolean]` tuple if we need to check this child and\n   *          treat is as parenthesized.\n   */\n  isValidLVal(\n    type: string,\n    // eslint-disable-next-line no-unused-vars\n    isUnparenthesizedInAssign: boolean,\n    // eslint-disable-next-line no-unused-vars\n    binding: BindingTypes,\n  ) {\n    return getOwn(\n      {\n        AssignmentPattern: \"left\",\n        RestElement: \"argument\",\n        ObjectProperty: \"value\",\n        ParenthesizedExpression: \"expression\",\n        ArrayPattern: \"elements\",\n        ObjectPattern: \"properties\",\n      },\n      type,\n    );\n  }\n\n  /**\n   * Verify that a target expression is an lval (something that can be assigned to).\n   *\n   * @param {Expression} expression The expression in question to check.\n   * @param {Object} options A set of options described below.\n   * @param {LValAncestor} options.in\n   *        The relevant ancestor to provide context information for the error\n   *        if the check fails.\n   * @param {BindingTypes} [options.binding=BIND_NONE]\n   *        The desired binding type. If the given expression is an identifier\n   *        and `binding` is not `BIND_NONE`, `checkLVal` will register binding\n   *        to the parser scope See also `src/util/scopeflags.js`\n   * @param {Set<string>|false} [options.checkClashes=false]\n   *        An optional string set to check if an identifier name is included.\n   *        `checkLVal` will add checked identifier name to `checkClashes` It is\n   *        used in tracking duplicates in function parameter lists. If it is\n   *        false, `checkLVal` will skip duplicate checks\n   * @param {boolean} [options.allowingSloppyLetBinding]\n   *        Whether an identifier named \"let\" should be allowed in sloppy mode.\n   *        Defaults to `true` unless lexical scope its being used. This property\n   *        is only relevant if the parser's state is in sloppy mode.\n   * @param {boolean} [options.strictModeChanged=false]\n   *        Whether an identifier has been parsed in a sloppy context but should\n   *        be reinterpreted as strict-mode. e.g. `(arguments) => { \"use strict \"}`\n   * @param {boolean} [options.hasParenthesizedAncestor=false]\n   *        This is only used internally during recursive calls, and you should\n   *        not have to set it yourself.\n   * @memberof LValParser\n   */\n\n  checkLVal(\n    expression: Expression | ObjectMember | RestElement,\n    {\n      in: ancestor,\n      binding = BIND_NONE,\n      checkClashes = false,\n      strictModeChanged = false,\n      allowingSloppyLetBinding = !(binding & BIND_SCOPE_LEXICAL),\n      hasParenthesizedAncestor = false,\n    }: {\n      in: LValAncestor,\n      binding?: BindingTypes,\n      checkClashes?: Set<string> | false,\n      strictModeChanged?: boolean,\n      allowingSloppyLetBinding?: boolean,\n      hasParenthesizedAncestor?: boolean,\n    },\n  ): void {\n    const type = expression.type;\n\n    // If we find here an ObjectMethod, it's because this was originally\n    // an ObjectExpression which has then been converted.\n    // toAssignable already reported this error with a nicer message.\n    if (this.isObjectMethod(expression)) return;\n\n    if (type === \"MemberExpression\") {\n      if (binding !== BIND_NONE) {\n        this.raise(Errors.InvalidPropertyBindingPattern, { at: expression });\n      }\n      return;\n    }\n\n    if (expression.type === \"Identifier\") {\n      this.checkIdentifier(\n        expression,\n        binding,\n        strictModeChanged,\n        allowingSloppyLetBinding,\n      );\n\n      const { name } = expression;\n\n      if (checkClashes) {\n        if (checkClashes.has(name)) {\n          this.raise(Errors.ParamDupe, { at: expression });\n        } else {\n          checkClashes.add(name);\n        }\n      }\n\n      return;\n    }\n\n    const validity = this.isValidLVal(\n      expression.type,\n      !(hasParenthesizedAncestor || expression.extra?.parenthesized) &&\n        ancestor.type === \"AssignmentExpression\",\n      binding,\n    );\n\n    if (validity === true) return;\n\n    if (validity === false) {\n      const ParseErrorClass =\n        binding === BIND_NONE ? Errors.InvalidLhs : Errors.InvalidLhsBinding;\n\n      this.raise(ParseErrorClass, {\n        at: expression,\n        ancestor:\n          ancestor.type === \"UpdateExpression\"\n            ? { type: \"UpdateExpression\", prefix: ancestor.prefix }\n            : { type: ancestor.type },\n      });\n      return;\n    }\n\n    const [key, isParenthesizedExpression] = Array.isArray(validity)\n      ? validity\n      : [validity, type === \"ParenthesizedExpression\"];\n    const nextAncestor =\n      expression.type === \"ArrayPattern\" ||\n      expression.type === \"ObjectPattern\" ||\n      expression.type === \"ParenthesizedExpression\"\n        ? expression\n        : ancestor;\n\n    // Flow has difficulty tracking `key` and `expression`, but only if we use\n    // null-proto objects. If we use normal objects, everything works fine.\n    // $FlowIgnore\n    for (const child of [].concat(expression[key])) {\n      if (child) {\n        this.checkLVal(child, {\n          in: nextAncestor,\n          binding,\n          checkClashes,\n          allowingSloppyLetBinding,\n          strictModeChanged,\n          hasParenthesizedAncestor: isParenthesizedExpression,\n        });\n      }\n    }\n  }\n\n  checkIdentifier(\n    at: Identifier,\n    bindingType: BindingTypes,\n    strictModeChanged: boolean = false,\n    allowLetBinding: boolean = !(bindingType & BIND_SCOPE_LEXICAL),\n  ) {\n    if (\n      this.state.strict &&\n      (strictModeChanged\n        ? isStrictBindReservedWord(at.name, this.inModule)\n        : isStrictBindOnlyReservedWord(at.name))\n    ) {\n      if (bindingType === BIND_NONE) {\n        this.raise(Errors.StrictEvalArguments, { at, referenceName: at.name });\n      } else {\n        this.raise(Errors.StrictEvalArgumentsBinding, {\n          at,\n          bindingName: at.name,\n        });\n      }\n    }\n\n    if (!allowLetBinding && at.name === \"let\") {\n      this.raise(Errors.LetInLexicalBinding, { at });\n    }\n\n    if (!(bindingType & BIND_NONE)) {\n      this.declareNameFromIdentifier(at, bindingType);\n    }\n  }\n\n  declareNameFromIdentifier(identifier: Identifier, binding: BindingTypes) {\n    this.scope.declareName(identifier.name, binding, identifier.loc.start);\n  }\n\n  checkToRestConversion(node: Node, allowPattern: boolean): void {\n    switch (node.type) {\n      case \"ParenthesizedExpression\":\n        this.checkToRestConversion(node.expression, allowPattern);\n        break;\n      case \"Identifier\":\n      case \"MemberExpression\":\n        break;\n      case \"ArrayExpression\":\n      case \"ObjectExpression\":\n        if (allowPattern) break;\n      /* falls through */\n      default:\n        this.raise(Errors.InvalidRestAssignmentPattern, { at: node });\n    }\n  }\n\n  checkCommaAfterRest(close: $Values<typeof charCodes>): boolean {\n    if (!this.match(tt.comma)) {\n      return false;\n    }\n\n    this.raise(\n      this.lookaheadCharCode() === close\n        ? Errors.RestTrailingComma\n        : Errors.ElementAfterRest,\n      { at: this.state.startLoc },\n    );\n\n    return true;\n  }\n}\n","// @flow\n\nimport * as N from \"../types\";\nimport {\n  tokenIsIdentifier,\n  tokenIsLoop,\n  tokenIsTemplate,\n  tt,\n  type TokenType,\n  getExportedToken,\n} from \"../tokenizer/types\";\nimport ExpressionParser from \"./expression\";\nimport { Errors } from \"../parse-error\";\nimport { isIdentifierChar, isIdentifierStart } from \"../util/identifier\";\nimport { lineBreak } from \"../util/whitespace\";\nimport * as charCodes from \"charcodes\";\nimport {\n  BIND_CLASS,\n  BIND_LEXICAL,\n  BIND_VAR,\n  BIND_FUNCTION,\n  SCOPE_CLASS,\n  SCOPE_FUNCTION,\n  SCOPE_OTHER,\n  SCOPE_SIMPLE_CATCH,\n  SCOPE_STATIC_BLOCK,\n  SCOPE_SUPER,\n  CLASS_ELEMENT_OTHER,\n  CLASS_ELEMENT_INSTANCE_GETTER,\n  CLASS_ELEMENT_INSTANCE_SETTER,\n  CLASS_ELEMENT_STATIC_GETTER,\n  CLASS_ELEMENT_STATIC_SETTER,\n  type BindingTypes,\n} from \"../util/scopeflags\";\nimport { ExpressionErrors } from \"./util\";\nimport { PARAM, functionFlags } from \"../util/production-parameter\";\nimport {\n  newExpressionScope,\n  newParameterDeclarationScope,\n} from \"../util/expression-scope\";\nimport type { SourceType } from \"../options\";\nimport { Token } from \"../tokenizer\";\nimport { Position, createPositionWithColumnOffset } from \"../util/location\";\nimport { cloneStringLiteral, cloneIdentifier } from \"./node\";\n\nconst loopLabel = { kind: \"loop\" },\n  switchLabel = { kind: \"switch\" };\n\nconst FUNC_NO_FLAGS = 0b000,\n  FUNC_STATEMENT = 0b001,\n  FUNC_HANGING_STATEMENT = 0b010,\n  FUNC_NULLABLE_ID = 0b100;\n\nconst loneSurrogate = /[\\uD800-\\uDFFF]/u;\n\nconst keywordRelationalOperator = /in(?:stanceof)?/y;\n\n/**\n * Convert tokens for backward Babel 7 compat.\n * tt.privateName => tt.hash + tt.name\n * tt.templateTail => tt.backquote/tt.braceR + tt.template + tt.backquote\n * tt.templateNonTail => tt.backquote/tt.braceR + tt.template + tt.dollarBraceL\n * For performance reasons this routine mutates `tokens`, it is okay\n * here since we execute `parseTopLevel` once for every file.\n * @param {*} tokens\n * @returns\n */\nfunction babel7CompatTokens(tokens, input) {\n  for (let i = 0; i < tokens.length; i++) {\n    const token = tokens[i];\n    const { type } = token;\n    if (typeof type === \"number\") {\n      if (!process.env.BABEL_8_BREAKING) {\n        if (type === tt.privateName) {\n          const { loc, start, value, end } = token;\n          const hashEndPos = start + 1;\n          const hashEndLoc = createPositionWithColumnOffset(loc.start, 1);\n          tokens.splice(\n            i,\n            1,\n            // $FlowIgnore: hacky way to create token\n            new Token({\n              type: getExportedToken(tt.hash),\n              value: \"#\",\n              start: start,\n              end: hashEndPos,\n              startLoc: loc.start,\n              endLoc: hashEndLoc,\n            }),\n            // $FlowIgnore: hacky way to create token\n            new Token({\n              type: getExportedToken(tt.name),\n              value: value,\n              start: hashEndPos,\n              end: end,\n              startLoc: hashEndLoc,\n              endLoc: loc.end,\n            }),\n          );\n          i++;\n          continue;\n        }\n\n        if (tokenIsTemplate(type)) {\n          const { loc, start, value, end } = token;\n          const backquoteEnd = start + 1;\n          const backquoteEndLoc = createPositionWithColumnOffset(loc.start, 1);\n          let startToken;\n          if (input.charCodeAt(start) === charCodes.graveAccent) {\n            // $FlowIgnore: hacky way to create token\n            startToken = new Token({\n              type: getExportedToken(tt.backQuote),\n              value: \"`\",\n              start: start,\n              end: backquoteEnd,\n              startLoc: loc.start,\n              endLoc: backquoteEndLoc,\n            });\n          } else {\n            // $FlowIgnore: hacky way to create token\n            startToken = new Token({\n              type: getExportedToken(tt.braceR),\n              value: \"}\",\n              start: start,\n              end: backquoteEnd,\n              startLoc: loc.start,\n              endLoc: backquoteEndLoc,\n            });\n          }\n          let templateValue,\n            templateElementEnd,\n            templateElementEndLoc,\n            endToken;\n          if (type === tt.templateTail) {\n            // ends with '`'\n            templateElementEnd = end - 1;\n            templateElementEndLoc = createPositionWithColumnOffset(loc.end, -1);\n            templateValue = value === null ? null : value.slice(1, -1);\n            // $FlowIgnore: hacky way to create token\n            endToken = new Token({\n              type: getExportedToken(tt.backQuote),\n              value: \"`\",\n              start: templateElementEnd,\n              end: end,\n              startLoc: templateElementEndLoc,\n              endLoc: loc.end,\n            });\n          } else {\n            // ends with `${`\n            templateElementEnd = end - 2;\n            templateElementEndLoc = createPositionWithColumnOffset(loc.end, -2);\n            templateValue = value === null ? null : value.slice(1, -2);\n            // $FlowIgnore: hacky way to create token\n            endToken = new Token({\n              type: getExportedToken(tt.dollarBraceL),\n              value: \"${\",\n              start: templateElementEnd,\n              end: end,\n              startLoc: templateElementEndLoc,\n              endLoc: loc.end,\n            });\n          }\n          tokens.splice(\n            i,\n            1,\n            startToken,\n            // $FlowIgnore: hacky way to create token\n            new Token({\n              type: getExportedToken(tt.template),\n              value: templateValue,\n              start: backquoteEnd,\n              end: templateElementEnd,\n              startLoc: backquoteEndLoc,\n              endLoc: templateElementEndLoc,\n            }),\n            endToken,\n          );\n          i += 2;\n          continue;\n        }\n      }\n      // $FlowIgnore: we manipulate `token` for performance reasons\n      token.type = getExportedToken(type);\n    }\n  }\n  return tokens;\n}\nexport default class StatementParser extends ExpressionParser {\n  // ### Statement parsing\n\n  // Parse a program. Initializes the parser, reads any number of\n  // statements, and wraps them in a Program node.  Optionally takes a\n  // `program` argument.  If present, the statements will be appended\n  // to its body instead of creating a new node.\n\n  parseTopLevel(file: N.File, program: N.Program): N.File {\n    file.program = this.parseProgram(program);\n    file.comments = this.state.comments;\n\n    if (this.options.tokens) {\n      file.tokens = babel7CompatTokens(this.tokens, this.input);\n    }\n\n    return this.finishNode(file, \"File\");\n  }\n\n  parseProgram(\n    program: N.Program,\n    end: TokenType = tt.eof,\n    sourceType: SourceType = this.options.sourceType,\n  ): N.Program {\n    program.sourceType = sourceType;\n    program.interpreter = this.parseInterpreterDirective();\n    this.parseBlockBody(program, true, true, end);\n    if (\n      this.inModule &&\n      !this.options.allowUndeclaredExports &&\n      this.scope.undefinedExports.size > 0\n    ) {\n      for (const [localName, at] of Array.from(this.scope.undefinedExports)) {\n        this.raise(Errors.ModuleExportUndefined, { at, localName });\n      }\n    }\n    return this.finishNode<N.Program>(program, \"Program\");\n  }\n\n  // TODO\n\n  /**\n   * cast a Statement to a Directive. This method mutates input statement.\n   *\n   * @param {N.Statement} stmt\n   * @returns {N.Directive}\n   * @memberof StatementParser\n   */\n  stmtToDirective(stmt: N.Statement): N.Directive {\n    const directive = (stmt: any);\n    directive.type = \"Directive\";\n    directive.value = directive.expression;\n    delete directive.expression;\n\n    const directiveLiteral = directive.value;\n    const expressionValue = directiveLiteral.value;\n    const raw = this.input.slice(directiveLiteral.start, directiveLiteral.end);\n    const val = (directiveLiteral.value = raw.slice(1, -1)); // remove quotes\n\n    this.addExtra(directiveLiteral, \"raw\", raw);\n    this.addExtra(directiveLiteral, \"rawValue\", val);\n    this.addExtra(directiveLiteral, \"expressionValue\", expressionValue);\n\n    directiveLiteral.type = \"DirectiveLiteral\";\n\n    return directive;\n  }\n\n  parseInterpreterDirective(): N.InterpreterDirective | null {\n    if (!this.match(tt.interpreterDirective)) {\n      return null;\n    }\n\n    const node = this.startNode();\n    node.value = this.state.value;\n    this.next();\n    return this.finishNode(node, \"InterpreterDirective\");\n  }\n\n  isLet(context: ?string): boolean {\n    if (!this.isContextual(tt._let)) {\n      return false;\n    }\n    return this.isLetKeyword(context);\n  }\n\n  /**\n   * Assuming we have seen a contextual `let`, check if it starts a variable declaration\n   so that `left` should be interpreted as a `let` keyword.\n   *\n   * @param {?string} context When `context` is non nullish, it will return early and _skip_ checking\n                              if the next token after `let` is `{` or a keyword relational operator\n   * @returns {boolean}\n   * @memberof StatementParser\n   */\n  isLetKeyword(context: ?string): boolean {\n    const next = this.nextTokenStart();\n    const nextCh = this.codePointAtPos(next);\n    // For ambiguous cases, determine if a LexicalDeclaration (or only a\n    // Statement) is allowed here. If context is not empty then only a Statement\n    // is allowed. However, `let [` is an explicit negative lookahead for\n    // ExpressionStatement, so special-case it first.\n    // Also, `let \\` is never valid as an expression so this must be a keyword.\n    if (\n      nextCh === charCodes.backslash ||\n      nextCh === charCodes.leftSquareBracket\n    ) {\n      return true;\n    }\n    if (context) return false;\n\n    if (nextCh === charCodes.leftCurlyBrace) return true;\n\n    if (isIdentifierStart(nextCh)) {\n      keywordRelationalOperator.lastIndex = next;\n      if (keywordRelationalOperator.test(this.input)) {\n        // We have seen `in` or `instanceof` so far, now check if the identfier\n        // ends here\n        const endCh = this.codePointAtPos(keywordRelationalOperator.lastIndex);\n        if (!isIdentifierChar(endCh) && endCh !== charCodes.backslash) {\n          return false;\n        }\n      }\n      return true;\n    }\n    return false;\n  }\n\n  // Parse a single statement.\n  //\n  // If expecting a statement and finding a slash operator, parse a\n  // regular expression literal. This is to handle cases like\n  // `if (foo) /blah/.exec(foo)`, where looking at the previous token\n  // does not help.\n  // https://tc39.es/ecma262/#prod-Statement\n  // ImportDeclaration and ExportDeclaration are also handled here so we can throw recoverable errors\n  // when they are not at the top level\n  parseStatement(context: ?string, topLevel?: boolean): N.Statement {\n    if (this.match(tt.at)) {\n      this.parseDecorators(true);\n    }\n    return this.parseStatementContent(context, topLevel);\n  }\n\n  parseStatementContent(context: ?string, topLevel: ?boolean): N.Statement {\n    let starttype = this.state.type;\n    const node = this.startNode();\n    let kind;\n\n    if (this.isLet(context)) {\n      starttype = tt._var;\n      kind = \"let\";\n    }\n\n    // Most types of statements are recognized by the keyword they\n    // start with. Many are trivial to parse, some require a bit of\n    // complexity.\n\n    switch (starttype) {\n      case tt._break:\n        return this.parseBreakContinueStatement(node, /* isBreak */ true);\n      case tt._continue:\n        return this.parseBreakContinueStatement(node, /* isBreak */ false);\n      case tt._debugger:\n        return this.parseDebuggerStatement(node);\n      case tt._do:\n        return this.parseDoStatement(node);\n      case tt._for:\n        return this.parseForStatement(node);\n      case tt._function:\n        if (this.lookaheadCharCode() === charCodes.dot) break;\n        if (context) {\n          if (this.state.strict) {\n            this.raise(Errors.StrictFunction, { at: this.state.startLoc });\n          } else if (context !== \"if\" && context !== \"label\") {\n            this.raise(Errors.SloppyFunction, { at: this.state.startLoc });\n          }\n        }\n        return this.parseFunctionStatement(node, false, !context);\n\n      case tt._class:\n        if (context) this.unexpected();\n        return this.parseClass(node, true);\n\n      case tt._if:\n        return this.parseIfStatement(node);\n      case tt._return:\n        return this.parseReturnStatement(node);\n      case tt._switch:\n        return this.parseSwitchStatement(node);\n      case tt._throw:\n        return this.parseThrowStatement(node);\n      case tt._try:\n        return this.parseTryStatement(node);\n\n      case tt._const:\n      case tt._var:\n        kind = kind || this.state.value;\n        if (context && kind !== \"var\") {\n          this.raise(Errors.UnexpectedLexicalDeclaration, {\n            at: this.state.startLoc,\n          });\n        }\n        return this.parseVarStatement(node, kind);\n\n      case tt._while:\n        return this.parseWhileStatement(node);\n      case tt._with:\n        return this.parseWithStatement(node);\n      case tt.braceL:\n        return this.parseBlock();\n      case tt.semi:\n        return this.parseEmptyStatement(node);\n      case tt._import: {\n        const nextTokenCharCode = this.lookaheadCharCode();\n        if (\n          nextTokenCharCode === charCodes.leftParenthesis || // import()\n          nextTokenCharCode === charCodes.dot // import.meta\n        ) {\n          break;\n        }\n      }\n      // fall through\n      case tt._export: {\n        if (!this.options.allowImportExportEverywhere && !topLevel) {\n          this.raise(Errors.UnexpectedImportExport, {\n            at: this.state.startLoc,\n          });\n        }\n\n        this.next(); // eat `import`/`export`\n\n        let result;\n        if (starttype === tt._import) {\n          result = this.parseImport(node);\n\n          if (\n            result.type === \"ImportDeclaration\" &&\n            (!result.importKind || result.importKind === \"value\")\n          ) {\n            this.sawUnambiguousESM = true;\n          }\n        } else {\n          result = this.parseExport(node);\n\n          if (\n            (result.type === \"ExportNamedDeclaration\" &&\n              (!result.exportKind || result.exportKind === \"value\")) ||\n            (result.type === \"ExportAllDeclaration\" &&\n              (!result.exportKind || result.exportKind === \"value\")) ||\n            result.type === \"ExportDefaultDeclaration\"\n          ) {\n            this.sawUnambiguousESM = true;\n          }\n        }\n\n        this.assertModuleNodeAllowed(node);\n\n        return result;\n      }\n\n      default: {\n        if (this.isAsyncFunction()) {\n          if (context) {\n            this.raise(Errors.AsyncFunctionInSingleStatementContext, {\n              at: this.state.startLoc,\n            });\n          }\n          this.next();\n          return this.parseFunctionStatement(node, true, !context);\n        }\n      }\n    }\n\n    // If the statement does not start with a statement keyword or a\n    // brace, it's an ExpressionStatement or LabeledStatement. We\n    // simply start parsing an expression, and afterwards, if the\n    // next token is a colon and the expression was a simple\n    // Identifier node, we switch to interpreting it as a label.\n    const maybeName = this.state.value;\n    const expr = this.parseExpression();\n\n    if (\n      tokenIsIdentifier(starttype) &&\n      expr.type === \"Identifier\" &&\n      this.eat(tt.colon)\n    ) {\n      return this.parseLabeledStatement(node, maybeName, expr, context);\n    } else {\n      return this.parseExpressionStatement(node, expr);\n    }\n  }\n\n  assertModuleNodeAllowed(node: N.Node): void {\n    if (!this.options.allowImportExportEverywhere && !this.inModule) {\n      this.raise(Errors.ImportOutsideModule, { at: node });\n    }\n  }\n\n  takeDecorators(node: N.HasDecorators): void {\n    const decorators =\n      this.state.decoratorStack[this.state.decoratorStack.length - 1];\n    if (decorators.length) {\n      node.decorators = decorators;\n      this.resetStartLocationFromNode(node, decorators[0]);\n      this.state.decoratorStack[this.state.decoratorStack.length - 1] = [];\n    }\n  }\n\n  canHaveLeadingDecorator(): boolean {\n    return this.match(tt._class);\n  }\n\n  parseDecorators(allowExport?: boolean): void {\n    const currentContextDecorators =\n      this.state.decoratorStack[this.state.decoratorStack.length - 1];\n    while (this.match(tt.at)) {\n      const decorator = this.parseDecorator();\n      currentContextDecorators.push(decorator);\n    }\n\n    if (this.match(tt._export)) {\n      if (!allowExport) {\n        this.unexpected();\n      }\n\n      if (\n        this.hasPlugin(\"decorators\") &&\n        !this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")\n      ) {\n        this.raise(Errors.DecoratorExportClass, { at: this.state.startLoc });\n      }\n    } else if (!this.canHaveLeadingDecorator()) {\n      throw this.raise(Errors.UnexpectedLeadingDecorator, {\n        at: this.state.startLoc,\n      });\n    }\n  }\n\n  parseDecorator(): N.Decorator {\n    this.expectOnePlugin([\"decorators\", \"decorators-legacy\"]);\n\n    const node = this.startNode();\n    this.next();\n\n    if (this.hasPlugin(\"decorators\")) {\n      // Every time a decorator class expression is evaluated, a new empty array is pushed onto the stack\n      // So that the decorators of any nested class expressions will be dealt with separately\n      this.state.decoratorStack.push([]);\n\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      let expr: N.Expression;\n\n      if (this.match(tt.parenL)) {\n        const startPos = this.state.start;\n        const startLoc = this.state.startLoc;\n        this.next(); // eat '('\n        expr = this.parseExpression();\n        this.expect(tt.parenR);\n        expr = this.wrapParenthesis(startPos, startLoc, expr);\n      } else {\n        expr = this.parseIdentifier(false);\n\n        while (this.eat(tt.dot)) {\n          const node = this.startNodeAt(startPos, startLoc);\n          node.object = expr;\n          node.property = this.parseIdentifier(true);\n          node.computed = false;\n          expr = this.finishNode(node, \"MemberExpression\");\n        }\n      }\n\n      node.expression = this.parseMaybeDecoratorArguments(expr);\n      this.state.decoratorStack.pop();\n    } else {\n      node.expression = this.parseExprSubscripts();\n    }\n    return this.finishNode(node, \"Decorator\");\n  }\n\n  parseMaybeDecoratorArguments(expr: N.Expression): N.Expression {\n    if (this.eat(tt.parenL)) {\n      const node = this.startNodeAtNode(expr);\n      node.callee = expr;\n      node.arguments = this.parseCallExpressionArguments(tt.parenR, false);\n      this.toReferencedList(node.arguments);\n      return this.finishNode(node, \"CallExpression\");\n    }\n\n    return expr;\n  }\n\n  parseBreakContinueStatement(\n    node: N.BreakStatement | N.ContinueStatement,\n    isBreak: boolean,\n  ): N.BreakStatement | N.ContinueStatement {\n    this.next();\n\n    if (this.isLineTerminator()) {\n      node.label = null;\n    } else {\n      node.label = this.parseIdentifier();\n      this.semicolon();\n    }\n\n    this.verifyBreakContinue(node, isBreak);\n\n    return this.finishNode(\n      node,\n      isBreak ? \"BreakStatement\" : \"ContinueStatement\",\n    );\n  }\n\n  verifyBreakContinue(\n    node: N.BreakStatement | N.ContinueStatement,\n    isBreak: boolean,\n  ) {\n    let i;\n    for (i = 0; i < this.state.labels.length; ++i) {\n      const lab = this.state.labels[i];\n      if (node.label == null || lab.name === node.label.name) {\n        if (lab.kind != null && (isBreak || lab.kind === \"loop\")) break;\n        if (node.label && isBreak) break;\n      }\n    }\n    if (i === this.state.labels.length) {\n      const type = isBreak ? \"BreakStatement\" : \"ContinueStatement\";\n      this.raise(Errors.IllegalBreakContinue, { at: node, type });\n    }\n  }\n\n  parseDebuggerStatement(node: N.DebuggerStatement): N.DebuggerStatement {\n    this.next();\n    this.semicolon();\n    return this.finishNode(node, \"DebuggerStatement\");\n  }\n\n  parseHeaderExpression(): N.Expression {\n    this.expect(tt.parenL);\n    const val = this.parseExpression();\n    this.expect(tt.parenR);\n    return val;\n  }\n\n  parseDoStatement(node: N.DoWhileStatement): N.DoWhileStatement {\n    this.next();\n    this.state.labels.push(loopLabel);\n\n    // Parse the loop body's body.\n    node.body =\n      // For the smartPipelines plugin: Disable topic references from outer\n      // contexts within the loop body. They are permitted in test expressions,\n      // outside of the loop body.\n      this.withSmartMixTopicForbiddingContext(() =>\n        // Parse the loop body's body.\n        this.parseStatement(\"do\"),\n      );\n\n    this.state.labels.pop();\n\n    this.expect(tt._while);\n    node.test = this.parseHeaderExpression();\n    this.eat(tt.semi);\n    return this.finishNode(node, \"DoWhileStatement\");\n  }\n\n  // Disambiguating between a `for` and a `for`/`in` or `for`/`of`\n  // loop is non-trivial. Basically, we have to parse the init `var`\n  // statement or expression, disallowing the `in` operator (see\n  // the second parameter to `parseExpression`), and then check\n  // whether the next token is `in` or `of`. When there is no init\n  // part (semicolon immediately after the opening parenthesis), it\n  // is a regular `for` loop.\n\n  parseForStatement(node: N.Node): N.ForLike {\n    this.next();\n    this.state.labels.push(loopLabel);\n\n    let awaitAt = null;\n\n    if (this.isAwaitAllowed() && this.eatContextual(tt._await)) {\n      awaitAt = this.state.lastTokStartLoc;\n    }\n    this.scope.enter(SCOPE_OTHER);\n    this.expect(tt.parenL);\n\n    if (this.match(tt.semi)) {\n      if (awaitAt !== null) {\n        this.unexpected(awaitAt);\n      }\n      return this.parseFor(node, null);\n    }\n\n    const startsWithLet = this.isContextual(tt._let);\n    const isLet = startsWithLet && this.isLetKeyword();\n    if (this.match(tt._var) || this.match(tt._const) || isLet) {\n      const init = this.startNode();\n      const kind = isLet ? \"let\" : this.state.value;\n      this.next();\n      this.parseVar(init, true, kind);\n      this.finishNode(init, \"VariableDeclaration\");\n\n      if (\n        (this.match(tt._in) || this.isContextual(tt._of)) &&\n        init.declarations.length === 1\n      ) {\n        return this.parseForIn(node, init, awaitAt);\n      }\n      if (awaitAt !== null) {\n        this.unexpected(awaitAt);\n      }\n      return this.parseFor(node, init);\n    }\n\n    // Check whether the first token is possibly a contextual keyword, so that\n    // we can forbid `for (async of` if this turns out to be a for-of loop.\n    const startsWithAsync = this.isContextual(tt._async);\n\n    const refExpressionErrors = new ExpressionErrors();\n    const init = this.parseExpression(true, refExpressionErrors);\n    const isForOf = this.isContextual(tt._of);\n    if (isForOf) {\n      // Check for leading tokens that are forbidden in for-of loops:\n      if (startsWithLet) {\n        this.raise(Errors.ForOfLet, { at: init });\n      }\n\n      if (\n        // `for await (async of []);` is allowed.\n        awaitAt === null &&\n        startsWithAsync &&\n        init.type === \"Identifier\"\n      ) {\n        // This catches the case where the `async` in `for (async of` was\n        // parsed as an identifier. If it was parsed as the start of an async\n        // arrow function (e.g. `for (async of => {} of []);`), the LVal check\n        // further down will raise a more appropriate error.\n        this.raise(Errors.ForOfAsync, { at: init });\n      }\n    }\n    if (isForOf || this.match(tt._in)) {\n      this.checkDestructuringPrivate(refExpressionErrors);\n      this.toAssignable(init, /* isLHS */ true);\n      const type = isForOf ? \"ForOfStatement\" : \"ForInStatement\";\n      this.checkLVal(init, { in: { type } });\n      return this.parseForIn(node, init, awaitAt);\n    } else {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n    if (awaitAt !== null) {\n      this.unexpected(awaitAt);\n    }\n    return this.parseFor(node, init);\n  }\n\n  parseFunctionStatement(\n    node: N.FunctionDeclaration,\n    isAsync?: boolean,\n    declarationPosition?: boolean,\n  ): N.FunctionDeclaration {\n    this.next();\n    return this.parseFunction(\n      node,\n      FUNC_STATEMENT | (declarationPosition ? 0 : FUNC_HANGING_STATEMENT),\n      isAsync,\n    );\n  }\n\n  parseIfStatement(node: N.IfStatement): N.IfStatement {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    node.consequent = this.parseStatement(\"if\");\n    node.alternate = this.eat(tt._else) ? this.parseStatement(\"if\") : null;\n    return this.finishNode(node, \"IfStatement\");\n  }\n\n  parseReturnStatement(node: N.ReturnStatement): N.ReturnStatement {\n    if (!this.prodParam.hasReturn && !this.options.allowReturnOutsideFunction) {\n      this.raise(Errors.IllegalReturn, { at: this.state.startLoc });\n    }\n\n    this.next();\n\n    // In `return` (and `break`/`continue`), the keywords with\n    // optional arguments, we eagerly look for a semicolon or the\n    // possibility to insert one.\n\n    if (this.isLineTerminator()) {\n      node.argument = null;\n    } else {\n      node.argument = this.parseExpression();\n      this.semicolon();\n    }\n\n    return this.finishNode(node, \"ReturnStatement\");\n  }\n\n  parseSwitchStatement(node: N.SwitchStatement): N.SwitchStatement {\n    this.next();\n    node.discriminant = this.parseHeaderExpression();\n    const cases = (node.cases = []);\n    this.expect(tt.braceL);\n    this.state.labels.push(switchLabel);\n    this.scope.enter(SCOPE_OTHER);\n\n    // Statements under must be grouped (by label) in SwitchCase\n    // nodes. `cur` is used to keep the node that we are currently\n    // adding statements to.\n\n    let cur;\n    for (let sawDefault; !this.match(tt.braceR); ) {\n      if (this.match(tt._case) || this.match(tt._default)) {\n        const isCase = this.match(tt._case);\n        if (cur) this.finishNode(cur, \"SwitchCase\");\n        cases.push((cur = this.startNode()));\n        cur.consequent = [];\n        this.next();\n        if (isCase) {\n          cur.test = this.parseExpression();\n        } else {\n          if (sawDefault) {\n            this.raise(Errors.MultipleDefaultsInSwitch, {\n              at: this.state.lastTokStartLoc,\n            });\n          }\n          sawDefault = true;\n          cur.test = null;\n        }\n        this.expect(tt.colon);\n      } else {\n        if (cur) {\n          cur.consequent.push(this.parseStatement(null));\n        } else {\n          this.unexpected();\n        }\n      }\n    }\n    this.scope.exit();\n    if (cur) this.finishNode(cur, \"SwitchCase\");\n    this.next(); // Closing brace\n    this.state.labels.pop();\n    return this.finishNode(node, \"SwitchStatement\");\n  }\n\n  parseThrowStatement(node: N.ThrowStatement): N.ThrowStatement {\n    this.next();\n    if (this.hasPrecedingLineBreak()) {\n      this.raise(Errors.NewlineAfterThrow, { at: this.state.lastTokEndLoc });\n    }\n    node.argument = this.parseExpression();\n    this.semicolon();\n    return this.finishNode(node, \"ThrowStatement\");\n  }\n\n  parseCatchClauseParam(): N.Pattern {\n    const param = this.parseBindingAtom();\n\n    const simple = param.type === \"Identifier\";\n    this.scope.enter(simple ? SCOPE_SIMPLE_CATCH : 0);\n    this.checkLVal(param, {\n      in: { type: \"CatchClause\" },\n      binding: BIND_LEXICAL,\n      allowingSloppyLetBinding: true,\n    });\n\n    return param;\n  }\n\n  parseTryStatement(node: N.TryStatement): N.TryStatement {\n    this.next();\n\n    node.block = this.parseBlock();\n    node.handler = null;\n\n    if (this.match(tt._catch)) {\n      const clause = this.startNode();\n      this.next();\n      if (this.match(tt.parenL)) {\n        this.expect(tt.parenL);\n        clause.param = this.parseCatchClauseParam();\n        this.expect(tt.parenR);\n      } else {\n        clause.param = null;\n        this.scope.enter(SCOPE_OTHER);\n      }\n\n      // Parse the catch clause's body.\n      clause.body =\n        // For the smartPipelines plugin: Disable topic references from outer\n        // contexts within the catch clause's body.\n        this.withSmartMixTopicForbiddingContext(() =>\n          // Parse the catch clause's body.\n          this.parseBlock(false, false),\n        );\n\n      this.scope.exit();\n      node.handler = this.finishNode(clause, \"CatchClause\");\n    }\n\n    node.finalizer = this.eat(tt._finally) ? this.parseBlock() : null;\n\n    if (!node.handler && !node.finalizer) {\n      this.raise(Errors.NoCatchOrFinally, { at: node });\n    }\n\n    return this.finishNode(node, \"TryStatement\");\n  }\n\n  parseVarStatement(\n    node: N.VariableDeclaration,\n    kind: \"var\" | \"let\" | \"const\",\n    allowMissingInitializer: boolean = false,\n  ): N.VariableDeclaration {\n    this.next();\n    this.parseVar(node, false, kind, allowMissingInitializer);\n    this.semicolon();\n    return this.finishNode(node, \"VariableDeclaration\");\n  }\n\n  parseWhileStatement(node: N.WhileStatement): N.WhileStatement {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    this.state.labels.push(loopLabel);\n\n    // Parse the loop body.\n    node.body =\n      // For the smartPipelines plugin:\n      // Disable topic references from outer contexts within the loop body.\n      // They are permitted in test expressions, outside of the loop body.\n      this.withSmartMixTopicForbiddingContext(() =>\n        // Parse loop body.\n        this.parseStatement(\"while\"),\n      );\n\n    this.state.labels.pop();\n\n    return this.finishNode(node, \"WhileStatement\");\n  }\n\n  parseWithStatement(node: N.WithStatement): N.WithStatement {\n    if (this.state.strict) {\n      this.raise(Errors.StrictWith, { at: this.state.startLoc });\n    }\n    this.next();\n    node.object = this.parseHeaderExpression();\n\n    // Parse the statement body.\n    node.body =\n      // For the smartPipelines plugin:\n      // Disable topic references from outer contexts within the with statement's body.\n      // They are permitted in function default-parameter expressions, which are\n      // part of the outer context, outside of the with statement's body.\n      this.withSmartMixTopicForbiddingContext(() =>\n        // Parse the statement body.\n        this.parseStatement(\"with\"),\n      );\n\n    return this.finishNode(node, \"WithStatement\");\n  }\n\n  parseEmptyStatement(node: N.EmptyStatement): N.EmptyStatement {\n    this.next();\n    return this.finishNode(node, \"EmptyStatement\");\n  }\n\n  parseLabeledStatement(\n    node: N.LabeledStatement,\n    maybeName: string,\n    expr: N.Identifier,\n    context: ?string,\n  ): N.LabeledStatement {\n    for (const label of this.state.labels) {\n      if (label.name === maybeName) {\n        this.raise(Errors.LabelRedeclaration, {\n          at: expr,\n          labelName: maybeName,\n        });\n      }\n    }\n\n    const kind = tokenIsLoop(this.state.type)\n      ? \"loop\"\n      : this.match(tt._switch)\n      ? \"switch\"\n      : null;\n    for (let i = this.state.labels.length - 1; i >= 0; i--) {\n      const label = this.state.labels[i];\n      if (label.statementStart === node.start) {\n        label.statementStart = this.state.start;\n        label.kind = kind;\n      } else {\n        break;\n      }\n    }\n\n    this.state.labels.push({\n      name: maybeName,\n      kind: kind,\n      statementStart: this.state.start,\n    });\n    node.body = this.parseStatement(\n      context\n        ? context.indexOf(\"label\") === -1\n          ? context + \"label\"\n          : context\n        : \"label\",\n    );\n\n    this.state.labels.pop();\n    node.label = expr;\n    return this.finishNode(node, \"LabeledStatement\");\n  }\n\n  parseExpressionStatement(\n    node: N.ExpressionStatement,\n    expr: N.Expression,\n  ): N.Statement {\n    node.expression = expr;\n    this.semicolon();\n    return this.finishNode(node, \"ExpressionStatement\");\n  }\n\n  // Parse a semicolon-enclosed block of statements, handling `\"use\n  // strict\"` declarations when `allowDirectives` is true (used for\n  // function bodies).\n\n  parseBlock(\n    allowDirectives?: boolean = false,\n    createNewLexicalScope?: boolean = true,\n    afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n  ): N.BlockStatement {\n    const node = this.startNode();\n    if (allowDirectives) {\n      this.state.strictErrors.clear();\n    }\n    this.expect(tt.braceL);\n    if (createNewLexicalScope) {\n      this.scope.enter(SCOPE_OTHER);\n    }\n    this.parseBlockBody(\n      node,\n      allowDirectives,\n      false,\n      tt.braceR,\n      afterBlockParse,\n    );\n    if (createNewLexicalScope) {\n      this.scope.exit();\n    }\n    return this.finishNode(node, \"BlockStatement\");\n  }\n\n  isValidDirective(stmt: N.Statement): boolean {\n    return (\n      stmt.type === \"ExpressionStatement\" &&\n      stmt.expression.type === \"StringLiteral\" &&\n      !stmt.expression.extra.parenthesized\n    );\n  }\n\n  parseBlockBody(\n    node: N.BlockStatementLike,\n    allowDirectives: ?boolean,\n    topLevel: boolean,\n    end: TokenType,\n    afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n  ): void {\n    const body = (node.body = []);\n    const directives = (node.directives = []);\n    this.parseBlockOrModuleBlockBody(\n      body,\n      allowDirectives ? directives : undefined,\n      topLevel,\n      end,\n      afterBlockParse,\n    );\n  }\n\n  // Undefined directives means that directives are not allowed.\n  // https://tc39.es/ecma262/#prod-Block\n  // https://tc39.es/ecma262/#prod-ModuleBody\n  parseBlockOrModuleBlockBody(\n    body: N.Statement[],\n    directives: ?(N.Directive[]),\n    topLevel: boolean,\n    end: TokenType,\n    afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n  ): void {\n    const oldStrict = this.state.strict;\n    let hasStrictModeDirective = false;\n    let parsedNonDirective = false;\n\n    while (!this.match(end)) {\n      const stmt = this.parseStatement(null, topLevel);\n\n      if (directives && !parsedNonDirective) {\n        if (this.isValidDirective(stmt)) {\n          const directive = this.stmtToDirective(stmt);\n          directives.push(directive);\n\n          if (\n            !hasStrictModeDirective &&\n            directive.value.value === \"use strict\"\n          ) {\n            hasStrictModeDirective = true;\n            this.setStrict(true);\n          }\n\n          continue;\n        }\n        parsedNonDirective = true;\n        // clear strict errors since the strict mode will not change within the block\n        this.state.strictErrors.clear();\n      }\n      body.push(stmt);\n    }\n\n    if (afterBlockParse) {\n      afterBlockParse.call(this, hasStrictModeDirective);\n    }\n\n    if (!oldStrict) {\n      this.setStrict(false);\n    }\n\n    this.next();\n  }\n\n  // Parse a regular `for` loop. The disambiguation code in\n  // `parseStatement` will already have parsed the init statement or\n  // expression.\n\n  parseFor(\n    node: N.ForStatement,\n    init: ?(N.VariableDeclaration | N.Expression),\n  ): N.ForStatement {\n    node.init = init;\n    this.semicolon(/* allowAsi */ false);\n    node.test = this.match(tt.semi) ? null : this.parseExpression();\n    this.semicolon(/* allowAsi */ false);\n    node.update = this.match(tt.parenR) ? null : this.parseExpression();\n    this.expect(tt.parenR);\n\n    // Parse the loop body.\n    node.body =\n      // For the smartPipelines plugin: Disable topic references from outer\n      // contexts within the loop body. They are permitted in test expressions,\n      // outside of the loop body.\n      this.withSmartMixTopicForbiddingContext(() =>\n        // Parse the loop body.\n        this.parseStatement(\"for\"),\n      );\n\n    this.scope.exit();\n    this.state.labels.pop();\n\n    return this.finishNode(node, \"ForStatement\");\n  }\n\n  // Parse a `for`/`in` and `for`/`of` loop, which are almost\n  // same from parser's perspective.\n\n  parseForIn(\n    node: N.ForInOf,\n    init: N.VariableDeclaration | N.AssignmentPattern,\n    awaitAt: ?Position,\n  ): N.ForInOf {\n    const isForIn = this.match(tt._in);\n    this.next();\n\n    if (isForIn) {\n      if (awaitAt !== null) this.unexpected(awaitAt);\n    } else {\n      node.await = awaitAt !== null;\n    }\n\n    if (\n      init.type === \"VariableDeclaration\" &&\n      init.declarations[0].init != null &&\n      (!isForIn ||\n        this.state.strict ||\n        init.kind !== \"var\" ||\n        init.declarations[0].id.type !== \"Identifier\")\n    ) {\n      this.raise(Errors.ForInOfLoopInitializer, {\n        at: init,\n        type: isForIn ? \"ForInStatement\" : \"ForOfStatement\",\n      });\n    }\n\n    if (init.type === \"AssignmentPattern\") {\n      this.raise(Errors.InvalidLhs, {\n        at: init,\n        ancestor: { type: \"ForStatement\" },\n      });\n    }\n\n    node.left = init;\n    node.right = isForIn\n      ? this.parseExpression()\n      : this.parseMaybeAssignAllowIn();\n    this.expect(tt.parenR);\n\n    // Parse the loop body.\n    node.body =\n      // For the smartPipelines plugin:\n      // Disable topic references from outer contexts within the loop body.\n      // They are permitted in test expressions, outside of the loop body.\n      this.withSmartMixTopicForbiddingContext(() =>\n        // Parse loop body.\n        this.parseStatement(\"for\"),\n      );\n\n    this.scope.exit();\n    this.state.labels.pop();\n\n    return this.finishNode(node, isForIn ? \"ForInStatement\" : \"ForOfStatement\");\n  }\n\n  // Parse a list of variable declarations.\n\n  parseVar(\n    node: N.VariableDeclaration,\n    isFor: boolean,\n    kind: \"var\" | \"let\" | \"const\",\n    allowMissingInitializer: boolean = false,\n  ): N.VariableDeclaration {\n    const declarations = (node.declarations = []);\n    node.kind = kind;\n    for (;;) {\n      const decl = this.startNode();\n      this.parseVarId(decl, kind);\n      decl.init = !this.eat(tt.eq)\n        ? null\n        : isFor\n        ? this.parseMaybeAssignDisallowIn()\n        : this.parseMaybeAssignAllowIn();\n\n      if (decl.init === null && !allowMissingInitializer) {\n        if (\n          decl.id.type !== \"Identifier\" &&\n          !(isFor && (this.match(tt._in) || this.isContextual(tt._of)))\n        ) {\n          this.raise(Errors.DeclarationMissingInitializer, {\n            at: this.state.lastTokEndLoc,\n            kind: \"destructuring\",\n          });\n        } else if (\n          kind === \"const\" &&\n          !(this.match(tt._in) || this.isContextual(tt._of))\n        ) {\n          this.raise(Errors.DeclarationMissingInitializer, {\n            at: this.state.lastTokEndLoc,\n            kind: \"const\",\n          });\n        }\n      }\n      declarations.push(this.finishNode(decl, \"VariableDeclarator\"));\n      if (!this.eat(tt.comma)) break;\n    }\n    return node;\n  }\n\n  parseVarId(decl: N.VariableDeclarator, kind: \"var\" | \"let\" | \"const\"): void {\n    decl.id = this.parseBindingAtom();\n    this.checkLVal(decl.id, {\n      in: { type: \"VariableDeclarator\" },\n      binding: kind === \"var\" ? BIND_VAR : BIND_LEXICAL,\n    });\n  }\n\n  // Parse a function declaration or literal (depending on the\n  // `isStatement` parameter).\n\n  parseFunction<T: N.NormalFunction>(\n    node: T,\n    statement?: number = FUNC_NO_FLAGS,\n    isAsync?: boolean = false,\n  ): T {\n    const isStatement = statement & FUNC_STATEMENT;\n    const isHangingStatement = statement & FUNC_HANGING_STATEMENT;\n    const requireId = !!isStatement && !(statement & FUNC_NULLABLE_ID);\n\n    this.initFunction(node, isAsync);\n\n    if (this.match(tt.star) && isHangingStatement) {\n      this.raise(Errors.GeneratorInSingleStatementContext, {\n        at: this.state.startLoc,\n      });\n    }\n    node.generator = this.eat(tt.star);\n\n    if (isStatement) {\n      node.id = this.parseFunctionId(requireId);\n    }\n\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    this.state.maybeInArrowParameters = false;\n    this.scope.enter(SCOPE_FUNCTION);\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n\n    if (!isStatement) {\n      node.id = this.parseFunctionId();\n    }\n\n    this.parseFunctionParams(node, /* allowModifiers */ false);\n\n    // For the smartPipelines plugin: Disable topic references from outer\n    // contexts within the function body. They are permitted in function\n    // default-parameter expressions, outside of the function body.\n    this.withSmartMixTopicForbiddingContext(() => {\n      // Parse the function body.\n      this.parseFunctionBodyAndFinish(\n        node,\n        isStatement ? \"FunctionDeclaration\" : \"FunctionExpression\",\n      );\n    });\n\n    this.prodParam.exit();\n    this.scope.exit();\n\n    if (isStatement && !isHangingStatement) {\n      // We need to register this _after_ parsing the function body\n      // because of TypeScript body-less function declarations,\n      // which shouldn't be added to the scope.\n      this.registerFunctionStatementId(node);\n    }\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return node;\n  }\n\n  parseFunctionId(requireId?: boolean): ?N.Identifier {\n    return requireId || tokenIsIdentifier(this.state.type)\n      ? this.parseIdentifier()\n      : null;\n  }\n\n  parseFunctionParams(node: N.Function, allowModifiers?: boolean): void {\n    this.expect(tt.parenL);\n    this.expressionScope.enter(newParameterDeclarationScope());\n    node.params = this.parseBindingList(\n      tt.parenR,\n      charCodes.rightParenthesis,\n      /* allowEmpty */ false,\n      allowModifiers,\n    );\n\n    this.expressionScope.exit();\n  }\n\n  registerFunctionStatementId(node: N.Function): void {\n    if (!node.id) return;\n\n    // If it is a regular function declaration in sloppy mode, then it is\n    // subject to Annex B semantics (BIND_FUNCTION). Otherwise, the binding\n    // mode depends on properties of the current scope (see\n    // treatFunctionsAsVar).\n    this.scope.declareName(\n      node.id.name,\n      this.state.strict || node.generator || node.async\n        ? this.scope.treatFunctionsAsVar\n          ? BIND_VAR\n          : BIND_LEXICAL\n        : BIND_FUNCTION,\n      node.id.loc.start,\n    );\n  }\n\n  // Parse a class declaration or literal (depending on the\n  // `isStatement` parameter).\n\n  parseClass<T: N.Class>(\n    node: T,\n    isStatement: /* T === ClassDeclaration */ boolean,\n    optionalId?: boolean,\n  ): T {\n    this.next();\n    this.takeDecorators(node);\n\n    // A class definition is always strict mode code.\n    const oldStrict = this.state.strict;\n    this.state.strict = true;\n\n    this.parseClassId(node, isStatement, optionalId);\n    this.parseClassSuper(node);\n    // this.state.strict is restored in parseClassBody\n    node.body = this.parseClassBody(!!node.superClass, oldStrict);\n\n    return this.finishNode(\n      node,\n      isStatement ? \"ClassDeclaration\" : \"ClassExpression\",\n    );\n  }\n\n  isClassProperty(): boolean {\n    return this.match(tt.eq) || this.match(tt.semi) || this.match(tt.braceR);\n  }\n\n  isClassMethod(): boolean {\n    return this.match(tt.parenL);\n  }\n\n  isNonstaticConstructor(method: N.ClassMethod | N.ClassProperty): boolean {\n    return (\n      !method.computed &&\n      !method.static &&\n      (method.key.name === \"constructor\" || // Identifier\n        method.key.value === \"constructor\") // String literal\n    );\n  }\n\n  // https://tc39.es/ecma262/#prod-ClassBody\n  parseClassBody(hadSuperClass: boolean, oldStrict: boolean): N.ClassBody {\n    this.classScope.enter();\n\n    const state: N.ParseClassMemberState = {\n      hadConstructor: false,\n      hadSuperClass,\n    };\n    let decorators: N.Decorator[] = [];\n    const classBody: N.ClassBody = this.startNode();\n    classBody.body = [];\n\n    this.expect(tt.braceL);\n\n    // For the smartPipelines plugin: Disable topic references from outer\n    // contexts within the class body.\n    this.withSmartMixTopicForbiddingContext(() => {\n      // Parse the contents within the braces.\n      while (!this.match(tt.braceR)) {\n        if (this.eat(tt.semi)) {\n          if (decorators.length > 0) {\n            throw this.raise(Errors.DecoratorSemicolon, {\n              at: this.state.lastTokEndLoc,\n            });\n          }\n          continue;\n        }\n\n        if (this.match(tt.at)) {\n          decorators.push(this.parseDecorator());\n          continue;\n        }\n\n        const member = this.startNode();\n\n        // steal the decorators if there are any\n        if (decorators.length) {\n          member.decorators = decorators;\n          this.resetStartLocationFromNode(member, decorators[0]);\n          decorators = [];\n        }\n\n        this.parseClassMember(classBody, member, state);\n\n        if (\n          member.kind === \"constructor\" &&\n          member.decorators &&\n          member.decorators.length > 0\n        ) {\n          this.raise(Errors.DecoratorConstructor, { at: member });\n        }\n      }\n    });\n\n    this.state.strict = oldStrict;\n\n    this.next(); // eat `}`\n\n    if (decorators.length) {\n      throw this.raise(Errors.TrailingDecorator, { at: this.state.startLoc });\n    }\n\n    this.classScope.exit();\n\n    return this.finishNode(classBody, \"ClassBody\");\n  }\n\n  // returns true if the current identifier is a method/field name,\n  // false if it is a modifier\n  parseClassMemberFromModifier(\n    classBody: N.ClassBody,\n    member: N.ClassMember,\n  ): boolean {\n    const key = this.parseIdentifier(true); // eats the modifier\n\n    if (this.isClassMethod()) {\n      const method: N.ClassMethod = (member: any);\n\n      // a method named like the modifier\n      method.kind = \"method\";\n      method.computed = false;\n      method.key = key;\n      method.static = false;\n      this.pushClassMethod(\n        classBody,\n        method,\n        false,\n        false,\n        /* isConstructor */ false,\n        false,\n      );\n      return true;\n    } else if (this.isClassProperty()) {\n      const prop: N.ClassProperty = (member: any);\n\n      // a property named like the modifier\n      prop.computed = false;\n      prop.key = key;\n      prop.static = false;\n      classBody.body.push(this.parseClassProperty(prop));\n      return true;\n    }\n    this.resetPreviousNodeTrailingComments(key);\n    return false;\n  }\n\n  parseClassMember(\n    classBody: N.ClassBody,\n    member: N.ClassMember,\n    state: N.ParseClassMemberState,\n  ): void {\n    const isStatic = this.isContextual(tt._static);\n\n    if (isStatic) {\n      if (this.parseClassMemberFromModifier(classBody, member)) {\n        // a class element named 'static'\n        return;\n      }\n      if (this.eat(tt.braceL)) {\n        this.parseClassStaticBlock(classBody, ((member: any): N.StaticBlock));\n        return;\n      }\n    }\n\n    this.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n  }\n\n  parseClassMemberWithIsStatic(\n    classBody: N.ClassBody,\n    member: N.ClassMember,\n    state: N.ParseClassMemberState,\n    isStatic: boolean,\n  ) {\n    const publicMethod: $FlowSubtype<N.ClassMethod> = member;\n    const privateMethod: $FlowSubtype<N.ClassPrivateMethod> = member;\n    const publicProp: $FlowSubtype<N.ClassProperty> = member;\n    const privateProp: $FlowSubtype<N.ClassPrivateProperty> = member;\n    const accessorProp: $FlowSubtype<N.ClassAccessorProperty> = member;\n\n    const method: typeof publicMethod | typeof privateMethod = publicMethod;\n    const publicMember: typeof publicMethod | typeof publicProp = publicMethod;\n\n    member.static = isStatic;\n    this.parsePropertyNamePrefixOperator(member);\n\n    if (this.eat(tt.star)) {\n      // a generator\n      method.kind = \"method\";\n      const isPrivateName = this.match(tt.privateName);\n      this.parseClassElementName(method);\n\n      if (isPrivateName) {\n        // Private generator method\n        this.pushClassPrivateMethod(classBody, privateMethod, true, false);\n        return;\n      }\n\n      if (this.isNonstaticConstructor(publicMethod)) {\n        this.raise(Errors.ConstructorIsGenerator, {\n          at: publicMethod.key,\n        });\n      }\n\n      this.pushClassMethod(\n        classBody,\n        publicMethod,\n        true,\n        false,\n        /* isConstructor */ false,\n        false,\n      );\n\n      return;\n    }\n\n    const isContextual =\n      tokenIsIdentifier(this.state.type) && !this.state.containsEsc;\n    const isPrivate = this.match(tt.privateName);\n    const key = this.parseClassElementName(member);\n    const maybeQuestionTokenStartLoc = this.state.startLoc;\n\n    this.parsePostMemberNameModifiers(publicMember);\n\n    if (this.isClassMethod()) {\n      method.kind = \"method\";\n\n      if (isPrivate) {\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n        return;\n      }\n\n      // a normal method\n      const isConstructor = this.isNonstaticConstructor(publicMethod);\n      let allowsDirectSuper = false;\n      if (isConstructor) {\n        publicMethod.kind = \"constructor\";\n\n        // TypeScript allows multiple overloaded constructor declarations.\n        if (state.hadConstructor && !this.hasPlugin(\"typescript\")) {\n          this.raise(Errors.DuplicateConstructor, { at: key });\n        }\n        if (isConstructor && this.hasPlugin(\"typescript\") && member.override) {\n          this.raise(Errors.OverrideOnConstructor, { at: key });\n        }\n        state.hadConstructor = true;\n        allowsDirectSuper = state.hadSuperClass;\n      }\n\n      this.pushClassMethod(\n        classBody,\n        publicMethod,\n        false,\n        false,\n        isConstructor,\n        allowsDirectSuper,\n      );\n    } else if (this.isClassProperty()) {\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else if (\n      isContextual &&\n      key.name === \"async\" &&\n      !this.isLineTerminator()\n    ) {\n      // an async method\n      this.resetPreviousNodeTrailingComments(key);\n      const isGenerator = this.eat(tt.star);\n\n      if (publicMember.optional) {\n        this.unexpected(maybeQuestionTokenStartLoc);\n      }\n\n      method.kind = \"method\";\n      // The so-called parsed name would have been \"async\": get the real name.\n      const isPrivate = this.match(tt.privateName);\n      this.parseClassElementName(method);\n      this.parsePostMemberNameModifiers(publicMember);\n\n      if (isPrivate) {\n        // private async method\n        this.pushClassPrivateMethod(\n          classBody,\n          privateMethod,\n          isGenerator,\n          true,\n        );\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(Errors.ConstructorIsAsync, { at: publicMethod.key });\n        }\n\n        this.pushClassMethod(\n          classBody,\n          publicMethod,\n          isGenerator,\n          true,\n          /* isConstructor */ false,\n          false,\n        );\n      }\n    } else if (\n      isContextual &&\n      (key.name === \"get\" || key.name === \"set\") &&\n      !(this.match(tt.star) && this.isLineTerminator())\n    ) {\n      // `get\\n*` is an uninitialized property named 'get' followed by a generator.\n      // a getter or setter\n      this.resetPreviousNodeTrailingComments(key);\n      method.kind = key.name;\n      // The so-called parsed name would have been \"get/set\": get the real name.\n      const isPrivate = this.match(tt.privateName);\n      this.parseClassElementName(publicMethod);\n\n      if (isPrivate) {\n        // private getter/setter\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(Errors.ConstructorIsAccessor, { at: publicMethod.key });\n        }\n        this.pushClassMethod(\n          classBody,\n          publicMethod,\n          false,\n          false,\n          /* isConstructor */ false,\n          false,\n        );\n      }\n\n      this.checkGetterSetterParams(publicMethod);\n    } else if (\n      isContextual &&\n      key.name === \"accessor\" &&\n      !this.isLineTerminator()\n    ) {\n      this.expectPlugin(\"decoratorAutoAccessors\");\n      this.resetPreviousNodeTrailingComments(key);\n\n      // The so-called parsed name would have been \"accessor\": get the real name.\n      const isPrivate = this.match(tt.privateName);\n      this.parseClassElementName(publicProp);\n      this.pushClassAccessorProperty(classBody, accessorProp, isPrivate);\n    } else if (this.isLineTerminator()) {\n      // an uninitialized class property (due to ASI, since we don't otherwise recognize the next token)\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else {\n      this.unexpected();\n    }\n  }\n\n  // https://tc39.es/ecma262/#prod-ClassElementName\n  parseClassElementName(member: N.ClassMember): N.Expression | N.Identifier {\n    const { type, value } = this.state;\n    if (\n      (type === tt.name || type === tt.string) &&\n      member.static &&\n      value === \"prototype\"\n    ) {\n      this.raise(Errors.StaticPrototype, { at: this.state.startLoc });\n    }\n\n    if (type === tt.privateName) {\n      if (value === \"constructor\") {\n        this.raise(Errors.ConstructorClassPrivateField, {\n          at: this.state.startLoc,\n        });\n      }\n      const key = this.parsePrivateName();\n      member.key = key;\n      return key;\n    }\n\n    return this.parsePropertyName(member);\n  }\n\n  parseClassStaticBlock(\n    classBody: N.ClassBody,\n    member: N.StaticBlock & { decorators?: Array<N.Decorator> },\n  ) {\n    // Start a new lexical scope\n    this.scope.enter(SCOPE_CLASS | SCOPE_STATIC_BLOCK | SCOPE_SUPER);\n    // Start a new scope with regard to loop labels\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    // ClassStaticBlockStatementList:\n    //   StatementList[~Yield, ~Await, ~Return] opt\n    this.prodParam.enter(PARAM);\n    const body = (member.body = []);\n    this.parseBlockOrModuleBlockBody(body, undefined, false, tt.braceR);\n    this.prodParam.exit();\n    this.scope.exit();\n    this.state.labels = oldLabels;\n    classBody.body.push(this.finishNode<N.StaticBlock>(member, \"StaticBlock\"));\n    if (member.decorators?.length) {\n      this.raise(Errors.DecoratorStaticBlock, { at: member });\n    }\n  }\n\n  pushClassProperty(classBody: N.ClassBody, prop: N.ClassProperty) {\n    if (\n      !prop.computed &&\n      (prop.key.name === \"constructor\" || prop.key.value === \"constructor\")\n    ) {\n      // Non-computed field, which is either an identifier named \"constructor\"\n      // or a string literal named \"constructor\"\n      this.raise(Errors.ConstructorClassField, { at: prop.key });\n    }\n\n    classBody.body.push(this.parseClassProperty(prop));\n  }\n\n  pushClassPrivateProperty(\n    classBody: N.ClassBody,\n    prop: N.ClassPrivateProperty,\n  ) {\n    const node = this.parseClassPrivateProperty(prop);\n    classBody.body.push(node);\n\n    this.classScope.declarePrivateName(\n      this.getPrivateNameSV(node.key),\n      CLASS_ELEMENT_OTHER,\n      node.key.loc.start,\n    );\n  }\n\n  pushClassAccessorProperty(\n    classBody: N.ClassBody,\n    prop: N.ClassAccessorProperty,\n    isPrivate: boolean,\n  ) {\n    if (!isPrivate && !prop.computed) {\n      // Not private, so not node is not a PrivateName and we can safely cast\n      const key = (prop.key: N.Expression);\n\n      if (key.name === \"constructor\" || key.value === \"constructor\") {\n        // Non-computed field, which is either an identifier named \"constructor\"\n        // or a string literal named \"constructor\"\n        this.raise(Errors.ConstructorClassField, { at: key });\n      }\n    }\n\n    const node = this.parseClassAccessorProperty(prop);\n    classBody.body.push(node);\n\n    if (isPrivate) {\n      this.classScope.declarePrivateName(\n        this.getPrivateNameSV(node.key),\n        CLASS_ELEMENT_OTHER,\n        node.key.loc.start,\n      );\n    }\n  }\n\n  pushClassMethod(\n    classBody: N.ClassBody,\n    method: N.ClassMethod,\n    isGenerator: boolean,\n    isAsync: boolean,\n    isConstructor: boolean,\n    allowsDirectSuper: boolean,\n  ): void {\n    classBody.body.push(\n      this.parseMethod(\n        method,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowsDirectSuper,\n        \"ClassMethod\",\n        true,\n      ),\n    );\n  }\n\n  pushClassPrivateMethod(\n    classBody: N.ClassBody,\n    method: N.ClassPrivateMethod,\n    isGenerator: boolean,\n    isAsync: boolean,\n  ): void {\n    const node = this.parseMethod(\n      method,\n      isGenerator,\n      isAsync,\n      /* isConstructor */ false,\n      false,\n      \"ClassPrivateMethod\",\n      true,\n    );\n    classBody.body.push(node);\n\n    const kind =\n      node.kind === \"get\"\n        ? node.static\n          ? CLASS_ELEMENT_STATIC_GETTER\n          : CLASS_ELEMENT_INSTANCE_GETTER\n        : node.kind === \"set\"\n        ? node.static\n          ? CLASS_ELEMENT_STATIC_SETTER\n          : CLASS_ELEMENT_INSTANCE_SETTER\n        : CLASS_ELEMENT_OTHER;\n    this.declareClassPrivateMethodInScope(node, kind);\n  }\n\n  declareClassPrivateMethodInScope(\n    node: N.ClassPrivateMethod | N.EstreeMethodDefinition | N.TSDeclareMethod,\n    kind: number,\n  ) {\n    this.classScope.declarePrivateName(\n      this.getPrivateNameSV(node.key),\n      kind,\n      node.key.loc.start,\n    );\n  }\n\n  // Overridden in typescript.js\n  parsePostMemberNameModifiers(\n    // eslint-disable-next-line no-unused-vars\n    methodOrProp: N.ClassMethod | N.ClassProperty,\n  ): void {}\n\n  // https://tc39.es/ecma262/#prod-FieldDefinition\n  parseClassPrivateProperty(\n    node: N.ClassPrivateProperty,\n  ): N.ClassPrivateProperty {\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassPrivateProperty\");\n  }\n\n  // https://tc39.es/ecma262/#prod-FieldDefinition\n  parseClassProperty(node: N.ClassProperty): N.ClassProperty {\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassProperty\");\n  }\n\n  parseClassAccessorProperty(\n    node: N.ClassAccessorProperty,\n  ): N.ClassAccessorProperty {\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassAccessorProperty\");\n  }\n\n  // https://tc39.es/ecma262/#prod-Initializer\n  parseInitializer(\n    node: N.ClassProperty | N.ClassPrivateProperty | N.ClassAccessorProperty,\n  ): void {\n    this.scope.enter(SCOPE_CLASS | SCOPE_SUPER);\n    this.expressionScope.enter(newExpressionScope());\n    this.prodParam.enter(PARAM);\n    node.value = this.eat(tt.eq) ? this.parseMaybeAssignAllowIn() : null;\n    this.expressionScope.exit();\n    this.prodParam.exit();\n    this.scope.exit();\n  }\n\n  parseClassId(\n    node: N.Class,\n    isStatement: boolean,\n    optionalId: ?boolean,\n    bindingType: BindingTypes = BIND_CLASS,\n  ): void {\n    if (tokenIsIdentifier(this.state.type)) {\n      node.id = this.parseIdentifier();\n      if (isStatement) {\n        this.declareNameFromIdentifier(node.id, bindingType);\n      }\n    } else {\n      if (optionalId || !isStatement) {\n        node.id = null;\n      } else {\n        throw this.raise(Errors.MissingClassName, { at: this.state.startLoc });\n      }\n    }\n  }\n\n  // https://tc39.es/ecma262/#prod-ClassHeritage\n  parseClassSuper(node: N.Class): void {\n    node.superClass = this.eat(tt._extends) ? this.parseExprSubscripts() : null;\n  }\n\n  // Parses module export declaration.\n  // https://tc39.es/ecma262/#prod-ExportDeclaration\n\n  parseExport(node: N.Node): N.AnyExport {\n    const hasDefault = this.maybeParseExportDefaultSpecifier(node);\n    const parseAfterDefault = !hasDefault || this.eat(tt.comma);\n    const hasStar = parseAfterDefault && this.eatExportStar(node);\n    const hasNamespace =\n      hasStar && this.maybeParseExportNamespaceSpecifier(node);\n    const parseAfterNamespace =\n      parseAfterDefault && (!hasNamespace || this.eat(tt.comma));\n    const isFromRequired = hasDefault || hasStar;\n\n    if (hasStar && !hasNamespace) {\n      if (hasDefault) this.unexpected();\n      this.parseExportFrom(node, true);\n\n      return this.finishNode(node, \"ExportAllDeclaration\");\n    }\n\n    const hasSpecifiers = this.maybeParseExportNamedSpecifiers(node);\n\n    if (\n      (hasDefault && parseAfterDefault && !hasStar && !hasSpecifiers) ||\n      (hasNamespace && parseAfterNamespace && !hasSpecifiers)\n    ) {\n      throw this.unexpected(null, tt.braceL);\n    }\n\n    let hasDeclaration;\n    if (isFromRequired || hasSpecifiers) {\n      hasDeclaration = false;\n      this.parseExportFrom(node, isFromRequired);\n    } else {\n      hasDeclaration = this.maybeParseExportDeclaration(node);\n    }\n\n    if (isFromRequired || hasSpecifiers || hasDeclaration) {\n      this.checkExport(node, true, false, !!node.source);\n      return this.finishNode(node, \"ExportNamedDeclaration\");\n    }\n\n    if (this.eat(tt._default)) {\n      // export default ...\n      node.declaration = this.parseExportDefaultExpression();\n      this.checkExport(node, true, true);\n\n      return this.finishNode(node, \"ExportDefaultDeclaration\");\n    }\n\n    throw this.unexpected(null, tt.braceL);\n  }\n\n  // eslint-disable-next-line no-unused-vars\n  eatExportStar(node: N.Node): boolean {\n    return this.eat(tt.star);\n  }\n\n  maybeParseExportDefaultSpecifier(node: N.Node): boolean {\n    if (this.isExportDefaultSpecifier()) {\n      // export defaultObj ...\n      this.expectPlugin(\"exportDefaultFrom\");\n      const specifier = this.startNode();\n      specifier.exported = this.parseIdentifier(true);\n      node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n      return true;\n    }\n    return false;\n  }\n\n  maybeParseExportNamespaceSpecifier(node: N.Node): boolean {\n    if (this.isContextual(tt._as)) {\n      if (!node.specifiers) node.specifiers = [];\n\n      const specifier = this.startNodeAt(\n        this.state.lastTokStart,\n        this.state.lastTokStartLoc,\n      );\n\n      this.next();\n\n      specifier.exported = this.parseModuleExportName();\n      node.specifiers.push(\n        this.finishNode(specifier, \"ExportNamespaceSpecifier\"),\n      );\n      return true;\n    }\n    return false;\n  }\n\n  maybeParseExportNamedSpecifiers(node: N.Node): boolean {\n    if (this.match(tt.braceL)) {\n      if (!node.specifiers) node.specifiers = [];\n      const isTypeExport = node.exportKind === \"type\";\n      node.specifiers.push(...this.parseExportSpecifiers(isTypeExport));\n\n      node.source = null;\n      node.declaration = null;\n      if (this.hasPlugin(\"importAssertions\")) {\n        node.assertions = [];\n      }\n\n      return true;\n    }\n    return false;\n  }\n\n  maybeParseExportDeclaration(node: N.Node): boolean {\n    if (this.shouldParseExportDeclaration()) {\n      node.specifiers = [];\n      node.source = null;\n      if (this.hasPlugin(\"importAssertions\")) {\n        node.assertions = [];\n      }\n      node.declaration = this.parseExportDeclaration(node);\n      return true;\n    }\n    return false;\n  }\n\n  isAsyncFunction(): boolean {\n    if (!this.isContextual(tt._async)) return false;\n    const next = this.nextTokenStart();\n    return (\n      !lineBreak.test(this.input.slice(this.state.pos, next)) &&\n      this.isUnparsedContextual(next, \"function\")\n    );\n  }\n\n  parseExportDefaultExpression(): N.Expression | N.Declaration {\n    const expr = this.startNode();\n\n    const isAsync = this.isAsyncFunction();\n\n    if (this.match(tt._function) || isAsync) {\n      this.next();\n      if (isAsync) {\n        this.next();\n      }\n\n      return this.parseFunction(\n        expr,\n        FUNC_STATEMENT | FUNC_NULLABLE_ID,\n        isAsync,\n      );\n    }\n\n    if (this.match(tt._class)) {\n      return this.parseClass(expr, true, true);\n    }\n\n    if (this.match(tt.at)) {\n      if (\n        this.hasPlugin(\"decorators\") &&\n        this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")\n      ) {\n        this.raise(Errors.DecoratorBeforeExport, { at: this.state.startLoc });\n      }\n      this.parseDecorators(false);\n      return this.parseClass(expr, true, true);\n    }\n\n    if (this.match(tt._const) || this.match(tt._var) || this.isLet()) {\n      throw this.raise(Errors.UnsupportedDefaultExport, {\n        at: this.state.startLoc,\n      });\n    }\n\n    const res = this.parseMaybeAssignAllowIn();\n    this.semicolon();\n    return res;\n  }\n\n  // eslint-disable-next-line no-unused-vars\n  parseExportDeclaration(node: N.ExportNamedDeclaration): ?N.Declaration {\n    return this.parseStatement(null);\n  }\n\n  isExportDefaultSpecifier(): boolean {\n    const { type } = this.state;\n    if (tokenIsIdentifier(type)) {\n      if ((type === tt._async && !this.state.containsEsc) || type === tt._let) {\n        return false;\n      }\n      if (\n        (type === tt._type || type === tt._interface) &&\n        !this.state.containsEsc\n      ) {\n        const { type: nextType } = this.lookahead();\n        // If we see any variable name other than `from` after `type` keyword,\n        // we consider it as flow/typescript type exports\n        // note that this approach may fail on some pedantic cases\n        // export type from = number\n        if (\n          (tokenIsIdentifier(nextType) && nextType !== tt._from) ||\n          nextType === tt.braceL\n        ) {\n          this.expectOnePlugin([\"flow\", \"typescript\"]);\n          return false;\n        }\n      }\n    } else if (!this.match(tt._default)) {\n      return false;\n    }\n\n    const next = this.nextTokenStart();\n    const hasFrom = this.isUnparsedContextual(next, \"from\");\n    if (\n      this.input.charCodeAt(next) === charCodes.comma ||\n      (tokenIsIdentifier(this.state.type) && hasFrom)\n    ) {\n      return true;\n    }\n    // lookahead again when `export default from` is seen\n    if (this.match(tt._default) && hasFrom) {\n      const nextAfterFrom = this.input.charCodeAt(\n        this.nextTokenStartSince(next + 4),\n      );\n      return (\n        nextAfterFrom === charCodes.quotationMark ||\n        nextAfterFrom === charCodes.apostrophe\n      );\n    }\n    return false;\n  }\n\n  parseExportFrom(node: N.ExportNamedDeclaration, expect?: boolean): void {\n    if (this.eatContextual(tt._from)) {\n      node.source = this.parseImportSource();\n      this.checkExport(node);\n      const assertions = this.maybeParseImportAssertions();\n      if (assertions) {\n        node.assertions = assertions;\n        this.checkJSONModuleImport(node);\n      }\n    } else if (expect) {\n      this.unexpected();\n    }\n\n    this.semicolon();\n  }\n\n  shouldParseExportDeclaration(): boolean {\n    const { type } = this.state;\n    if (type === tt.at) {\n      this.expectOnePlugin([\"decorators\", \"decorators-legacy\"]);\n      if (this.hasPlugin(\"decorators\")) {\n        if (this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n          throw this.raise(Errors.DecoratorBeforeExport, {\n            at: this.state.startLoc,\n          });\n        }\n\n        return true;\n      }\n    }\n\n    return (\n      type === tt._var ||\n      type === tt._const ||\n      type === tt._function ||\n      type === tt._class ||\n      this.isLet() ||\n      this.isAsyncFunction()\n    );\n  }\n\n  checkExport(\n    node: N.ExportNamedDeclaration,\n    checkNames?: boolean,\n    isDefault?: boolean,\n    isFrom?: boolean,\n  ): void {\n    if (checkNames) {\n      // Check for duplicate exports\n      if (isDefault) {\n        // Default exports\n        this.checkDuplicateExports(node, \"default\");\n        if (this.hasPlugin(\"exportDefaultFrom\")) {\n          const declaration = ((node: any): N.ExportDefaultDeclaration)\n            .declaration;\n          if (\n            declaration.type === \"Identifier\" &&\n            declaration.name === \"from\" &&\n            declaration.end - declaration.start === 4 && // does not contain escape\n            !declaration.extra?.parenthesized\n          ) {\n            this.raise(Errors.ExportDefaultFromAsIdentifier, {\n              at: declaration,\n            });\n          }\n        }\n      } else if (node.specifiers && node.specifiers.length) {\n        // Named exports\n        for (const specifier of node.specifiers) {\n          const { exported } = specifier;\n          const exportName =\n            exported.type === \"Identifier\" ? exported.name : exported.value;\n          this.checkDuplicateExports(specifier, exportName);\n          // $FlowIgnore\n          if (!isFrom && specifier.local) {\n            const { local } = specifier;\n            if (local.type !== \"Identifier\") {\n              this.raise(Errors.ExportBindingIsString, {\n                at: specifier,\n                localName: local.value,\n                exportName,\n              });\n            } else {\n              // check for keywords used as local names\n              this.checkReservedWord(local.name, local.loc.start, true, false);\n              // check if export is defined\n              this.scope.checkLocalExport(local);\n            }\n          }\n        }\n      } else if (node.declaration) {\n        // Exported declarations\n        if (\n          node.declaration.type === \"FunctionDeclaration\" ||\n          node.declaration.type === \"ClassDeclaration\"\n        ) {\n          const id = node.declaration.id;\n          if (!id) throw new Error(\"Assertion failure\");\n\n          this.checkDuplicateExports(node, id.name);\n        } else if (node.declaration.type === \"VariableDeclaration\") {\n          for (const declaration of node.declaration.declarations) {\n            this.checkDeclaration(declaration.id);\n          }\n        }\n      }\n    }\n\n    const currentContextDecorators =\n      this.state.decoratorStack[this.state.decoratorStack.length - 1];\n    // If node.declaration is a class, it will take all decorators in the current context.\n    // Thus we should throw if we see non-empty decorators here.\n    if (currentContextDecorators.length) {\n      throw this.raise(Errors.UnsupportedDecoratorExport, { at: node });\n    }\n  }\n\n  checkDeclaration(node: N.Pattern | N.ObjectProperty): void {\n    if (node.type === \"Identifier\") {\n      this.checkDuplicateExports(node, node.name);\n    } else if (node.type === \"ObjectPattern\") {\n      for (const prop of node.properties) {\n        this.checkDeclaration(prop);\n      }\n    } else if (node.type === \"ArrayPattern\") {\n      for (const elem of node.elements) {\n        if (elem) {\n          this.checkDeclaration(elem);\n        }\n      }\n    } else if (node.type === \"ObjectProperty\") {\n      this.checkDeclaration(node.value);\n    } else if (node.type === \"RestElement\") {\n      this.checkDeclaration(node.argument);\n    } else if (node.type === \"AssignmentPattern\") {\n      this.checkDeclaration(node.left);\n    }\n  }\n\n  checkDuplicateExports(\n    node:\n      | N.Identifier\n      | N.StringLiteral\n      | N.ExportNamedDeclaration\n      | N.ExportSpecifier\n      | N.ExportDefaultSpecifier,\n    exportName: string,\n  ): void {\n    if (this.exportedIdentifiers.has(exportName)) {\n      if (exportName === \"default\") {\n        this.raise(Errors.DuplicateDefaultExport, { at: node });\n      } else {\n        this.raise(Errors.DuplicateExport, { at: node, exportName });\n      }\n    }\n    this.exportedIdentifiers.add(exportName);\n  }\n\n  // Parses a comma-separated list of module exports.\n\n  parseExportSpecifiers(isInTypeExport: boolean): Array<N.ExportSpecifier> {\n    const nodes = [];\n    let first = true;\n\n    // export { x, y as z } [from '...']\n    this.expect(tt.braceL);\n\n    while (!this.eat(tt.braceR)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n        if (this.eat(tt.braceR)) break;\n      }\n      const isMaybeTypeOnly = this.isContextual(tt._type);\n      const isString = this.match(tt.string);\n      const node = this.startNode();\n      node.local = this.parseModuleExportName();\n      nodes.push(\n        this.parseExportSpecifier(\n          node,\n          isString,\n          isInTypeExport,\n          isMaybeTypeOnly,\n        ),\n      );\n    }\n\n    return nodes;\n  }\n\n  parseExportSpecifier(\n    node: any,\n    isString: boolean,\n    /* eslint-disable no-unused-vars -- used in TypeScript parser */\n    isInTypeExport: boolean,\n    isMaybeTypeOnly: boolean,\n    /* eslint-enable no-unused-vars */\n  ): N.ExportSpecifier {\n    if (this.eatContextual(tt._as)) {\n      node.exported = this.parseModuleExportName();\n    } else if (isString) {\n      node.exported = cloneStringLiteral(node.local);\n    } else if (!node.exported) {\n      node.exported = cloneIdentifier(node.local);\n    }\n    return this.finishNode<N.ExportSpecifier>(node, \"ExportSpecifier\");\n  }\n\n  // https://tc39.es/ecma262/#prod-ModuleExportName\n  parseModuleExportName(): N.StringLiteral | N.Identifier {\n    if (this.match(tt.string)) {\n      const result = this.parseStringLiteral(this.state.value);\n      const surrogate = result.value.match(loneSurrogate);\n      if (surrogate) {\n        this.raise(Errors.ModuleExportNameHasLoneSurrogate, {\n          at: result,\n          surrogateCharCode: surrogate[0].charCodeAt(0),\n        });\n      }\n      return result;\n    }\n    return this.parseIdentifier(true);\n  }\n\n  isJSONModuleImport(\n    node:\n      | N.ExportAllDeclaration\n      | N.ExportNamedDeclaration\n      | N.ImportDeclaration,\n  ): boolean {\n    if (node.assertions != null) {\n      return node.assertions.some(({ key, value }) => {\n        return (\n          value.value === \"json\" &&\n          (key.type === \"Identifier\"\n            ? key.name === \"type\"\n            : key.value === \"type\")\n        );\n      });\n    }\n    return false;\n  }\n\n  checkJSONModuleImport(\n    node:\n      | N.ExportAllDeclaration\n      | N.ExportNamedDeclaration\n      | N.ImportDeclaration,\n  ) {\n    if (this.isJSONModuleImport(node) && node.type !== \"ExportAllDeclaration\") {\n      const { specifiers } = node;\n      if (node.specifiers != null) {\n        const nonDefaultNamedSpecifier = specifiers.find(specifier => {\n          let imported;\n          if (specifier.type === \"ExportSpecifier\") {\n            imported = specifier.local;\n          } else if (specifier.type === \"ImportSpecifier\") {\n            imported = specifier.imported;\n          }\n          if (imported !== undefined) {\n            return imported.type === \"Identifier\"\n              ? imported.name !== \"default\"\n              : imported.value !== \"default\";\n          }\n        });\n        if (nonDefaultNamedSpecifier !== undefined) {\n          this.raise(Errors.ImportJSONBindingNotDefault, {\n            at: nonDefaultNamedSpecifier.loc.start,\n          });\n        }\n      }\n    }\n  }\n\n  // Parses import declaration.\n  // https://tc39.es/ecma262/#prod-ImportDeclaration\n\n  parseImport(node: N.Node): N.AnyImport {\n    // import '...'\n    node.specifiers = [];\n    if (!this.match(tt.string)) {\n      // check if we have a default import like\n      // import React from \"react\";\n      const hasDefault = this.maybeParseDefaultImportSpecifier(node);\n      /* we are checking if we do not have a default import, then it is obvious that we need named imports\n       * import { get } from \"axios\";\n       * but if we do have a default import\n       * we need to check if we have a comma after that and\n       * that is where this `|| this.eat` condition comes into play\n       */\n      const parseNext = !hasDefault || this.eat(tt.comma);\n      // if we do have to parse the next set of specifiers, we first check for star imports\n      // import React, * from \"react\";\n      const hasStar = parseNext && this.maybeParseStarImportSpecifier(node);\n      // now we check if we need to parse the next imports\n      // but only if they are not importing * (everything)\n      if (parseNext && !hasStar) this.parseNamedImportSpecifiers(node);\n      this.expectContextual(tt._from);\n    }\n    node.source = this.parseImportSource();\n    // https://github.com/tc39/proposal-import-assertions\n    // parse module import assertions if the next token is `assert` or ignore\n    // and finish the ImportDeclaration node.\n    const assertions = this.maybeParseImportAssertions();\n    if (assertions) {\n      node.assertions = assertions;\n    } else if (!process.env.BABEL_8_BREAKING) {\n      const attributes = this.maybeParseModuleAttributes();\n      if (attributes) {\n        node.attributes = attributes;\n      }\n    }\n    this.checkJSONModuleImport(node);\n\n    this.semicolon();\n    return this.finishNode(node, \"ImportDeclaration\");\n  }\n\n  parseImportSource(): N.StringLiteral {\n    if (!this.match(tt.string)) this.unexpected();\n    return this.parseExprAtom();\n  }\n\n  // eslint-disable-next-line no-unused-vars\n  shouldParseDefaultImport(node: N.ImportDeclaration): boolean {\n    return tokenIsIdentifier(this.state.type);\n  }\n\n  parseImportSpecifierLocal(\n    node: N.ImportDeclaration,\n    specifier: N.Node,\n    type: string,\n  ): void {\n    specifier.local = this.parseIdentifier();\n    node.specifiers.push(this.finishImportSpecifier(specifier, type));\n  }\n\n  finishImportSpecifier(specifier: N.Node, type: string) {\n    this.checkLVal(specifier.local, {\n      in: specifier,\n      binding: BIND_LEXICAL,\n    });\n    return this.finishNode(specifier, type);\n  }\n\n  /**\n   * parse assert entries\n   *\n   * @see {@link https://tc39.es/proposal-import-assertions/#prod-AssertEntries |AssertEntries}\n   * @returns {N.ImportAttribute[]}\n   * @memberof StatementParser\n   */\n  parseAssertEntries(): N.ImportAttribute[] {\n    const attrs = [];\n    const attrNames = new Set();\n\n    do {\n      if (this.match(tt.braceR)) {\n        break;\n      }\n\n      const node = this.startNode<N.ImportAttribute>();\n\n      // parse AssertionKey : IdentifierName, StringLiteral\n      const keyName = this.state.value;\n      // check if we already have an entry for an attribute\n      // if a duplicate entry is found, throw an error\n      // for now this logic will come into play only when someone declares `type` twice\n      if (attrNames.has(keyName)) {\n        this.raise(Errors.ModuleAttributesWithDuplicateKeys, {\n          at: this.state.startLoc,\n          key: keyName,\n        });\n      }\n      attrNames.add(keyName);\n      if (this.match(tt.string)) {\n        node.key = this.parseStringLiteral(keyName);\n      } else {\n        node.key = this.parseIdentifier(true);\n      }\n      this.expect(tt.colon);\n\n      if (!this.match(tt.string)) {\n        throw this.raise(Errors.ModuleAttributeInvalidValue, {\n          at: this.state.startLoc,\n        });\n      }\n      node.value = this.parseStringLiteral(this.state.value);\n      this.finishNode<N.ImportAttribute>(node, \"ImportAttribute\");\n      attrs.push(node);\n    } while (this.eat(tt.comma));\n\n    return attrs;\n  }\n\n  /**\n   * parse module attributes\n   * @deprecated It will be removed in Babel 8\n   * @returns\n   * @memberof StatementParser\n   */\n  maybeParseModuleAttributes() {\n    if (this.match(tt._with) && !this.hasPrecedingLineBreak()) {\n      this.expectPlugin(\"moduleAttributes\");\n      this.next();\n    } else {\n      if (this.hasPlugin(\"moduleAttributes\")) return [];\n      return null;\n    }\n    const attrs = [];\n    const attributes = new Set();\n    do {\n      const node = this.startNode();\n      node.key = this.parseIdentifier(true);\n\n      if (node.key.name !== \"type\") {\n        this.raise(Errors.ModuleAttributeDifferentFromType, {\n          at: node.key,\n        });\n      }\n\n      if (attributes.has(node.key.name)) {\n        this.raise(Errors.ModuleAttributesWithDuplicateKeys, {\n          at: node.key,\n          key: node.key.name,\n        });\n      }\n      attributes.add(node.key.name);\n      this.expect(tt.colon);\n      if (!this.match(tt.string)) {\n        throw this.raise(Errors.ModuleAttributeInvalidValue, {\n          at: this.state.startLoc,\n        });\n      }\n      node.value = this.parseStringLiteral(this.state.value);\n      this.finishNode(node, \"ImportAttribute\");\n      attrs.push(node);\n    } while (this.eat(tt.comma));\n\n    return attrs;\n  }\n\n  maybeParseImportAssertions() {\n    // [no LineTerminator here] AssertClause\n    if (this.isContextual(tt._assert) && !this.hasPrecedingLineBreak()) {\n      this.expectPlugin(\"importAssertions\");\n      this.next(); // eat `assert`\n    } else {\n      if (this.hasPlugin(\"importAssertions\")) return [];\n      return null;\n    }\n    // https://tc39.es/proposal-import-assertions/#prod-AssertClause\n    this.eat(tt.braceL);\n    const attrs = this.parseAssertEntries();\n    this.eat(tt.braceR);\n\n    return attrs;\n  }\n\n  maybeParseDefaultImportSpecifier(node: N.ImportDeclaration): boolean {\n    if (this.shouldParseDefaultImport(node)) {\n      // import defaultObj, { x, y as z } from '...'\n      this.parseImportSpecifierLocal(\n        node,\n        this.startNode(),\n        \"ImportDefaultSpecifier\",\n      );\n      return true;\n    }\n    return false;\n  }\n\n  maybeParseStarImportSpecifier(node: N.ImportDeclaration): boolean {\n    if (this.match(tt.star)) {\n      const specifier = this.startNode();\n      this.next();\n      this.expectContextual(tt._as);\n\n      this.parseImportSpecifierLocal(\n        node,\n        specifier,\n        \"ImportNamespaceSpecifier\",\n      );\n      return true;\n    }\n    return false;\n  }\n\n  parseNamedImportSpecifiers(node: N.ImportDeclaration) {\n    let first = true;\n    this.expect(tt.braceL);\n    while (!this.eat(tt.braceR)) {\n      if (first) {\n        first = false;\n      } else {\n        // Detect an attempt to deep destructure\n        if (this.eat(tt.colon)) {\n          throw this.raise(Errors.DestructureNamedImport, {\n            at: this.state.startLoc,\n          });\n        }\n\n        this.expect(tt.comma);\n        if (this.eat(tt.braceR)) break;\n      }\n\n      const specifier = this.startNode();\n      const importedIsString = this.match(tt.string);\n      const isMaybeTypeOnly = this.isContextual(tt._type);\n      specifier.imported = this.parseModuleExportName();\n      const importSpecifier = this.parseImportSpecifier(\n        specifier,\n        importedIsString,\n        node.importKind === \"type\" || node.importKind === \"typeof\",\n        isMaybeTypeOnly,\n      );\n      node.specifiers.push(importSpecifier);\n    }\n  }\n\n  // https://tc39.es/ecma262/#prod-ImportSpecifier\n  parseImportSpecifier(\n    specifier: any,\n    importedIsString: boolean,\n    /* eslint-disable no-unused-vars -- used in TypeScript and Flow parser */\n    isInTypeOnlyImport: boolean,\n    isMaybeTypeOnly: boolean,\n    /* eslint-enable no-unused-vars */\n  ): N.ImportSpecifier {\n    if (this.eatContextual(tt._as)) {\n      specifier.local = this.parseIdentifier();\n    } else {\n      const { imported } = specifier;\n      if (importedIsString) {\n        throw this.raise(Errors.ImportBindingIsString, {\n          at: specifier,\n          importName: imported.value,\n        });\n      }\n      this.checkReservedWord(imported.name, specifier.loc.start, true, true);\n      if (!specifier.local) {\n        specifier.local = cloneIdentifier(imported);\n      }\n    }\n    return this.finishImportSpecifier(specifier, \"ImportSpecifier\");\n  }\n\n  // This is used in flow and typescript plugin\n  // Determine whether a parameter is a this param\n  isThisParam(\n    param: N.Pattern | N.Identifier | N.TSParameterProperty,\n  ): boolean {\n    return param.type === \"Identifier\" && param.name === \"this\";\n  }\n}\n","// @flow\n\nimport type { Options } from \"../options\";\nimport type { File /*::, JSXOpeningElement */ } from \"../types\";\nimport type { PluginList } from \"../plugin-utils\";\nimport { getOptions } from \"../options\";\nimport StatementParser from \"./statement\";\nimport ScopeHandler from \"../util/scope\";\n\nexport type PluginsMap = Map<string, { [string]: any }>;\n\nexport default class Parser extends StatementParser {\n  // Forward-declaration so typescript plugin can override jsx plugin\n  /*::\n  +jsxParseOpeningElementAfterName: (\n    node: JSXOpeningElement,\n  ) => JSXOpeningElement;\n  */\n\n  constructor(options: ?Options, input: string) {\n    options = getOptions(options);\n    super(options, input);\n\n    this.options = options;\n    this.initializeScopes();\n    this.plugins = pluginsMap(this.options.plugins);\n    this.filename = options.sourceFilename;\n  }\n\n  // This can be overwritten, for example, by the TypeScript plugin.\n  getScopeHandler(): Class<ScopeHandler<*>> {\n    return ScopeHandler;\n  }\n\n  parse(): File {\n    this.enterInitialScopes();\n    const file = this.startNode();\n    const program = this.startNode();\n    this.nextToken();\n    file.errors = null;\n    this.parseTopLevel(file, program);\n    file.errors = this.state.errors;\n    return file;\n  }\n}\n\nfunction pluginsMap(plugins: PluginList): PluginsMap {\n  const pluginMap: PluginsMap = new Map();\n  for (const plugin of plugins) {\n    const [name, options] = Array.isArray(plugin) ? plugin : [plugin, {}];\n    if (!pluginMap.has(name)) pluginMap.set(name, options || {});\n  }\n  return pluginMap;\n}\n","// @flow\n\n// A recursive descent parser operates by defining functions for all\n// syntactic elements, and recursively calling those, each function\n// advancing the input stream and returning an AST node. Precedence\n// of constructs (for example, the fact that `!x[1]` means `!(x[1])`\n// instead of `(!x)[1]` is handled by the fact that the parser\n// function that parses unary prefix operators is called first, and\n// in turn calls the function that parses `[]` subscripts — that\n// way, it'll receive the node for `x[1]` already parsed, and wraps\n// *that* in the unary operator node.\n//\n// Acorn uses an [operator precedence parser][opp] to handle binary\n// operator precedence, because it is much more compact than using\n// the technique outlined above, which uses different, nesting\n// functions to specify precedence, for all of the ten binary\n// precedence levels that JavaScript defines.\n//\n// [opp]: http://en.wikipedia.org/wiki/Operator-precedence_parser\n\nimport {\n  tokenCanStartExpression,\n  tokenIsAssignment,\n  tokenIsIdentifier,\n  tokenIsKeywordOrIdentifier,\n  tokenIsOperator,\n  tokenIsPostfix,\n  tokenIsPrefix,\n  tokenIsRightAssociative,\n  tokenIsTemplate,\n  tokenKeywordOrIdentifierIsKeyword,\n  tokenLabelName,\n  tokenOperatorPrecedence,\n  tt,\n  type TokenType,\n} from \"../tokenizer/types\";\nimport * as N from \"../types\";\nimport LValParser from \"./lval\";\nimport {\n  isKeyword,\n  isReservedWord,\n  isStrictReservedWord,\n  isStrictBindReservedWord,\n  isIdentifierStart,\n  canBeReservedWord,\n} from \"../util/identifier\";\nimport { Position, createPositionWithColumnOffset } from \"../util/location\";\nimport * as charCodes from \"charcodes\";\nimport {\n  BIND_OUTSIDE,\n  BIND_VAR,\n  SCOPE_ARROW,\n  SCOPE_CLASS,\n  SCOPE_DIRECT_SUPER,\n  SCOPE_FUNCTION,\n  SCOPE_SUPER,\n} from \"../util/scopeflags\";\nimport { ExpressionErrors } from \"./util\";\nimport {\n  PARAM_AWAIT,\n  PARAM_IN,\n  PARAM_RETURN,\n  functionFlags,\n} from \"../util/production-parameter\";\nimport {\n  newArrowHeadScope,\n  newAsyncArrowScope,\n  newExpressionScope,\n} from \"../util/expression-scope\";\nimport { Errors, type ParseError } from \"../parse-error\";\nimport { UnparenthesizedPipeBodyDescriptions } from \"../parse-error/pipeline-operator-errors\";\nimport { setInnerComments } from \"./comments\";\nimport { cloneIdentifier } from \"./node\";\n\n/*::\nimport type { SourceType } from \"../options\";\ndeclare var invariant;\n*/\n\nexport default class ExpressionParser extends LValParser {\n  // Forward-declaration: defined in statement.js\n  /*::\n  +parseBlock: (\n    allowDirectives?: boolean,\n    createNewLexicalScope?: boolean,\n    afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n  ) => N.BlockStatement;\n  +parseClass: (\n    node: N.Class,\n    isStatement: boolean,\n    optionalId?: boolean,\n  ) => N.Class;\n  +parseDecorators: (allowExport?: boolean) => void;\n  +parseFunction: <T: N.NormalFunction>(\n    node: T,\n    statement?: number,\n    allowExpressionBody?: boolean,\n    isAsync?: boolean,\n  ) => T;\n  +parseFunctionParams: (node: N.Function, allowModifiers?: boolean) => void;\n  +takeDecorators: (node: N.HasDecorators) => void;\n  +parseBlockOrModuleBlockBody: (\n    body: N.Statement[],\n    directives: ?(N.Directive[]),\n    topLevel: boolean,\n    end: TokenType,\n    afterBlockParse?: (hasStrictModeDirective: boolean) => void\n  ) => void\n  +parseProgram: (\n    program: N.Program, end: TokenType, sourceType?: SourceType\n  ) => N.Program\n  */\n\n  // For object literal, check if property __proto__ has been used more than once.\n  // If the expression is a destructuring assignment, then __proto__ may appear\n  // multiple times. Otherwise, __proto__ is a duplicated key.\n\n  // For record expression, check if property __proto__ exists\n\n  checkProto(\n    prop: N.ObjectMember | N.SpreadElement,\n    isRecord: ?boolean,\n    protoRef: { used: boolean },\n    refExpressionErrors: ?ExpressionErrors,\n  ): void {\n    if (\n      prop.type === \"SpreadElement\" ||\n      this.isObjectMethod(prop) ||\n      prop.computed ||\n      // $FlowIgnore\n      prop.shorthand\n    ) {\n      return;\n    }\n\n    const key = prop.key;\n    // It is either an Identifier or a String/NumericLiteral\n    const name = key.type === \"Identifier\" ? key.name : key.value;\n\n    if (name === \"__proto__\") {\n      if (isRecord) {\n        this.raise(Errors.RecordNoProto, { at: key });\n        return;\n      }\n      if (protoRef.used) {\n        if (refExpressionErrors) {\n          // Store the first redefinition's position, otherwise ignore because\n          // we are parsing ambiguous pattern\n          if (refExpressionErrors.doubleProtoLoc === null) {\n            refExpressionErrors.doubleProtoLoc = key.loc.start;\n          }\n        } else {\n          this.raise(Errors.DuplicateProto, { at: key });\n        }\n      }\n\n      protoRef.used = true;\n    }\n  }\n\n  shouldExitDescending(expr: N.Expression, potentialArrowAt: number): boolean {\n    return (\n      expr.type === \"ArrowFunctionExpression\" && expr.start === potentialArrowAt\n    );\n  }\n\n  // Convenience method to parse an Expression only\n  getExpression(): N.Expression & N.ParserOutput {\n    this.enterInitialScopes();\n    this.nextToken();\n    const expr = this.parseExpression();\n    if (!this.match(tt.eof)) {\n      this.unexpected();\n    }\n    // Unlike parseTopLevel, we need to drain remaining commentStacks\n    // because the top level node is _not_ Program.\n    this.finalizeRemainingComments();\n    expr.comments = this.state.comments;\n    expr.errors = this.state.errors;\n    if (this.options.tokens) {\n      expr.tokens = this.tokens;\n    }\n    return expr;\n  }\n\n  // ### Expression parsing\n\n  // These nest, from the most general expression type at the top to\n  // 'atomic', nondivisible expression types at the bottom. Most of\n  // the functions will simply let the function (s) below them parse,\n  // and, *if* the syntactic construct they handle is present, wrap\n  // the AST node that the inner parser gave them in another node.\n\n  // Parse a full expression.\n  // - `disallowIn`\n  //   is used to forbid the `in` operator (in for loops initialization expressions)\n  //   When `disallowIn` is true, the production parameter [In] is not present.\n\n  // - `refExpressionErrors `\n  //   provides reference for storing '=' operator inside shorthand\n  //   property assignment in contexts where both object expression\n  //   and object pattern might appear (so it's possible to raise\n  //   delayed syntax error at correct position).\n\n  parseExpression(\n    disallowIn?: boolean,\n    refExpressionErrors?: ExpressionErrors,\n  ): N.Expression {\n    if (disallowIn) {\n      return this.disallowInAnd(() =>\n        this.parseExpressionBase(refExpressionErrors),\n      );\n    }\n    return this.allowInAnd(() => this.parseExpressionBase(refExpressionErrors));\n  }\n\n  // https://tc39.es/ecma262/#prod-Expression\n  parseExpressionBase(refExpressionErrors?: ExpressionErrors): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const expr = this.parseMaybeAssign(refExpressionErrors);\n    if (this.match(tt.comma)) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.expressions = [expr];\n      while (this.eat(tt.comma)) {\n        node.expressions.push(this.parseMaybeAssign(refExpressionErrors));\n      }\n      this.toReferencedList(node.expressions);\n      return this.finishNode(node, \"SequenceExpression\");\n    }\n    return expr;\n  }\n\n  // Set [~In] parameter for assignment expression\n  parseMaybeAssignDisallowIn(\n    refExpressionErrors?: ?ExpressionErrors,\n    afterLeftParse?: Function,\n  ) {\n    return this.disallowInAnd(() =>\n      this.parseMaybeAssign(refExpressionErrors, afterLeftParse),\n    );\n  }\n\n  // Set [+In] parameter for assignment expression\n  parseMaybeAssignAllowIn(\n    refExpressionErrors?: ?ExpressionErrors,\n    afterLeftParse?: Function,\n  ) {\n    return this.allowInAnd(() =>\n      this.parseMaybeAssign(refExpressionErrors, afterLeftParse),\n    );\n  }\n\n  // This method is only used by\n  // the typescript and flow plugins.\n  setOptionalParametersError(\n    refExpressionErrors: ExpressionErrors,\n    resultError?: ParseError<any>,\n  ) {\n    refExpressionErrors.optionalParametersLoc =\n      resultError?.loc ?? this.state.startLoc;\n  }\n\n  // Parse an assignment expression. This includes applications of\n  // operators like `+=`.\n  // https://tc39.es/ecma262/#prod-AssignmentExpression\n  parseMaybeAssign(\n    refExpressionErrors?: ?ExpressionErrors,\n    afterLeftParse?: Function,\n  ): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    if (this.isContextual(tt._yield)) {\n      if (this.prodParam.hasYield) {\n        let left = this.parseYield();\n        if (afterLeftParse) {\n          left = afterLeftParse.call(this, left, startPos, startLoc);\n        }\n        return left;\n      }\n    }\n\n    let ownExpressionErrors;\n    if (refExpressionErrors) {\n      ownExpressionErrors = false;\n    } else {\n      refExpressionErrors = new ExpressionErrors();\n      ownExpressionErrors = true;\n    }\n    const { type } = this.state;\n\n    if (type === tt.parenL || tokenIsIdentifier(type)) {\n      this.state.potentialArrowAt = this.state.start;\n    }\n\n    let left = this.parseMaybeConditional(refExpressionErrors);\n    if (afterLeftParse) {\n      left = afterLeftParse.call(this, left, startPos, startLoc);\n    }\n    if (tokenIsAssignment(this.state.type)) {\n      const node = this.startNodeAt(startPos, startLoc);\n      const operator = this.state.value;\n      node.operator = operator;\n\n      if (this.match(tt.eq)) {\n        this.toAssignable(left, /* isLHS */ true);\n        node.left = left;\n\n        if (\n          refExpressionErrors.doubleProtoLoc != null &&\n          refExpressionErrors.doubleProtoLoc.index >= startPos\n        ) {\n          refExpressionErrors.doubleProtoLoc = null; // reset because double __proto__ is valid in assignment expression\n        }\n        if (\n          refExpressionErrors.shorthandAssignLoc != null &&\n          refExpressionErrors.shorthandAssignLoc.index >= startPos\n        ) {\n          refExpressionErrors.shorthandAssignLoc = null; // reset because shorthand default was used correctly\n        }\n        if (\n          refExpressionErrors.privateKeyLoc != null &&\n          refExpressionErrors.privateKeyLoc.index >= startPos\n        ) {\n          this.checkDestructuringPrivate(refExpressionErrors);\n          refExpressionErrors.privateKeyLoc = null; // reset because `({ #x: x })` is an assignable pattern\n        }\n      } else {\n        node.left = left;\n      }\n\n      this.next();\n      node.right = this.parseMaybeAssign();\n      this.checkLVal(left, {\n        in: this.finishNode(node, \"AssignmentExpression\"),\n      });\n      return node;\n    } else if (ownExpressionErrors) {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n\n    return left;\n  }\n\n  // Parse a ternary conditional (`?:`) operator.\n  // https://tc39.es/ecma262/#prod-ConditionalExpression\n\n  parseMaybeConditional(refExpressionErrors: ExpressionErrors): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprOps(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseConditional(expr, startPos, startLoc, refExpressionErrors);\n  }\n\n  parseConditional(\n    expr: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    // eslint-disable-next-line no-unused-vars\n    refExpressionErrors?: ?ExpressionErrors,\n  ): N.Expression {\n    if (this.eat(tt.question)) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.test = expr;\n      node.consequent = this.parseMaybeAssignAllowIn();\n      this.expect(tt.colon);\n      node.alternate = this.parseMaybeAssign();\n      return this.finishNode(node, \"ConditionalExpression\");\n    }\n    return expr;\n  }\n\n  parseMaybeUnaryOrPrivate(\n    refExpressionErrors?: ExpressionErrors,\n  ): N.Expression | N.PrivateName {\n    return this.match(tt.privateName)\n      ? this.parsePrivateName()\n      : this.parseMaybeUnary(refExpressionErrors);\n  }\n\n  // Start the precedence parser.\n  // https://tc39.es/ecma262/#prod-ShortCircuitExpression\n\n  parseExprOps(refExpressionErrors: ExpressionErrors): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseMaybeUnaryOrPrivate(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseExprOp(expr, startPos, startLoc, -1);\n  }\n\n  // Parse binary operators with the operator precedence parsing\n  // algorithm. `left` is the left-hand side of the operator.\n  // `minPrec` provides context that allows the function to stop and\n  // defer further parser to one of its callers when it encounters an\n  // operator that has a lower precedence than the set it is parsing.\n\n  parseExprOp(\n    left: N.Expression | N.PrivateName,\n    leftStartPos: number,\n    leftStartLoc: Position,\n    minPrec: number,\n  ): N.Expression {\n    if (this.isPrivateName(left)) {\n      // https://tc39.es/ecma262/#prod-RelationalExpression\n      // RelationalExpression [In, Yield, Await]\n      //   [+In] PrivateIdentifier in ShiftExpression[?Yield, ?Await]\n\n      const value = this.getPrivateNameSV(left);\n\n      if (\n        minPrec >= tokenOperatorPrecedence(tt._in) ||\n        !this.prodParam.hasIn ||\n        !this.match(tt._in)\n      ) {\n        this.raise(Errors.PrivateInExpectedIn, {\n          at: left,\n          identifierName: value,\n        });\n      }\n\n      this.classScope.usePrivateName(value, left.loc.start);\n    }\n\n    const op = this.state.type;\n    if (tokenIsOperator(op) && (this.prodParam.hasIn || !this.match(tt._in))) {\n      let prec = tokenOperatorPrecedence(op);\n      if (prec > minPrec) {\n        if (op === tt.pipeline) {\n          this.expectPlugin(\"pipelineOperator\");\n          if (this.state.inFSharpPipelineDirectBody) {\n            return left;\n          }\n          this.checkPipelineAtInfixOperator(left, leftStartLoc);\n        }\n        const node = this.startNodeAt(leftStartPos, leftStartLoc);\n        node.left = left;\n        node.operator = this.state.value;\n\n        const logical = op === tt.logicalOR || op === tt.logicalAND;\n        const coalesce = op === tt.nullishCoalescing;\n\n        if (coalesce) {\n          // Handle the precedence of `tt.coalesce` as equal to the range of logical expressions.\n          // In other words, `node.right` shouldn't contain logical expressions in order to check the mixed error.\n          prec = tokenOperatorPrecedence(tt.logicalAND);\n        }\n\n        this.next();\n\n        if (\n          op === tt.pipeline &&\n          this.hasPlugin([\"pipelineOperator\", { proposal: \"minimal\" }])\n        ) {\n          if (this.state.type === tt._await && this.prodParam.hasAwait) {\n            throw this.raise(Errors.UnexpectedAwaitAfterPipelineBody, {\n              at: this.state.startLoc,\n            });\n          }\n        }\n\n        node.right = this.parseExprOpRightExpr(op, prec);\n        this.finishNode(\n          node,\n          logical || coalesce ? \"LogicalExpression\" : \"BinaryExpression\",\n        );\n        /* this check is for all ?? operators\n         * a ?? b && c for this example\n         * when op is coalesce and nextOp is logical (&&), throw at the pos of nextOp that it can not be mixed.\n         * Symmetrically it also throws when op is logical and nextOp is coalesce\n         */\n        const nextOp = this.state.type;\n        if (\n          (coalesce && (nextOp === tt.logicalOR || nextOp === tt.logicalAND)) ||\n          (logical && nextOp === tt.nullishCoalescing)\n        ) {\n          throw this.raise(Errors.MixingCoalesceWithLogical, {\n            at: this.state.startLoc,\n          });\n        }\n\n        return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec);\n      }\n    }\n    return left;\n  }\n\n  // Helper function for `parseExprOp`. Parse the right-hand side of binary-\n  // operator expressions, then apply any operator-specific functions.\n\n  parseExprOpRightExpr(op: TokenType, prec: number): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    switch (op) {\n      case tt.pipeline:\n        switch (this.getPluginOption(\"pipelineOperator\", \"proposal\")) {\n          case \"hack\":\n            return this.withTopicBindingContext(() => {\n              return this.parseHackPipeBody();\n            });\n\n          case \"smart\":\n            return this.withTopicBindingContext(() => {\n              if (this.prodParam.hasYield && this.isContextual(tt._yield)) {\n                throw this.raise(Errors.PipeBodyIsTighter, {\n                  at: this.state.startLoc,\n                });\n              }\n              return this.parseSmartPipelineBodyInStyle(\n                this.parseExprOpBaseRightExpr(op, prec),\n                startPos,\n                startLoc,\n              );\n            });\n\n          case \"fsharp\":\n            return this.withSoloAwaitPermittingContext(() => {\n              return this.parseFSharpPipelineBody(prec);\n            });\n        }\n\n      // Falls through.\n      default:\n        return this.parseExprOpBaseRightExpr(op, prec);\n    }\n  }\n\n  // Helper function for `parseExprOpRightExpr`. Parse the right-hand side of\n  // binary-operator expressions without applying any operator-specific functions.\n\n  parseExprOpBaseRightExpr(op: TokenType, prec: number): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    return this.parseExprOp(\n      this.parseMaybeUnaryOrPrivate(),\n      startPos,\n      startLoc,\n      tokenIsRightAssociative(op) ? prec - 1 : prec,\n    );\n  }\n\n  parseHackPipeBody(): N.Expression {\n    const { startLoc } = this.state;\n    const body = this.parseMaybeAssign();\n    const requiredParentheses = UnparenthesizedPipeBodyDescriptions.has(\n      body.type,\n    );\n\n    // TODO: Check how to handle type casts in Flow and TS once they are supported\n    if (requiredParentheses && !body.extra?.parenthesized) {\n      this.raise(Errors.PipeUnparenthesizedBody, {\n        at: startLoc,\n        type: body.type,\n      });\n    }\n    if (!this.topicReferenceWasUsedInCurrentContext()) {\n      // A Hack pipe body must use the topic reference at least once.\n      this.raise(Errors.PipeTopicUnused, { at: startLoc });\n    }\n\n    return body;\n  }\n\n  checkExponentialAfterUnary(node: N.AwaitExpression | N.UnaryExpression) {\n    if (this.match(tt.exponent)) {\n      this.raise(Errors.UnexpectedTokenUnaryExponentiation, {\n        at: node.argument,\n      });\n    }\n  }\n\n  // Parse unary operators, both prefix and postfix.\n  // https://tc39.es/ecma262/#prod-UnaryExpression\n  parseMaybeUnary(\n    refExpressionErrors: ?ExpressionErrors,\n    sawUnary?: boolean,\n  ): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const isAwait = this.isContextual(tt._await);\n\n    if (isAwait && this.isAwaitAllowed()) {\n      this.next();\n      const expr = this.parseAwait(startPos, startLoc);\n      if (!sawUnary) this.checkExponentialAfterUnary(expr);\n      return expr;\n    }\n    const update = this.match(tt.incDec);\n    const node = this.startNode();\n    if (tokenIsPrefix(this.state.type)) {\n      node.operator = this.state.value;\n      node.prefix = true;\n\n      if (this.match(tt._throw)) {\n        this.expectPlugin(\"throwExpressions\");\n      }\n      const isDelete = this.match(tt._delete);\n      this.next();\n\n      node.argument = this.parseMaybeUnary(null, true);\n\n      this.checkExpressionErrors(refExpressionErrors, true);\n\n      if (this.state.strict && isDelete) {\n        const arg = node.argument;\n\n        if (arg.type === \"Identifier\") {\n          this.raise(Errors.StrictDelete, { at: node });\n        } else if (this.hasPropertyAsPrivateName(arg)) {\n          this.raise(Errors.DeletePrivateField, { at: node });\n        }\n      }\n\n      if (!update) {\n        if (!sawUnary) this.checkExponentialAfterUnary(node);\n        return this.finishNode(node, \"UnaryExpression\");\n      }\n    }\n\n    const expr = this.parseUpdate(node, update, refExpressionErrors);\n\n    if (isAwait) {\n      const { type } = this.state;\n      const startsExpr = this.hasPlugin(\"v8intrinsic\")\n        ? tokenCanStartExpression(type)\n        : tokenCanStartExpression(type) && !this.match(tt.modulo);\n      if (startsExpr && !this.isAmbiguousAwait()) {\n        this.raiseOverwrite(Errors.AwaitNotInAsyncContext, { at: startLoc });\n        return this.parseAwait(startPos, startLoc);\n      }\n    }\n\n    return expr;\n  }\n\n  // https://tc39.es/ecma262/#prod-UpdateExpression\n  parseUpdate(\n    node: N.Expression,\n    update: boolean,\n    refExpressionErrors: ?ExpressionErrors,\n  ): N.Expression {\n    if (update) {\n      this.checkLVal(node.argument, {\n        in: this.finishNode(node, \"UpdateExpression\"),\n      });\n      return node;\n    }\n\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let expr = this.parseExprSubscripts(refExpressionErrors);\n    if (this.checkExpressionErrors(refExpressionErrors, false)) return expr;\n    while (tokenIsPostfix(this.state.type) && !this.canInsertSemicolon()) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.operator = this.state.value;\n      node.prefix = false;\n      node.argument = expr;\n      this.next();\n      this.checkLVal(expr, {\n        in: (expr = this.finishNode(node, \"UpdateExpression\")),\n      });\n    }\n    return expr;\n  }\n\n  // Parse call, dot, and `[]`-subscript expressions.\n  // https://tc39.es/ecma262/#prod-LeftHandSideExpression\n  parseExprSubscripts(refExpressionErrors: ?ExpressionErrors): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprAtom(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseSubscripts(expr, startPos, startLoc);\n  }\n\n  parseSubscripts(\n    base: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    noCalls?: ?boolean,\n  ): N.Expression {\n    const state = {\n      optionalChainMember: false,\n      maybeAsyncArrow: this.atPossibleAsyncArrow(base),\n      stop: false,\n    };\n    do {\n      base = this.parseSubscript(base, startPos, startLoc, noCalls, state);\n\n      // After parsing a subscript, this isn't \"async\" for sure.\n      state.maybeAsyncArrow = false;\n    } while (!state.stop);\n    return base;\n  }\n\n  /**\n   * @param state Set 'state.stop = true' to indicate that we should stop parsing subscripts.\n   *   state.optionalChainMember to indicate that the member is currently in OptionalChain\n   */\n  parseSubscript(\n    base: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    noCalls: ?boolean,\n    state: N.ParseSubscriptState,\n  ): N.Expression {\n    const { type } = this.state;\n    if (!noCalls && type === tt.doubleColon) {\n      return this.parseBind(base, startPos, startLoc, noCalls, state);\n    } else if (tokenIsTemplate(type)) {\n      return this.parseTaggedTemplateExpression(\n        base,\n        startPos,\n        startLoc,\n        state,\n      );\n    }\n\n    let optional = false;\n\n    if (type === tt.questionDot) {\n      if (noCalls && this.lookaheadCharCode() === charCodes.leftParenthesis) {\n        // stop at `?.` when parsing `new a?.()`\n        state.stop = true;\n        return base;\n      }\n      state.optionalChainMember = optional = true;\n      this.next();\n    }\n\n    if (!noCalls && this.match(tt.parenL)) {\n      return this.parseCoverCallAndAsyncArrowHead(\n        base,\n        startPos,\n        startLoc,\n        state,\n        optional,\n      );\n    } else {\n      const computed = this.eat(tt.bracketL);\n      if (computed || optional || this.eat(tt.dot)) {\n        return this.parseMember(\n          base,\n          startPos,\n          startLoc,\n          state,\n          computed,\n          optional,\n        );\n      } else {\n        state.stop = true;\n        return base;\n      }\n    }\n  }\n\n  // base[?Yield, ?Await] [ Expression[+In, ?Yield, ?Await] ]\n  // base[?Yield, ?Await] . IdentifierName\n  // base[?Yield, ?Await] . PrivateIdentifier\n  //   where `base` is one of CallExpression, MemberExpression and OptionalChain\n  parseMember(\n    base: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    state: N.ParseSubscriptState,\n    computed: boolean,\n    optional: boolean,\n  ): N.OptionalMemberExpression | N.MemberExpression {\n    const node = this.startNodeAt(startPos, startLoc);\n    node.object = base;\n    node.computed = computed;\n    if (computed) {\n      node.property = this.parseExpression();\n      this.expect(tt.bracketR);\n    } else if (this.match(tt.privateName)) {\n      if (base.type === \"Super\") {\n        this.raise(Errors.SuperPrivateField, { at: startLoc });\n      }\n      this.classScope.usePrivateName(this.state.value, this.state.startLoc);\n      node.property = this.parsePrivateName();\n    } else {\n      node.property = this.parseIdentifier(true);\n    }\n\n    if (state.optionalChainMember) {\n      node.optional = optional;\n      return this.finishNode(node, \"OptionalMemberExpression\");\n    } else {\n      return this.finishNode(node, \"MemberExpression\");\n    }\n  }\n\n  // https://github.com/tc39/proposal-bind-operator#syntax\n  parseBind(\n    base: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    noCalls: ?boolean,\n    state: N.ParseSubscriptState,\n  ): N.Expression {\n    const node = this.startNodeAt(startPos, startLoc);\n    node.object = base;\n    this.next(); // eat '::'\n    node.callee = this.parseNoCallExpr();\n    state.stop = true;\n    return this.parseSubscripts(\n      this.finishNode(node, \"BindExpression\"),\n      startPos,\n      startLoc,\n      noCalls,\n    );\n  }\n\n  // https://tc39.es/ecma262/#prod-CoverCallExpressionAndAsyncArrowHead\n  // CoverCallExpressionAndAsyncArrowHead\n  // CallExpression[?Yield, ?Await] Arguments[?Yield, ?Await]\n  // OptionalChain[?Yield, ?Await] Arguments[?Yield, ?Await]\n  parseCoverCallAndAsyncArrowHead(\n    base: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    state: N.ParseSubscriptState,\n    optional: boolean,\n  ): N.Expression {\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    let refExpressionErrors = null;\n\n    this.state.maybeInArrowParameters = true;\n    this.next(); // eat `(`\n\n    let node = this.startNodeAt(startPos, startLoc);\n    node.callee = base;\n    const { maybeAsyncArrow, optionalChainMember } = state;\n\n    if (maybeAsyncArrow) {\n      this.expressionScope.enter(newAsyncArrowScope());\n      refExpressionErrors = new ExpressionErrors();\n    }\n\n    if (optionalChainMember) {\n      node.optional = optional;\n    }\n\n    if (optional) {\n      node.arguments = this.parseCallExpressionArguments(tt.parenR);\n    } else {\n      node.arguments = this.parseCallExpressionArguments(\n        tt.parenR,\n        base.type === \"Import\",\n        base.type !== \"Super\",\n        node,\n        refExpressionErrors,\n      );\n    }\n    this.finishCallExpression(node, optionalChainMember);\n\n    if (maybeAsyncArrow && this.shouldParseAsyncArrow() && !optional) {\n      /*:: invariant(refExpressionErrors != null) */\n      state.stop = true;\n      this.checkDestructuringPrivate(refExpressionErrors);\n      this.expressionScope.validateAsPattern();\n      this.expressionScope.exit();\n      node = this.parseAsyncArrowFromCallExpression(\n        this.startNodeAt(startPos, startLoc),\n        node,\n      );\n    } else {\n      if (maybeAsyncArrow) {\n        this.checkExpressionErrors(refExpressionErrors, true);\n        this.expressionScope.exit();\n      }\n      this.toReferencedArguments(node);\n    }\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n\n    return node;\n  }\n\n  toReferencedArguments(\n    node: N.CallExpression | N.OptionalCallExpression,\n    isParenthesizedExpr?: boolean,\n  ) {\n    this.toReferencedListDeep(node.arguments, isParenthesizedExpr);\n  }\n\n  // MemberExpression [?Yield, ?Await] TemplateLiteral[?Yield, ?Await, +Tagged]\n  // CallExpression [?Yield, ?Await] TemplateLiteral[?Yield, ?Await, +Tagged]\n  parseTaggedTemplateExpression(\n    base: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    state: N.ParseSubscriptState,\n  ): N.TaggedTemplateExpression {\n    const node: N.TaggedTemplateExpression = this.startNodeAt(\n      startPos,\n      startLoc,\n    );\n    node.tag = base;\n    node.quasi = this.parseTemplate(true);\n    if (state.optionalChainMember) {\n      this.raise(Errors.OptionalChainingNoTemplate, { at: startLoc });\n    }\n    return this.finishNode(node, \"TaggedTemplateExpression\");\n  }\n\n  atPossibleAsyncArrow(base: N.Expression): boolean {\n    return (\n      base.type === \"Identifier\" &&\n      base.name === \"async\" &&\n      this.state.lastTokEndLoc.index === base.end &&\n      !this.canInsertSemicolon() &&\n      // check there are no escape sequences, such as \\u{61}sync\n      base.end - base.start === 5 &&\n      base.start === this.state.potentialArrowAt\n    );\n  }\n\n  finishCallExpression<T: N.CallExpression | N.OptionalCallExpression>(\n    node: T,\n    optional: boolean,\n  ): N.Expression {\n    if (node.callee.type === \"Import\") {\n      if (node.arguments.length === 2) {\n        if (process.env.BABEL_8_BREAKING) {\n          this.expectPlugin(\"importAssertions\");\n        } else {\n          if (!this.hasPlugin(\"moduleAttributes\")) {\n            this.expectPlugin(\"importAssertions\");\n          }\n        }\n      }\n      if (node.arguments.length === 0 || node.arguments.length > 2) {\n        this.raise(Errors.ImportCallArity, {\n          at: node,\n          maxArgumentCount:\n            this.hasPlugin(\"importAssertions\") ||\n            this.hasPlugin(\"moduleAttributes\")\n              ? 2\n              : 1,\n        });\n      } else {\n        for (const arg of node.arguments) {\n          if (arg.type === \"SpreadElement\") {\n            this.raise(Errors.ImportCallSpreadArgument, { at: arg });\n          }\n        }\n      }\n    }\n    return this.finishNode(\n      node,\n      optional ? \"OptionalCallExpression\" : \"CallExpression\",\n    );\n  }\n\n  parseCallExpressionArguments(\n    close: TokenType,\n    dynamicImport?: boolean,\n    allowPlaceholder?: boolean,\n    nodeForExtra?: ?N.Node,\n    refExpressionErrors?: ?ExpressionErrors,\n  ): $ReadOnlyArray<?N.Expression> {\n    const elts = [];\n    let first = true;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n        if (this.match(close)) {\n          if (\n            dynamicImport &&\n            !this.hasPlugin(\"importAssertions\") &&\n            !this.hasPlugin(\"moduleAttributes\")\n          ) {\n            this.raise(Errors.ImportCallArgumentTrailingComma, {\n              at: this.state.lastTokStartLoc,\n            });\n          }\n          if (nodeForExtra) {\n            this.addTrailingCommaExtraToNode(nodeForExtra);\n          }\n          this.next();\n          break;\n        }\n      }\n\n      elts.push(\n        this.parseExprListItem(false, refExpressionErrors, allowPlaceholder),\n      );\n    }\n\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n\n    return elts;\n  }\n\n  shouldParseAsyncArrow(): boolean {\n    return this.match(tt.arrow) && !this.canInsertSemicolon();\n  }\n\n  parseAsyncArrowFromCallExpression(\n    node: N.ArrowFunctionExpression,\n    call: N.CallExpression,\n  ): N.ArrowFunctionExpression {\n    this.resetPreviousNodeTrailingComments(call);\n    this.expect(tt.arrow);\n    this.parseArrowExpression(\n      node,\n      call.arguments,\n      true,\n      call.extra?.trailingCommaLoc,\n    );\n    // mark inner comments of `async()` as inner comments of `async () =>`\n    if (call.innerComments) {\n      setInnerComments(node, call.innerComments);\n    }\n    // mark trailing comments of `async` to be inner comments\n    if (call.callee.trailingComments) {\n      setInnerComments(node, call.callee.trailingComments);\n    }\n    return node;\n  }\n\n  // Parse a no-call expression (like argument of `new` or `::` operators).\n  // https://tc39.es/ecma262/#prod-MemberExpression\n  parseNoCallExpr(): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    return this.parseSubscripts(this.parseExprAtom(), startPos, startLoc, true);\n  }\n\n  // Parse an atomic expression — either a single token that is an\n  // expression, an expression started by a keyword like `function` or\n  // `new`, or an expression wrapped in punctuation like `()`, `[]`,\n  // or `{}`.\n\n  // https://tc39.es/ecma262/#prod-PrimaryExpression\n  // https://tc39.es/ecma262/#prod-AsyncArrowFunction\n  // PrimaryExpression\n  // Super\n  // Import\n  // AsyncArrowFunction\n\n  parseExprAtom(refExpressionErrors?: ?ExpressionErrors): N.Expression {\n    let node;\n\n    const { type } = this.state;\n    switch (type) {\n      case tt._super:\n        return this.parseSuper();\n\n      case tt._import:\n        node = this.startNode();\n        this.next();\n\n        if (this.match(tt.dot)) {\n          return this.parseImportMetaProperty(node);\n        }\n\n        if (!this.match(tt.parenL)) {\n          this.raise(Errors.UnsupportedImport, {\n            at: this.state.lastTokStartLoc,\n          });\n        }\n        return this.finishNode(node, \"Import\");\n      case tt._this:\n        node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"ThisExpression\");\n\n      case tt._do: {\n        return this.parseDo(this.startNode(), false);\n      }\n\n      case tt.slash:\n      case tt.slashAssign: {\n        this.readRegexp();\n        return this.parseRegExpLiteral(this.state.value);\n      }\n\n      case tt.num:\n        return this.parseNumericLiteral(this.state.value);\n\n      case tt.bigint:\n        return this.parseBigIntLiteral(this.state.value);\n\n      case tt.decimal:\n        return this.parseDecimalLiteral(this.state.value);\n\n      case tt.string:\n        return this.parseStringLiteral(this.state.value);\n\n      case tt._null:\n        return this.parseNullLiteral();\n\n      case tt._true:\n        return this.parseBooleanLiteral(true);\n      case tt._false:\n        return this.parseBooleanLiteral(false);\n\n      case tt.parenL: {\n        const canBeArrow = this.state.potentialArrowAt === this.state.start;\n        return this.parseParenAndDistinguishExpression(canBeArrow);\n      }\n\n      case tt.bracketBarL:\n      case tt.bracketHashL: {\n        return this.parseArrayLike(\n          this.state.type === tt.bracketBarL ? tt.bracketBarR : tt.bracketR,\n          /* canBePattern */ false,\n          /* isTuple */ true,\n        );\n      }\n      case tt.bracketL: {\n        return this.parseArrayLike(\n          tt.bracketR,\n          /* canBePattern */ true,\n          /* isTuple */ false,\n          refExpressionErrors,\n        );\n      }\n      case tt.braceBarL:\n      case tt.braceHashL: {\n        return this.parseObjectLike(\n          this.state.type === tt.braceBarL ? tt.braceBarR : tt.braceR,\n          /* isPattern */ false,\n          /* isRecord */ true,\n        );\n      }\n      case tt.braceL: {\n        return this.parseObjectLike(\n          tt.braceR,\n          /* isPattern */ false,\n          /* isRecord */ false,\n          refExpressionErrors,\n        );\n      }\n      case tt._function:\n        return this.parseFunctionOrFunctionSent();\n\n      case tt.at:\n        this.parseDecorators();\n      // fall through\n      case tt._class:\n        node = this.startNode();\n        this.takeDecorators(node);\n        return this.parseClass(node, false);\n\n      case tt._new:\n        return this.parseNewOrNewTarget();\n\n      case tt.templateNonTail:\n      case tt.templateTail:\n        return this.parseTemplate(false);\n\n      // BindExpression[Yield]\n      //   :: MemberExpression[?Yield]\n      case tt.doubleColon: {\n        node = this.startNode();\n        this.next();\n        node.object = null;\n        const callee = (node.callee = this.parseNoCallExpr());\n        if (callee.type === \"MemberExpression\") {\n          return this.finishNode(node, \"BindExpression\");\n        } else {\n          throw this.raise(Errors.UnsupportedBind, { at: callee });\n        }\n      }\n\n      case tt.privateName: {\n        // Standalone private names are only allowed in \"#x in obj\"\n        // expressions, and they are directly handled by callers of\n        // parseExprOp. If we reach this, the input is always invalid.\n        // We can throw a better error message and recover, rather than\n        // just throwing \"Unexpected token\" (which is the default\n        // behavior of this big switch statement).\n        this.raise(Errors.PrivateInExpectedIn, {\n          at: this.state.startLoc,\n          identifierName: this.state.value,\n        });\n        return this.parsePrivateName();\n      }\n\n      case tt.moduloAssign: {\n        return this.parseTopicReferenceThenEqualsSign(tt.modulo, \"%\");\n      }\n\n      case tt.xorAssign: {\n        return this.parseTopicReferenceThenEqualsSign(tt.bitwiseXOR, \"^\");\n      }\n\n      case tt.doubleCaret:\n      case tt.doubleAt: {\n        return this.parseTopicReference(\"hack\");\n      }\n\n      case tt.bitwiseXOR:\n      case tt.modulo:\n      case tt.hash: {\n        const pipeProposal = this.getPluginOption(\n          \"pipelineOperator\",\n          \"proposal\",\n        );\n\n        if (pipeProposal) {\n          return this.parseTopicReference(pipeProposal);\n        } else {\n          throw this.unexpected();\n        }\n      }\n\n      case tt.lt: {\n        const lookaheadCh = this.input.codePointAt(this.nextTokenStart());\n        if (\n          isIdentifierStart(lookaheadCh) || // Element/Type Parameter <foo>\n          lookaheadCh === charCodes.greaterThan // Fragment <>\n        ) {\n          this.expectOnePlugin([\"jsx\", \"flow\", \"typescript\"]);\n          break;\n        } else {\n          throw this.unexpected();\n        }\n      }\n\n      default:\n        if (tokenIsIdentifier(type)) {\n          if (\n            this.isContextual(tt._module) &&\n            this.lookaheadCharCode() === charCodes.leftCurlyBrace &&\n            !this.hasFollowingLineBreak()\n          ) {\n            return this.parseModuleExpression();\n          }\n          const canBeArrow = this.state.potentialArrowAt === this.state.start;\n          const containsEsc = this.state.containsEsc;\n          const id = this.parseIdentifier();\n\n          if (\n            !containsEsc &&\n            id.name === \"async\" &&\n            !this.canInsertSemicolon()\n          ) {\n            const { type } = this.state;\n            if (type === tt._function) {\n              this.resetPreviousNodeTrailingComments(id);\n              this.next();\n              return this.parseFunction(\n                this.startNodeAtNode(id),\n                undefined,\n                true,\n              );\n            } else if (tokenIsIdentifier(type)) {\n              // If the next token begins with \"=\", commit to parsing an async\n              // arrow function. (Peeking ahead for \"=\" lets us avoid a more\n              // expensive full-token lookahead on this common path.)\n              if (this.lookaheadCharCode() === charCodes.equalsTo) {\n                // although `id` is not used in async arrow unary function,\n                // we don't need to reset `async`'s trailing comments because\n                // it will be attached to the upcoming async arrow binding identifier\n                return this.parseAsyncArrowUnaryFunction(\n                  this.startNodeAtNode(id),\n                );\n              } else {\n                // Otherwise, treat \"async\" as an identifier and let calling code\n                // deal with the current tt.name token.\n                return id;\n              }\n            } else if (type === tt._do) {\n              this.resetPreviousNodeTrailingComments(id);\n              return this.parseDo(this.startNodeAtNode(id), true);\n            }\n          }\n\n          if (\n            canBeArrow &&\n            this.match(tt.arrow) &&\n            !this.canInsertSemicolon()\n          ) {\n            this.next();\n            return this.parseArrowExpression(\n              this.startNodeAtNode(id),\n              [id],\n              false,\n            );\n          }\n\n          return id;\n        } else {\n          throw this.unexpected();\n        }\n    }\n  }\n\n  // This helper method should only be called\n  // when the parser has reached a potential Hack pipe topic token\n  // that is followed by an equals sign.\n  // See <https://github.com/js-choi/proposal-hack-pipes>.\n  // If we find ^= or %= in an expression position\n  // (i.e., the tt.moduloAssign or tt.xorAssign token types), and if the\n  // Hack-pipes proposal is active with ^ or % as its topicToken, then the ^ or\n  // % could be the topic token (e.g., in x |> ^==y or x |> ^===y), and so we\n  // reparse the current token as ^ or %.\n  // Otherwise, this throws an unexpected-token error.\n  parseTopicReferenceThenEqualsSign(\n    topicTokenType: TokenType,\n    topicTokenValue: string,\n  ): N.Expression {\n    const pipeProposal = this.getPluginOption(\"pipelineOperator\", \"proposal\");\n\n    if (pipeProposal) {\n      // Set the most-recent token to be a topic token\n      // given by the tokenType and tokenValue.\n      // Now the next readToken() call (in parseTopicReference)\n      // will consume that “topic token”.\n      this.state.type = topicTokenType;\n      this.state.value = topicTokenValue;\n      // Rewind the tokenizer to the end of the “topic token”, so that the\n      // following token starts at the equals sign after that topic token.\n      this.state.pos--;\n      this.state.end--;\n      // This is safe to do since the preceding character was either ^ or %, and\n      // thus not a newline.\n      this.state.endLoc = createPositionWithColumnOffset(this.state.endLoc, -1);\n      // Now actually consume the topic token.\n      return this.parseTopicReference(pipeProposal);\n    } else {\n      throw this.unexpected();\n    }\n  }\n\n  // This helper method should only be called\n  // when the proposal-pipeline-operator plugin is active,\n  // and when the parser has reached a potential Hack pipe topic token.\n  // Although a pipe-operator proposal is assumed to be active,\n  // its configuration might not match the current token’s type.\n  // See <https://github.com/js-choi/proposal-hack-pipes>.\n  parseTopicReference(pipeProposal: string): N.Expression {\n    const node = this.startNode();\n    const startLoc = this.state.startLoc;\n    const tokenType = this.state.type;\n\n    // Consume the current token.\n    this.next();\n\n    // If the pipe-operator plugin’s configuration matches the current token’s type,\n    // then this will return `node`, will have been finished as a topic reference.\n    // Otherwise, this will throw a `PipeTopicUnconfiguredToken` error.\n    return this.finishTopicReference(node, startLoc, pipeProposal, tokenType);\n  }\n\n  // This helper method attempts to finish the given `node`\n  // into a topic-reference node for the given `pipeProposal`.\n  // See <https://github.com/js-choi/proposal-hack-pipes>.\n  //\n  // The method assumes that any topic token was consumed before it was called.\n  //\n  // If the `pipelineOperator` plugin is active,\n  // and if the given `tokenType` matches the plugin’s configuration,\n  // then this method will return the finished `node`.\n  //\n  // If the `pipelineOperator` plugin is active,\n  // but if the given `tokenType` does not match the plugin’s configuration,\n  // then this method will throw a `PipeTopicUnconfiguredToken` error.\n  finishTopicReference(\n    node: N.Node,\n    startLoc: Position,\n    pipeProposal: string,\n    tokenType: TokenType,\n  ): N.Expression {\n    if (\n      this.testTopicReferenceConfiguration(pipeProposal, startLoc, tokenType)\n    ) {\n      // The token matches the plugin’s configuration.\n      // The token is therefore a topic reference.\n\n      // Determine the node type for the topic reference\n      // that is appropriate for the active pipe-operator proposal.\n      const nodeType =\n        pipeProposal === \"smart\"\n          ? \"PipelinePrimaryTopicReference\"\n          : // The proposal must otherwise be \"hack\",\n            // as enforced by testTopicReferenceConfiguration.\n            \"TopicReference\";\n\n      if (!this.topicReferenceIsAllowedInCurrentContext()) {\n        this.raise(\n          // The topic reference is not allowed in the current context:\n          // it is outside of a pipe body.\n          // Raise recoverable errors.\n          pipeProposal === \"smart\"\n            ? Errors.PrimaryTopicNotAllowed\n            : // In this case, `pipeProposal === \"hack\"` is true.\n              Errors.PipeTopicUnbound,\n          { at: startLoc },\n        );\n      }\n\n      // Register the topic reference so that its pipe body knows\n      // that its topic was used at least once.\n      this.registerTopicReference();\n\n      return this.finishNode(node, nodeType);\n    } else {\n      // The token does not match the plugin’s configuration.\n      throw this.raise(Errors.PipeTopicUnconfiguredToken, {\n        at: startLoc,\n        token: tokenLabelName(tokenType),\n      });\n    }\n  }\n\n  // This helper method tests whether the given token type\n  // matches the pipelineOperator parser plugin’s configuration.\n  // If the active pipe proposal is Hack style,\n  // and if the given token is the same as the plugin configuration’s `topicToken`,\n  // then this is a valid topic reference.\n  // If the active pipe proposal is smart mix,\n  // then the topic token must always be `#`.\n  // If the active pipe proposal is neither (e.g., \"minimal\" or \"fsharp\"),\n  // then an error is thrown.\n  testTopicReferenceConfiguration(\n    pipeProposal: string,\n    startLoc: Position,\n    tokenType: TokenType,\n  ): boolean {\n    switch (pipeProposal) {\n      case \"hack\": {\n        return this.hasPlugin([\n          \"pipelineOperator\",\n          {\n            topicToken: tokenLabelName(tokenType),\n          },\n        ]);\n      }\n      case \"smart\":\n        return tokenType === tt.hash;\n      default:\n        throw this.raise(Errors.PipeTopicRequiresHackPipes, { at: startLoc });\n    }\n  }\n\n  // async [no LineTerminator here] AsyncArrowBindingIdentifier[?Yield] [no LineTerminator here] => AsyncConciseBody[?In]\n  parseAsyncArrowUnaryFunction(node: N.Node): N.ArrowFunctionExpression {\n    // We don't need to push a new ParameterDeclarationScope here since we are sure\n    // 1) it is an async arrow, 2) no biding pattern is allowed in params\n    this.prodParam.enter(functionFlags(true, this.prodParam.hasYield));\n    const params = [this.parseIdentifier()];\n    this.prodParam.exit();\n    if (this.hasPrecedingLineBreak()) {\n      this.raise(Errors.LineTerminatorBeforeArrow, {\n        at: this.state.curPosition(),\n      });\n    }\n    this.expect(tt.arrow);\n    // let foo = async bar => {};\n    this.parseArrowExpression(node, params, true);\n    return node;\n  }\n\n  // https://github.com/tc39/proposal-do-expressions\n  // https://github.com/tc39/proposal-async-do-expressions\n  parseDo(node: N.Node, isAsync: boolean): N.DoExpression {\n    this.expectPlugin(\"doExpressions\");\n    if (isAsync) {\n      this.expectPlugin(\"asyncDoExpressions\");\n    }\n    node.async = isAsync;\n    this.next(); // eat `do`\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    if (isAsync) {\n      // AsyncDoExpression :\n      // async [no LineTerminator here] do Block[~Yield, +Await, ~Return]\n      this.prodParam.enter(PARAM_AWAIT);\n      node.body = this.parseBlock();\n      this.prodParam.exit();\n    } else {\n      node.body = this.parseBlock();\n    }\n\n    this.state.labels = oldLabels;\n    return this.finishNode(node, \"DoExpression\");\n  }\n\n  // Parse the `super` keyword\n  parseSuper(): N.Super {\n    const node = this.startNode();\n    this.next(); // eat `super`\n    if (\n      this.match(tt.parenL) &&\n      !this.scope.allowDirectSuper &&\n      !this.options.allowSuperOutsideMethod\n    ) {\n      this.raise(Errors.SuperNotAllowed, { at: node });\n    } else if (\n      !this.scope.allowSuper &&\n      !this.options.allowSuperOutsideMethod\n    ) {\n      this.raise(Errors.UnexpectedSuper, { at: node });\n    }\n\n    if (\n      !this.match(tt.parenL) &&\n      !this.match(tt.bracketL) &&\n      !this.match(tt.dot)\n    ) {\n      this.raise(Errors.UnsupportedSuper, { at: node });\n    }\n\n    return this.finishNode(node, \"Super\");\n  }\n\n  parsePrivateName(): N.PrivateName {\n    const node = this.startNode();\n    const id = this.startNodeAt(\n      this.state.start + 1,\n      // The position is hardcoded because we merge `#` and name into a single\n      // tt.privateName token\n      new Position(\n        this.state.curLine,\n        this.state.start + 1 - this.state.lineStart,\n        this.state.start + 1,\n      ),\n    );\n    const name = this.state.value;\n    this.next(); // eat #name;\n    node.id = this.createIdentifier(id, name);\n    return this.finishNode(node, \"PrivateName\");\n  }\n\n  parseFunctionOrFunctionSent(): N.FunctionExpression | N.MetaProperty {\n    const node = this.startNode();\n\n    // We do not do parseIdentifier here because when parseFunctionOrFunctionSent\n    // is called we already know that the current token is a \"name\" with the value \"function\"\n    // This will improve perf a tiny little bit as we do not do validation but more importantly\n    // here is that parseIdentifier will remove an item from the expression stack\n    // if \"function\" or \"class\" is parsed as identifier (in objects e.g.), which should not happen here.\n    this.next(); // eat `function`\n\n    if (this.prodParam.hasYield && this.match(tt.dot)) {\n      const meta = this.createIdentifier(\n        this.startNodeAtNode(node),\n        \"function\",\n      );\n      this.next(); // eat `.`\n      // https://github.com/tc39/proposal-function.sent#syntax-1\n      if (this.match(tt._sent)) {\n        this.expectPlugin(\"functionSent\");\n      } else if (!this.hasPlugin(\"functionSent\")) {\n        // The code wasn't `function.sent` but just `function.`, so a simple error is less confusing.\n        this.unexpected();\n      }\n      return this.parseMetaProperty(node, meta, \"sent\");\n    }\n    return this.parseFunction(node);\n  }\n\n  parseMetaProperty(\n    node: N.MetaProperty,\n    meta: N.Identifier,\n    propertyName: string,\n  ): N.MetaProperty {\n    node.meta = meta;\n\n    const containsEsc = this.state.containsEsc;\n\n    node.property = this.parseIdentifier(true);\n\n    if (node.property.name !== propertyName || containsEsc) {\n      this.raise(Errors.UnsupportedMetaProperty, {\n        at: node.property,\n        target: meta.name,\n        onlyValidPropertyName: propertyName,\n      });\n    }\n\n    return this.finishNode(node, \"MetaProperty\");\n  }\n\n  // https://tc39.es/ecma262/#prod-ImportMeta\n  parseImportMetaProperty(node: N.MetaProperty): N.MetaProperty {\n    const id = this.createIdentifier(this.startNodeAtNode(node), \"import\");\n    this.next(); // eat `.`\n\n    if (this.isContextual(tt._meta)) {\n      if (!this.inModule) {\n        this.raise(Errors.ImportMetaOutsideModule, { at: id });\n      }\n      this.sawUnambiguousESM = true;\n    }\n\n    return this.parseMetaProperty(node, id, \"meta\");\n  }\n\n  parseLiteralAtNode<T: N.Node>(\n    value: any,\n    type: $ElementType<T, \"type\">,\n    node: any,\n  ): T {\n    this.addExtra(node, \"rawValue\", value);\n    this.addExtra(node, \"raw\", this.input.slice(node.start, this.state.end));\n    node.value = value;\n    this.next();\n    return this.finishNode<T>(node, type);\n  }\n\n  parseLiteral<T: N.Node>(value: any, type: $ElementType<T, \"type\">): T {\n    const node = this.startNode();\n    return this.parseLiteralAtNode(value, type, node);\n  }\n\n  parseStringLiteral(value: any) {\n    return this.parseLiteral<N.StringLiteral>(value, \"StringLiteral\");\n  }\n\n  parseNumericLiteral(value: any) {\n    return this.parseLiteral<N.NumericLiteral>(value, \"NumericLiteral\");\n  }\n\n  parseBigIntLiteral(value: any) {\n    return this.parseLiteral<N.BigIntLiteral>(value, \"BigIntLiteral\");\n  }\n\n  parseDecimalLiteral(value: any) {\n    return this.parseLiteral<N.DecimalLiteral>(value, \"DecimalLiteral\");\n  }\n\n  parseRegExpLiteral(value: { value: any, pattern: string, flags: string }) {\n    const node = this.parseLiteral<N.RegExpLiteral>(\n      value.value,\n      \"RegExpLiteral\",\n    );\n    node.pattern = value.pattern;\n    node.flags = value.flags;\n    return node;\n  }\n\n  parseBooleanLiteral(value: boolean) {\n    const node = this.startNode();\n    node.value = value;\n    this.next();\n    return this.finishNode<N.BooleanLiteral>(node, \"BooleanLiteral\");\n  }\n\n  parseNullLiteral() {\n    const node = this.startNode();\n    this.next();\n    return this.finishNode<N.NullLiteral>(node, \"NullLiteral\");\n  }\n\n  // https://tc39.es/ecma262/#prod-CoverParenthesizedExpressionAndArrowParameterList\n  parseParenAndDistinguishExpression(canBeArrow: boolean): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    let val;\n    this.next(); // eat `(`\n    this.expressionScope.enter(newArrowHeadScope());\n\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.maybeInArrowParameters = true;\n    this.state.inFSharpPipelineDirectBody = false;\n\n    const innerStartPos = this.state.start;\n    const innerStartLoc = this.state.startLoc;\n    const exprList = [];\n    const refExpressionErrors = new ExpressionErrors();\n    let first = true;\n    let spreadStartLoc;\n    let optionalCommaStartLoc;\n\n    while (!this.match(tt.parenR)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(\n          tt.comma,\n          refExpressionErrors.optionalParametersLoc === null\n            ? null\n            : refExpressionErrors.optionalParametersLoc,\n        );\n        if (this.match(tt.parenR)) {\n          optionalCommaStartLoc = this.state.startLoc;\n          break;\n        }\n      }\n\n      if (this.match(tt.ellipsis)) {\n        const spreadNodeStartPos = this.state.start;\n        const spreadNodeStartLoc = this.state.startLoc;\n        spreadStartLoc = this.state.startLoc;\n        exprList.push(\n          this.parseParenItem(\n            this.parseRestBinding(),\n            spreadNodeStartPos,\n            spreadNodeStartLoc,\n          ),\n        );\n\n        if (!this.checkCommaAfterRest(charCodes.rightParenthesis)) {\n          break;\n        }\n      } else {\n        exprList.push(\n          this.parseMaybeAssignAllowIn(\n            refExpressionErrors,\n            this.parseParenItem,\n          ),\n        );\n      }\n    }\n\n    const innerEndLoc = this.state.lastTokEndLoc;\n    this.expect(tt.parenR);\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n\n    let arrowNode = this.startNodeAt(startPos, startLoc);\n    if (\n      canBeArrow &&\n      this.shouldParseArrow(exprList) &&\n      (arrowNode = this.parseArrow(arrowNode))\n    ) {\n      this.checkDestructuringPrivate(refExpressionErrors);\n      this.expressionScope.validateAsPattern();\n      this.expressionScope.exit();\n      this.parseArrowExpression(arrowNode, exprList, false);\n      return arrowNode;\n    }\n    this.expressionScope.exit();\n\n    if (!exprList.length) {\n      this.unexpected(this.state.lastTokStartLoc);\n    }\n    if (optionalCommaStartLoc) this.unexpected(optionalCommaStartLoc);\n    if (spreadStartLoc) this.unexpected(spreadStartLoc);\n    this.checkExpressionErrors(refExpressionErrors, true);\n\n    this.toReferencedListDeep(exprList, /* isParenthesizedExpr */ true);\n    if (exprList.length > 1) {\n      val = this.startNodeAt(innerStartPos, innerStartLoc);\n      val.expressions = exprList;\n      // finish node at current location so it can pick up comments after `)`\n      this.finishNode(val, \"SequenceExpression\");\n      this.resetEndLocation(val, innerEndLoc);\n    } else {\n      val = exprList[0];\n    }\n\n    return this.wrapParenthesis(startPos, startLoc, val);\n  }\n\n  wrapParenthesis(\n    startPos: number,\n    startLoc: Position,\n    expression: N.Expression,\n  ): N.Expression {\n    if (!this.options.createParenthesizedExpressions) {\n      this.addExtra(expression, \"parenthesized\", true);\n      this.addExtra(expression, \"parenStart\", startPos);\n\n      this.takeSurroundingComments(\n        expression,\n        startPos,\n        this.state.lastTokEndLoc.index,\n      );\n\n      return expression;\n    }\n\n    const parenExpression = this.startNodeAt(startPos, startLoc);\n    parenExpression.expression = expression;\n    this.finishNode(parenExpression, \"ParenthesizedExpression\");\n    return parenExpression;\n  }\n\n  // eslint-disable-next-line no-unused-vars -- `params` is used in typescript plugin\n  shouldParseArrow(params: Array<N.Node>): boolean {\n    return !this.canInsertSemicolon();\n  }\n\n  parseArrow(node: N.ArrowFunctionExpression): ?N.ArrowFunctionExpression {\n    if (this.eat(tt.arrow)) {\n      return node;\n    }\n  }\n\n  parseParenItem(\n    node: N.Expression,\n    startPos: number, // eslint-disable-line no-unused-vars\n    startLoc: Position, // eslint-disable-line no-unused-vars\n  ): N.Expression {\n    return node;\n  }\n\n  parseNewOrNewTarget(): N.NewExpression | N.MetaProperty {\n    const node = this.startNode();\n    this.next();\n    if (this.match(tt.dot)) {\n      // https://tc39.es/ecma262/#prod-NewTarget\n      const meta = this.createIdentifier(this.startNodeAtNode(node), \"new\");\n      this.next();\n      const metaProp = this.parseMetaProperty(node, meta, \"target\");\n\n      if (!this.scope.inNonArrowFunction && !this.scope.inClass) {\n        this.raise(Errors.UnexpectedNewTarget, { at: metaProp });\n      }\n\n      return metaProp;\n    }\n\n    return this.parseNew(node);\n  }\n\n  // New's precedence is slightly tricky. It must allow its argument to\n  // be a `[]` or dot subscript expression, but not a call — at least,\n  // not without wrapping it in parentheses. Thus, it uses the noCalls\n  // argument to parseSubscripts to prevent it from consuming the\n  // argument list.\n  // https://tc39.es/ecma262/#prod-NewExpression\n  parseNew(node: N.NewExpression): N.NewExpression {\n    this.parseNewCallee(node);\n\n    if (this.eat(tt.parenL)) {\n      const args = this.parseExprList(tt.parenR);\n      this.toReferencedList(args);\n      // $FlowFixMe (parseExprList should be all non-null in this case)\n      node.arguments = args;\n    } else {\n      node.arguments = [];\n    }\n\n    return this.finishNode(node, \"NewExpression\");\n  }\n\n  parseNewCallee(node: N.NewExpression): void {\n    node.callee = this.parseNoCallExpr();\n    if (node.callee.type === \"Import\") {\n      this.raise(Errors.ImportCallNotNewExpression, { at: node.callee });\n    } else if (this.isOptionalChain(node.callee)) {\n      this.raise(Errors.OptionalChainingNoNew, {\n        at: this.state.lastTokEndLoc,\n      });\n    } else if (this.eat(tt.questionDot)) {\n      this.raise(Errors.OptionalChainingNoNew, {\n        at: this.state.startLoc,\n      });\n    }\n  }\n\n  // Parse template expression.\n\n  parseTemplateElement(isTagged: boolean): N.TemplateElement {\n    const { start, startLoc, end, value } = this.state;\n    const elemStart = start + 1;\n    const elem = this.startNodeAt(\n      elemStart,\n      createPositionWithColumnOffset(startLoc, 1),\n    );\n    if (value === null) {\n      if (!isTagged) {\n        this.raise(Errors.InvalidEscapeSequenceTemplate, {\n          // FIXME: explain\n          at: createPositionWithColumnOffset(startLoc, 2),\n        });\n      }\n    }\n\n    const isTail = this.match(tt.templateTail);\n    const endOffset = isTail ? -1 : -2;\n    const elemEnd = end + endOffset;\n    elem.value = {\n      raw: this.input.slice(elemStart, elemEnd).replace(/\\r\\n?/g, \"\\n\"),\n      cooked: value === null ? null : value.slice(1, endOffset),\n    };\n    elem.tail = isTail;\n    this.next();\n    this.finishNode(elem, \"TemplateElement\");\n    this.resetEndLocation(\n      elem,\n      createPositionWithColumnOffset(this.state.lastTokEndLoc, endOffset),\n    );\n    return elem;\n  }\n\n  // https://tc39.es/ecma262/#prod-TemplateLiteral\n  parseTemplate(isTagged: boolean): N.TemplateLiteral {\n    const node = this.startNode();\n    node.expressions = [];\n    let curElt = this.parseTemplateElement(isTagged);\n    node.quasis = [curElt];\n    while (!curElt.tail) {\n      node.expressions.push(this.parseTemplateSubstitution());\n      this.readTemplateContinuation();\n      node.quasis.push((curElt = this.parseTemplateElement(isTagged)));\n    }\n    return this.finishNode(node, \"TemplateLiteral\");\n  }\n\n  // This is overwritten by the TypeScript plugin to parse template types\n  parseTemplateSubstitution(): N.Expression {\n    return this.parseExpression();\n  }\n\n  // Parse an object literal, binding pattern, or record.\n\n  parseObjectLike<T: N.ObjectPattern | N.ObjectExpression>(\n    close: TokenType,\n    isPattern: boolean,\n    isRecord?: ?boolean,\n    refExpressionErrors?: ?ExpressionErrors,\n  ): T {\n    if (isRecord) {\n      this.expectPlugin(\"recordAndTuple\");\n    }\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    const propHash: any = Object.create(null);\n    let first = true;\n    const node = this.startNode();\n\n    node.properties = [];\n    this.next();\n\n    while (!this.match(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n        if (this.match(close)) {\n          this.addTrailingCommaExtraToNode(node);\n          break;\n        }\n      }\n\n      let prop;\n      if (isPattern) {\n        prop = this.parseBindingProperty();\n      } else {\n        prop = this.parsePropertyDefinition(refExpressionErrors);\n        this.checkProto(prop, isRecord, propHash, refExpressionErrors);\n      }\n\n      if (\n        isRecord &&\n        !this.isObjectProperty(prop) &&\n        prop.type !== \"SpreadElement\"\n      ) {\n        this.raise(Errors.InvalidRecordProperty, { at: prop });\n      }\n\n      // $FlowIgnore\n      if (prop.shorthand) {\n        this.addExtra(prop, \"shorthand\", true);\n      }\n\n      node.properties.push(prop);\n    }\n\n    this.next();\n\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    let type = \"ObjectExpression\";\n    if (isPattern) {\n      type = \"ObjectPattern\";\n    } else if (isRecord) {\n      type = \"RecordExpression\";\n    }\n    return this.finishNode(node, type);\n  }\n\n  addTrailingCommaExtraToNode(node: N.Node): void {\n    this.addExtra(node, \"trailingComma\", this.state.lastTokStart);\n    this.addExtra(node, \"trailingCommaLoc\", this.state.lastTokStartLoc, false);\n  }\n\n  // Check grammar production:\n  //   IdentifierName *_opt PropertyName\n  // It is used in `parsePropertyDefinition` to detect AsyncMethod and Accessors\n  maybeAsyncOrAccessorProp(prop: N.ObjectProperty): boolean {\n    return (\n      !prop.computed &&\n      prop.key.type === \"Identifier\" &&\n      (this.isLiteralPropertyName() ||\n        this.match(tt.bracketL) ||\n        this.match(tt.star))\n    );\n  }\n\n  // https://tc39.es/ecma262/#prod-PropertyDefinition\n  parsePropertyDefinition(\n    refExpressionErrors?: ?ExpressionErrors,\n  ): N.ObjectMember | N.SpreadElement {\n    let decorators = [];\n    if (this.match(tt.at)) {\n      if (this.hasPlugin(\"decorators\")) {\n        this.raise(Errors.UnsupportedPropertyDecorator, {\n          at: this.state.startLoc,\n        });\n      }\n\n      // we needn't check if decorators (stage 0) plugin is enabled since it's checked by\n      // the call to this.parseDecorator\n      while (this.match(tt.at)) {\n        decorators.push(this.parseDecorator());\n      }\n    }\n\n    const prop = this.startNode();\n    let isAsync = false;\n    let isAccessor = false;\n    let startPos;\n    let startLoc;\n\n    if (this.match(tt.ellipsis)) {\n      if (decorators.length) this.unexpected();\n      return this.parseSpread();\n    }\n\n    if (decorators.length) {\n      prop.decorators = decorators;\n      decorators = [];\n    }\n\n    prop.method = false;\n\n    if (refExpressionErrors) {\n      startPos = this.state.start;\n      startLoc = this.state.startLoc;\n    }\n\n    let isGenerator = this.eat(tt.star);\n    this.parsePropertyNamePrefixOperator(prop);\n    const containsEsc = this.state.containsEsc;\n    const key = this.parsePropertyName(prop, refExpressionErrors);\n\n    if (!isGenerator && !containsEsc && this.maybeAsyncOrAccessorProp(prop)) {\n      const keyName = key.name;\n      // https://tc39.es/ecma262/#prod-AsyncMethod\n      // https://tc39.es/ecma262/#prod-AsyncGeneratorMethod\n      if (keyName === \"async\" && !this.hasPrecedingLineBreak()) {\n        isAsync = true;\n        this.resetPreviousNodeTrailingComments(key);\n        isGenerator = this.eat(tt.star);\n        this.parsePropertyName(prop);\n      }\n      // get PropertyName[?Yield, ?Await] () { FunctionBody[~Yield, ~Await] }\n      // set PropertyName[?Yield, ?Await] ( PropertySetParameterList ) { FunctionBody[~Yield, ~Await] }\n      if (keyName === \"get\" || keyName === \"set\") {\n        isAccessor = true;\n        this.resetPreviousNodeTrailingComments(key);\n        prop.kind = keyName;\n        if (this.match(tt.star)) {\n          isGenerator = true;\n          this.raise(Errors.AccessorIsGenerator, {\n            at: this.state.curPosition(),\n            kind: keyName,\n          });\n          this.next();\n        }\n        this.parsePropertyName(prop);\n      }\n    }\n\n    this.parseObjPropValue(\n      prop,\n      startPos,\n      startLoc,\n      isGenerator,\n      isAsync,\n      false /* isPattern */,\n      isAccessor,\n      refExpressionErrors,\n    );\n\n    return prop;\n  }\n\n  getGetterSetterExpectedParamCount(\n    method: N.ObjectMethod | N.ClassMethod,\n  ): number {\n    return method.kind === \"get\" ? 0 : 1;\n  }\n\n  // This exists so we can override within the ESTree plugin\n  getObjectOrClassMethodParams(method: N.ObjectMethod | N.ClassMethod) {\n    return method.params;\n  }\n\n  // get methods aren't allowed to have any parameters\n  // set methods must have exactly 1 parameter which is not a rest parameter\n  checkGetterSetterParams(method: N.ObjectMethod | N.ClassMethod): void {\n    const paramCount = this.getGetterSetterExpectedParamCount(method);\n    const params = this.getObjectOrClassMethodParams(method);\n\n    if (params.length !== paramCount) {\n      this.raise(\n        method.kind === \"get\" ? Errors.BadGetterArity : Errors.BadSetterArity,\n        { at: method },\n      );\n    }\n\n    if (\n      method.kind === \"set\" &&\n      params[params.length - 1]?.type === \"RestElement\"\n    ) {\n      this.raise(Errors.BadSetterRestParameter, { at: method });\n    }\n  }\n\n  // https://tc39.es/ecma262/#prod-MethodDefinition\n  parseObjectMethod(\n    prop: N.ObjectMethod,\n    isGenerator: boolean,\n    isAsync: boolean,\n    isPattern: boolean,\n    isAccessor: boolean,\n  ): ?N.ObjectMethod {\n    if (isAccessor) {\n      // isAccessor implies isAsync: false, isPattern: false, isGenerator: false\n      this.parseMethod(\n        prop,\n        // This _should_ be false, but with error recovery, we allow it to be\n        // set for informational purposes\n        isGenerator,\n        /* isAsync */ false,\n        /* isConstructor */ false,\n        false,\n        \"ObjectMethod\",\n      );\n      this.checkGetterSetterParams(prop);\n      return prop;\n    }\n\n    if (isAsync || isGenerator || this.match(tt.parenL)) {\n      if (isPattern) this.unexpected();\n      prop.kind = \"method\";\n      prop.method = true;\n      return this.parseMethod(\n        prop,\n        isGenerator,\n        isAsync,\n        /* isConstructor */ false,\n        false,\n        \"ObjectMethod\",\n      );\n    }\n  }\n\n  // if `isPattern` is true, parse https://tc39.es/ecma262/#prod-BindingProperty\n  // else https://tc39.es/ecma262/#prod-PropertyDefinition\n  parseObjectProperty(\n    prop: N.ObjectProperty,\n    startPos: ?number,\n    startLoc: ?Position,\n    isPattern: boolean,\n    refExpressionErrors: ?ExpressionErrors,\n  ): ?N.ObjectProperty {\n    prop.shorthand = false;\n\n    if (this.eat(tt.colon)) {\n      prop.value = isPattern\n        ? this.parseMaybeDefault(this.state.start, this.state.startLoc)\n        : this.parseMaybeAssignAllowIn(refExpressionErrors);\n\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n\n    if (!prop.computed && prop.key.type === \"Identifier\") {\n      // PropertyDefinition:\n      //   IdentifierReference\n      //   CoverInitializedName\n      // Note: `{ eval } = {}` will be checked in `checkLVal` later.\n      this.checkReservedWord(prop.key.name, prop.key.loc.start, true, false);\n\n      if (isPattern) {\n        prop.value = this.parseMaybeDefault(\n          startPos,\n          startLoc,\n          cloneIdentifier(prop.key),\n        );\n      } else if (this.match(tt.eq)) {\n        const shorthandAssignLoc = this.state.startLoc;\n        if (refExpressionErrors != null) {\n          if (refExpressionErrors.shorthandAssignLoc === null) {\n            refExpressionErrors.shorthandAssignLoc = shorthandAssignLoc;\n          }\n        } else {\n          this.raise(Errors.InvalidCoverInitializedName, {\n            at: shorthandAssignLoc,\n          });\n        }\n        prop.value = this.parseMaybeDefault(\n          startPos,\n          startLoc,\n          cloneIdentifier(prop.key),\n        );\n      } else {\n        prop.value = cloneIdentifier(prop.key);\n      }\n      prop.shorthand = true;\n\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n  }\n\n  parseObjPropValue(\n    prop: any,\n    startPos: ?number,\n    startLoc: ?Position,\n    isGenerator: boolean,\n    isAsync: boolean,\n    isPattern: boolean,\n    isAccessor: boolean,\n    refExpressionErrors?: ?ExpressionErrors,\n  ): void {\n    const node =\n      this.parseObjectMethod(\n        prop,\n        isGenerator,\n        isAsync,\n        isPattern,\n        isAccessor,\n      ) ||\n      this.parseObjectProperty(\n        prop,\n        startPos,\n        startLoc,\n        isPattern,\n        refExpressionErrors,\n      );\n\n    if (!node) this.unexpected();\n\n    // $FlowFixMe\n    return node;\n  }\n\n  // https://tc39.es/ecma262/#prod-PropertyName\n  // when refExpressionErrors presents, it will parse private name\n  // and record the position of the first private name\n  parsePropertyName(\n    prop: N.ObjectOrClassMember | N.ClassMember | N.TsNamedTypeElementBase,\n    refExpressionErrors?: ?ExpressionErrors,\n  ): N.Expression | N.Identifier {\n    if (this.eat(tt.bracketL)) {\n      (prop: $FlowSubtype<N.ObjectOrClassMember>).computed = true;\n      prop.key = this.parseMaybeAssignAllowIn();\n      this.expect(tt.bracketR);\n    } else {\n      // We check if it's valid for it to be a private name when we push it.\n      const { type, value } = this.state;\n      let key;\n      // most un-computed property names are identifiers\n      if (tokenIsKeywordOrIdentifier(type)) {\n        key = this.parseIdentifier(true);\n      } else {\n        switch (type) {\n          case tt.num:\n            key = this.parseNumericLiteral(value);\n            break;\n          case tt.string:\n            key = this.parseStringLiteral(value);\n            break;\n          case tt.bigint:\n            key = this.parseBigIntLiteral(value);\n            break;\n          case tt.decimal:\n            key = this.parseDecimalLiteral(value);\n            break;\n          case tt.privateName: {\n            // the class private key has been handled in parseClassElementName\n            const privateKeyLoc = this.state.startLoc;\n            if (refExpressionErrors != null) {\n              if (refExpressionErrors.privateKeyLoc === null) {\n                refExpressionErrors.privateKeyLoc = privateKeyLoc;\n              }\n            } else {\n              this.raise(Errors.UnexpectedPrivateField, {\n                at: privateKeyLoc,\n              });\n            }\n            key = this.parsePrivateName();\n            break;\n          }\n          default:\n            throw this.unexpected();\n        }\n      }\n      (prop: $FlowFixMe).key = key;\n      if (type !== tt.privateName) {\n        // ClassPrivateProperty is never computed, so we don't assign in that case.\n        prop.computed = false;\n      }\n    }\n\n    return prop.key;\n  }\n\n  // Initialize empty function node.\n\n  initFunction(node: N.BodilessFunctionOrMethodBase, isAsync: ?boolean): void {\n    node.id = null;\n    node.generator = false;\n    node.async = !!isAsync;\n  }\n\n  // Parse object or class method.\n\n  parseMethod<T: N.MethodLike>(\n    node: T,\n    isGenerator: boolean,\n    isAsync: boolean,\n    isConstructor: boolean,\n    allowDirectSuper: boolean,\n    type: string,\n    inClassScope: boolean = false,\n  ): T {\n    this.initFunction(node, isAsync);\n    node.generator = !!isGenerator;\n    const allowModifiers = isConstructor; // For TypeScript parameter properties\n    this.scope.enter(\n      SCOPE_FUNCTION |\n        SCOPE_SUPER |\n        (inClassScope ? SCOPE_CLASS : 0) |\n        (allowDirectSuper ? SCOPE_DIRECT_SUPER : 0),\n    );\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n    this.parseFunctionParams((node: any), allowModifiers);\n    this.parseFunctionBodyAndFinish(node, type, true);\n    this.prodParam.exit();\n    this.scope.exit();\n\n    return node;\n  }\n\n  // parse an array literal or tuple literal\n  // https://tc39.es/ecma262/#prod-ArrayLiteral\n  // https://tc39.es/proposal-record-tuple/#prod-TupleLiteral\n  parseArrayLike(\n    close: TokenType,\n    canBePattern: boolean,\n    isTuple: boolean,\n    refExpressionErrors: ?ExpressionErrors,\n  ): N.ArrayExpression | N.TupleExpression {\n    if (isTuple) {\n      this.expectPlugin(\"recordAndTuple\");\n    }\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    const node = this.startNode();\n    this.next();\n    node.elements = this.parseExprList(\n      close,\n      /* allowEmpty */ !isTuple,\n      refExpressionErrors,\n      node,\n    );\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return this.finishNode(\n      node,\n      isTuple ? \"TupleExpression\" : \"ArrayExpression\",\n    );\n  }\n\n  // Parse arrow function expression.\n  // If the parameters are provided, they will be converted to an\n  // assignable list.\n  parseArrowExpression(\n    node: N.ArrowFunctionExpression,\n    params: ?(N.Expression[]),\n    isAsync: boolean,\n    trailingCommaLoc: ?Position,\n  ): N.ArrowFunctionExpression {\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\n    let flags = functionFlags(isAsync, false);\n    // ConciseBody[In] :\n    //   [lookahead ≠ {] ExpressionBody[?In, ~Await]\n    //   { FunctionBody[~Yield, ~Await] }\n    if (!this.match(tt.braceL) && this.prodParam.hasIn) {\n      flags |= PARAM_IN;\n    }\n    this.prodParam.enter(flags);\n    this.initFunction(node, isAsync);\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n\n    if (params) {\n      this.state.maybeInArrowParameters = true;\n      this.setArrowFunctionParameters(node, params, trailingCommaLoc);\n    }\n    this.state.maybeInArrowParameters = false;\n    this.parseFunctionBody(node, true);\n\n    this.prodParam.exit();\n    this.scope.exit();\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n\n    return this.finishNode(node, \"ArrowFunctionExpression\");\n  }\n\n  setArrowFunctionParameters(\n    node: N.ArrowFunctionExpression,\n    params: N.Expression[],\n    trailingCommaLoc: ?Position,\n  ): void {\n    this.toAssignableList(params, trailingCommaLoc, false);\n    node.params = params;\n  }\n\n  parseFunctionBodyAndFinish(\n    node: N.BodilessFunctionOrMethodBase,\n    type: string,\n    isMethod?: boolean = false,\n  ): void {\n    // $FlowIgnore (node is not bodiless if we get here)\n    this.parseFunctionBody(node, false, isMethod);\n    this.finishNode(node, type);\n  }\n\n  // Parse function body and check parameters.\n  parseFunctionBody(\n    node: N.Function,\n    allowExpression: ?boolean,\n    isMethod?: boolean = false,\n  ): void {\n    const isExpression = allowExpression && !this.match(tt.braceL);\n    this.expressionScope.enter(newExpressionScope());\n\n    if (isExpression) {\n      // https://tc39.es/ecma262/#prod-ExpressionBody\n      node.body = this.parseMaybeAssign();\n      this.checkParams(node, false, allowExpression, false);\n    } else {\n      const oldStrict = this.state.strict;\n      // Start a new scope with regard to labels\n      // flag (restore them to their old value afterwards).\n      const oldLabels = this.state.labels;\n      this.state.labels = [];\n\n      // FunctionBody[Yield, Await]:\n      //   StatementList[?Yield, ?Await, +Return] opt\n      this.prodParam.enter(this.prodParam.currentFlags() | PARAM_RETURN);\n      node.body = this.parseBlock(\n        true,\n        false,\n        // Strict mode function checks after we parse the statements in the function body.\n        (hasStrictModeDirective: boolean) => {\n          const nonSimple = !this.isSimpleParamList(node.params);\n\n          if (hasStrictModeDirective && nonSimple) {\n            // This logic is here to align the error location with the ESTree plugin.\n            this.raise(Errors.IllegalLanguageModeDirective, {\n              at:\n                // $FlowIgnore\n                (node.kind === \"method\" || node.kind === \"constructor\") &&\n                // $FlowIgnore\n                !!node.key\n                  ? node.key.loc.end\n                  : node,\n            });\n          }\n\n          const strictModeChanged = !oldStrict && this.state.strict;\n\n          // Add the params to varDeclaredNames to ensure that an error is thrown\n          // if a let/const declaration in the function clashes with one of the params.\n          this.checkParams(\n            node,\n            !this.state.strict && !allowExpression && !isMethod && !nonSimple,\n            allowExpression,\n            strictModeChanged,\n          );\n\n          // Ensure the function name isn't a forbidden identifier in strict mode, e.g. 'eval'\n          if (this.state.strict && node.id) {\n            this.checkIdentifier(node.id, BIND_OUTSIDE, strictModeChanged);\n          }\n        },\n      );\n      this.prodParam.exit();\n      this.state.labels = oldLabels;\n    }\n    this.expressionScope.exit();\n  }\n\n  isSimpleParameter(node: N.Pattern | N.TSParameterProperty) {\n    return node.type === \"Identifier\";\n  }\n\n  isSimpleParamList(\n    params: $ReadOnlyArray<N.Pattern | N.TSParameterProperty>,\n  ): boolean {\n    for (let i = 0, len = params.length; i < len; i++) {\n      if (!this.isSimpleParameter(params[i])) return false;\n    }\n    return true;\n  }\n\n  checkParams(\n    node: N.Function,\n    allowDuplicates: boolean,\n    // eslint-disable-next-line no-unused-vars\n    isArrowFunction: ?boolean,\n    strictModeChanged?: boolean = true,\n  ): void {\n    const checkClashes = !allowDuplicates && new Set();\n    // We create a fake node with the \"ephemeral\" type `FormalParameters`[1]\n    // since we just store an array of parameters. Perhaps someday we can have\n    // something like class FormalParameters extends Array { ... }, which would\n    // also be helpful when traversing this node.\n    //\n    // 1. https://tc39.es/ecma262/#prod-FormalParameters\n    const formalParameters = { type: \"FormalParameters\" };\n    for (const param of node.params) {\n      this.checkLVal(param, {\n        in: formalParameters,\n        binding: BIND_VAR,\n        checkClashes,\n        strictModeChanged,\n      });\n    }\n  }\n\n  // Parses a comma-separated list of expressions, and returns them as\n  // an array. `close` is the token type that ends the list, and\n  // `allowEmpty` can be turned on to allow subsequent commas with\n  // nothing in between them to be parsed as `null` (which is needed\n  // for array literals).\n\n  parseExprList(\n    close: TokenType,\n    allowEmpty?: boolean,\n    refExpressionErrors?: ?ExpressionErrors,\n    nodeForExtra?: ?N.Node,\n  ): $ReadOnlyArray<?N.Expression> {\n    const elts = [];\n    let first = true;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n        if (this.match(close)) {\n          if (nodeForExtra) {\n            this.addTrailingCommaExtraToNode(nodeForExtra);\n          }\n          this.next();\n          break;\n        }\n      }\n\n      elts.push(this.parseExprListItem(allowEmpty, refExpressionErrors));\n    }\n    return elts;\n  }\n\n  parseExprListItem(\n    allowEmpty: ?boolean,\n    refExpressionErrors?: ?ExpressionErrors,\n    allowPlaceholder: ?boolean,\n  ): ?N.Expression {\n    let elt;\n    if (this.match(tt.comma)) {\n      if (!allowEmpty) {\n        this.raise(Errors.UnexpectedToken, {\n          at: this.state.curPosition(),\n          unexpected: \",\",\n        });\n      }\n      elt = null;\n    } else if (this.match(tt.ellipsis)) {\n      const spreadNodeStartPos = this.state.start;\n      const spreadNodeStartLoc = this.state.startLoc;\n\n      elt = this.parseParenItem(\n        this.parseSpread(refExpressionErrors),\n        spreadNodeStartPos,\n        spreadNodeStartLoc,\n      );\n    } else if (this.match(tt.question)) {\n      this.expectPlugin(\"partialApplication\");\n      if (!allowPlaceholder) {\n        this.raise(Errors.UnexpectedArgumentPlaceholder, {\n          at: this.state.startLoc,\n        });\n      }\n      const node = this.startNode();\n      this.next();\n      elt = this.finishNode(node, \"ArgumentPlaceholder\");\n    } else {\n      elt = this.parseMaybeAssignAllowIn(\n        refExpressionErrors,\n        this.parseParenItem,\n      );\n    }\n    return elt;\n  }\n\n  // Parse the next token as an identifier. If `liberal` is true (used\n  // when parsing properties), it will also convert keywords into\n  // identifiers.\n  // This shouldn't be used to parse the keywords of meta properties, since they\n  // are not identifiers and cannot contain escape sequences.\n\n  parseIdentifier(liberal?: boolean): N.Identifier {\n    const node = this.startNode();\n    const name = this.parseIdentifierName(node.start, liberal);\n\n    return this.createIdentifier(node, name);\n  }\n\n  createIdentifier(node: N.Identifier, name: string): N.Identifier {\n    node.name = name;\n    node.loc.identifierName = name;\n\n    return this.finishNode(node, \"Identifier\");\n  }\n\n  parseIdentifierName(pos: number, liberal?: boolean): string {\n    let name: string;\n\n    const { startLoc, type } = this.state;\n\n    if (tokenIsKeywordOrIdentifier(type)) {\n      name = this.state.value;\n    } else {\n      throw this.unexpected();\n    }\n\n    const tokenIsKeyword = tokenKeywordOrIdentifierIsKeyword(type);\n\n    if (liberal) {\n      // If the current token is not used as a keyword, set its type to \"tt.name\".\n      // This will prevent this.next() from throwing about unexpected escapes.\n      if (tokenIsKeyword) {\n        this.replaceToken(tt.name);\n      }\n    } else {\n      this.checkReservedWord(name, startLoc, tokenIsKeyword, false);\n    }\n\n    this.next();\n\n    return name;\n  }\n\n  checkReservedWord(\n    word: string,\n    startLoc: Position,\n    checkKeywords: boolean,\n    isBinding: boolean,\n  ): void {\n    // Every JavaScript reserved word is 10 characters or less.\n    if (word.length > 10) {\n      return;\n    }\n    // Most identifiers are not reservedWord-like, they don't need special\n    // treatments afterward, which very likely ends up throwing errors\n    if (!canBeReservedWord(word)) {\n      return;\n    }\n\n    if (word === \"yield\") {\n      if (this.prodParam.hasYield) {\n        this.raise(Errors.YieldBindingIdentifier, { at: startLoc });\n        return;\n      }\n    } else if (word === \"await\") {\n      if (this.prodParam.hasAwait) {\n        this.raise(Errors.AwaitBindingIdentifier, { at: startLoc });\n        return;\n      }\n\n      if (this.scope.inStaticBlock) {\n        this.raise(Errors.AwaitBindingIdentifierInStaticBlock, {\n          at: startLoc,\n        });\n        return;\n      }\n\n      this.expressionScope.recordAsyncArrowParametersError({ at: startLoc });\n    } else if (word === \"arguments\") {\n      if (this.scope.inClassAndNotInNonArrowFunction) {\n        this.raise(Errors.ArgumentsInClass, { at: startLoc });\n        return;\n      }\n    }\n\n    if (checkKeywords && isKeyword(word)) {\n      this.raise(Errors.UnexpectedKeyword, {\n        at: startLoc,\n        keyword: word,\n      });\n      return;\n    }\n\n    const reservedTest = !this.state.strict\n      ? isReservedWord\n      : isBinding\n      ? isStrictBindReservedWord\n      : isStrictReservedWord;\n\n    if (reservedTest(word, this.inModule)) {\n      this.raise(Errors.UnexpectedReservedWord, {\n        at: startLoc,\n        reservedWord: word,\n      });\n    }\n  }\n\n  isAwaitAllowed(): boolean {\n    if (this.prodParam.hasAwait) return true;\n    if (this.options.allowAwaitOutsideFunction && !this.scope.inFunction) {\n      return true;\n    }\n    return false;\n  }\n\n  // Parses await expression inside async function.\n\n  parseAwait(startPos: number, startLoc: Position): N.AwaitExpression {\n    const node = this.startNodeAt(startPos, startLoc);\n\n    this.expressionScope.recordParameterInitializerError(\n      Errors.AwaitExpressionFormalParameter,\n      { at: node },\n    );\n\n    if (this.eat(tt.star)) {\n      this.raise(Errors.ObsoleteAwaitStar, { at: node });\n    }\n\n    if (!this.scope.inFunction && !this.options.allowAwaitOutsideFunction) {\n      if (this.isAmbiguousAwait()) {\n        this.ambiguousScriptDifferentAst = true;\n      } else {\n        this.sawUnambiguousESM = true;\n      }\n    }\n\n    if (!this.state.soloAwait) {\n      node.argument = this.parseMaybeUnary(null, true);\n    }\n\n    return this.finishNode(node, \"AwaitExpression\");\n  }\n\n  isAmbiguousAwait(): boolean {\n    if (this.hasPrecedingLineBreak()) return true;\n    const { type } = this.state;\n    return (\n      // All the following expressions are ambiguous:\n      //   await + 0, await - 0, await ( 0 ), await [ 0 ], await / 0 /u, await ``\n      type === tt.plusMin ||\n      type === tt.parenL ||\n      type === tt.bracketL ||\n      tokenIsTemplate(type) ||\n      // Sometimes the tokenizer generates tt.slash for regexps, and this is\n      // handler by parseExprAtom\n      type === tt.regexp ||\n      type === tt.slash ||\n      // This code could be parsed both as a modulo operator or as an intrinsic:\n      //   await %x(0)\n      (this.hasPlugin(\"v8intrinsic\") && type === tt.modulo)\n    );\n  }\n\n  // Parses yield expression inside generator.\n\n  parseYield(): N.YieldExpression {\n    const node = this.startNode();\n\n    this.expressionScope.recordParameterInitializerError(\n      Errors.YieldInParameter,\n      { at: node },\n    );\n\n    this.next();\n    let delegating = false;\n    let argument = null;\n    if (!this.hasPrecedingLineBreak()) {\n      delegating = this.eat(tt.star);\n      switch (this.state.type) {\n        case tt.semi:\n        case tt.eof:\n        case tt.braceR:\n        case tt.parenR:\n        case tt.bracketR:\n        case tt.braceBarR:\n        case tt.colon:\n        case tt.comma:\n          // The above is the complete set of tokens that can\n          // follow an AssignmentExpression, and none of them\n          // can start an AssignmentExpression\n          if (!delegating) break;\n        /* fallthrough */\n        default:\n          argument = this.parseMaybeAssign();\n      }\n    }\n    node.delegate = delegating;\n    node.argument = argument;\n    return this.finishNode(node, \"YieldExpression\");\n  }\n\n  // Validates a pipeline (for any of the pipeline Babylon plugins) at the point\n  // of the infix operator `|>`.\n\n  checkPipelineAtInfixOperator(left: N.Expression, leftStartLoc: Position) {\n    if (this.hasPlugin([\"pipelineOperator\", { proposal: \"smart\" }])) {\n      if (left.type === \"SequenceExpression\") {\n        // Ensure that the pipeline head is not a comma-delimited\n        // sequence expression.\n        this.raise(Errors.PipelineHeadSequenceExpression, {\n          at: leftStartLoc,\n        });\n      }\n    }\n  }\n\n  parseSmartPipelineBodyInStyle(\n    childExpr: N.Expression,\n    startPos: number,\n    startLoc: Position,\n  ): N.PipelineBody {\n    const bodyNode = this.startNodeAt(startPos, startLoc);\n    if (this.isSimpleReference(childExpr)) {\n      bodyNode.callee = childExpr;\n      return this.finishNode(bodyNode, \"PipelineBareFunction\");\n    } else {\n      this.checkSmartPipeTopicBodyEarlyErrors(startLoc);\n      bodyNode.expression = childExpr;\n      return this.finishNode(bodyNode, \"PipelineTopicExpression\");\n    }\n  }\n\n  isSimpleReference(expression: N.Expression): boolean {\n    switch (expression.type) {\n      case \"MemberExpression\":\n        return (\n          !expression.computed && this.isSimpleReference(expression.object)\n        );\n      case \"Identifier\":\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  // This helper method is to be called immediately\n  // after a topic-style smart-mix pipe body is parsed.\n  // The `startLoc` is the starting position of the pipe body.\n\n  checkSmartPipeTopicBodyEarlyErrors(startLoc: Position): void {\n    // If the following token is invalidly `=>`, then throw a human-friendly error\n    // instead of something like 'Unexpected token, expected \";\"'.\n    // For example, `x => x |> y => #` (assuming `#` is the topic reference)\n    // groups into `x => (x |> y) => #`,\n    // and `(x |> y) => #` is an invalid arrow function.\n    // This is because smart-mix `|>` has tighter precedence than `=>`.\n    if (this.match(tt.arrow)) {\n      throw this.raise(Errors.PipelineBodyNoArrow, { at: this.state.startLoc });\n    }\n\n    // A topic-style smart-mix pipe body must use the topic reference at least once.\n    if (!this.topicReferenceWasUsedInCurrentContext()) {\n      this.raise(Errors.PipelineTopicUnused, { at: startLoc });\n    }\n  }\n\n  // Enable topic references from outer contexts within Hack-style pipe bodies.\n  // The function modifies the parser's topic-context state to enable or disable\n  // the use of topic references.\n  // The function then calls a callback, then resets the parser\n  // to the old topic-context state that it had before the function was called.\n\n  withTopicBindingContext<T>(callback: () => T): T {\n    const outerContextTopicState = this.state.topicContext;\n    this.state.topicContext = {\n      // Enable the use of the primary topic reference.\n      maxNumOfResolvableTopics: 1,\n      // Hide the use of any topic references from outer contexts.\n      maxTopicIndex: null,\n    };\n\n    try {\n      return callback();\n    } finally {\n      this.state.topicContext = outerContextTopicState;\n    }\n  }\n\n  // This helper method is used only with the deprecated smart-mix pipe proposal.\n  // Disables topic references from outer contexts within syntax constructs\n  // such as the bodies of iteration statements.\n  // The function modifies the parser's topic-context state to enable or disable\n  // the use of topic references with the smartPipelines plugin. They then run a\n  // callback, then they reset the parser to the old topic-context state that it\n  // had before the function was called.\n\n  withSmartMixTopicForbiddingContext<T>(callback: () => T): T {\n    if (this.hasPlugin([\"pipelineOperator\", { proposal: \"smart\" }])) {\n      // Reset the parser’s topic context only if the smart-mix pipe proposal is active.\n      const outerContextTopicState = this.state.topicContext;\n      this.state.topicContext = {\n        // Disable the use of the primary topic reference.\n        maxNumOfResolvableTopics: 0,\n        // Hide the use of any topic references from outer contexts.\n        maxTopicIndex: null,\n      };\n\n      try {\n        return callback();\n      } finally {\n        this.state.topicContext = outerContextTopicState;\n      }\n    } else {\n      // If the pipe proposal is \"minimal\", \"fsharp\", or \"hack\",\n      // or if no pipe proposal is active,\n      // then the callback result is returned\n      // without touching any extra parser state.\n      return callback();\n    }\n  }\n\n  withSoloAwaitPermittingContext<T>(callback: () => T): T {\n    const outerContextSoloAwaitState = this.state.soloAwait;\n    this.state.soloAwait = true;\n\n    try {\n      return callback();\n    } finally {\n      this.state.soloAwait = outerContextSoloAwaitState;\n    }\n  }\n\n  allowInAnd<T>(callback: () => T): T {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToSet = PARAM_IN & ~flags;\n    if (prodParamToSet) {\n      this.prodParam.enter(flags | PARAM_IN);\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n    return callback();\n  }\n\n  disallowInAnd<T>(callback: () => T): T {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToClear = PARAM_IN & flags;\n    if (prodParamToClear) {\n      this.prodParam.enter(flags & ~PARAM_IN);\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n    return callback();\n  }\n\n  // Register the use of a topic reference within the current\n  // topic-binding context.\n  registerTopicReference(): void {\n    this.state.topicContext.maxTopicIndex = 0;\n  }\n\n  topicReferenceIsAllowedInCurrentContext(): boolean {\n    return this.state.topicContext.maxNumOfResolvableTopics >= 1;\n  }\n\n  topicReferenceWasUsedInCurrentContext(): boolean {\n    return (\n      this.state.topicContext.maxTopicIndex != null &&\n      this.state.topicContext.maxTopicIndex >= 0\n    );\n  }\n\n  parseFSharpPipelineBody(prec: number): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    this.state.potentialArrowAt = this.state.start;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = true;\n\n    const ret = this.parseExprOp(\n      this.parseMaybeUnaryOrPrivate(),\n      startPos,\n      startLoc,\n      prec,\n    );\n\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n\n    return ret;\n  }\n\n  // https://github.com/tc39/proposal-js-module-blocks\n  parseModuleExpression(): N.ModuleExpression {\n    this.expectPlugin(\"moduleBlocks\");\n    const node = this.startNode<N.ModuleExpression>();\n    this.next(); // eat \"module\"\n    this.eat(tt.braceL);\n\n    const revertScopes = this.initializeScopes(/** inModule */ true);\n    this.enterInitialScopes();\n\n    const program = this.startNode<N.Program>();\n    try {\n      node.body = this.parseProgram(program, tt.braceR, \"module\");\n    } finally {\n      revertScopes();\n    }\n    this.eat(tt.braceR);\n    return this.finishNode<N.ModuleExpression>(node, \"ModuleExpression\");\n  }\n\n  // Used in Flow plugin\n  parsePropertyNamePrefixOperator(\n    // eslint-disable-next-line no-unused-vars\n    prop: N.ObjectOrClassMember | N.ClassMember,\n  ): void {}\n}\n","// @flow\n\nimport type { Options } from \"../options\";\nimport type State from \"../tokenizer/state\";\nimport type { PluginsMap } from \"./index\";\nimport type ScopeHandler from \"../util/scope\";\nimport type ExpressionScopeHandler from \"../util/expression-scope\";\nimport type ClassScopeHandler from \"../util/class-scope\";\nimport type ProductionParameterHandler from \"../util/production-parameter\";\n\nexport default class BaseParser {\n  // Properties set by constructor in index.js\n  declare options: Options;\n  declare inModule: boolean;\n  declare scope: ScopeHandler<*>;\n  declare classScope: ClassScopeHandler;\n  declare prodParam: ProductionParameterHandler;\n  declare expressionScope: ExpressionScopeHandler;\n  declare plugins: PluginsMap;\n  declare filename: ?string;\n  // Names of exports store. `default` is stored as a name for both\n  // `export default foo;` and `export { foo as default };`.\n  declare exportedIdentifiers: Set<string>;\n  sawUnambiguousESM: boolean = false;\n  ambiguousScriptDifferentAst: boolean = false;\n\n  // Initialized by Tokenizer\n  declare state: State;\n  // input and length are not in state as they are constant and we do\n  // not want to ever copy them, which happens if state gets cloned\n  declare input: string;\n  declare length: number;\n\n  // This method accepts either a string (plugin name) or an array pair\n  // (plugin name and options object). If an options object is given,\n  // then each value is non-recursively checked for identity with that\n  // plugin’s actual option value.\n  hasPlugin(pluginConfig: PluginConfig): boolean {\n    if (typeof pluginConfig === \"string\") {\n      return this.plugins.has(pluginConfig);\n    } else {\n      const [pluginName, pluginOptions] = pluginConfig;\n      if (!this.hasPlugin(pluginName)) {\n        return false;\n      }\n      const actualOptions = this.plugins.get(pluginName);\n      for (const key of Object.keys(pluginOptions)) {\n        if (actualOptions?.[key] !== pluginOptions[key]) {\n          return false;\n        }\n      }\n      return true;\n    }\n  }\n\n  getPluginOption(plugin: string, name: string) {\n    return this.plugins.get(plugin)?.[name];\n  }\n}\n\nexport type PluginConfig = string | [string, { [string]: any }];\n","// @flow\n\nimport { type Options } from \"./options\";\nimport {\n  hasPlugin,\n  validatePlugins,\n  mixinPluginNames,\n  mixinPlugins,\n  type PluginList,\n} from \"./plugin-utils\";\nimport Parser from \"./parser\";\n\nimport { getExportedToken, tt as internalTokenTypes } from \"./tokenizer/types\";\nimport \"./tokenizer/context\";\n\nimport type { Expression, File } from \"./types\";\n\nexport function parse(input: string, options?: Options): File {\n  if (options?.sourceType === \"unambiguous\") {\n    options = {\n      ...options,\n    };\n    try {\n      options.sourceType = \"module\";\n      const parser = getParser(options, input);\n      const ast = parser.parse();\n\n      if (parser.sawUnambiguousESM) {\n        return ast;\n      }\n\n      if (parser.ambiguousScriptDifferentAst) {\n        // Top level await introduces code which can be both a valid script and\n        // a valid module, but which produces different ASTs:\n        //    await\n        //    0\n        // can be parsed either as an AwaitExpression, or as two ExpressionStatements.\n        try {\n          options.sourceType = \"script\";\n          return getParser(options, input).parse();\n        } catch {}\n      } else {\n        // This is both a valid module and a valid script, but\n        // we parse it as a script by default\n        ast.program.sourceType = \"script\";\n      }\n\n      return ast;\n    } catch (moduleError) {\n      try {\n        options.sourceType = \"script\";\n        return getParser(options, input).parse();\n      } catch {}\n\n      throw moduleError;\n    }\n  } else {\n    return getParser(options, input).parse();\n  }\n}\n\nexport function parseExpression(input: string, options?: Options): Expression {\n  const parser = getParser(options, input);\n  if (parser.options.strictMode) {\n    parser.state.strict = true;\n  }\n  return parser.getExpression();\n}\n\nfunction generateExportedTokenTypes(internalTokenTypes) {\n  const tokenTypes = {};\n  for (const typeName of Object.keys(internalTokenTypes)) {\n    tokenTypes[typeName] = getExportedToken(internalTokenTypes[typeName]);\n  }\n  return tokenTypes;\n}\n\nexport const tokTypes = generateExportedTokenTypes(internalTokenTypes);\n\nfunction getParser(options: ?Options, input: string): Parser {\n  let cls = Parser;\n  if (options?.plugins) {\n    validatePlugins(options.plugins);\n    cls = getParserClass(options.plugins);\n  }\n\n  return new cls(options, input);\n}\n\nconst parserClassCache: { [key: string]: Class<Parser> } = {};\n\n/** Get a Parser class with plugins applied. */\nfunction getParserClass(pluginsFromOptions: PluginList): Class<Parser> {\n  const pluginList = mixinPluginNames.filter(name =>\n    hasPlugin(pluginsFromOptions, name),\n  );\n\n  const key = pluginList.join(\"/\");\n  let cls = parserClassCache[key];\n  if (!cls) {\n    cls = Parser;\n    for (const plugin of pluginList) {\n      cls = mixinPlugins[plugin](cls);\n    }\n    parserClassCache[key] = cls;\n  }\n  return cls;\n}\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar _exportNames = {\n  react: true,\n  assertNode: true,\n  createTypeAnnotationBasedOnTypeof: true,\n  createUnionTypeAnnotation: true,\n  createFlowUnionType: true,\n  createTSUnionType: true,\n  cloneNode: true,\n  clone: true,\n  cloneDeep: true,\n  cloneDeepWithoutLoc: true,\n  cloneWithoutLoc: true,\n  addComment: true,\n  addComments: true,\n  inheritInnerComments: true,\n  inheritLeadingComments: true,\n  inheritsComments: true,\n  inheritTrailingComments: true,\n  removeComments: true,\n  ensureBlock: true,\n  toBindingIdentifierName: true,\n  toBlock: true,\n  toComputedKey: true,\n  toExpression: true,\n  toIdentifier: true,\n  toKeyAlias: true,\n  toSequenceExpression: true,\n  toStatement: true,\n  valueToNode: true,\n  appendToMemberExpression: true,\n  inherits: true,\n  prependToMemberExpression: true,\n  removeProperties: true,\n  removePropertiesDeep: true,\n  removeTypeDuplicates: true,\n  getBindingIdentifiers: true,\n  getOuterBindingIdentifiers: true,\n  traverse: true,\n  traverseFast: true,\n  shallowEqual: true,\n  is: true,\n  isBinding: true,\n  isBlockScoped: true,\n  isImmutable: true,\n  isLet: true,\n  isNode: true,\n  isNodesEquivalent: true,\n  isPlaceholderType: true,\n  isReferenced: true,\n  isScope: true,\n  isSpecifierDefault: true,\n  isType: true,\n  isValidES3Identifier: true,\n  isValidIdentifier: true,\n  isVar: true,\n  matchesPattern: true,\n  validate: true,\n  buildMatchMemberExpression: true\n};\nObject.defineProperty(exports, \"addComment\", {\n  enumerable: true,\n  get: function () {\n    return _addComment.default;\n  }\n});\nObject.defineProperty(exports, \"addComments\", {\n  enumerable: true,\n  get: function () {\n    return _addComments.default;\n  }\n});\nObject.defineProperty(exports, \"appendToMemberExpression\", {\n  enumerable: true,\n  get: function () {\n    return _appendToMemberExpression.default;\n  }\n});\nObject.defineProperty(exports, \"assertNode\", {\n  enumerable: true,\n  get: function () {\n    return _assertNode.default;\n  }\n});\nObject.defineProperty(exports, \"buildMatchMemberExpression\", {\n  enumerable: true,\n  get: function () {\n    return _buildMatchMemberExpression.default;\n  }\n});\nObject.defineProperty(exports, \"clone\", {\n  enumerable: true,\n  get: function () {\n    return _clone.default;\n  }\n});\nObject.defineProperty(exports, \"cloneDeep\", {\n  enumerable: true,\n  get: function () {\n    return _cloneDeep.default;\n  }\n});\nObject.defineProperty(exports, \"cloneDeepWithoutLoc\", {\n  enumerable: true,\n  get: function () {\n    return _cloneDeepWithoutLoc.default;\n  }\n});\nObject.defineProperty(exports, \"cloneNode\", {\n  enumerable: true,\n  get: function () {\n    return _cloneNode.default;\n  }\n});\nObject.defineProperty(exports, \"cloneWithoutLoc\", {\n  enumerable: true,\n  get: function () {\n    return _cloneWithoutLoc.default;\n  }\n});\nObject.defineProperty(exports, \"createFlowUnionType\", {\n  enumerable: true,\n  get: function () {\n    return _createFlowUnionType.default;\n  }\n});\nObject.defineProperty(exports, \"createTSUnionType\", {\n  enumerable: true,\n  get: function () {\n    return _createTSUnionType.default;\n  }\n});\nObject.defineProperty(exports, \"createTypeAnnotationBasedOnTypeof\", {\n  enumerable: true,\n  get: function () {\n    return _createTypeAnnotationBasedOnTypeof.default;\n  }\n});\nObject.defineProperty(exports, \"createUnionTypeAnnotation\", {\n  enumerable: true,\n  get: function () {\n    return _createFlowUnionType.default;\n  }\n});\nObject.defineProperty(exports, \"ensureBlock\", {\n  enumerable: true,\n  get: function () {\n    return _ensureBlock.default;\n  }\n});\nObject.defineProperty(exports, \"getBindingIdentifiers\", {\n  enumerable: true,\n  get: function () {\n    return _getBindingIdentifiers.default;\n  }\n});\nObject.defineProperty(exports, \"getOuterBindingIdentifiers\", {\n  enumerable: true,\n  get: function () {\n    return _getOuterBindingIdentifiers.default;\n  }\n});\nObject.defineProperty(exports, \"inheritInnerComments\", {\n  enumerable: true,\n  get: function () {\n    return _inheritInnerComments.default;\n  }\n});\nObject.defineProperty(exports, \"inheritLeadingComments\", {\n  enumerable: true,\n  get: function () {\n    return _inheritLeadingComments.default;\n  }\n});\nObject.defineProperty(exports, \"inheritTrailingComments\", {\n  enumerable: true,\n  get: function () {\n    return _inheritTrailingComments.default;\n  }\n});\nObject.defineProperty(exports, \"inherits\", {\n  enumerable: true,\n  get: function () {\n    return _inherits.default;\n  }\n});\nObject.defineProperty(exports, \"inheritsComments\", {\n  enumerable: true,\n  get: function () {\n    return _inheritsComments.default;\n  }\n});\nObject.defineProperty(exports, \"is\", {\n  enumerable: true,\n  get: function () {\n    return _is.default;\n  }\n});\nObject.defineProperty(exports, \"isBinding\", {\n  enumerable: true,\n  get: function () {\n    return _isBinding.default;\n  }\n});\nObject.defineProperty(exports, \"isBlockScoped\", {\n  enumerable: true,\n  get: function () {\n    return _isBlockScoped.default;\n  }\n});\nObject.defineProperty(exports, \"isImmutable\", {\n  enumerable: true,\n  get: function () {\n    return _isImmutable.default;\n  }\n});\nObject.defineProperty(exports, \"isLet\", {\n  enumerable: true,\n  get: function () {\n    return _isLet.default;\n  }\n});\nObject.defineProperty(exports, \"isNode\", {\n  enumerable: true,\n  get: function () {\n    return _isNode.default;\n  }\n});\nObject.defineProperty(exports, \"isNodesEquivalent\", {\n  enumerable: true,\n  get: function () {\n    return _isNodesEquivalent.default;\n  }\n});\nObject.defineProperty(exports, \"isPlaceholderType\", {\n  enumerable: true,\n  get: function () {\n    return _isPlaceholderType.default;\n  }\n});\nObject.defineProperty(exports, \"isReferenced\", {\n  enumerable: true,\n  get: function () {\n    return _isReferenced.default;\n  }\n});\nObject.defineProperty(exports, \"isScope\", {\n  enumerable: true,\n  get: function () {\n    return _isScope.default;\n  }\n});\nObject.defineProperty(exports, \"isSpecifierDefault\", {\n  enumerable: true,\n  get: function () {\n    return _isSpecifierDefault.default;\n  }\n});\nObject.defineProperty(exports, \"isType\", {\n  enumerable: true,\n  get: function () {\n    return _isType.default;\n  }\n});\nObject.defineProperty(exports, \"isValidES3Identifier\", {\n  enumerable: true,\n  get: function () {\n    return _isValidES3Identifier.default;\n  }\n});\nObject.defineProperty(exports, \"isValidIdentifier\", {\n  enumerable: true,\n  get: function () {\n    return _isValidIdentifier.default;\n  }\n});\nObject.defineProperty(exports, \"isVar\", {\n  enumerable: true,\n  get: function () {\n    return _isVar.default;\n  }\n});\nObject.defineProperty(exports, \"matchesPattern\", {\n  enumerable: true,\n  get: function () {\n    return _matchesPattern.default;\n  }\n});\nObject.defineProperty(exports, \"prependToMemberExpression\", {\n  enumerable: true,\n  get: function () {\n    return _prependToMemberExpression.default;\n  }\n});\nexports.react = void 0;\nObject.defineProperty(exports, \"removeComments\", {\n  enumerable: true,\n  get: function () {\n    return _removeComments.default;\n  }\n});\nObject.defineProperty(exports, \"removeProperties\", {\n  enumerable: true,\n  get: function () {\n    return _removeProperties.default;\n  }\n});\nObject.defineProperty(exports, \"removePropertiesDeep\", {\n  enumerable: true,\n  get: function () {\n    return _removePropertiesDeep.default;\n  }\n});\nObject.defineProperty(exports, \"removeTypeDuplicates\", {\n  enumerable: true,\n  get: function () {\n    return _removeTypeDuplicates.default;\n  }\n});\nObject.defineProperty(exports, \"shallowEqual\", {\n  enumerable: true,\n  get: function () {\n    return _shallowEqual.default;\n  }\n});\nObject.defineProperty(exports, \"toBindingIdentifierName\", {\n  enumerable: true,\n  get: function () {\n    return _toBindingIdentifierName.default;\n  }\n});\nObject.defineProperty(exports, \"toBlock\", {\n  enumerable: true,\n  get: function () {\n    return _toBlock.default;\n  }\n});\nObject.defineProperty(exports, \"toComputedKey\", {\n  enumerable: true,\n  get: function () {\n    return _toComputedKey.default;\n  }\n});\nObject.defineProperty(exports, \"toExpression\", {\n  enumerable: true,\n  get: function () {\n    return _toExpression.default;\n  }\n});\nObject.defineProperty(exports, \"toIdentifier\", {\n  enumerable: true,\n  get: function () {\n    return _toIdentifier.default;\n  }\n});\nObject.defineProperty(exports, \"toKeyAlias\", {\n  enumerable: true,\n  get: function () {\n    return _toKeyAlias.default;\n  }\n});\nObject.defineProperty(exports, \"toSequenceExpression\", {\n  enumerable: true,\n  get: function () {\n    return _toSequenceExpression.default;\n  }\n});\nObject.defineProperty(exports, \"toStatement\", {\n  enumerable: true,\n  get: function () {\n    return _toStatement.default;\n  }\n});\nObject.defineProperty(exports, \"traverse\", {\n  enumerable: true,\n  get: function () {\n    return _traverse.default;\n  }\n});\nObject.defineProperty(exports, \"traverseFast\", {\n  enumerable: true,\n  get: function () {\n    return _traverseFast.default;\n  }\n});\nObject.defineProperty(exports, \"validate\", {\n  enumerable: true,\n  get: function () {\n    return _validate.default;\n  }\n});\nObject.defineProperty(exports, \"valueToNode\", {\n  enumerable: true,\n  get: function () {\n    return _valueToNode.default;\n  }\n});\n\nvar _isReactComponent = require(\"./validators/react/isReactComponent\");\n\nvar _isCompatTag = require(\"./validators/react/isCompatTag\");\n\nvar _buildChildren = require(\"./builders/react/buildChildren\");\n\nvar _assertNode = require(\"./asserts/assertNode\");\n\nvar _generated = require(\"./asserts/generated\");\n\nObject.keys(_generated).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  if (key in exports && exports[key] === _generated[key]) return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function () {\n      return _generated[key];\n    }\n  });\n});\n\nvar _createTypeAnnotationBasedOnTypeof = require(\"./builders/flow/createTypeAnnotationBasedOnTypeof\");\n\nvar _createFlowUnionType = require(\"./builders/flow/createFlowUnionType\");\n\nvar _createTSUnionType = require(\"./builders/typescript/createTSUnionType\");\n\nvar _generated2 = require(\"./builders/generated\");\n\nObject.keys(_generated2).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  if (key in exports && exports[key] === _generated2[key]) return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function () {\n      return _generated2[key];\n    }\n  });\n});\n\nvar _uppercase = require(\"./builders/generated/uppercase\");\n\nObject.keys(_uppercase).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  if (key in exports && exports[key] === _uppercase[key]) return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function () {\n      return _uppercase[key];\n    }\n  });\n});\n\nvar _cloneNode = require(\"./clone/cloneNode\");\n\nvar _clone = require(\"./clone/clone\");\n\nvar _cloneDeep = require(\"./clone/cloneDeep\");\n\nvar _cloneDeepWithoutLoc = require(\"./clone/cloneDeepWithoutLoc\");\n\nvar _cloneWithoutLoc = require(\"./clone/cloneWithoutLoc\");\n\nvar _addComment = require(\"./comments/addComment\");\n\nvar _addComments = require(\"./comments/addComments\");\n\nvar _inheritInnerComments = require(\"./comments/inheritInnerComments\");\n\nvar _inheritLeadingComments = require(\"./comments/inheritLeadingComments\");\n\nvar _inheritsComments = require(\"./comments/inheritsComments\");\n\nvar _inheritTrailingComments = require(\"./comments/inheritTrailingComments\");\n\nvar _removeComments = require(\"./comments/removeComments\");\n\nvar _generated3 = require(\"./constants/generated\");\n\nObject.keys(_generated3).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  if (key in exports && exports[key] === _generated3[key]) return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function () {\n      return _generated3[key];\n    }\n  });\n});\n\nvar _constants = require(\"./constants\");\n\nObject.keys(_constants).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  if (key in exports && exports[key] === _constants[key]) return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function () {\n      return _constants[key];\n    }\n  });\n});\n\nvar _ensureBlock = require(\"./converters/ensureBlock\");\n\nvar _toBindingIdentifierName = require(\"./converters/toBindingIdentifierName\");\n\nvar _toBlock = require(\"./converters/toBlock\");\n\nvar _toComputedKey = require(\"./converters/toComputedKey\");\n\nvar _toExpression = require(\"./converters/toExpression\");\n\nvar _toIdentifier = require(\"./converters/toIdentifier\");\n\nvar _toKeyAlias = require(\"./converters/toKeyAlias\");\n\nvar _toSequenceExpression = require(\"./converters/toSequenceExpression\");\n\nvar _toStatement = require(\"./converters/toStatement\");\n\nvar _valueToNode = require(\"./converters/valueToNode\");\n\nvar _definitions = require(\"./definitions\");\n\nObject.keys(_definitions).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  if (key in exports && exports[key] === _definitions[key]) return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function () {\n      return _definitions[key];\n    }\n  });\n});\n\nvar _appendToMemberExpression = require(\"./modifications/appendToMemberExpression\");\n\nvar _inherits = require(\"./modifications/inherits\");\n\nvar _prependToMemberExpression = require(\"./modifications/prependToMemberExpression\");\n\nvar _removeProperties = require(\"./modifications/removeProperties\");\n\nvar _removePropertiesDeep = require(\"./modifications/removePropertiesDeep\");\n\nvar _removeTypeDuplicates = require(\"./modifications/flow/removeTypeDuplicates\");\n\nvar _getBindingIdentifiers = require(\"./retrievers/getBindingIdentifiers\");\n\nvar _getOuterBindingIdentifiers = require(\"./retrievers/getOuterBindingIdentifiers\");\n\nvar _traverse = require(\"./traverse/traverse\");\n\nObject.keys(_traverse).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  if (key in exports && exports[key] === _traverse[key]) return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function () {\n      return _traverse[key];\n    }\n  });\n});\n\nvar _traverseFast = require(\"./traverse/traverseFast\");\n\nvar _shallowEqual = require(\"./utils/shallowEqual\");\n\nvar _is = require(\"./validators/is\");\n\nvar _isBinding = require(\"./validators/isBinding\");\n\nvar _isBlockScoped = require(\"./validators/isBlockScoped\");\n\nvar _isImmutable = require(\"./validators/isImmutable\");\n\nvar _isLet = require(\"./validators/isLet\");\n\nvar _isNode = require(\"./validators/isNode\");\n\nvar _isNodesEquivalent = require(\"./validators/isNodesEquivalent\");\n\nvar _isPlaceholderType = require(\"./validators/isPlaceholderType\");\n\nvar _isReferenced = require(\"./validators/isReferenced\");\n\nvar _isScope = require(\"./validators/isScope\");\n\nvar _isSpecifierDefault = require(\"./validators/isSpecifierDefault\");\n\nvar _isType = require(\"./validators/isType\");\n\nvar _isValidES3Identifier = require(\"./validators/isValidES3Identifier\");\n\nvar _isValidIdentifier = require(\"./validators/isValidIdentifier\");\n\nvar _isVar = require(\"./validators/isVar\");\n\nvar _matchesPattern = require(\"./validators/matchesPattern\");\n\nvar _validate = require(\"./validators/validate\");\n\nvar _buildMatchMemberExpression = require(\"./validators/buildMatchMemberExpression\");\n\nvar _generated4 = require(\"./validators/generated\");\n\nObject.keys(_generated4).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  if (key in exports && exports[key] === _generated4[key]) return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function () {\n      return _generated4[key];\n    }\n  });\n});\n\nvar _generated5 = require(\"./ast-types/generated\");\n\nObject.keys(_generated5).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  if (key in exports && exports[key] === _generated5[key]) return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function () {\n      return _generated5[key];\n    }\n  });\n});\nconst react = {\n  isReactComponent: _isReactComponent.default,\n  isCompatTag: _isCompatTag.default,\n  buildChildren: _buildChildren.default\n};\nexports.react = react;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _buildMatchMemberExpression = require(\"../buildMatchMemberExpression\");\n\nconst isReactComponent = (0, _buildMatchMemberExpression.default)(\"React.Component\");\nvar _default = isReactComponent;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = buildMatchMemberExpression;\n\nvar _matchesPattern = require(\"./matchesPattern\");\n\nfunction buildMatchMemberExpression(match, allowPartial) {\n  const parts = match.split(\".\");\n  return member => (0, _matchesPattern.default)(member, parts, allowPartial);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = matchesPattern;\n\nvar _generated = require(\"./generated\");\n\nfunction matchesPattern(member, match, allowPartial) {\n  if (!(0, _generated.isMemberExpression)(member)) return false;\n  const parts = Array.isArray(match) ? match : match.split(\".\");\n  const nodes = [];\n  let node;\n\n  for (node = member; (0, _generated.isMemberExpression)(node); node = node.object) {\n    nodes.push(node.property);\n  }\n\n  nodes.push(node);\n  if (nodes.length < parts.length) return false;\n  if (!allowPartial && nodes.length > parts.length) return false;\n\n  for (let i = 0, j = nodes.length - 1; i < parts.length; i++, j--) {\n    const node = nodes[j];\n    let value;\n\n    if ((0, _generated.isIdentifier)(node)) {\n      value = node.name;\n    } else if ((0, _generated.isStringLiteral)(node)) {\n      value = node.value;\n    } else if ((0, _generated.isThisExpression)(node)) {\n      value = \"this\";\n    } else {\n      return false;\n    }\n\n    if (parts[i] !== value) return false;\n  }\n\n  return true;\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isAccessor = isAccessor;\nexports.isAnyTypeAnnotation = isAnyTypeAnnotation;\nexports.isArgumentPlaceholder = isArgumentPlaceholder;\nexports.isArrayExpression = isArrayExpression;\nexports.isArrayPattern = isArrayPattern;\nexports.isArrayTypeAnnotation = isArrayTypeAnnotation;\nexports.isArrowFunctionExpression = isArrowFunctionExpression;\nexports.isAssignmentExpression = isAssignmentExpression;\nexports.isAssignmentPattern = isAssignmentPattern;\nexports.isAwaitExpression = isAwaitExpression;\nexports.isBigIntLiteral = isBigIntLiteral;\nexports.isBinary = isBinary;\nexports.isBinaryExpression = isBinaryExpression;\nexports.isBindExpression = isBindExpression;\nexports.isBlock = isBlock;\nexports.isBlockParent = isBlockParent;\nexports.isBlockStatement = isBlockStatement;\nexports.isBooleanLiteral = isBooleanLiteral;\nexports.isBooleanLiteralTypeAnnotation = isBooleanLiteralTypeAnnotation;\nexports.isBooleanTypeAnnotation = isBooleanTypeAnnotation;\nexports.isBreakStatement = isBreakStatement;\nexports.isCallExpression = isCallExpression;\nexports.isCatchClause = isCatchClause;\nexports.isClass = isClass;\nexports.isClassAccessorProperty = isClassAccessorProperty;\nexports.isClassBody = isClassBody;\nexports.isClassDeclaration = isClassDeclaration;\nexports.isClassExpression = isClassExpression;\nexports.isClassImplements = isClassImplements;\nexports.isClassMethod = isClassMethod;\nexports.isClassPrivateMethod = isClassPrivateMethod;\nexports.isClassPrivateProperty = isClassPrivateProperty;\nexports.isClassProperty = isClassProperty;\nexports.isCompletionStatement = isCompletionStatement;\nexports.isConditional = isConditional;\nexports.isConditionalExpression = isConditionalExpression;\nexports.isContinueStatement = isContinueStatement;\nexports.isDebuggerStatement = isDebuggerStatement;\nexports.isDecimalLiteral = isDecimalLiteral;\nexports.isDeclaration = isDeclaration;\nexports.isDeclareClass = isDeclareClass;\nexports.isDeclareExportAllDeclaration = isDeclareExportAllDeclaration;\nexports.isDeclareExportDeclaration = isDeclareExportDeclaration;\nexports.isDeclareFunction = isDeclareFunction;\nexports.isDeclareInterface = isDeclareInterface;\nexports.isDeclareModule = isDeclareModule;\nexports.isDeclareModuleExports = isDeclareModuleExports;\nexports.isDeclareOpaqueType = isDeclareOpaqueType;\nexports.isDeclareTypeAlias = isDeclareTypeAlias;\nexports.isDeclareVariable = isDeclareVariable;\nexports.isDeclaredPredicate = isDeclaredPredicate;\nexports.isDecorator = isDecorator;\nexports.isDirective = isDirective;\nexports.isDirectiveLiteral = isDirectiveLiteral;\nexports.isDoExpression = isDoExpression;\nexports.isDoWhileStatement = isDoWhileStatement;\nexports.isEmptyStatement = isEmptyStatement;\nexports.isEmptyTypeAnnotation = isEmptyTypeAnnotation;\nexports.isEnumBody = isEnumBody;\nexports.isEnumBooleanBody = isEnumBooleanBody;\nexports.isEnumBooleanMember = isEnumBooleanMember;\nexports.isEnumDeclaration = isEnumDeclaration;\nexports.isEnumDefaultedMember = isEnumDefaultedMember;\nexports.isEnumMember = isEnumMember;\nexports.isEnumNumberBody = isEnumNumberBody;\nexports.isEnumNumberMember = isEnumNumberMember;\nexports.isEnumStringBody = isEnumStringBody;\nexports.isEnumStringMember = isEnumStringMember;\nexports.isEnumSymbolBody = isEnumSymbolBody;\nexports.isExistsTypeAnnotation = isExistsTypeAnnotation;\nexports.isExportAllDeclaration = isExportAllDeclaration;\nexports.isExportDeclaration = isExportDeclaration;\nexports.isExportDefaultDeclaration = isExportDefaultDeclaration;\nexports.isExportDefaultSpecifier = isExportDefaultSpecifier;\nexports.isExportNamedDeclaration = isExportNamedDeclaration;\nexports.isExportNamespaceSpecifier = isExportNamespaceSpecifier;\nexports.isExportSpecifier = isExportSpecifier;\nexports.isExpression = isExpression;\nexports.isExpressionStatement = isExpressionStatement;\nexports.isExpressionWrapper = isExpressionWrapper;\nexports.isFile = isFile;\nexports.isFlow = isFlow;\nexports.isFlowBaseAnnotation = isFlowBaseAnnotation;\nexports.isFlowDeclaration = isFlowDeclaration;\nexports.isFlowPredicate = isFlowPredicate;\nexports.isFlowType = isFlowType;\nexports.isFor = isFor;\nexports.isForInStatement = isForInStatement;\nexports.isForOfStatement = isForOfStatement;\nexports.isForStatement = isForStatement;\nexports.isForXStatement = isForXStatement;\nexports.isFunction = isFunction;\nexports.isFunctionDeclaration = isFunctionDeclaration;\nexports.isFunctionExpression = isFunctionExpression;\nexports.isFunctionParent = isFunctionParent;\nexports.isFunctionTypeAnnotation = isFunctionTypeAnnotation;\nexports.isFunctionTypeParam = isFunctionTypeParam;\nexports.isGenericTypeAnnotation = isGenericTypeAnnotation;\nexports.isIdentifier = isIdentifier;\nexports.isIfStatement = isIfStatement;\nexports.isImmutable = isImmutable;\nexports.isImport = isImport;\nexports.isImportAttribute = isImportAttribute;\nexports.isImportDeclaration = isImportDeclaration;\nexports.isImportDefaultSpecifier = isImportDefaultSpecifier;\nexports.isImportNamespaceSpecifier = isImportNamespaceSpecifier;\nexports.isImportSpecifier = isImportSpecifier;\nexports.isIndexedAccessType = isIndexedAccessType;\nexports.isInferredPredicate = isInferredPredicate;\nexports.isInterfaceDeclaration = isInterfaceDeclaration;\nexports.isInterfaceExtends = isInterfaceExtends;\nexports.isInterfaceTypeAnnotation = isInterfaceTypeAnnotation;\nexports.isInterpreterDirective = isInterpreterDirective;\nexports.isIntersectionTypeAnnotation = isIntersectionTypeAnnotation;\nexports.isJSX = isJSX;\nexports.isJSXAttribute = isJSXAttribute;\nexports.isJSXClosingElement = isJSXClosingElement;\nexports.isJSXClosingFragment = isJSXClosingFragment;\nexports.isJSXElement = isJSXElement;\nexports.isJSXEmptyExpression = isJSXEmptyExpression;\nexports.isJSXExpressionContainer = isJSXExpressionContainer;\nexports.isJSXFragment = isJSXFragment;\nexports.isJSXIdentifier = isJSXIdentifier;\nexports.isJSXMemberExpression = isJSXMemberExpression;\nexports.isJSXNamespacedName = isJSXNamespacedName;\nexports.isJSXOpeningElement = isJSXOpeningElement;\nexports.isJSXOpeningFragment = isJSXOpeningFragment;\nexports.isJSXSpreadAttribute = isJSXSpreadAttribute;\nexports.isJSXSpreadChild = isJSXSpreadChild;\nexports.isJSXText = isJSXText;\nexports.isLVal = isLVal;\nexports.isLabeledStatement = isLabeledStatement;\nexports.isLiteral = isLiteral;\nexports.isLogicalExpression = isLogicalExpression;\nexports.isLoop = isLoop;\nexports.isMemberExpression = isMemberExpression;\nexports.isMetaProperty = isMetaProperty;\nexports.isMethod = isMethod;\nexports.isMiscellaneous = isMiscellaneous;\nexports.isMixedTypeAnnotation = isMixedTypeAnnotation;\nexports.isModuleDeclaration = isModuleDeclaration;\nexports.isModuleExpression = isModuleExpression;\nexports.isModuleSpecifier = isModuleSpecifier;\nexports.isNewExpression = isNewExpression;\nexports.isNoop = isNoop;\nexports.isNullLiteral = isNullLiteral;\nexports.isNullLiteralTypeAnnotation = isNullLiteralTypeAnnotation;\nexports.isNullableTypeAnnotation = isNullableTypeAnnotation;\nexports.isNumberLiteral = isNumberLiteral;\nexports.isNumberLiteralTypeAnnotation = isNumberLiteralTypeAnnotation;\nexports.isNumberTypeAnnotation = isNumberTypeAnnotation;\nexports.isNumericLiteral = isNumericLiteral;\nexports.isObjectExpression = isObjectExpression;\nexports.isObjectMember = isObjectMember;\nexports.isObjectMethod = isObjectMethod;\nexports.isObjectPattern = isObjectPattern;\nexports.isObjectProperty = isObjectProperty;\nexports.isObjectTypeAnnotation = isObjectTypeAnnotation;\nexports.isObjectTypeCallProperty = isObjectTypeCallProperty;\nexports.isObjectTypeIndexer = isObjectTypeIndexer;\nexports.isObjectTypeInternalSlot = isObjectTypeInternalSlot;\nexports.isObjectTypeProperty = isObjectTypeProperty;\nexports.isObjectTypeSpreadProperty = isObjectTypeSpreadProperty;\nexports.isOpaqueType = isOpaqueType;\nexports.isOptionalCallExpression = isOptionalCallExpression;\nexports.isOptionalIndexedAccessType = isOptionalIndexedAccessType;\nexports.isOptionalMemberExpression = isOptionalMemberExpression;\nexports.isParenthesizedExpression = isParenthesizedExpression;\nexports.isPattern = isPattern;\nexports.isPatternLike = isPatternLike;\nexports.isPipelineBareFunction = isPipelineBareFunction;\nexports.isPipelinePrimaryTopicReference = isPipelinePrimaryTopicReference;\nexports.isPipelineTopicExpression = isPipelineTopicExpression;\nexports.isPlaceholder = isPlaceholder;\nexports.isPrivate = isPrivate;\nexports.isPrivateName = isPrivateName;\nexports.isProgram = isProgram;\nexports.isProperty = isProperty;\nexports.isPureish = isPureish;\nexports.isQualifiedTypeIdentifier = isQualifiedTypeIdentifier;\nexports.isRecordExpression = isRecordExpression;\nexports.isRegExpLiteral = isRegExpLiteral;\nexports.isRegexLiteral = isRegexLiteral;\nexports.isRestElement = isRestElement;\nexports.isRestProperty = isRestProperty;\nexports.isReturnStatement = isReturnStatement;\nexports.isScopable = isScopable;\nexports.isSequenceExpression = isSequenceExpression;\nexports.isSpreadElement = isSpreadElement;\nexports.isSpreadProperty = isSpreadProperty;\nexports.isStandardized = isStandardized;\nexports.isStatement = isStatement;\nexports.isStaticBlock = isStaticBlock;\nexports.isStringLiteral = isStringLiteral;\nexports.isStringLiteralTypeAnnotation = isStringLiteralTypeAnnotation;\nexports.isStringTypeAnnotation = isStringTypeAnnotation;\nexports.isSuper = isSuper;\nexports.isSwitchCase = isSwitchCase;\nexports.isSwitchStatement = isSwitchStatement;\nexports.isSymbolTypeAnnotation = isSymbolTypeAnnotation;\nexports.isTSAnyKeyword = isTSAnyKeyword;\nexports.isTSArrayType = isTSArrayType;\nexports.isTSAsExpression = isTSAsExpression;\nexports.isTSBaseType = isTSBaseType;\nexports.isTSBigIntKeyword = isTSBigIntKeyword;\nexports.isTSBooleanKeyword = isTSBooleanKeyword;\nexports.isTSCallSignatureDeclaration = isTSCallSignatureDeclaration;\nexports.isTSConditionalType = isTSConditionalType;\nexports.isTSConstructSignatureDeclaration = isTSConstructSignatureDeclaration;\nexports.isTSConstructorType = isTSConstructorType;\nexports.isTSDeclareFunction = isTSDeclareFunction;\nexports.isTSDeclareMethod = isTSDeclareMethod;\nexports.isTSEntityName = isTSEntityName;\nexports.isTSEnumDeclaration = isTSEnumDeclaration;\nexports.isTSEnumMember = isTSEnumMember;\nexports.isTSExportAssignment = isTSExportAssignment;\nexports.isTSExpressionWithTypeArguments = isTSExpressionWithTypeArguments;\nexports.isTSExternalModuleReference = isTSExternalModuleReference;\nexports.isTSFunctionType = isTSFunctionType;\nexports.isTSImportEqualsDeclaration = isTSImportEqualsDeclaration;\nexports.isTSImportType = isTSImportType;\nexports.isTSIndexSignature = isTSIndexSignature;\nexports.isTSIndexedAccessType = isTSIndexedAccessType;\nexports.isTSInferType = isTSInferType;\nexports.isTSInstantiationExpression = isTSInstantiationExpression;\nexports.isTSInterfaceBody = isTSInterfaceBody;\nexports.isTSInterfaceDeclaration = isTSInterfaceDeclaration;\nexports.isTSIntersectionType = isTSIntersectionType;\nexports.isTSIntrinsicKeyword = isTSIntrinsicKeyword;\nexports.isTSLiteralType = isTSLiteralType;\nexports.isTSMappedType = isTSMappedType;\nexports.isTSMethodSignature = isTSMethodSignature;\nexports.isTSModuleBlock = isTSModuleBlock;\nexports.isTSModuleDeclaration = isTSModuleDeclaration;\nexports.isTSNamedTupleMember = isTSNamedTupleMember;\nexports.isTSNamespaceExportDeclaration = isTSNamespaceExportDeclaration;\nexports.isTSNeverKeyword = isTSNeverKeyword;\nexports.isTSNonNullExpression = isTSNonNullExpression;\nexports.isTSNullKeyword = isTSNullKeyword;\nexports.isTSNumberKeyword = isTSNumberKeyword;\nexports.isTSObjectKeyword = isTSObjectKeyword;\nexports.isTSOptionalType = isTSOptionalType;\nexports.isTSParameterProperty = isTSParameterProperty;\nexports.isTSParenthesizedType = isTSParenthesizedType;\nexports.isTSPropertySignature = isTSPropertySignature;\nexports.isTSQualifiedName = isTSQualifiedName;\nexports.isTSRestType = isTSRestType;\nexports.isTSStringKeyword = isTSStringKeyword;\nexports.isTSSymbolKeyword = isTSSymbolKeyword;\nexports.isTSThisType = isTSThisType;\nexports.isTSTupleType = isTSTupleType;\nexports.isTSType = isTSType;\nexports.isTSTypeAliasDeclaration = isTSTypeAliasDeclaration;\nexports.isTSTypeAnnotation = isTSTypeAnnotation;\nexports.isTSTypeAssertion = isTSTypeAssertion;\nexports.isTSTypeElement = isTSTypeElement;\nexports.isTSTypeLiteral = isTSTypeLiteral;\nexports.isTSTypeOperator = isTSTypeOperator;\nexports.isTSTypeParameter = isTSTypeParameter;\nexports.isTSTypeParameterDeclaration = isTSTypeParameterDeclaration;\nexports.isTSTypeParameterInstantiation = isTSTypeParameterInstantiation;\nexports.isTSTypePredicate = isTSTypePredicate;\nexports.isTSTypeQuery = isTSTypeQuery;\nexports.isTSTypeReference = isTSTypeReference;\nexports.isTSUndefinedKeyword = isTSUndefinedKeyword;\nexports.isTSUnionType = isTSUnionType;\nexports.isTSUnknownKeyword = isTSUnknownKeyword;\nexports.isTSVoidKeyword = isTSVoidKeyword;\nexports.isTaggedTemplateExpression = isTaggedTemplateExpression;\nexports.isTemplateElement = isTemplateElement;\nexports.isTemplateLiteral = isTemplateLiteral;\nexports.isTerminatorless = isTerminatorless;\nexports.isThisExpression = isThisExpression;\nexports.isThisTypeAnnotation = isThisTypeAnnotation;\nexports.isThrowStatement = isThrowStatement;\nexports.isTopicReference = isTopicReference;\nexports.isTryStatement = isTryStatement;\nexports.isTupleExpression = isTupleExpression;\nexports.isTupleTypeAnnotation = isTupleTypeAnnotation;\nexports.isTypeAlias = isTypeAlias;\nexports.isTypeAnnotation = isTypeAnnotation;\nexports.isTypeCastExpression = isTypeCastExpression;\nexports.isTypeParameter = isTypeParameter;\nexports.isTypeParameterDeclaration = isTypeParameterDeclaration;\nexports.isTypeParameterInstantiation = isTypeParameterInstantiation;\nexports.isTypeScript = isTypeScript;\nexports.isTypeofTypeAnnotation = isTypeofTypeAnnotation;\nexports.isUnaryExpression = isUnaryExpression;\nexports.isUnaryLike = isUnaryLike;\nexports.isUnionTypeAnnotation = isUnionTypeAnnotation;\nexports.isUpdateExpression = isUpdateExpression;\nexports.isUserWhitespacable = isUserWhitespacable;\nexports.isV8IntrinsicIdentifier = isV8IntrinsicIdentifier;\nexports.isVariableDeclaration = isVariableDeclaration;\nexports.isVariableDeclarator = isVariableDeclarator;\nexports.isVariance = isVariance;\nexports.isVoidTypeAnnotation = isVoidTypeAnnotation;\nexports.isWhile = isWhile;\nexports.isWhileStatement = isWhileStatement;\nexports.isWithStatement = isWithStatement;\nexports.isYieldExpression = isYieldExpression;\n\nvar _shallowEqual = require(\"../../utils/shallowEqual\");\n\nfunction isArrayExpression(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"ArrayExpression\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isAssignmentExpression(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"AssignmentExpression\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isBinaryExpression(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"BinaryExpression\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isInterpreterDirective(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"InterpreterDirective\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isDirective(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"Directive\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isDirectiveLiteral(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"DirectiveLiteral\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isBlockStatement(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"BlockStatement\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isBreakStatement(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"BreakStatement\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isCallExpression(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"CallExpression\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isCatchClause(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"CatchClause\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isConditionalExpression(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"ConditionalExpression\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isContinueStatement(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"ContinueStatement\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isDebuggerStatement(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"DebuggerStatement\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isDoWhileStatement(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"DoWhileStatement\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isEmptyStatement(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"EmptyStatement\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isExpressionStatement(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"ExpressionStatement\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isFile(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"File\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isForInStatement(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"ForInStatement\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isForStatement(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"ForStatement\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isFunctionDeclaration(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"FunctionDeclaration\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isFunctionExpression(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"FunctionExpression\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isIdentifier(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"Identifier\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isIfStatement(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"IfStatement\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isLabeledStatement(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"LabeledStatement\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isStringLiteral(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"StringLiteral\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isNumericLiteral(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"NumericLiteral\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isNullLiteral(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"NullLiteral\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isBooleanLiteral(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"BooleanLiteral\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isRegExpLiteral(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"RegExpLiteral\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isLogicalExpression(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"LogicalExpression\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isMemberExpression(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"MemberExpression\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isNewExpression(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"NewExpression\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isProgram(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"Program\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isObjectExpression(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"ObjectExpression\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isObjectMethod(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"ObjectMethod\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isObjectProperty(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"ObjectProperty\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isRestElement(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"RestElement\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isReturnStatement(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"ReturnStatement\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isSequenceExpression(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"SequenceExpression\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isParenthesizedExpression(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"ParenthesizedExpression\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isSwitchCase(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"SwitchCase\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isSwitchStatement(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"SwitchStatement\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isThisExpression(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"ThisExpression\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isThrowStatement(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"ThrowStatement\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTryStatement(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TryStatement\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isUnaryExpression(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"UnaryExpression\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isUpdateExpression(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"UpdateExpression\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isVariableDeclaration(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"VariableDeclaration\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isVariableDeclarator(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"VariableDeclarator\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isWhileStatement(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"WhileStatement\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isWithStatement(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"WithStatement\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isAssignmentPattern(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"AssignmentPattern\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isArrayPattern(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"ArrayPattern\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isArrowFunctionExpression(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"ArrowFunctionExpression\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isClassBody(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"ClassBody\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isClassExpression(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"ClassExpression\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isClassDeclaration(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"ClassDeclaration\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isExportAllDeclaration(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"ExportAllDeclaration\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isExportDefaultDeclaration(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"ExportDefaultDeclaration\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isExportNamedDeclaration(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"ExportNamedDeclaration\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isExportSpecifier(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"ExportSpecifier\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isForOfStatement(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"ForOfStatement\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isImportDeclaration(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"ImportDeclaration\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isImportDefaultSpecifier(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"ImportDefaultSpecifier\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isImportNamespaceSpecifier(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"ImportNamespaceSpecifier\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isImportSpecifier(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"ImportSpecifier\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isMetaProperty(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"MetaProperty\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isClassMethod(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"ClassMethod\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isObjectPattern(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"ObjectPattern\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isSpreadElement(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"SpreadElement\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isSuper(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"Super\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTaggedTemplateExpression(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TaggedTemplateExpression\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTemplateElement(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TemplateElement\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTemplateLiteral(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TemplateLiteral\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isYieldExpression(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"YieldExpression\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isAwaitExpression(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"AwaitExpression\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isImport(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"Import\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isBigIntLiteral(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"BigIntLiteral\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isExportNamespaceSpecifier(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"ExportNamespaceSpecifier\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isOptionalMemberExpression(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"OptionalMemberExpression\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isOptionalCallExpression(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"OptionalCallExpression\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isClassProperty(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"ClassProperty\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isClassAccessorProperty(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"ClassAccessorProperty\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isClassPrivateProperty(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"ClassPrivateProperty\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isClassPrivateMethod(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"ClassPrivateMethod\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isPrivateName(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"PrivateName\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isStaticBlock(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"StaticBlock\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isAnyTypeAnnotation(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"AnyTypeAnnotation\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isArrayTypeAnnotation(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"ArrayTypeAnnotation\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isBooleanTypeAnnotation(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"BooleanTypeAnnotation\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isBooleanLiteralTypeAnnotation(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"BooleanLiteralTypeAnnotation\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isNullLiteralTypeAnnotation(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"NullLiteralTypeAnnotation\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isClassImplements(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"ClassImplements\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isDeclareClass(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"DeclareClass\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isDeclareFunction(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"DeclareFunction\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isDeclareInterface(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"DeclareInterface\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isDeclareModule(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"DeclareModule\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isDeclareModuleExports(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"DeclareModuleExports\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isDeclareTypeAlias(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"DeclareTypeAlias\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isDeclareOpaqueType(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"DeclareOpaqueType\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isDeclareVariable(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"DeclareVariable\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isDeclareExportDeclaration(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"DeclareExportDeclaration\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isDeclareExportAllDeclaration(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"DeclareExportAllDeclaration\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isDeclaredPredicate(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"DeclaredPredicate\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isExistsTypeAnnotation(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"ExistsTypeAnnotation\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isFunctionTypeAnnotation(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"FunctionTypeAnnotation\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isFunctionTypeParam(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"FunctionTypeParam\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isGenericTypeAnnotation(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"GenericTypeAnnotation\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isInferredPredicate(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"InferredPredicate\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isInterfaceExtends(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"InterfaceExtends\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isInterfaceDeclaration(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"InterfaceDeclaration\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isInterfaceTypeAnnotation(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"InterfaceTypeAnnotation\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isIntersectionTypeAnnotation(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"IntersectionTypeAnnotation\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isMixedTypeAnnotation(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"MixedTypeAnnotation\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isEmptyTypeAnnotation(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"EmptyTypeAnnotation\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isNullableTypeAnnotation(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"NullableTypeAnnotation\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isNumberLiteralTypeAnnotation(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"NumberLiteralTypeAnnotation\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isNumberTypeAnnotation(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"NumberTypeAnnotation\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isObjectTypeAnnotation(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"ObjectTypeAnnotation\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isObjectTypeInternalSlot(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"ObjectTypeInternalSlot\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isObjectTypeCallProperty(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"ObjectTypeCallProperty\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isObjectTypeIndexer(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"ObjectTypeIndexer\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isObjectTypeProperty(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"ObjectTypeProperty\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isObjectTypeSpreadProperty(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"ObjectTypeSpreadProperty\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isOpaqueType(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"OpaqueType\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isQualifiedTypeIdentifier(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"QualifiedTypeIdentifier\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isStringLiteralTypeAnnotation(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"StringLiteralTypeAnnotation\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isStringTypeAnnotation(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"StringTypeAnnotation\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isSymbolTypeAnnotation(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"SymbolTypeAnnotation\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isThisTypeAnnotation(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"ThisTypeAnnotation\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTupleTypeAnnotation(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TupleTypeAnnotation\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTypeofTypeAnnotation(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TypeofTypeAnnotation\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTypeAlias(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TypeAlias\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTypeAnnotation(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TypeAnnotation\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTypeCastExpression(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TypeCastExpression\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTypeParameter(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TypeParameter\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTypeParameterDeclaration(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TypeParameterDeclaration\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTypeParameterInstantiation(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TypeParameterInstantiation\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isUnionTypeAnnotation(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"UnionTypeAnnotation\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isVariance(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"Variance\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isVoidTypeAnnotation(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"VoidTypeAnnotation\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isEnumDeclaration(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"EnumDeclaration\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isEnumBooleanBody(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"EnumBooleanBody\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isEnumNumberBody(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"EnumNumberBody\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isEnumStringBody(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"EnumStringBody\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isEnumSymbolBody(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"EnumSymbolBody\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isEnumBooleanMember(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"EnumBooleanMember\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isEnumNumberMember(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"EnumNumberMember\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isEnumStringMember(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"EnumStringMember\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isEnumDefaultedMember(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"EnumDefaultedMember\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isIndexedAccessType(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"IndexedAccessType\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isOptionalIndexedAccessType(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"OptionalIndexedAccessType\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isJSXAttribute(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"JSXAttribute\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isJSXClosingElement(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"JSXClosingElement\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isJSXElement(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"JSXElement\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isJSXEmptyExpression(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"JSXEmptyExpression\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isJSXExpressionContainer(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"JSXExpressionContainer\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isJSXSpreadChild(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"JSXSpreadChild\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isJSXIdentifier(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"JSXIdentifier\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isJSXMemberExpression(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"JSXMemberExpression\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isJSXNamespacedName(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"JSXNamespacedName\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isJSXOpeningElement(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"JSXOpeningElement\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isJSXSpreadAttribute(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"JSXSpreadAttribute\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isJSXText(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"JSXText\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isJSXFragment(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"JSXFragment\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isJSXOpeningFragment(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"JSXOpeningFragment\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isJSXClosingFragment(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"JSXClosingFragment\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isNoop(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"Noop\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isPlaceholder(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"Placeholder\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isV8IntrinsicIdentifier(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"V8IntrinsicIdentifier\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isArgumentPlaceholder(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"ArgumentPlaceholder\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isBindExpression(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"BindExpression\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isImportAttribute(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"ImportAttribute\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isDecorator(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"Decorator\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isDoExpression(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"DoExpression\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isExportDefaultSpecifier(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"ExportDefaultSpecifier\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isRecordExpression(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"RecordExpression\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTupleExpression(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TupleExpression\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isDecimalLiteral(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"DecimalLiteral\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isModuleExpression(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"ModuleExpression\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTopicReference(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TopicReference\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isPipelineTopicExpression(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"PipelineTopicExpression\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isPipelineBareFunction(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"PipelineBareFunction\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isPipelinePrimaryTopicReference(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"PipelinePrimaryTopicReference\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSParameterProperty(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSParameterProperty\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSDeclareFunction(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSDeclareFunction\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSDeclareMethod(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSDeclareMethod\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSQualifiedName(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSQualifiedName\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSCallSignatureDeclaration(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSCallSignatureDeclaration\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSConstructSignatureDeclaration(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSConstructSignatureDeclaration\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSPropertySignature(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSPropertySignature\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSMethodSignature(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSMethodSignature\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSIndexSignature(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSIndexSignature\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSAnyKeyword(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSAnyKeyword\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSBooleanKeyword(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSBooleanKeyword\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSBigIntKeyword(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSBigIntKeyword\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSIntrinsicKeyword(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSIntrinsicKeyword\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSNeverKeyword(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSNeverKeyword\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSNullKeyword(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSNullKeyword\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSNumberKeyword(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSNumberKeyword\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSObjectKeyword(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSObjectKeyword\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSStringKeyword(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSStringKeyword\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSSymbolKeyword(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSSymbolKeyword\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSUndefinedKeyword(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSUndefinedKeyword\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSUnknownKeyword(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSUnknownKeyword\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSVoidKeyword(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSVoidKeyword\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSThisType(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSThisType\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSFunctionType(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSFunctionType\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSConstructorType(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSConstructorType\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSTypeReference(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSTypeReference\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSTypePredicate(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSTypePredicate\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSTypeQuery(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSTypeQuery\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSTypeLiteral(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSTypeLiteral\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSArrayType(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSArrayType\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSTupleType(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSTupleType\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSOptionalType(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSOptionalType\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSRestType(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSRestType\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSNamedTupleMember(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSNamedTupleMember\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSUnionType(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSUnionType\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSIntersectionType(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSIntersectionType\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSConditionalType(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSConditionalType\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSInferType(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSInferType\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSParenthesizedType(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSParenthesizedType\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSTypeOperator(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSTypeOperator\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSIndexedAccessType(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSIndexedAccessType\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSMappedType(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSMappedType\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSLiteralType(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSLiteralType\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSExpressionWithTypeArguments(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSExpressionWithTypeArguments\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSInterfaceDeclaration(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSInterfaceDeclaration\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSInterfaceBody(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSInterfaceBody\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSTypeAliasDeclaration(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSTypeAliasDeclaration\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSInstantiationExpression(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSInstantiationExpression\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSAsExpression(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSAsExpression\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSTypeAssertion(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSTypeAssertion\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSEnumDeclaration(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSEnumDeclaration\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSEnumMember(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSEnumMember\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSModuleDeclaration(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSModuleDeclaration\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSModuleBlock(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSModuleBlock\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSImportType(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSImportType\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSImportEqualsDeclaration(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSImportEqualsDeclaration\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSExternalModuleReference(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSExternalModuleReference\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSNonNullExpression(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSNonNullExpression\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSExportAssignment(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSExportAssignment\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSNamespaceExportDeclaration(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSNamespaceExportDeclaration\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSTypeAnnotation(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSTypeAnnotation\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSTypeParameterInstantiation(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSTypeParameterInstantiation\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSTypeParameterDeclaration(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSTypeParameterDeclaration\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSTypeParameter(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSTypeParameter\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isStandardized(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (\"ArrayExpression\" === nodeType || \"AssignmentExpression\" === nodeType || \"BinaryExpression\" === nodeType || \"InterpreterDirective\" === nodeType || \"Directive\" === nodeType || \"DirectiveLiteral\" === nodeType || \"BlockStatement\" === nodeType || \"BreakStatement\" === nodeType || \"CallExpression\" === nodeType || \"CatchClause\" === nodeType || \"ConditionalExpression\" === nodeType || \"ContinueStatement\" === nodeType || \"DebuggerStatement\" === nodeType || \"DoWhileStatement\" === nodeType || \"EmptyStatement\" === nodeType || \"ExpressionStatement\" === nodeType || \"File\" === nodeType || \"ForInStatement\" === nodeType || \"ForStatement\" === nodeType || \"FunctionDeclaration\" === nodeType || \"FunctionExpression\" === nodeType || \"Identifier\" === nodeType || \"IfStatement\" === nodeType || \"LabeledStatement\" === nodeType || \"StringLiteral\" === nodeType || \"NumericLiteral\" === nodeType || \"NullLiteral\" === nodeType || \"BooleanLiteral\" === nodeType || \"RegExpLiteral\" === nodeType || \"LogicalExpression\" === nodeType || \"MemberExpression\" === nodeType || \"NewExpression\" === nodeType || \"Program\" === nodeType || \"ObjectExpression\" === nodeType || \"ObjectMethod\" === nodeType || \"ObjectProperty\" === nodeType || \"RestElement\" === nodeType || \"ReturnStatement\" === nodeType || \"SequenceExpression\" === nodeType || \"ParenthesizedExpression\" === nodeType || \"SwitchCase\" === nodeType || \"SwitchStatement\" === nodeType || \"ThisExpression\" === nodeType || \"ThrowStatement\" === nodeType || \"TryStatement\" === nodeType || \"UnaryExpression\" === nodeType || \"UpdateExpression\" === nodeType || \"VariableDeclaration\" === nodeType || \"VariableDeclarator\" === nodeType || \"WhileStatement\" === nodeType || \"WithStatement\" === nodeType || \"AssignmentPattern\" === nodeType || \"ArrayPattern\" === nodeType || \"ArrowFunctionExpression\" === nodeType || \"ClassBody\" === nodeType || \"ClassExpression\" === nodeType || \"ClassDeclaration\" === nodeType || \"ExportAllDeclaration\" === nodeType || \"ExportDefaultDeclaration\" === nodeType || \"ExportNamedDeclaration\" === nodeType || \"ExportSpecifier\" === nodeType || \"ForOfStatement\" === nodeType || \"ImportDeclaration\" === nodeType || \"ImportDefaultSpecifier\" === nodeType || \"ImportNamespaceSpecifier\" === nodeType || \"ImportSpecifier\" === nodeType || \"MetaProperty\" === nodeType || \"ClassMethod\" === nodeType || \"ObjectPattern\" === nodeType || \"SpreadElement\" === nodeType || \"Super\" === nodeType || \"TaggedTemplateExpression\" === nodeType || \"TemplateElement\" === nodeType || \"TemplateLiteral\" === nodeType || \"YieldExpression\" === nodeType || \"AwaitExpression\" === nodeType || \"Import\" === nodeType || \"BigIntLiteral\" === nodeType || \"ExportNamespaceSpecifier\" === nodeType || \"OptionalMemberExpression\" === nodeType || \"OptionalCallExpression\" === nodeType || \"ClassProperty\" === nodeType || \"ClassAccessorProperty\" === nodeType || \"ClassPrivateProperty\" === nodeType || \"ClassPrivateMethod\" === nodeType || \"PrivateName\" === nodeType || \"StaticBlock\" === nodeType || nodeType === \"Placeholder\" && (\"Identifier\" === node.expectedNode || \"StringLiteral\" === node.expectedNode || \"BlockStatement\" === node.expectedNode || \"ClassBody\" === node.expectedNode)) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isExpression(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (\"ArrayExpression\" === nodeType || \"AssignmentExpression\" === nodeType || \"BinaryExpression\" === nodeType || \"CallExpression\" === nodeType || \"ConditionalExpression\" === nodeType || \"FunctionExpression\" === nodeType || \"Identifier\" === nodeType || \"StringLiteral\" === nodeType || \"NumericLiteral\" === nodeType || \"NullLiteral\" === nodeType || \"BooleanLiteral\" === nodeType || \"RegExpLiteral\" === nodeType || \"LogicalExpression\" === nodeType || \"MemberExpression\" === nodeType || \"NewExpression\" === nodeType || \"ObjectExpression\" === nodeType || \"SequenceExpression\" === nodeType || \"ParenthesizedExpression\" === nodeType || \"ThisExpression\" === nodeType || \"UnaryExpression\" === nodeType || \"UpdateExpression\" === nodeType || \"ArrowFunctionExpression\" === nodeType || \"ClassExpression\" === nodeType || \"MetaProperty\" === nodeType || \"Super\" === nodeType || \"TaggedTemplateExpression\" === nodeType || \"TemplateLiteral\" === nodeType || \"YieldExpression\" === nodeType || \"AwaitExpression\" === nodeType || \"Import\" === nodeType || \"BigIntLiteral\" === nodeType || \"OptionalMemberExpression\" === nodeType || \"OptionalCallExpression\" === nodeType || \"TypeCastExpression\" === nodeType || \"JSXElement\" === nodeType || \"JSXFragment\" === nodeType || \"BindExpression\" === nodeType || \"DoExpression\" === nodeType || \"RecordExpression\" === nodeType || \"TupleExpression\" === nodeType || \"DecimalLiteral\" === nodeType || \"ModuleExpression\" === nodeType || \"TopicReference\" === nodeType || \"PipelineTopicExpression\" === nodeType || \"PipelineBareFunction\" === nodeType || \"PipelinePrimaryTopicReference\" === nodeType || \"TSInstantiationExpression\" === nodeType || \"TSAsExpression\" === nodeType || \"TSTypeAssertion\" === nodeType || \"TSNonNullExpression\" === nodeType || nodeType === \"Placeholder\" && (\"Expression\" === node.expectedNode || \"Identifier\" === node.expectedNode || \"StringLiteral\" === node.expectedNode)) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isBinary(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (\"BinaryExpression\" === nodeType || \"LogicalExpression\" === nodeType) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isScopable(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (\"BlockStatement\" === nodeType || \"CatchClause\" === nodeType || \"DoWhileStatement\" === nodeType || \"ForInStatement\" === nodeType || \"ForStatement\" === nodeType || \"FunctionDeclaration\" === nodeType || \"FunctionExpression\" === nodeType || \"Program\" === nodeType || \"ObjectMethod\" === nodeType || \"SwitchStatement\" === nodeType || \"WhileStatement\" === nodeType || \"ArrowFunctionExpression\" === nodeType || \"ClassExpression\" === nodeType || \"ClassDeclaration\" === nodeType || \"ForOfStatement\" === nodeType || \"ClassMethod\" === nodeType || \"ClassPrivateMethod\" === nodeType || \"StaticBlock\" === nodeType || \"TSModuleBlock\" === nodeType || nodeType === \"Placeholder\" && \"BlockStatement\" === node.expectedNode) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isBlockParent(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (\"BlockStatement\" === nodeType || \"CatchClause\" === nodeType || \"DoWhileStatement\" === nodeType || \"ForInStatement\" === nodeType || \"ForStatement\" === nodeType || \"FunctionDeclaration\" === nodeType || \"FunctionExpression\" === nodeType || \"Program\" === nodeType || \"ObjectMethod\" === nodeType || \"SwitchStatement\" === nodeType || \"WhileStatement\" === nodeType || \"ArrowFunctionExpression\" === nodeType || \"ForOfStatement\" === nodeType || \"ClassMethod\" === nodeType || \"ClassPrivateMethod\" === nodeType || \"StaticBlock\" === nodeType || \"TSModuleBlock\" === nodeType || nodeType === \"Placeholder\" && \"BlockStatement\" === node.expectedNode) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isBlock(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (\"BlockStatement\" === nodeType || \"Program\" === nodeType || \"TSModuleBlock\" === nodeType || nodeType === \"Placeholder\" && \"BlockStatement\" === node.expectedNode) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isStatement(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (\"BlockStatement\" === nodeType || \"BreakStatement\" === nodeType || \"ContinueStatement\" === nodeType || \"DebuggerStatement\" === nodeType || \"DoWhileStatement\" === nodeType || \"EmptyStatement\" === nodeType || \"ExpressionStatement\" === nodeType || \"ForInStatement\" === nodeType || \"ForStatement\" === nodeType || \"FunctionDeclaration\" === nodeType || \"IfStatement\" === nodeType || \"LabeledStatement\" === nodeType || \"ReturnStatement\" === nodeType || \"SwitchStatement\" === nodeType || \"ThrowStatement\" === nodeType || \"TryStatement\" === nodeType || \"VariableDeclaration\" === nodeType || \"WhileStatement\" === nodeType || \"WithStatement\" === nodeType || \"ClassDeclaration\" === nodeType || \"ExportAllDeclaration\" === nodeType || \"ExportDefaultDeclaration\" === nodeType || \"ExportNamedDeclaration\" === nodeType || \"ForOfStatement\" === nodeType || \"ImportDeclaration\" === nodeType || \"DeclareClass\" === nodeType || \"DeclareFunction\" === nodeType || \"DeclareInterface\" === nodeType || \"DeclareModule\" === nodeType || \"DeclareModuleExports\" === nodeType || \"DeclareTypeAlias\" === nodeType || \"DeclareOpaqueType\" === nodeType || \"DeclareVariable\" === nodeType || \"DeclareExportDeclaration\" === nodeType || \"DeclareExportAllDeclaration\" === nodeType || \"InterfaceDeclaration\" === nodeType || \"OpaqueType\" === nodeType || \"TypeAlias\" === nodeType || \"EnumDeclaration\" === nodeType || \"TSDeclareFunction\" === nodeType || \"TSInterfaceDeclaration\" === nodeType || \"TSTypeAliasDeclaration\" === nodeType || \"TSEnumDeclaration\" === nodeType || \"TSModuleDeclaration\" === nodeType || \"TSImportEqualsDeclaration\" === nodeType || \"TSExportAssignment\" === nodeType || \"TSNamespaceExportDeclaration\" === nodeType || nodeType === \"Placeholder\" && (\"Statement\" === node.expectedNode || \"Declaration\" === node.expectedNode || \"BlockStatement\" === node.expectedNode)) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTerminatorless(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (\"BreakStatement\" === nodeType || \"ContinueStatement\" === nodeType || \"ReturnStatement\" === nodeType || \"ThrowStatement\" === nodeType || \"YieldExpression\" === nodeType || \"AwaitExpression\" === nodeType) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isCompletionStatement(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (\"BreakStatement\" === nodeType || \"ContinueStatement\" === nodeType || \"ReturnStatement\" === nodeType || \"ThrowStatement\" === nodeType) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isConditional(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (\"ConditionalExpression\" === nodeType || \"IfStatement\" === nodeType) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isLoop(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (\"DoWhileStatement\" === nodeType || \"ForInStatement\" === nodeType || \"ForStatement\" === nodeType || \"WhileStatement\" === nodeType || \"ForOfStatement\" === nodeType) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isWhile(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (\"DoWhileStatement\" === nodeType || \"WhileStatement\" === nodeType) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isExpressionWrapper(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (\"ExpressionStatement\" === nodeType || \"ParenthesizedExpression\" === nodeType || \"TypeCastExpression\" === nodeType) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isFor(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (\"ForInStatement\" === nodeType || \"ForStatement\" === nodeType || \"ForOfStatement\" === nodeType) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isForXStatement(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (\"ForInStatement\" === nodeType || \"ForOfStatement\" === nodeType) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isFunction(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (\"FunctionDeclaration\" === nodeType || \"FunctionExpression\" === nodeType || \"ObjectMethod\" === nodeType || \"ArrowFunctionExpression\" === nodeType || \"ClassMethod\" === nodeType || \"ClassPrivateMethod\" === nodeType) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isFunctionParent(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (\"FunctionDeclaration\" === nodeType || \"FunctionExpression\" === nodeType || \"ObjectMethod\" === nodeType || \"ArrowFunctionExpression\" === nodeType || \"ClassMethod\" === nodeType || \"ClassPrivateMethod\" === nodeType || \"StaticBlock\" === nodeType) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isPureish(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (\"FunctionDeclaration\" === nodeType || \"FunctionExpression\" === nodeType || \"StringLiteral\" === nodeType || \"NumericLiteral\" === nodeType || \"NullLiteral\" === nodeType || \"BooleanLiteral\" === nodeType || \"RegExpLiteral\" === nodeType || \"ArrowFunctionExpression\" === nodeType || \"BigIntLiteral\" === nodeType || \"DecimalLiteral\" === nodeType || nodeType === \"Placeholder\" && \"StringLiteral\" === node.expectedNode) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isDeclaration(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (\"FunctionDeclaration\" === nodeType || \"VariableDeclaration\" === nodeType || \"ClassDeclaration\" === nodeType || \"ExportAllDeclaration\" === nodeType || \"ExportDefaultDeclaration\" === nodeType || \"ExportNamedDeclaration\" === nodeType || \"ImportDeclaration\" === nodeType || \"DeclareClass\" === nodeType || \"DeclareFunction\" === nodeType || \"DeclareInterface\" === nodeType || \"DeclareModule\" === nodeType || \"DeclareModuleExports\" === nodeType || \"DeclareTypeAlias\" === nodeType || \"DeclareOpaqueType\" === nodeType || \"DeclareVariable\" === nodeType || \"DeclareExportDeclaration\" === nodeType || \"DeclareExportAllDeclaration\" === nodeType || \"InterfaceDeclaration\" === nodeType || \"OpaqueType\" === nodeType || \"TypeAlias\" === nodeType || \"EnumDeclaration\" === nodeType || \"TSDeclareFunction\" === nodeType || \"TSInterfaceDeclaration\" === nodeType || \"TSTypeAliasDeclaration\" === nodeType || \"TSEnumDeclaration\" === nodeType || \"TSModuleDeclaration\" === nodeType || nodeType === \"Placeholder\" && \"Declaration\" === node.expectedNode) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isPatternLike(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (\"Identifier\" === nodeType || \"RestElement\" === nodeType || \"AssignmentPattern\" === nodeType || \"ArrayPattern\" === nodeType || \"ObjectPattern\" === nodeType || \"TSAsExpression\" === nodeType || \"TSTypeAssertion\" === nodeType || \"TSNonNullExpression\" === nodeType || nodeType === \"Placeholder\" && (\"Pattern\" === node.expectedNode || \"Identifier\" === node.expectedNode)) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isLVal(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (\"Identifier\" === nodeType || \"MemberExpression\" === nodeType || \"RestElement\" === nodeType || \"AssignmentPattern\" === nodeType || \"ArrayPattern\" === nodeType || \"ObjectPattern\" === nodeType || \"TSParameterProperty\" === nodeType || \"TSAsExpression\" === nodeType || \"TSTypeAssertion\" === nodeType || \"TSNonNullExpression\" === nodeType || nodeType === \"Placeholder\" && (\"Pattern\" === node.expectedNode || \"Identifier\" === node.expectedNode)) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSEntityName(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (\"Identifier\" === nodeType || \"TSQualifiedName\" === nodeType || nodeType === \"Placeholder\" && \"Identifier\" === node.expectedNode) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isLiteral(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (\"StringLiteral\" === nodeType || \"NumericLiteral\" === nodeType || \"NullLiteral\" === nodeType || \"BooleanLiteral\" === nodeType || \"RegExpLiteral\" === nodeType || \"TemplateLiteral\" === nodeType || \"BigIntLiteral\" === nodeType || \"DecimalLiteral\" === nodeType || nodeType === \"Placeholder\" && \"StringLiteral\" === node.expectedNode) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isImmutable(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (\"StringLiteral\" === nodeType || \"NumericLiteral\" === nodeType || \"NullLiteral\" === nodeType || \"BooleanLiteral\" === nodeType || \"BigIntLiteral\" === nodeType || \"JSXAttribute\" === nodeType || \"JSXClosingElement\" === nodeType || \"JSXElement\" === nodeType || \"JSXExpressionContainer\" === nodeType || \"JSXSpreadChild\" === nodeType || \"JSXOpeningElement\" === nodeType || \"JSXText\" === nodeType || \"JSXFragment\" === nodeType || \"JSXOpeningFragment\" === nodeType || \"JSXClosingFragment\" === nodeType || \"DecimalLiteral\" === nodeType || nodeType === \"Placeholder\" && \"StringLiteral\" === node.expectedNode) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isUserWhitespacable(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (\"ObjectMethod\" === nodeType || \"ObjectProperty\" === nodeType || \"ObjectTypeInternalSlot\" === nodeType || \"ObjectTypeCallProperty\" === nodeType || \"ObjectTypeIndexer\" === nodeType || \"ObjectTypeProperty\" === nodeType || \"ObjectTypeSpreadProperty\" === nodeType) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isMethod(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (\"ObjectMethod\" === nodeType || \"ClassMethod\" === nodeType || \"ClassPrivateMethod\" === nodeType) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isObjectMember(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (\"ObjectMethod\" === nodeType || \"ObjectProperty\" === nodeType) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isProperty(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (\"ObjectProperty\" === nodeType || \"ClassProperty\" === nodeType || \"ClassAccessorProperty\" === nodeType || \"ClassPrivateProperty\" === nodeType) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isUnaryLike(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (\"UnaryExpression\" === nodeType || \"SpreadElement\" === nodeType) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isPattern(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (\"AssignmentPattern\" === nodeType || \"ArrayPattern\" === nodeType || \"ObjectPattern\" === nodeType || nodeType === \"Placeholder\" && \"Pattern\" === node.expectedNode) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isClass(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (\"ClassExpression\" === nodeType || \"ClassDeclaration\" === nodeType) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isModuleDeclaration(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (\"ExportAllDeclaration\" === nodeType || \"ExportDefaultDeclaration\" === nodeType || \"ExportNamedDeclaration\" === nodeType || \"ImportDeclaration\" === nodeType) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isExportDeclaration(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (\"ExportAllDeclaration\" === nodeType || \"ExportDefaultDeclaration\" === nodeType || \"ExportNamedDeclaration\" === nodeType) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isModuleSpecifier(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (\"ExportSpecifier\" === nodeType || \"ImportDefaultSpecifier\" === nodeType || \"ImportNamespaceSpecifier\" === nodeType || \"ImportSpecifier\" === nodeType || \"ExportNamespaceSpecifier\" === nodeType || \"ExportDefaultSpecifier\" === nodeType) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isAccessor(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (\"ClassAccessorProperty\" === nodeType) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isPrivate(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (\"ClassPrivateProperty\" === nodeType || \"ClassPrivateMethod\" === nodeType || \"PrivateName\" === nodeType) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isFlow(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (\"AnyTypeAnnotation\" === nodeType || \"ArrayTypeAnnotation\" === nodeType || \"BooleanTypeAnnotation\" === nodeType || \"BooleanLiteralTypeAnnotation\" === nodeType || \"NullLiteralTypeAnnotation\" === nodeType || \"ClassImplements\" === nodeType || \"DeclareClass\" === nodeType || \"DeclareFunction\" === nodeType || \"DeclareInterface\" === nodeType || \"DeclareModule\" === nodeType || \"DeclareModuleExports\" === nodeType || \"DeclareTypeAlias\" === nodeType || \"DeclareOpaqueType\" === nodeType || \"DeclareVariable\" === nodeType || \"DeclareExportDeclaration\" === nodeType || \"DeclareExportAllDeclaration\" === nodeType || \"DeclaredPredicate\" === nodeType || \"ExistsTypeAnnotation\" === nodeType || \"FunctionTypeAnnotation\" === nodeType || \"FunctionTypeParam\" === nodeType || \"GenericTypeAnnotation\" === nodeType || \"InferredPredicate\" === nodeType || \"InterfaceExtends\" === nodeType || \"InterfaceDeclaration\" === nodeType || \"InterfaceTypeAnnotation\" === nodeType || \"IntersectionTypeAnnotation\" === nodeType || \"MixedTypeAnnotation\" === nodeType || \"EmptyTypeAnnotation\" === nodeType || \"NullableTypeAnnotation\" === nodeType || \"NumberLiteralTypeAnnotation\" === nodeType || \"NumberTypeAnnotation\" === nodeType || \"ObjectTypeAnnotation\" === nodeType || \"ObjectTypeInternalSlot\" === nodeType || \"ObjectTypeCallProperty\" === nodeType || \"ObjectTypeIndexer\" === nodeType || \"ObjectTypeProperty\" === nodeType || \"ObjectTypeSpreadProperty\" === nodeType || \"OpaqueType\" === nodeType || \"QualifiedTypeIdentifier\" === nodeType || \"StringLiteralTypeAnnotation\" === nodeType || \"StringTypeAnnotation\" === nodeType || \"SymbolTypeAnnotation\" === nodeType || \"ThisTypeAnnotation\" === nodeType || \"TupleTypeAnnotation\" === nodeType || \"TypeofTypeAnnotation\" === nodeType || \"TypeAlias\" === nodeType || \"TypeAnnotation\" === nodeType || \"TypeCastExpression\" === nodeType || \"TypeParameter\" === nodeType || \"TypeParameterDeclaration\" === nodeType || \"TypeParameterInstantiation\" === nodeType || \"UnionTypeAnnotation\" === nodeType || \"Variance\" === nodeType || \"VoidTypeAnnotation\" === nodeType || \"EnumDeclaration\" === nodeType || \"EnumBooleanBody\" === nodeType || \"EnumNumberBody\" === nodeType || \"EnumStringBody\" === nodeType || \"EnumSymbolBody\" === nodeType || \"EnumBooleanMember\" === nodeType || \"EnumNumberMember\" === nodeType || \"EnumStringMember\" === nodeType || \"EnumDefaultedMember\" === nodeType || \"IndexedAccessType\" === nodeType || \"OptionalIndexedAccessType\" === nodeType) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isFlowType(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (\"AnyTypeAnnotation\" === nodeType || \"ArrayTypeAnnotation\" === nodeType || \"BooleanTypeAnnotation\" === nodeType || \"BooleanLiteralTypeAnnotation\" === nodeType || \"NullLiteralTypeAnnotation\" === nodeType || \"ExistsTypeAnnotation\" === nodeType || \"FunctionTypeAnnotation\" === nodeType || \"GenericTypeAnnotation\" === nodeType || \"InterfaceTypeAnnotation\" === nodeType || \"IntersectionTypeAnnotation\" === nodeType || \"MixedTypeAnnotation\" === nodeType || \"EmptyTypeAnnotation\" === nodeType || \"NullableTypeAnnotation\" === nodeType || \"NumberLiteralTypeAnnotation\" === nodeType || \"NumberTypeAnnotation\" === nodeType || \"ObjectTypeAnnotation\" === nodeType || \"StringLiteralTypeAnnotation\" === nodeType || \"StringTypeAnnotation\" === nodeType || \"SymbolTypeAnnotation\" === nodeType || \"ThisTypeAnnotation\" === nodeType || \"TupleTypeAnnotation\" === nodeType || \"TypeofTypeAnnotation\" === nodeType || \"UnionTypeAnnotation\" === nodeType || \"VoidTypeAnnotation\" === nodeType || \"IndexedAccessType\" === nodeType || \"OptionalIndexedAccessType\" === nodeType) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isFlowBaseAnnotation(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (\"AnyTypeAnnotation\" === nodeType || \"BooleanTypeAnnotation\" === nodeType || \"NullLiteralTypeAnnotation\" === nodeType || \"MixedTypeAnnotation\" === nodeType || \"EmptyTypeAnnotation\" === nodeType || \"NumberTypeAnnotation\" === nodeType || \"StringTypeAnnotation\" === nodeType || \"SymbolTypeAnnotation\" === nodeType || \"ThisTypeAnnotation\" === nodeType || \"VoidTypeAnnotation\" === nodeType) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isFlowDeclaration(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (\"DeclareClass\" === nodeType || \"DeclareFunction\" === nodeType || \"DeclareInterface\" === nodeType || \"DeclareModule\" === nodeType || \"DeclareModuleExports\" === nodeType || \"DeclareTypeAlias\" === nodeType || \"DeclareOpaqueType\" === nodeType || \"DeclareVariable\" === nodeType || \"DeclareExportDeclaration\" === nodeType || \"DeclareExportAllDeclaration\" === nodeType || \"InterfaceDeclaration\" === nodeType || \"OpaqueType\" === nodeType || \"TypeAlias\" === nodeType) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isFlowPredicate(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (\"DeclaredPredicate\" === nodeType || \"InferredPredicate\" === nodeType) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isEnumBody(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (\"EnumBooleanBody\" === nodeType || \"EnumNumberBody\" === nodeType || \"EnumStringBody\" === nodeType || \"EnumSymbolBody\" === nodeType) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isEnumMember(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (\"EnumBooleanMember\" === nodeType || \"EnumNumberMember\" === nodeType || \"EnumStringMember\" === nodeType || \"EnumDefaultedMember\" === nodeType) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isJSX(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (\"JSXAttribute\" === nodeType || \"JSXClosingElement\" === nodeType || \"JSXElement\" === nodeType || \"JSXEmptyExpression\" === nodeType || \"JSXExpressionContainer\" === nodeType || \"JSXSpreadChild\" === nodeType || \"JSXIdentifier\" === nodeType || \"JSXMemberExpression\" === nodeType || \"JSXNamespacedName\" === nodeType || \"JSXOpeningElement\" === nodeType || \"JSXSpreadAttribute\" === nodeType || \"JSXText\" === nodeType || \"JSXFragment\" === nodeType || \"JSXOpeningFragment\" === nodeType || \"JSXClosingFragment\" === nodeType) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isMiscellaneous(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (\"Noop\" === nodeType || \"Placeholder\" === nodeType || \"V8IntrinsicIdentifier\" === nodeType) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTypeScript(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (\"TSParameterProperty\" === nodeType || \"TSDeclareFunction\" === nodeType || \"TSDeclareMethod\" === nodeType || \"TSQualifiedName\" === nodeType || \"TSCallSignatureDeclaration\" === nodeType || \"TSConstructSignatureDeclaration\" === nodeType || \"TSPropertySignature\" === nodeType || \"TSMethodSignature\" === nodeType || \"TSIndexSignature\" === nodeType || \"TSAnyKeyword\" === nodeType || \"TSBooleanKeyword\" === nodeType || \"TSBigIntKeyword\" === nodeType || \"TSIntrinsicKeyword\" === nodeType || \"TSNeverKeyword\" === nodeType || \"TSNullKeyword\" === nodeType || \"TSNumberKeyword\" === nodeType || \"TSObjectKeyword\" === nodeType || \"TSStringKeyword\" === nodeType || \"TSSymbolKeyword\" === nodeType || \"TSUndefinedKeyword\" === nodeType || \"TSUnknownKeyword\" === nodeType || \"TSVoidKeyword\" === nodeType || \"TSThisType\" === nodeType || \"TSFunctionType\" === nodeType || \"TSConstructorType\" === nodeType || \"TSTypeReference\" === nodeType || \"TSTypePredicate\" === nodeType || \"TSTypeQuery\" === nodeType || \"TSTypeLiteral\" === nodeType || \"TSArrayType\" === nodeType || \"TSTupleType\" === nodeType || \"TSOptionalType\" === nodeType || \"TSRestType\" === nodeType || \"TSNamedTupleMember\" === nodeType || \"TSUnionType\" === nodeType || \"TSIntersectionType\" === nodeType || \"TSConditionalType\" === nodeType || \"TSInferType\" === nodeType || \"TSParenthesizedType\" === nodeType || \"TSTypeOperator\" === nodeType || \"TSIndexedAccessType\" === nodeType || \"TSMappedType\" === nodeType || \"TSLiteralType\" === nodeType || \"TSExpressionWithTypeArguments\" === nodeType || \"TSInterfaceDeclaration\" === nodeType || \"TSInterfaceBody\" === nodeType || \"TSTypeAliasDeclaration\" === nodeType || \"TSInstantiationExpression\" === nodeType || \"TSAsExpression\" === nodeType || \"TSTypeAssertion\" === nodeType || \"TSEnumDeclaration\" === nodeType || \"TSEnumMember\" === nodeType || \"TSModuleDeclaration\" === nodeType || \"TSModuleBlock\" === nodeType || \"TSImportType\" === nodeType || \"TSImportEqualsDeclaration\" === nodeType || \"TSExternalModuleReference\" === nodeType || \"TSNonNullExpression\" === nodeType || \"TSExportAssignment\" === nodeType || \"TSNamespaceExportDeclaration\" === nodeType || \"TSTypeAnnotation\" === nodeType || \"TSTypeParameterInstantiation\" === nodeType || \"TSTypeParameterDeclaration\" === nodeType || \"TSTypeParameter\" === nodeType) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSTypeElement(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (\"TSCallSignatureDeclaration\" === nodeType || \"TSConstructSignatureDeclaration\" === nodeType || \"TSPropertySignature\" === nodeType || \"TSMethodSignature\" === nodeType || \"TSIndexSignature\" === nodeType) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSType(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (\"TSAnyKeyword\" === nodeType || \"TSBooleanKeyword\" === nodeType || \"TSBigIntKeyword\" === nodeType || \"TSIntrinsicKeyword\" === nodeType || \"TSNeverKeyword\" === nodeType || \"TSNullKeyword\" === nodeType || \"TSNumberKeyword\" === nodeType || \"TSObjectKeyword\" === nodeType || \"TSStringKeyword\" === nodeType || \"TSSymbolKeyword\" === nodeType || \"TSUndefinedKeyword\" === nodeType || \"TSUnknownKeyword\" === nodeType || \"TSVoidKeyword\" === nodeType || \"TSThisType\" === nodeType || \"TSFunctionType\" === nodeType || \"TSConstructorType\" === nodeType || \"TSTypeReference\" === nodeType || \"TSTypePredicate\" === nodeType || \"TSTypeQuery\" === nodeType || \"TSTypeLiteral\" === nodeType || \"TSArrayType\" === nodeType || \"TSTupleType\" === nodeType || \"TSOptionalType\" === nodeType || \"TSRestType\" === nodeType || \"TSUnionType\" === nodeType || \"TSIntersectionType\" === nodeType || \"TSConditionalType\" === nodeType || \"TSInferType\" === nodeType || \"TSParenthesizedType\" === nodeType || \"TSTypeOperator\" === nodeType || \"TSIndexedAccessType\" === nodeType || \"TSMappedType\" === nodeType || \"TSLiteralType\" === nodeType || \"TSExpressionWithTypeArguments\" === nodeType || \"TSImportType\" === nodeType) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSBaseType(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (\"TSAnyKeyword\" === nodeType || \"TSBooleanKeyword\" === nodeType || \"TSBigIntKeyword\" === nodeType || \"TSIntrinsicKeyword\" === nodeType || \"TSNeverKeyword\" === nodeType || \"TSNullKeyword\" === nodeType || \"TSNumberKeyword\" === nodeType || \"TSObjectKeyword\" === nodeType || \"TSStringKeyword\" === nodeType || \"TSSymbolKeyword\" === nodeType || \"TSUndefinedKeyword\" === nodeType || \"TSUnknownKeyword\" === nodeType || \"TSVoidKeyword\" === nodeType || \"TSThisType\" === nodeType || \"TSLiteralType\" === nodeType) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isNumberLiteral(node, opts) {\n  console.trace(\"The node type NumberLiteral has been renamed to NumericLiteral\");\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"NumberLiteral\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isRegexLiteral(node, opts) {\n  console.trace(\"The node type RegexLiteral has been renamed to RegExpLiteral\");\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"RegexLiteral\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isRestProperty(node, opts) {\n  console.trace(\"The node type RestProperty has been renamed to RestElement\");\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"RestProperty\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isSpreadProperty(node, opts) {\n  console.trace(\"The node type SpreadProperty has been renamed to SpreadElement\");\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"SpreadProperty\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = shallowEqual;\n\nfunction shallowEqual(actual, expected) {\n  const keys = Object.keys(expected);\n\n  for (const key of keys) {\n    if (actual[key] !== expected[key]) {\n      return false;\n    }\n  }\n\n  return true;\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isCompatTag;\n\nfunction isCompatTag(tagName) {\n  return !!tagName && /^[a-z]/.test(tagName);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = buildChildren;\n\nvar _generated = require(\"../../validators/generated\");\n\nvar _cleanJSXElementLiteralChild = require(\"../../utils/react/cleanJSXElementLiteralChild\");\n\nfunction buildChildren(node) {\n  const elements = [];\n\n  for (let i = 0; i < node.children.length; i++) {\n    let child = node.children[i];\n\n    if ((0, _generated.isJSXText)(child)) {\n      (0, _cleanJSXElementLiteralChild.default)(child, elements);\n      continue;\n    }\n\n    if ((0, _generated.isJSXExpressionContainer)(child)) child = child.expression;\n    if ((0, _generated.isJSXEmptyExpression)(child)) continue;\n    elements.push(child);\n  }\n\n  return elements;\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = cleanJSXElementLiteralChild;\n\nvar _generated = require(\"../../builders/generated\");\n\nfunction cleanJSXElementLiteralChild(child, args) {\n  const lines = child.value.split(/\\r\\n|\\n|\\r/);\n  let lastNonEmptyLine = 0;\n\n  for (let i = 0; i < lines.length; i++) {\n    if (lines[i].match(/[^ \\t]/)) {\n      lastNonEmptyLine = i;\n    }\n  }\n\n  let str = \"\";\n\n  for (let i = 0; i < lines.length; i++) {\n    const line = lines[i];\n    const isFirstLine = i === 0;\n    const isLastLine = i === lines.length - 1;\n    const isLastNonEmptyLine = i === lastNonEmptyLine;\n    let trimmedLine = line.replace(/\\t/g, \" \");\n\n    if (!isFirstLine) {\n      trimmedLine = trimmedLine.replace(/^[ ]+/, \"\");\n    }\n\n    if (!isLastLine) {\n      trimmedLine = trimmedLine.replace(/[ ]+$/, \"\");\n    }\n\n    if (trimmedLine) {\n      if (!isLastNonEmptyLine) {\n        trimmedLine += \" \";\n      }\n\n      str += trimmedLine;\n    }\n  }\n\n  if (str) args.push((0, _generated.stringLiteral)(str));\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.anyTypeAnnotation = anyTypeAnnotation;\nexports.argumentPlaceholder = argumentPlaceholder;\nexports.arrayExpression = arrayExpression;\nexports.arrayPattern = arrayPattern;\nexports.arrayTypeAnnotation = arrayTypeAnnotation;\nexports.arrowFunctionExpression = arrowFunctionExpression;\nexports.assignmentExpression = assignmentExpression;\nexports.assignmentPattern = assignmentPattern;\nexports.awaitExpression = awaitExpression;\nexports.bigIntLiteral = bigIntLiteral;\nexports.binaryExpression = binaryExpression;\nexports.bindExpression = bindExpression;\nexports.blockStatement = blockStatement;\nexports.booleanLiteral = booleanLiteral;\nexports.booleanLiteralTypeAnnotation = booleanLiteralTypeAnnotation;\nexports.booleanTypeAnnotation = booleanTypeAnnotation;\nexports.breakStatement = breakStatement;\nexports.callExpression = callExpression;\nexports.catchClause = catchClause;\nexports.classAccessorProperty = classAccessorProperty;\nexports.classBody = classBody;\nexports.classDeclaration = classDeclaration;\nexports.classExpression = classExpression;\nexports.classImplements = classImplements;\nexports.classMethod = classMethod;\nexports.classPrivateMethod = classPrivateMethod;\nexports.classPrivateProperty = classPrivateProperty;\nexports.classProperty = classProperty;\nexports.conditionalExpression = conditionalExpression;\nexports.continueStatement = continueStatement;\nexports.debuggerStatement = debuggerStatement;\nexports.decimalLiteral = decimalLiteral;\nexports.declareClass = declareClass;\nexports.declareExportAllDeclaration = declareExportAllDeclaration;\nexports.declareExportDeclaration = declareExportDeclaration;\nexports.declareFunction = declareFunction;\nexports.declareInterface = declareInterface;\nexports.declareModule = declareModule;\nexports.declareModuleExports = declareModuleExports;\nexports.declareOpaqueType = declareOpaqueType;\nexports.declareTypeAlias = declareTypeAlias;\nexports.declareVariable = declareVariable;\nexports.declaredPredicate = declaredPredicate;\nexports.decorator = decorator;\nexports.directive = directive;\nexports.directiveLiteral = directiveLiteral;\nexports.doExpression = doExpression;\nexports.doWhileStatement = doWhileStatement;\nexports.emptyStatement = emptyStatement;\nexports.emptyTypeAnnotation = emptyTypeAnnotation;\nexports.enumBooleanBody = enumBooleanBody;\nexports.enumBooleanMember = enumBooleanMember;\nexports.enumDeclaration = enumDeclaration;\nexports.enumDefaultedMember = enumDefaultedMember;\nexports.enumNumberBody = enumNumberBody;\nexports.enumNumberMember = enumNumberMember;\nexports.enumStringBody = enumStringBody;\nexports.enumStringMember = enumStringMember;\nexports.enumSymbolBody = enumSymbolBody;\nexports.existsTypeAnnotation = existsTypeAnnotation;\nexports.exportAllDeclaration = exportAllDeclaration;\nexports.exportDefaultDeclaration = exportDefaultDeclaration;\nexports.exportDefaultSpecifier = exportDefaultSpecifier;\nexports.exportNamedDeclaration = exportNamedDeclaration;\nexports.exportNamespaceSpecifier = exportNamespaceSpecifier;\nexports.exportSpecifier = exportSpecifier;\nexports.expressionStatement = expressionStatement;\nexports.file = file;\nexports.forInStatement = forInStatement;\nexports.forOfStatement = forOfStatement;\nexports.forStatement = forStatement;\nexports.functionDeclaration = functionDeclaration;\nexports.functionExpression = functionExpression;\nexports.functionTypeAnnotation = functionTypeAnnotation;\nexports.functionTypeParam = functionTypeParam;\nexports.genericTypeAnnotation = genericTypeAnnotation;\nexports.identifier = identifier;\nexports.ifStatement = ifStatement;\nexports.import = _import;\nexports.importAttribute = importAttribute;\nexports.importDeclaration = importDeclaration;\nexports.importDefaultSpecifier = importDefaultSpecifier;\nexports.importNamespaceSpecifier = importNamespaceSpecifier;\nexports.importSpecifier = importSpecifier;\nexports.indexedAccessType = indexedAccessType;\nexports.inferredPredicate = inferredPredicate;\nexports.interfaceDeclaration = interfaceDeclaration;\nexports.interfaceExtends = interfaceExtends;\nexports.interfaceTypeAnnotation = interfaceTypeAnnotation;\nexports.interpreterDirective = interpreterDirective;\nexports.intersectionTypeAnnotation = intersectionTypeAnnotation;\nexports.jSXAttribute = exports.jsxAttribute = jsxAttribute;\nexports.jSXClosingElement = exports.jsxClosingElement = jsxClosingElement;\nexports.jSXClosingFragment = exports.jsxClosingFragment = jsxClosingFragment;\nexports.jSXElement = exports.jsxElement = jsxElement;\nexports.jSXEmptyExpression = exports.jsxEmptyExpression = jsxEmptyExpression;\nexports.jSXExpressionContainer = exports.jsxExpressionContainer = jsxExpressionContainer;\nexports.jSXFragment = exports.jsxFragment = jsxFragment;\nexports.jSXIdentifier = exports.jsxIdentifier = jsxIdentifier;\nexports.jSXMemberExpression = exports.jsxMemberExpression = jsxMemberExpression;\nexports.jSXNamespacedName = exports.jsxNamespacedName = jsxNamespacedName;\nexports.jSXOpeningElement = exports.jsxOpeningElement = jsxOpeningElement;\nexports.jSXOpeningFragment = exports.jsxOpeningFragment = jsxOpeningFragment;\nexports.jSXSpreadAttribute = exports.jsxSpreadAttribute = jsxSpreadAttribute;\nexports.jSXSpreadChild = exports.jsxSpreadChild = jsxSpreadChild;\nexports.jSXText = exports.jsxText = jsxText;\nexports.labeledStatement = labeledStatement;\nexports.logicalExpression = logicalExpression;\nexports.memberExpression = memberExpression;\nexports.metaProperty = metaProperty;\nexports.mixedTypeAnnotation = mixedTypeAnnotation;\nexports.moduleExpression = moduleExpression;\nexports.newExpression = newExpression;\nexports.noop = noop;\nexports.nullLiteral = nullLiteral;\nexports.nullLiteralTypeAnnotation = nullLiteralTypeAnnotation;\nexports.nullableTypeAnnotation = nullableTypeAnnotation;\nexports.numberLiteral = NumberLiteral;\nexports.numberLiteralTypeAnnotation = numberLiteralTypeAnnotation;\nexports.numberTypeAnnotation = numberTypeAnnotation;\nexports.numericLiteral = numericLiteral;\nexports.objectExpression = objectExpression;\nexports.objectMethod = objectMethod;\nexports.objectPattern = objectPattern;\nexports.objectProperty = objectProperty;\nexports.objectTypeAnnotation = objectTypeAnnotation;\nexports.objectTypeCallProperty = objectTypeCallProperty;\nexports.objectTypeIndexer = objectTypeIndexer;\nexports.objectTypeInternalSlot = objectTypeInternalSlot;\nexports.objectTypeProperty = objectTypeProperty;\nexports.objectTypeSpreadProperty = objectTypeSpreadProperty;\nexports.opaqueType = opaqueType;\nexports.optionalCallExpression = optionalCallExpression;\nexports.optionalIndexedAccessType = optionalIndexedAccessType;\nexports.optionalMemberExpression = optionalMemberExpression;\nexports.parenthesizedExpression = parenthesizedExpression;\nexports.pipelineBareFunction = pipelineBareFunction;\nexports.pipelinePrimaryTopicReference = pipelinePrimaryTopicReference;\nexports.pipelineTopicExpression = pipelineTopicExpression;\nexports.placeholder = placeholder;\nexports.privateName = privateName;\nexports.program = program;\nexports.qualifiedTypeIdentifier = qualifiedTypeIdentifier;\nexports.recordExpression = recordExpression;\nexports.regExpLiteral = regExpLiteral;\nexports.regexLiteral = RegexLiteral;\nexports.restElement = restElement;\nexports.restProperty = RestProperty;\nexports.returnStatement = returnStatement;\nexports.sequenceExpression = sequenceExpression;\nexports.spreadElement = spreadElement;\nexports.spreadProperty = SpreadProperty;\nexports.staticBlock = staticBlock;\nexports.stringLiteral = stringLiteral;\nexports.stringLiteralTypeAnnotation = stringLiteralTypeAnnotation;\nexports.stringTypeAnnotation = stringTypeAnnotation;\nexports.super = _super;\nexports.switchCase = switchCase;\nexports.switchStatement = switchStatement;\nexports.symbolTypeAnnotation = symbolTypeAnnotation;\nexports.taggedTemplateExpression = taggedTemplateExpression;\nexports.templateElement = templateElement;\nexports.templateLiteral = templateLiteral;\nexports.thisExpression = thisExpression;\nexports.thisTypeAnnotation = thisTypeAnnotation;\nexports.throwStatement = throwStatement;\nexports.topicReference = topicReference;\nexports.tryStatement = tryStatement;\nexports.tSAnyKeyword = exports.tsAnyKeyword = tsAnyKeyword;\nexports.tSArrayType = exports.tsArrayType = tsArrayType;\nexports.tSAsExpression = exports.tsAsExpression = tsAsExpression;\nexports.tSBigIntKeyword = exports.tsBigIntKeyword = tsBigIntKeyword;\nexports.tSBooleanKeyword = exports.tsBooleanKeyword = tsBooleanKeyword;\nexports.tSCallSignatureDeclaration = exports.tsCallSignatureDeclaration = tsCallSignatureDeclaration;\nexports.tSConditionalType = exports.tsConditionalType = tsConditionalType;\nexports.tSConstructSignatureDeclaration = exports.tsConstructSignatureDeclaration = tsConstructSignatureDeclaration;\nexports.tSConstructorType = exports.tsConstructorType = tsConstructorType;\nexports.tSDeclareFunction = exports.tsDeclareFunction = tsDeclareFunction;\nexports.tSDeclareMethod = exports.tsDeclareMethod = tsDeclareMethod;\nexports.tSEnumDeclaration = exports.tsEnumDeclaration = tsEnumDeclaration;\nexports.tSEnumMember = exports.tsEnumMember = tsEnumMember;\nexports.tSExportAssignment = exports.tsExportAssignment = tsExportAssignment;\nexports.tSExpressionWithTypeArguments = exports.tsExpressionWithTypeArguments = tsExpressionWithTypeArguments;\nexports.tSExternalModuleReference = exports.tsExternalModuleReference = tsExternalModuleReference;\nexports.tSFunctionType = exports.tsFunctionType = tsFunctionType;\nexports.tSImportEqualsDeclaration = exports.tsImportEqualsDeclaration = tsImportEqualsDeclaration;\nexports.tSImportType = exports.tsImportType = tsImportType;\nexports.tSIndexSignature = exports.tsIndexSignature = tsIndexSignature;\nexports.tSIndexedAccessType = exports.tsIndexedAccessType = tsIndexedAccessType;\nexports.tSInferType = exports.tsInferType = tsInferType;\nexports.tSInstantiationExpression = exports.tsInstantiationExpression = tsInstantiationExpression;\nexports.tSInterfaceBody = exports.tsInterfaceBody = tsInterfaceBody;\nexports.tSInterfaceDeclaration = exports.tsInterfaceDeclaration = tsInterfaceDeclaration;\nexports.tSIntersectionType = exports.tsIntersectionType = tsIntersectionType;\nexports.tSIntrinsicKeyword = exports.tsIntrinsicKeyword = tsIntrinsicKeyword;\nexports.tSLiteralType = exports.tsLiteralType = tsLiteralType;\nexports.tSMappedType = exports.tsMappedType = tsMappedType;\nexports.tSMethodSignature = exports.tsMethodSignature = tsMethodSignature;\nexports.tSModuleBlock = exports.tsModuleBlock = tsModuleBlock;\nexports.tSModuleDeclaration = exports.tsModuleDeclaration = tsModuleDeclaration;\nexports.tSNamedTupleMember = exports.tsNamedTupleMember = tsNamedTupleMember;\nexports.tSNamespaceExportDeclaration = exports.tsNamespaceExportDeclaration = tsNamespaceExportDeclaration;\nexports.tSNeverKeyword = exports.tsNeverKeyword = tsNeverKeyword;\nexports.tSNonNullExpression = exports.tsNonNullExpression = tsNonNullExpression;\nexports.tSNullKeyword = exports.tsNullKeyword = tsNullKeyword;\nexports.tSNumberKeyword = exports.tsNumberKeyword = tsNumberKeyword;\nexports.tSObjectKeyword = exports.tsObjectKeyword = tsObjectKeyword;\nexports.tSOptionalType = exports.tsOptionalType = tsOptionalType;\nexports.tSParameterProperty = exports.tsParameterProperty = tsParameterProperty;\nexports.tSParenthesizedType = exports.tsParenthesizedType = tsParenthesizedType;\nexports.tSPropertySignature = exports.tsPropertySignature = tsPropertySignature;\nexports.tSQualifiedName = exports.tsQualifiedName = tsQualifiedName;\nexports.tSRestType = exports.tsRestType = tsRestType;\nexports.tSStringKeyword = exports.tsStringKeyword = tsStringKeyword;\nexports.tSSymbolKeyword = exports.tsSymbolKeyword = tsSymbolKeyword;\nexports.tSThisType = exports.tsThisType = tsThisType;\nexports.tSTupleType = exports.tsTupleType = tsTupleType;\nexports.tSTypeAliasDeclaration = exports.tsTypeAliasDeclaration = tsTypeAliasDeclaration;\nexports.tSTypeAnnotation = exports.tsTypeAnnotation = tsTypeAnnotation;\nexports.tSTypeAssertion = exports.tsTypeAssertion = tsTypeAssertion;\nexports.tSTypeLiteral = exports.tsTypeLiteral = tsTypeLiteral;\nexports.tSTypeOperator = exports.tsTypeOperator = tsTypeOperator;\nexports.tSTypeParameter = exports.tsTypeParameter = tsTypeParameter;\nexports.tSTypeParameterDeclaration = exports.tsTypeParameterDeclaration = tsTypeParameterDeclaration;\nexports.tSTypeParameterInstantiation = exports.tsTypeParameterInstantiation = tsTypeParameterInstantiation;\nexports.tSTypePredicate = exports.tsTypePredicate = tsTypePredicate;\nexports.tSTypeQuery = exports.tsTypeQuery = tsTypeQuery;\nexports.tSTypeReference = exports.tsTypeReference = tsTypeReference;\nexports.tSUndefinedKeyword = exports.tsUndefinedKeyword = tsUndefinedKeyword;\nexports.tSUnionType = exports.tsUnionType = tsUnionType;\nexports.tSUnknownKeyword = exports.tsUnknownKeyword = tsUnknownKeyword;\nexports.tSVoidKeyword = exports.tsVoidKeyword = tsVoidKeyword;\nexports.tupleExpression = tupleExpression;\nexports.tupleTypeAnnotation = tupleTypeAnnotation;\nexports.typeAlias = typeAlias;\nexports.typeAnnotation = typeAnnotation;\nexports.typeCastExpression = typeCastExpression;\nexports.typeParameter = typeParameter;\nexports.typeParameterDeclaration = typeParameterDeclaration;\nexports.typeParameterInstantiation = typeParameterInstantiation;\nexports.typeofTypeAnnotation = typeofTypeAnnotation;\nexports.unaryExpression = unaryExpression;\nexports.unionTypeAnnotation = unionTypeAnnotation;\nexports.updateExpression = updateExpression;\nexports.v8IntrinsicIdentifier = v8IntrinsicIdentifier;\nexports.variableDeclaration = variableDeclaration;\nexports.variableDeclarator = variableDeclarator;\nexports.variance = variance;\nexports.voidTypeAnnotation = voidTypeAnnotation;\nexports.whileStatement = whileStatement;\nexports.withStatement = withStatement;\nexports.yieldExpression = yieldExpression;\n\nvar _validateNode = require(\"../validateNode\");\n\nfunction arrayExpression(elements = []) {\n  return (0, _validateNode.default)({\n    type: \"ArrayExpression\",\n    elements\n  });\n}\n\nfunction assignmentExpression(operator, left, right) {\n  return (0, _validateNode.default)({\n    type: \"AssignmentExpression\",\n    operator,\n    left,\n    right\n  });\n}\n\nfunction binaryExpression(operator, left, right) {\n  return (0, _validateNode.default)({\n    type: \"BinaryExpression\",\n    operator,\n    left,\n    right\n  });\n}\n\nfunction interpreterDirective(value) {\n  return (0, _validateNode.default)({\n    type: \"InterpreterDirective\",\n    value\n  });\n}\n\nfunction directive(value) {\n  return (0, _validateNode.default)({\n    type: \"Directive\",\n    value\n  });\n}\n\nfunction directiveLiteral(value) {\n  return (0, _validateNode.default)({\n    type: \"DirectiveLiteral\",\n    value\n  });\n}\n\nfunction blockStatement(body, directives = []) {\n  return (0, _validateNode.default)({\n    type: \"BlockStatement\",\n    body,\n    directives\n  });\n}\n\nfunction breakStatement(label = null) {\n  return (0, _validateNode.default)({\n    type: \"BreakStatement\",\n    label\n  });\n}\n\nfunction callExpression(callee, _arguments) {\n  return (0, _validateNode.default)({\n    type: \"CallExpression\",\n    callee,\n    arguments: _arguments\n  });\n}\n\nfunction catchClause(param = null, body) {\n  return (0, _validateNode.default)({\n    type: \"CatchClause\",\n    param,\n    body\n  });\n}\n\nfunction conditionalExpression(test, consequent, alternate) {\n  return (0, _validateNode.default)({\n    type: \"ConditionalExpression\",\n    test,\n    consequent,\n    alternate\n  });\n}\n\nfunction continueStatement(label = null) {\n  return (0, _validateNode.default)({\n    type: \"ContinueStatement\",\n    label\n  });\n}\n\nfunction debuggerStatement() {\n  return {\n    type: \"DebuggerStatement\"\n  };\n}\n\nfunction doWhileStatement(test, body) {\n  return (0, _validateNode.default)({\n    type: \"DoWhileStatement\",\n    test,\n    body\n  });\n}\n\nfunction emptyStatement() {\n  return {\n    type: \"EmptyStatement\"\n  };\n}\n\nfunction expressionStatement(expression) {\n  return (0, _validateNode.default)({\n    type: \"ExpressionStatement\",\n    expression\n  });\n}\n\nfunction file(program, comments = null, tokens = null) {\n  return (0, _validateNode.default)({\n    type: \"File\",\n    program,\n    comments,\n    tokens\n  });\n}\n\nfunction forInStatement(left, right, body) {\n  return (0, _validateNode.default)({\n    type: \"ForInStatement\",\n    left,\n    right,\n    body\n  });\n}\n\nfunction forStatement(init = null, test = null, update = null, body) {\n  return (0, _validateNode.default)({\n    type: \"ForStatement\",\n    init,\n    test,\n    update,\n    body\n  });\n}\n\nfunction functionDeclaration(id = null, params, body, generator = false, async = false) {\n  return (0, _validateNode.default)({\n    type: \"FunctionDeclaration\",\n    id,\n    params,\n    body,\n    generator,\n    async\n  });\n}\n\nfunction functionExpression(id = null, params, body, generator = false, async = false) {\n  return (0, _validateNode.default)({\n    type: \"FunctionExpression\",\n    id,\n    params,\n    body,\n    generator,\n    async\n  });\n}\n\nfunction identifier(name) {\n  return (0, _validateNode.default)({\n    type: \"Identifier\",\n    name\n  });\n}\n\nfunction ifStatement(test, consequent, alternate = null) {\n  return (0, _validateNode.default)({\n    type: \"IfStatement\",\n    test,\n    consequent,\n    alternate\n  });\n}\n\nfunction labeledStatement(label, body) {\n  return (0, _validateNode.default)({\n    type: \"LabeledStatement\",\n    label,\n    body\n  });\n}\n\nfunction stringLiteral(value) {\n  return (0, _validateNode.default)({\n    type: \"StringLiteral\",\n    value\n  });\n}\n\nfunction numericLiteral(value) {\n  return (0, _validateNode.default)({\n    type: \"NumericLiteral\",\n    value\n  });\n}\n\nfunction nullLiteral() {\n  return {\n    type: \"NullLiteral\"\n  };\n}\n\nfunction booleanLiteral(value) {\n  return (0, _validateNode.default)({\n    type: \"BooleanLiteral\",\n    value\n  });\n}\n\nfunction regExpLiteral(pattern, flags = \"\") {\n  return (0, _validateNode.default)({\n    type: \"RegExpLiteral\",\n    pattern,\n    flags\n  });\n}\n\nfunction logicalExpression(operator, left, right) {\n  return (0, _validateNode.default)({\n    type: \"LogicalExpression\",\n    operator,\n    left,\n    right\n  });\n}\n\nfunction memberExpression(object, property, computed = false, optional = null) {\n  return (0, _validateNode.default)({\n    type: \"MemberExpression\",\n    object,\n    property,\n    computed,\n    optional\n  });\n}\n\nfunction newExpression(callee, _arguments) {\n  return (0, _validateNode.default)({\n    type: \"NewExpression\",\n    callee,\n    arguments: _arguments\n  });\n}\n\nfunction program(body, directives = [], sourceType = \"script\", interpreter = null) {\n  return (0, _validateNode.default)({\n    type: \"Program\",\n    body,\n    directives,\n    sourceType,\n    interpreter,\n    sourceFile: null\n  });\n}\n\nfunction objectExpression(properties) {\n  return (0, _validateNode.default)({\n    type: \"ObjectExpression\",\n    properties\n  });\n}\n\nfunction objectMethod(kind = \"method\", key, params, body, computed = false, generator = false, async = false) {\n  return (0, _validateNode.default)({\n    type: \"ObjectMethod\",\n    kind,\n    key,\n    params,\n    body,\n    computed,\n    generator,\n    async\n  });\n}\n\nfunction objectProperty(key, value, computed = false, shorthand = false, decorators = null) {\n  return (0, _validateNode.default)({\n    type: \"ObjectProperty\",\n    key,\n    value,\n    computed,\n    shorthand,\n    decorators\n  });\n}\n\nfunction restElement(argument) {\n  return (0, _validateNode.default)({\n    type: \"RestElement\",\n    argument\n  });\n}\n\nfunction returnStatement(argument = null) {\n  return (0, _validateNode.default)({\n    type: \"ReturnStatement\",\n    argument\n  });\n}\n\nfunction sequenceExpression(expressions) {\n  return (0, _validateNode.default)({\n    type: \"SequenceExpression\",\n    expressions\n  });\n}\n\nfunction parenthesizedExpression(expression) {\n  return (0, _validateNode.default)({\n    type: \"ParenthesizedExpression\",\n    expression\n  });\n}\n\nfunction switchCase(test = null, consequent) {\n  return (0, _validateNode.default)({\n    type: \"SwitchCase\",\n    test,\n    consequent\n  });\n}\n\nfunction switchStatement(discriminant, cases) {\n  return (0, _validateNode.default)({\n    type: \"SwitchStatement\",\n    discriminant,\n    cases\n  });\n}\n\nfunction thisExpression() {\n  return {\n    type: \"ThisExpression\"\n  };\n}\n\nfunction throwStatement(argument) {\n  return (0, _validateNode.default)({\n    type: \"ThrowStatement\",\n    argument\n  });\n}\n\nfunction tryStatement(block, handler = null, finalizer = null) {\n  return (0, _validateNode.default)({\n    type: \"TryStatement\",\n    block,\n    handler,\n    finalizer\n  });\n}\n\nfunction unaryExpression(operator, argument, prefix = true) {\n  return (0, _validateNode.default)({\n    type: \"UnaryExpression\",\n    operator,\n    argument,\n    prefix\n  });\n}\n\nfunction updateExpression(operator, argument, prefix = false) {\n  return (0, _validateNode.default)({\n    type: \"UpdateExpression\",\n    operator,\n    argument,\n    prefix\n  });\n}\n\nfunction variableDeclaration(kind, declarations) {\n  return (0, _validateNode.default)({\n    type: \"VariableDeclaration\",\n    kind,\n    declarations\n  });\n}\n\nfunction variableDeclarator(id, init = null) {\n  return (0, _validateNode.default)({\n    type: \"VariableDeclarator\",\n    id,\n    init\n  });\n}\n\nfunction whileStatement(test, body) {\n  return (0, _validateNode.default)({\n    type: \"WhileStatement\",\n    test,\n    body\n  });\n}\n\nfunction withStatement(object, body) {\n  return (0, _validateNode.default)({\n    type: \"WithStatement\",\n    object,\n    body\n  });\n}\n\nfunction assignmentPattern(left, right) {\n  return (0, _validateNode.default)({\n    type: \"AssignmentPattern\",\n    left,\n    right\n  });\n}\n\nfunction arrayPattern(elements) {\n  return (0, _validateNode.default)({\n    type: \"ArrayPattern\",\n    elements\n  });\n}\n\nfunction arrowFunctionExpression(params, body, async = false) {\n  return (0, _validateNode.default)({\n    type: \"ArrowFunctionExpression\",\n    params,\n    body,\n    async,\n    expression: null\n  });\n}\n\nfunction classBody(body) {\n  return (0, _validateNode.default)({\n    type: \"ClassBody\",\n    body\n  });\n}\n\nfunction classExpression(id = null, superClass = null, body, decorators = null) {\n  return (0, _validateNode.default)({\n    type: \"ClassExpression\",\n    id,\n    superClass,\n    body,\n    decorators\n  });\n}\n\nfunction classDeclaration(id, superClass = null, body, decorators = null) {\n  return (0, _validateNode.default)({\n    type: \"ClassDeclaration\",\n    id,\n    superClass,\n    body,\n    decorators\n  });\n}\n\nfunction exportAllDeclaration(source) {\n  return (0, _validateNode.default)({\n    type: \"ExportAllDeclaration\",\n    source\n  });\n}\n\nfunction exportDefaultDeclaration(declaration) {\n  return (0, _validateNode.default)({\n    type: \"ExportDefaultDeclaration\",\n    declaration\n  });\n}\n\nfunction exportNamedDeclaration(declaration = null, specifiers = [], source = null) {\n  return (0, _validateNode.default)({\n    type: \"ExportNamedDeclaration\",\n    declaration,\n    specifiers,\n    source\n  });\n}\n\nfunction exportSpecifier(local, exported) {\n  return (0, _validateNode.default)({\n    type: \"ExportSpecifier\",\n    local,\n    exported\n  });\n}\n\nfunction forOfStatement(left, right, body, _await = false) {\n  return (0, _validateNode.default)({\n    type: \"ForOfStatement\",\n    left,\n    right,\n    body,\n    await: _await\n  });\n}\n\nfunction importDeclaration(specifiers, source) {\n  return (0, _validateNode.default)({\n    type: \"ImportDeclaration\",\n    specifiers,\n    source\n  });\n}\n\nfunction importDefaultSpecifier(local) {\n  return (0, _validateNode.default)({\n    type: \"ImportDefaultSpecifier\",\n    local\n  });\n}\n\nfunction importNamespaceSpecifier(local) {\n  return (0, _validateNode.default)({\n    type: \"ImportNamespaceSpecifier\",\n    local\n  });\n}\n\nfunction importSpecifier(local, imported) {\n  return (0, _validateNode.default)({\n    type: \"ImportSpecifier\",\n    local,\n    imported\n  });\n}\n\nfunction metaProperty(meta, property) {\n  return (0, _validateNode.default)({\n    type: \"MetaProperty\",\n    meta,\n    property\n  });\n}\n\nfunction classMethod(kind = \"method\", key, params, body, computed = false, _static = false, generator = false, async = false) {\n  return (0, _validateNode.default)({\n    type: \"ClassMethod\",\n    kind,\n    key,\n    params,\n    body,\n    computed,\n    static: _static,\n    generator,\n    async\n  });\n}\n\nfunction objectPattern(properties) {\n  return (0, _validateNode.default)({\n    type: \"ObjectPattern\",\n    properties\n  });\n}\n\nfunction spreadElement(argument) {\n  return (0, _validateNode.default)({\n    type: \"SpreadElement\",\n    argument\n  });\n}\n\nfunction _super() {\n  return {\n    type: \"Super\"\n  };\n}\n\nfunction taggedTemplateExpression(tag, quasi) {\n  return (0, _validateNode.default)({\n    type: \"TaggedTemplateExpression\",\n    tag,\n    quasi\n  });\n}\n\nfunction templateElement(value, tail = false) {\n  return (0, _validateNode.default)({\n    type: \"TemplateElement\",\n    value,\n    tail\n  });\n}\n\nfunction templateLiteral(quasis, expressions) {\n  return (0, _validateNode.default)({\n    type: \"TemplateLiteral\",\n    quasis,\n    expressions\n  });\n}\n\nfunction yieldExpression(argument = null, delegate = false) {\n  return (0, _validateNode.default)({\n    type: \"YieldExpression\",\n    argument,\n    delegate\n  });\n}\n\nfunction awaitExpression(argument) {\n  return (0, _validateNode.default)({\n    type: \"AwaitExpression\",\n    argument\n  });\n}\n\nfunction _import() {\n  return {\n    type: \"Import\"\n  };\n}\n\nfunction bigIntLiteral(value) {\n  return (0, _validateNode.default)({\n    type: \"BigIntLiteral\",\n    value\n  });\n}\n\nfunction exportNamespaceSpecifier(exported) {\n  return (0, _validateNode.default)({\n    type: \"ExportNamespaceSpecifier\",\n    exported\n  });\n}\n\nfunction optionalMemberExpression(object, property, computed = false, optional) {\n  return (0, _validateNode.default)({\n    type: \"OptionalMemberExpression\",\n    object,\n    property,\n    computed,\n    optional\n  });\n}\n\nfunction optionalCallExpression(callee, _arguments, optional) {\n  return (0, _validateNode.default)({\n    type: \"OptionalCallExpression\",\n    callee,\n    arguments: _arguments,\n    optional\n  });\n}\n\nfunction classProperty(key, value = null, typeAnnotation = null, decorators = null, computed = false, _static = false) {\n  return (0, _validateNode.default)({\n    type: \"ClassProperty\",\n    key,\n    value,\n    typeAnnotation,\n    decorators,\n    computed,\n    static: _static\n  });\n}\n\nfunction classAccessorProperty(key, value = null, typeAnnotation = null, decorators = null, computed = false, _static = false) {\n  return (0, _validateNode.default)({\n    type: \"ClassAccessorProperty\",\n    key,\n    value,\n    typeAnnotation,\n    decorators,\n    computed,\n    static: _static\n  });\n}\n\nfunction classPrivateProperty(key, value = null, decorators = null, _static = false) {\n  return (0, _validateNode.default)({\n    type: \"ClassPrivateProperty\",\n    key,\n    value,\n    decorators,\n    static: _static\n  });\n}\n\nfunction classPrivateMethod(kind = \"method\", key, params, body, _static = false) {\n  return (0, _validateNode.default)({\n    type: \"ClassPrivateMethod\",\n    kind,\n    key,\n    params,\n    body,\n    static: _static\n  });\n}\n\nfunction privateName(id) {\n  return (0, _validateNode.default)({\n    type: \"PrivateName\",\n    id\n  });\n}\n\nfunction staticBlock(body) {\n  return (0, _validateNode.default)({\n    type: \"StaticBlock\",\n    body\n  });\n}\n\nfunction anyTypeAnnotation() {\n  return {\n    type: \"AnyTypeAnnotation\"\n  };\n}\n\nfunction arrayTypeAnnotation(elementType) {\n  return (0, _validateNode.default)({\n    type: \"ArrayTypeAnnotation\",\n    elementType\n  });\n}\n\nfunction booleanTypeAnnotation() {\n  return {\n    type: \"BooleanTypeAnnotation\"\n  };\n}\n\nfunction booleanLiteralTypeAnnotation(value) {\n  return (0, _validateNode.default)({\n    type: \"BooleanLiteralTypeAnnotation\",\n    value\n  });\n}\n\nfunction nullLiteralTypeAnnotation() {\n  return {\n    type: \"NullLiteralTypeAnnotation\"\n  };\n}\n\nfunction classImplements(id, typeParameters = null) {\n  return (0, _validateNode.default)({\n    type: \"ClassImplements\",\n    id,\n    typeParameters\n  });\n}\n\nfunction declareClass(id, typeParameters = null, _extends = null, body) {\n  return (0, _validateNode.default)({\n    type: \"DeclareClass\",\n    id,\n    typeParameters,\n    extends: _extends,\n    body\n  });\n}\n\nfunction declareFunction(id) {\n  return (0, _validateNode.default)({\n    type: \"DeclareFunction\",\n    id\n  });\n}\n\nfunction declareInterface(id, typeParameters = null, _extends = null, body) {\n  return (0, _validateNode.default)({\n    type: \"DeclareInterface\",\n    id,\n    typeParameters,\n    extends: _extends,\n    body\n  });\n}\n\nfunction declareModule(id, body, kind = null) {\n  return (0, _validateNode.default)({\n    type: \"DeclareModule\",\n    id,\n    body,\n    kind\n  });\n}\n\nfunction declareModuleExports(typeAnnotation) {\n  return (0, _validateNode.default)({\n    type: \"DeclareModuleExports\",\n    typeAnnotation\n  });\n}\n\nfunction declareTypeAlias(id, typeParameters = null, right) {\n  return (0, _validateNode.default)({\n    type: \"DeclareTypeAlias\",\n    id,\n    typeParameters,\n    right\n  });\n}\n\nfunction declareOpaqueType(id, typeParameters = null, supertype = null) {\n  return (0, _validateNode.default)({\n    type: \"DeclareOpaqueType\",\n    id,\n    typeParameters,\n    supertype\n  });\n}\n\nfunction declareVariable(id) {\n  return (0, _validateNode.default)({\n    type: \"DeclareVariable\",\n    id\n  });\n}\n\nfunction declareExportDeclaration(declaration = null, specifiers = null, source = null) {\n  return (0, _validateNode.default)({\n    type: \"DeclareExportDeclaration\",\n    declaration,\n    specifiers,\n    source\n  });\n}\n\nfunction declareExportAllDeclaration(source) {\n  return (0, _validateNode.default)({\n    type: \"DeclareExportAllDeclaration\",\n    source\n  });\n}\n\nfunction declaredPredicate(value) {\n  return (0, _validateNode.default)({\n    type: \"DeclaredPredicate\",\n    value\n  });\n}\n\nfunction existsTypeAnnotation() {\n  return {\n    type: \"ExistsTypeAnnotation\"\n  };\n}\n\nfunction functionTypeAnnotation(typeParameters = null, params, rest = null, returnType) {\n  return (0, _validateNode.default)({\n    type: \"FunctionTypeAnnotation\",\n    typeParameters,\n    params,\n    rest,\n    returnType\n  });\n}\n\nfunction functionTypeParam(name = null, typeAnnotation) {\n  return (0, _validateNode.default)({\n    type: \"FunctionTypeParam\",\n    name,\n    typeAnnotation\n  });\n}\n\nfunction genericTypeAnnotation(id, typeParameters = null) {\n  return (0, _validateNode.default)({\n    type: \"GenericTypeAnnotation\",\n    id,\n    typeParameters\n  });\n}\n\nfunction inferredPredicate() {\n  return {\n    type: \"InferredPredicate\"\n  };\n}\n\nfunction interfaceExtends(id, typeParameters = null) {\n  return (0, _validateNode.default)({\n    type: \"InterfaceExtends\",\n    id,\n    typeParameters\n  });\n}\n\nfunction interfaceDeclaration(id, typeParameters = null, _extends = null, body) {\n  return (0, _validateNode.default)({\n    type: \"InterfaceDeclaration\",\n    id,\n    typeParameters,\n    extends: _extends,\n    body\n  });\n}\n\nfunction interfaceTypeAnnotation(_extends = null, body) {\n  return (0, _validateNode.default)({\n    type: \"InterfaceTypeAnnotation\",\n    extends: _extends,\n    body\n  });\n}\n\nfunction intersectionTypeAnnotation(types) {\n  return (0, _validateNode.default)({\n    type: \"IntersectionTypeAnnotation\",\n    types\n  });\n}\n\nfunction mixedTypeAnnotation() {\n  return {\n    type: \"MixedTypeAnnotation\"\n  };\n}\n\nfunction emptyTypeAnnotation() {\n  return {\n    type: \"EmptyTypeAnnotation\"\n  };\n}\n\nfunction nullableTypeAnnotation(typeAnnotation) {\n  return (0, _validateNode.default)({\n    type: \"NullableTypeAnnotation\",\n    typeAnnotation\n  });\n}\n\nfunction numberLiteralTypeAnnotation(value) {\n  return (0, _validateNode.default)({\n    type: \"NumberLiteralTypeAnnotation\",\n    value\n  });\n}\n\nfunction numberTypeAnnotation() {\n  return {\n    type: \"NumberTypeAnnotation\"\n  };\n}\n\nfunction objectTypeAnnotation(properties, indexers = [], callProperties = [], internalSlots = [], exact = false) {\n  return (0, _validateNode.default)({\n    type: \"ObjectTypeAnnotation\",\n    properties,\n    indexers,\n    callProperties,\n    internalSlots,\n    exact\n  });\n}\n\nfunction objectTypeInternalSlot(id, value, optional, _static, method) {\n  return (0, _validateNode.default)({\n    type: \"ObjectTypeInternalSlot\",\n    id,\n    value,\n    optional,\n    static: _static,\n    method\n  });\n}\n\nfunction objectTypeCallProperty(value) {\n  return (0, _validateNode.default)({\n    type: \"ObjectTypeCallProperty\",\n    value,\n    static: null\n  });\n}\n\nfunction objectTypeIndexer(id = null, key, value, variance = null) {\n  return (0, _validateNode.default)({\n    type: \"ObjectTypeIndexer\",\n    id,\n    key,\n    value,\n    variance,\n    static: null\n  });\n}\n\nfunction objectTypeProperty(key, value, variance = null) {\n  return (0, _validateNode.default)({\n    type: \"ObjectTypeProperty\",\n    key,\n    value,\n    variance,\n    kind: null,\n    method: null,\n    optional: null,\n    proto: null,\n    static: null\n  });\n}\n\nfunction objectTypeSpreadProperty(argument) {\n  return (0, _validateNode.default)({\n    type: \"ObjectTypeSpreadProperty\",\n    argument\n  });\n}\n\nfunction opaqueType(id, typeParameters = null, supertype = null, impltype) {\n  return (0, _validateNode.default)({\n    type: \"OpaqueType\",\n    id,\n    typeParameters,\n    supertype,\n    impltype\n  });\n}\n\nfunction qualifiedTypeIdentifier(id, qualification) {\n  return (0, _validateNode.default)({\n    type: \"QualifiedTypeIdentifier\",\n    id,\n    qualification\n  });\n}\n\nfunction stringLiteralTypeAnnotation(value) {\n  return (0, _validateNode.default)({\n    type: \"StringLiteralTypeAnnotation\",\n    value\n  });\n}\n\nfunction stringTypeAnnotation() {\n  return {\n    type: \"StringTypeAnnotation\"\n  };\n}\n\nfunction symbolTypeAnnotation() {\n  return {\n    type: \"SymbolTypeAnnotation\"\n  };\n}\n\nfunction thisTypeAnnotation() {\n  return {\n    type: \"ThisTypeAnnotation\"\n  };\n}\n\nfunction tupleTypeAnnotation(types) {\n  return (0, _validateNode.default)({\n    type: \"TupleTypeAnnotation\",\n    types\n  });\n}\n\nfunction typeofTypeAnnotation(argument) {\n  return (0, _validateNode.default)({\n    type: \"TypeofTypeAnnotation\",\n    argument\n  });\n}\n\nfunction typeAlias(id, typeParameters = null, right) {\n  return (0, _validateNode.default)({\n    type: \"TypeAlias\",\n    id,\n    typeParameters,\n    right\n  });\n}\n\nfunction typeAnnotation(typeAnnotation) {\n  return (0, _validateNode.default)({\n    type: \"TypeAnnotation\",\n    typeAnnotation\n  });\n}\n\nfunction typeCastExpression(expression, typeAnnotation) {\n  return (0, _validateNode.default)({\n    type: \"TypeCastExpression\",\n    expression,\n    typeAnnotation\n  });\n}\n\nfunction typeParameter(bound = null, _default = null, variance = null) {\n  return (0, _validateNode.default)({\n    type: \"TypeParameter\",\n    bound,\n    default: _default,\n    variance,\n    name: null\n  });\n}\n\nfunction typeParameterDeclaration(params) {\n  return (0, _validateNode.default)({\n    type: \"TypeParameterDeclaration\",\n    params\n  });\n}\n\nfunction typeParameterInstantiation(params) {\n  return (0, _validateNode.default)({\n    type: \"TypeParameterInstantiation\",\n    params\n  });\n}\n\nfunction unionTypeAnnotation(types) {\n  return (0, _validateNode.default)({\n    type: \"UnionTypeAnnotation\",\n    types\n  });\n}\n\nfunction variance(kind) {\n  return (0, _validateNode.default)({\n    type: \"Variance\",\n    kind\n  });\n}\n\nfunction voidTypeAnnotation() {\n  return {\n    type: \"VoidTypeAnnotation\"\n  };\n}\n\nfunction enumDeclaration(id, body) {\n  return (0, _validateNode.default)({\n    type: \"EnumDeclaration\",\n    id,\n    body\n  });\n}\n\nfunction enumBooleanBody(members) {\n  return (0, _validateNode.default)({\n    type: \"EnumBooleanBody\",\n    members,\n    explicitType: null,\n    hasUnknownMembers: null\n  });\n}\n\nfunction enumNumberBody(members) {\n  return (0, _validateNode.default)({\n    type: \"EnumNumberBody\",\n    members,\n    explicitType: null,\n    hasUnknownMembers: null\n  });\n}\n\nfunction enumStringBody(members) {\n  return (0, _validateNode.default)({\n    type: \"EnumStringBody\",\n    members,\n    explicitType: null,\n    hasUnknownMembers: null\n  });\n}\n\nfunction enumSymbolBody(members) {\n  return (0, _validateNode.default)({\n    type: \"EnumSymbolBody\",\n    members,\n    hasUnknownMembers: null\n  });\n}\n\nfunction enumBooleanMember(id) {\n  return (0, _validateNode.default)({\n    type: \"EnumBooleanMember\",\n    id,\n    init: null\n  });\n}\n\nfunction enumNumberMember(id, init) {\n  return (0, _validateNode.default)({\n    type: \"EnumNumberMember\",\n    id,\n    init\n  });\n}\n\nfunction enumStringMember(id, init) {\n  return (0, _validateNode.default)({\n    type: \"EnumStringMember\",\n    id,\n    init\n  });\n}\n\nfunction enumDefaultedMember(id) {\n  return (0, _validateNode.default)({\n    type: \"EnumDefaultedMember\",\n    id\n  });\n}\n\nfunction indexedAccessType(objectType, indexType) {\n  return (0, _validateNode.default)({\n    type: \"IndexedAccessType\",\n    objectType,\n    indexType\n  });\n}\n\nfunction optionalIndexedAccessType(objectType, indexType) {\n  return (0, _validateNode.default)({\n    type: \"OptionalIndexedAccessType\",\n    objectType,\n    indexType,\n    optional: null\n  });\n}\n\nfunction jsxAttribute(name, value = null) {\n  return (0, _validateNode.default)({\n    type: \"JSXAttribute\",\n    name,\n    value\n  });\n}\n\nfunction jsxClosingElement(name) {\n  return (0, _validateNode.default)({\n    type: \"JSXClosingElement\",\n    name\n  });\n}\n\nfunction jsxElement(openingElement, closingElement = null, children, selfClosing = null) {\n  return (0, _validateNode.default)({\n    type: \"JSXElement\",\n    openingElement,\n    closingElement,\n    children,\n    selfClosing\n  });\n}\n\nfunction jsxEmptyExpression() {\n  return {\n    type: \"JSXEmptyExpression\"\n  };\n}\n\nfunction jsxExpressionContainer(expression) {\n  return (0, _validateNode.default)({\n    type: \"JSXExpressionContainer\",\n    expression\n  });\n}\n\nfunction jsxSpreadChild(expression) {\n  return (0, _validateNode.default)({\n    type: \"JSXSpreadChild\",\n    expression\n  });\n}\n\nfunction jsxIdentifier(name) {\n  return (0, _validateNode.default)({\n    type: \"JSXIdentifier\",\n    name\n  });\n}\n\nfunction jsxMemberExpression(object, property) {\n  return (0, _validateNode.default)({\n    type: \"JSXMemberExpression\",\n    object,\n    property\n  });\n}\n\nfunction jsxNamespacedName(namespace, name) {\n  return (0, _validateNode.default)({\n    type: \"JSXNamespacedName\",\n    namespace,\n    name\n  });\n}\n\nfunction jsxOpeningElement(name, attributes, selfClosing = false) {\n  return (0, _validateNode.default)({\n    type: \"JSXOpeningElement\",\n    name,\n    attributes,\n    selfClosing\n  });\n}\n\nfunction jsxSpreadAttribute(argument) {\n  return (0, _validateNode.default)({\n    type: \"JSXSpreadAttribute\",\n    argument\n  });\n}\n\nfunction jsxText(value) {\n  return (0, _validateNode.default)({\n    type: \"JSXText\",\n    value\n  });\n}\n\nfunction jsxFragment(openingFragment, closingFragment, children) {\n  return (0, _validateNode.default)({\n    type: \"JSXFragment\",\n    openingFragment,\n    closingFragment,\n    children\n  });\n}\n\nfunction jsxOpeningFragment() {\n  return {\n    type: \"JSXOpeningFragment\"\n  };\n}\n\nfunction jsxClosingFragment() {\n  return {\n    type: \"JSXClosingFragment\"\n  };\n}\n\nfunction noop() {\n  return {\n    type: \"Noop\"\n  };\n}\n\nfunction placeholder(expectedNode, name) {\n  return (0, _validateNode.default)({\n    type: \"Placeholder\",\n    expectedNode,\n    name\n  });\n}\n\nfunction v8IntrinsicIdentifier(name) {\n  return (0, _validateNode.default)({\n    type: \"V8IntrinsicIdentifier\",\n    name\n  });\n}\n\nfunction argumentPlaceholder() {\n  return {\n    type: \"ArgumentPlaceholder\"\n  };\n}\n\nfunction bindExpression(object, callee) {\n  return (0, _validateNode.default)({\n    type: \"BindExpression\",\n    object,\n    callee\n  });\n}\n\nfunction importAttribute(key, value) {\n  return (0, _validateNode.default)({\n    type: \"ImportAttribute\",\n    key,\n    value\n  });\n}\n\nfunction decorator(expression) {\n  return (0, _validateNode.default)({\n    type: \"Decorator\",\n    expression\n  });\n}\n\nfunction doExpression(body, async = false) {\n  return (0, _validateNode.default)({\n    type: \"DoExpression\",\n    body,\n    async\n  });\n}\n\nfunction exportDefaultSpecifier(exported) {\n  return (0, _validateNode.default)({\n    type: \"ExportDefaultSpecifier\",\n    exported\n  });\n}\n\nfunction recordExpression(properties) {\n  return (0, _validateNode.default)({\n    type: \"RecordExpression\",\n    properties\n  });\n}\n\nfunction tupleExpression(elements = []) {\n  return (0, _validateNode.default)({\n    type: \"TupleExpression\",\n    elements\n  });\n}\n\nfunction decimalLiteral(value) {\n  return (0, _validateNode.default)({\n    type: \"DecimalLiteral\",\n    value\n  });\n}\n\nfunction moduleExpression(body) {\n  return (0, _validateNode.default)({\n    type: \"ModuleExpression\",\n    body\n  });\n}\n\nfunction topicReference() {\n  return {\n    type: \"TopicReference\"\n  };\n}\n\nfunction pipelineTopicExpression(expression) {\n  return (0, _validateNode.default)({\n    type: \"PipelineTopicExpression\",\n    expression\n  });\n}\n\nfunction pipelineBareFunction(callee) {\n  return (0, _validateNode.default)({\n    type: \"PipelineBareFunction\",\n    callee\n  });\n}\n\nfunction pipelinePrimaryTopicReference() {\n  return {\n    type: \"PipelinePrimaryTopicReference\"\n  };\n}\n\nfunction tsParameterProperty(parameter) {\n  return (0, _validateNode.default)({\n    type: \"TSParameterProperty\",\n    parameter\n  });\n}\n\nfunction tsDeclareFunction(id = null, typeParameters = null, params, returnType = null) {\n  return (0, _validateNode.default)({\n    type: \"TSDeclareFunction\",\n    id,\n    typeParameters,\n    params,\n    returnType\n  });\n}\n\nfunction tsDeclareMethod(decorators = null, key, typeParameters = null, params, returnType = null) {\n  return (0, _validateNode.default)({\n    type: \"TSDeclareMethod\",\n    decorators,\n    key,\n    typeParameters,\n    params,\n    returnType\n  });\n}\n\nfunction tsQualifiedName(left, right) {\n  return (0, _validateNode.default)({\n    type: \"TSQualifiedName\",\n    left,\n    right\n  });\n}\n\nfunction tsCallSignatureDeclaration(typeParameters = null, parameters, typeAnnotation = null) {\n  return (0, _validateNode.default)({\n    type: \"TSCallSignatureDeclaration\",\n    typeParameters,\n    parameters,\n    typeAnnotation\n  });\n}\n\nfunction tsConstructSignatureDeclaration(typeParameters = null, parameters, typeAnnotation = null) {\n  return (0, _validateNode.default)({\n    type: \"TSConstructSignatureDeclaration\",\n    typeParameters,\n    parameters,\n    typeAnnotation\n  });\n}\n\nfunction tsPropertySignature(key, typeAnnotation = null, initializer = null) {\n  return (0, _validateNode.default)({\n    type: \"TSPropertySignature\",\n    key,\n    typeAnnotation,\n    initializer,\n    kind: null\n  });\n}\n\nfunction tsMethodSignature(key, typeParameters = null, parameters, typeAnnotation = null) {\n  return (0, _validateNode.default)({\n    type: \"TSMethodSignature\",\n    key,\n    typeParameters,\n    parameters,\n    typeAnnotation,\n    kind: null\n  });\n}\n\nfunction tsIndexSignature(parameters, typeAnnotation = null) {\n  return (0, _validateNode.default)({\n    type: \"TSIndexSignature\",\n    parameters,\n    typeAnnotation\n  });\n}\n\nfunction tsAnyKeyword() {\n  return {\n    type: \"TSAnyKeyword\"\n  };\n}\n\nfunction tsBooleanKeyword() {\n  return {\n    type: \"TSBooleanKeyword\"\n  };\n}\n\nfunction tsBigIntKeyword() {\n  return {\n    type: \"TSBigIntKeyword\"\n  };\n}\n\nfunction tsIntrinsicKeyword() {\n  return {\n    type: \"TSIntrinsicKeyword\"\n  };\n}\n\nfunction tsNeverKeyword() {\n  return {\n    type: \"TSNeverKeyword\"\n  };\n}\n\nfunction tsNullKeyword() {\n  return {\n    type: \"TSNullKeyword\"\n  };\n}\n\nfunction tsNumberKeyword() {\n  return {\n    type: \"TSNumberKeyword\"\n  };\n}\n\nfunction tsObjectKeyword() {\n  return {\n    type: \"TSObjectKeyword\"\n  };\n}\n\nfunction tsStringKeyword() {\n  return {\n    type: \"TSStringKeyword\"\n  };\n}\n\nfunction tsSymbolKeyword() {\n  return {\n    type: \"TSSymbolKeyword\"\n  };\n}\n\nfunction tsUndefinedKeyword() {\n  return {\n    type: \"TSUndefinedKeyword\"\n  };\n}\n\nfunction tsUnknownKeyword() {\n  return {\n    type: \"TSUnknownKeyword\"\n  };\n}\n\nfunction tsVoidKeyword() {\n  return {\n    type: \"TSVoidKeyword\"\n  };\n}\n\nfunction tsThisType() {\n  return {\n    type: \"TSThisType\"\n  };\n}\n\nfunction tsFunctionType(typeParameters = null, parameters, typeAnnotation = null) {\n  return (0, _validateNode.default)({\n    type: \"TSFunctionType\",\n    typeParameters,\n    parameters,\n    typeAnnotation\n  });\n}\n\nfunction tsConstructorType(typeParameters = null, parameters, typeAnnotation = null) {\n  return (0, _validateNode.default)({\n    type: \"TSConstructorType\",\n    typeParameters,\n    parameters,\n    typeAnnotation\n  });\n}\n\nfunction tsTypeReference(typeName, typeParameters = null) {\n  return (0, _validateNode.default)({\n    type: \"TSTypeReference\",\n    typeName,\n    typeParameters\n  });\n}\n\nfunction tsTypePredicate(parameterName, typeAnnotation = null, asserts = null) {\n  return (0, _validateNode.default)({\n    type: \"TSTypePredicate\",\n    parameterName,\n    typeAnnotation,\n    asserts\n  });\n}\n\nfunction tsTypeQuery(exprName, typeParameters = null) {\n  return (0, _validateNode.default)({\n    type: \"TSTypeQuery\",\n    exprName,\n    typeParameters\n  });\n}\n\nfunction tsTypeLiteral(members) {\n  return (0, _validateNode.default)({\n    type: \"TSTypeLiteral\",\n    members\n  });\n}\n\nfunction tsArrayType(elementType) {\n  return (0, _validateNode.default)({\n    type: \"TSArrayType\",\n    elementType\n  });\n}\n\nfunction tsTupleType(elementTypes) {\n  return (0, _validateNode.default)({\n    type: \"TSTupleType\",\n    elementTypes\n  });\n}\n\nfunction tsOptionalType(typeAnnotation) {\n  return (0, _validateNode.default)({\n    type: \"TSOptionalType\",\n    typeAnnotation\n  });\n}\n\nfunction tsRestType(typeAnnotation) {\n  return (0, _validateNode.default)({\n    type: \"TSRestType\",\n    typeAnnotation\n  });\n}\n\nfunction tsNamedTupleMember(label, elementType, optional = false) {\n  return (0, _validateNode.default)({\n    type: \"TSNamedTupleMember\",\n    label,\n    elementType,\n    optional\n  });\n}\n\nfunction tsUnionType(types) {\n  return (0, _validateNode.default)({\n    type: \"TSUnionType\",\n    types\n  });\n}\n\nfunction tsIntersectionType(types) {\n  return (0, _validateNode.default)({\n    type: \"TSIntersectionType\",\n    types\n  });\n}\n\nfunction tsConditionalType(checkType, extendsType, trueType, falseType) {\n  return (0, _validateNode.default)({\n    type: \"TSConditionalType\",\n    checkType,\n    extendsType,\n    trueType,\n    falseType\n  });\n}\n\nfunction tsInferType(typeParameter) {\n  return (0, _validateNode.default)({\n    type: \"TSInferType\",\n    typeParameter\n  });\n}\n\nfunction tsParenthesizedType(typeAnnotation) {\n  return (0, _validateNode.default)({\n    type: \"TSParenthesizedType\",\n    typeAnnotation\n  });\n}\n\nfunction tsTypeOperator(typeAnnotation) {\n  return (0, _validateNode.default)({\n    type: \"TSTypeOperator\",\n    typeAnnotation,\n    operator: null\n  });\n}\n\nfunction tsIndexedAccessType(objectType, indexType) {\n  return (0, _validateNode.default)({\n    type: \"TSIndexedAccessType\",\n    objectType,\n    indexType\n  });\n}\n\nfunction tsMappedType(typeParameter, typeAnnotation = null, nameType = null) {\n  return (0, _validateNode.default)({\n    type: \"TSMappedType\",\n    typeParameter,\n    typeAnnotation,\n    nameType\n  });\n}\n\nfunction tsLiteralType(literal) {\n  return (0, _validateNode.default)({\n    type: \"TSLiteralType\",\n    literal\n  });\n}\n\nfunction tsExpressionWithTypeArguments(expression, typeParameters = null) {\n  return (0, _validateNode.default)({\n    type: \"TSExpressionWithTypeArguments\",\n    expression,\n    typeParameters\n  });\n}\n\nfunction tsInterfaceDeclaration(id, typeParameters = null, _extends = null, body) {\n  return (0, _validateNode.default)({\n    type: \"TSInterfaceDeclaration\",\n    id,\n    typeParameters,\n    extends: _extends,\n    body\n  });\n}\n\nfunction tsInterfaceBody(body) {\n  return (0, _validateNode.default)({\n    type: \"TSInterfaceBody\",\n    body\n  });\n}\n\nfunction tsTypeAliasDeclaration(id, typeParameters = null, typeAnnotation) {\n  return (0, _validateNode.default)({\n    type: \"TSTypeAliasDeclaration\",\n    id,\n    typeParameters,\n    typeAnnotation\n  });\n}\n\nfunction tsInstantiationExpression(expression, typeParameters = null) {\n  return (0, _validateNode.default)({\n    type: \"TSInstantiationExpression\",\n    expression,\n    typeParameters\n  });\n}\n\nfunction tsAsExpression(expression, typeAnnotation) {\n  return (0, _validateNode.default)({\n    type: \"TSAsExpression\",\n    expression,\n    typeAnnotation\n  });\n}\n\nfunction tsTypeAssertion(typeAnnotation, expression) {\n  return (0, _validateNode.default)({\n    type: \"TSTypeAssertion\",\n    typeAnnotation,\n    expression\n  });\n}\n\nfunction tsEnumDeclaration(id, members) {\n  return (0, _validateNode.default)({\n    type: \"TSEnumDeclaration\",\n    id,\n    members\n  });\n}\n\nfunction tsEnumMember(id, initializer = null) {\n  return (0, _validateNode.default)({\n    type: \"TSEnumMember\",\n    id,\n    initializer\n  });\n}\n\nfunction tsModuleDeclaration(id, body) {\n  return (0, _validateNode.default)({\n    type: \"TSModuleDeclaration\",\n    id,\n    body\n  });\n}\n\nfunction tsModuleBlock(body) {\n  return (0, _validateNode.default)({\n    type: \"TSModuleBlock\",\n    body\n  });\n}\n\nfunction tsImportType(argument, qualifier = null, typeParameters = null) {\n  return (0, _validateNode.default)({\n    type: \"TSImportType\",\n    argument,\n    qualifier,\n    typeParameters\n  });\n}\n\nfunction tsImportEqualsDeclaration(id, moduleReference) {\n  return (0, _validateNode.default)({\n    type: \"TSImportEqualsDeclaration\",\n    id,\n    moduleReference,\n    isExport: null\n  });\n}\n\nfunction tsExternalModuleReference(expression) {\n  return (0, _validateNode.default)({\n    type: \"TSExternalModuleReference\",\n    expression\n  });\n}\n\nfunction tsNonNullExpression(expression) {\n  return (0, _validateNode.default)({\n    type: \"TSNonNullExpression\",\n    expression\n  });\n}\n\nfunction tsExportAssignment(expression) {\n  return (0, _validateNode.default)({\n    type: \"TSExportAssignment\",\n    expression\n  });\n}\n\nfunction tsNamespaceExportDeclaration(id) {\n  return (0, _validateNode.default)({\n    type: \"TSNamespaceExportDeclaration\",\n    id\n  });\n}\n\nfunction tsTypeAnnotation(typeAnnotation) {\n  return (0, _validateNode.default)({\n    type: \"TSTypeAnnotation\",\n    typeAnnotation\n  });\n}\n\nfunction tsTypeParameterInstantiation(params) {\n  return (0, _validateNode.default)({\n    type: \"TSTypeParameterInstantiation\",\n    params\n  });\n}\n\nfunction tsTypeParameterDeclaration(params) {\n  return (0, _validateNode.default)({\n    type: \"TSTypeParameterDeclaration\",\n    params\n  });\n}\n\nfunction tsTypeParameter(constraint = null, _default = null, name) {\n  return (0, _validateNode.default)({\n    type: \"TSTypeParameter\",\n    constraint,\n    default: _default,\n    name\n  });\n}\n\nfunction NumberLiteral(value) {\n  console.trace(\"The node type NumberLiteral has been renamed to NumericLiteral\");\n  return numericLiteral(value);\n}\n\nfunction RegexLiteral(pattern, flags = \"\") {\n  console.trace(\"The node type RegexLiteral has been renamed to RegExpLiteral\");\n  return regExpLiteral(pattern, flags);\n}\n\nfunction RestProperty(argument) {\n  console.trace(\"The node type RestProperty has been renamed to RestElement\");\n  return restElement(argument);\n}\n\nfunction SpreadProperty(argument) {\n  console.trace(\"The node type SpreadProperty has been renamed to SpreadElement\");\n  return spreadElement(argument);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = validateNode;\n\nvar _validate = require(\"../validators/validate\");\n\nvar _ = require(\"..\");\n\nfunction validateNode(node) {\n  const keys = _.BUILDER_KEYS[node.type];\n\n  for (const key of keys) {\n    (0, _validate.default)(node, key, node[key]);\n  }\n\n  return node;\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = validate;\nexports.validateChild = validateChild;\nexports.validateField = validateField;\n\nvar _definitions = require(\"../definitions\");\n\nfunction validate(node, key, val) {\n  if (!node) return;\n  const fields = _definitions.NODE_FIELDS[node.type];\n  if (!fields) return;\n  const field = fields[key];\n  validateField(node, key, val, field);\n  validateChild(node, key, val);\n}\n\nfunction validateField(node, key, val, field) {\n  if (!(field != null && field.validate)) return;\n  if (field.optional && val == null) return;\n  field.validate(node, key, val);\n}\n\nfunction validateChild(node, key, val) {\n  if (val == null) return;\n  const validate = _definitions.NODE_PARENT_VALIDATIONS[val.type];\n  if (!validate) return;\n  validate(node, key, val);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"ALIAS_KEYS\", {\n  enumerable: true,\n  get: function () {\n    return _utils.ALIAS_KEYS;\n  }\n});\nObject.defineProperty(exports, \"BUILDER_KEYS\", {\n  enumerable: true,\n  get: function () {\n    return _utils.BUILDER_KEYS;\n  }\n});\nObject.defineProperty(exports, \"DEPRECATED_KEYS\", {\n  enumerable: true,\n  get: function () {\n    return _utils.DEPRECATED_KEYS;\n  }\n});\nObject.defineProperty(exports, \"FLIPPED_ALIAS_KEYS\", {\n  enumerable: true,\n  get: function () {\n    return _utils.FLIPPED_ALIAS_KEYS;\n  }\n});\nObject.defineProperty(exports, \"NODE_FIELDS\", {\n  enumerable: true,\n  get: function () {\n    return _utils.NODE_FIELDS;\n  }\n});\nObject.defineProperty(exports, \"NODE_PARENT_VALIDATIONS\", {\n  enumerable: true,\n  get: function () {\n    return _utils.NODE_PARENT_VALIDATIONS;\n  }\n});\nObject.defineProperty(exports, \"PLACEHOLDERS\", {\n  enumerable: true,\n  get: function () {\n    return _placeholders.PLACEHOLDERS;\n  }\n});\nObject.defineProperty(exports, \"PLACEHOLDERS_ALIAS\", {\n  enumerable: true,\n  get: function () {\n    return _placeholders.PLACEHOLDERS_ALIAS;\n  }\n});\nObject.defineProperty(exports, \"PLACEHOLDERS_FLIPPED_ALIAS\", {\n  enumerable: true,\n  get: function () {\n    return _placeholders.PLACEHOLDERS_FLIPPED_ALIAS;\n  }\n});\nexports.TYPES = void 0;\nObject.defineProperty(exports, \"VISITOR_KEYS\", {\n  enumerable: true,\n  get: function () {\n    return _utils.VISITOR_KEYS;\n  }\n});\n\nvar _toFastProperties = require(\"to-fast-properties\");\n\nrequire(\"./core\");\n\nrequire(\"./flow\");\n\nrequire(\"./jsx\");\n\nrequire(\"./misc\");\n\nrequire(\"./experimental\");\n\nrequire(\"./typescript\");\n\nvar _utils = require(\"./utils\");\n\nvar _placeholders = require(\"./placeholders\");\n\n_toFastProperties(_utils.VISITOR_KEYS);\n\n_toFastProperties(_utils.ALIAS_KEYS);\n\n_toFastProperties(_utils.FLIPPED_ALIAS_KEYS);\n\n_toFastProperties(_utils.NODE_FIELDS);\n\n_toFastProperties(_utils.BUILDER_KEYS);\n\n_toFastProperties(_utils.DEPRECATED_KEYS);\n\n_toFastProperties(_placeholders.PLACEHOLDERS_ALIAS);\n\n_toFastProperties(_placeholders.PLACEHOLDERS_FLIPPED_ALIAS);\n\nconst TYPES = [].concat(Object.keys(_utils.VISITOR_KEYS), Object.keys(_utils.FLIPPED_ALIAS_KEYS), Object.keys(_utils.DEPRECATED_KEYS));\nexports.TYPES = TYPES;","'use strict';\n\nlet fastProto = null;\n\n// Creates an object with permanently fast properties in V8. See Toon Verwaest's\n// post https://medium.com/@tverwaes/setting-up-prototypes-in-v8-ec9c9491dfe2#5f62\n// for more details. Use %HasFastProperties(object) and the Node.js flag\n// --allow-natives-syntax to check whether an object has fast properties.\nfunction FastObject(o) {\n\t// A prototype object will have \"fast properties\" enabled once it is checked\n\t// against the inline property cache of a function, e.g. fastProto.property:\n\t// https://github.com/v8/v8/blob/6.0.122/test/mjsunit/fast-prototype.js#L48-L63\n\tif (fastProto !== null && typeof fastProto.property) {\n\t\tconst result = fastProto;\n\t\tfastProto = FastObject.prototype = null;\n\t\treturn result;\n\t}\n\tfastProto = FastObject.prototype = o == null ? Object.create(null) : o;\n\treturn new FastObject;\n}\n\n// Initialize the inline property cache of FastObject\nFastObject();\n\nmodule.exports = function toFastproperties(o) {\n\treturn FastObject(o);\n};\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.patternLikeCommon = exports.functionTypeAnnotationCommon = exports.functionDeclarationCommon = exports.functionCommon = exports.classMethodOrPropertyCommon = exports.classMethodOrDeclareMethodCommon = void 0;\n\nvar _is = require(\"../validators/is\");\n\nvar _isValidIdentifier = require(\"../validators/isValidIdentifier\");\n\nvar _helperValidatorIdentifier = require(\"@babel/helper-validator-identifier\");\n\nvar _constants = require(\"../constants\");\n\nvar _utils = require(\"./utils\");\n\nconst defineType = (0, _utils.defineAliasedType)(\"Standardized\");\ndefineType(\"ArrayExpression\", {\n  fields: {\n    elements: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeOrValueType)(\"null\", \"Expression\", \"SpreadElement\"))),\n      default: !process.env.BABEL_TYPES_8_BREAKING ? [] : undefined\n    }\n  },\n  visitor: [\"elements\"],\n  aliases: [\"Expression\"]\n});\ndefineType(\"AssignmentExpression\", {\n  fields: {\n    operator: {\n      validate: function () {\n        if (!process.env.BABEL_TYPES_8_BREAKING) {\n          return (0, _utils.assertValueType)(\"string\");\n        }\n\n        const identifier = (0, _utils.assertOneOf)(..._constants.ASSIGNMENT_OPERATORS);\n        const pattern = (0, _utils.assertOneOf)(\"=\");\n        return function (node, key, val) {\n          const validator = (0, _is.default)(\"Pattern\", node.left) ? pattern : identifier;\n          validator(node, key, val);\n        };\n      }()\n    },\n    left: {\n      validate: !process.env.BABEL_TYPES_8_BREAKING ? (0, _utils.assertNodeType)(\"LVal\") : (0, _utils.assertNodeType)(\"Identifier\", \"MemberExpression\", \"ArrayPattern\", \"ObjectPattern\", \"TSAsExpression\", \"TSTypeAssertion\", \"TSNonNullExpression\")\n    },\n    right: {\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    }\n  },\n  builder: [\"operator\", \"left\", \"right\"],\n  visitor: [\"left\", \"right\"],\n  aliases: [\"Expression\"]\n});\ndefineType(\"BinaryExpression\", {\n  builder: [\"operator\", \"left\", \"right\"],\n  fields: {\n    operator: {\n      validate: (0, _utils.assertOneOf)(..._constants.BINARY_OPERATORS)\n    },\n    left: {\n      validate: function () {\n        const expression = (0, _utils.assertNodeType)(\"Expression\");\n        const inOp = (0, _utils.assertNodeType)(\"Expression\", \"PrivateName\");\n        const validator = Object.assign(function (node, key, val) {\n          const validator = node.operator === \"in\" ? inOp : expression;\n          validator(node, key, val);\n        }, {\n          oneOfNodeTypes: [\"Expression\", \"PrivateName\"]\n        });\n        return validator;\n      }()\n    },\n    right: {\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    }\n  },\n  visitor: [\"left\", \"right\"],\n  aliases: [\"Binary\", \"Expression\"]\n});\ndefineType(\"InterpreterDirective\", {\n  builder: [\"value\"],\n  fields: {\n    value: {\n      validate: (0, _utils.assertValueType)(\"string\")\n    }\n  }\n});\ndefineType(\"Directive\", {\n  visitor: [\"value\"],\n  fields: {\n    value: {\n      validate: (0, _utils.assertNodeType)(\"DirectiveLiteral\")\n    }\n  }\n});\ndefineType(\"DirectiveLiteral\", {\n  builder: [\"value\"],\n  fields: {\n    value: {\n      validate: (0, _utils.assertValueType)(\"string\")\n    }\n  }\n});\ndefineType(\"BlockStatement\", {\n  builder: [\"body\", \"directives\"],\n  visitor: [\"directives\", \"body\"],\n  fields: {\n    directives: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"Directive\"))),\n      default: []\n    },\n    body: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"Statement\")))\n    }\n  },\n  aliases: [\"Scopable\", \"BlockParent\", \"Block\", \"Statement\"]\n});\ndefineType(\"BreakStatement\", {\n  visitor: [\"label\"],\n  fields: {\n    label: {\n      validate: (0, _utils.assertNodeType)(\"Identifier\"),\n      optional: true\n    }\n  },\n  aliases: [\"Statement\", \"Terminatorless\", \"CompletionStatement\"]\n});\ndefineType(\"CallExpression\", {\n  visitor: [\"callee\", \"arguments\", \"typeParameters\", \"typeArguments\"],\n  builder: [\"callee\", \"arguments\"],\n  aliases: [\"Expression\"],\n  fields: Object.assign({\n    callee: {\n      validate: (0, _utils.assertNodeType)(\"Expression\", \"Super\", \"V8IntrinsicIdentifier\")\n    },\n    arguments: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"Expression\", \"SpreadElement\", \"JSXNamespacedName\", \"ArgumentPlaceholder\")))\n    }\n  }, !process.env.BABEL_TYPES_8_BREAKING ? {\n    optional: {\n      validate: (0, _utils.assertOneOf)(true, false),\n      optional: true\n    }\n  } : {}, {\n    typeArguments: {\n      validate: (0, _utils.assertNodeType)(\"TypeParameterInstantiation\"),\n      optional: true\n    },\n    typeParameters: {\n      validate: (0, _utils.assertNodeType)(\"TSTypeParameterInstantiation\"),\n      optional: true\n    }\n  })\n});\ndefineType(\"CatchClause\", {\n  visitor: [\"param\", \"body\"],\n  fields: {\n    param: {\n      validate: (0, _utils.assertNodeType)(\"Identifier\", \"ArrayPattern\", \"ObjectPattern\"),\n      optional: true\n    },\n    body: {\n      validate: (0, _utils.assertNodeType)(\"BlockStatement\")\n    }\n  },\n  aliases: [\"Scopable\", \"BlockParent\"]\n});\ndefineType(\"ConditionalExpression\", {\n  visitor: [\"test\", \"consequent\", \"alternate\"],\n  fields: {\n    test: {\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    },\n    consequent: {\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    },\n    alternate: {\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    }\n  },\n  aliases: [\"Expression\", \"Conditional\"]\n});\ndefineType(\"ContinueStatement\", {\n  visitor: [\"label\"],\n  fields: {\n    label: {\n      validate: (0, _utils.assertNodeType)(\"Identifier\"),\n      optional: true\n    }\n  },\n  aliases: [\"Statement\", \"Terminatorless\", \"CompletionStatement\"]\n});\ndefineType(\"DebuggerStatement\", {\n  aliases: [\"Statement\"]\n});\ndefineType(\"DoWhileStatement\", {\n  visitor: [\"test\", \"body\"],\n  fields: {\n    test: {\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    },\n    body: {\n      validate: (0, _utils.assertNodeType)(\"Statement\")\n    }\n  },\n  aliases: [\"Statement\", \"BlockParent\", \"Loop\", \"While\", \"Scopable\"]\n});\ndefineType(\"EmptyStatement\", {\n  aliases: [\"Statement\"]\n});\ndefineType(\"ExpressionStatement\", {\n  visitor: [\"expression\"],\n  fields: {\n    expression: {\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    }\n  },\n  aliases: [\"Statement\", \"ExpressionWrapper\"]\n});\ndefineType(\"File\", {\n  builder: [\"program\", \"comments\", \"tokens\"],\n  visitor: [\"program\"],\n  fields: {\n    program: {\n      validate: (0, _utils.assertNodeType)(\"Program\")\n    },\n    comments: {\n      validate: !process.env.BABEL_TYPES_8_BREAKING ? Object.assign(() => {}, {\n        each: {\n          oneOfNodeTypes: [\"CommentBlock\", \"CommentLine\"]\n        }\n      }) : (0, _utils.assertEach)((0, _utils.assertNodeType)(\"CommentBlock\", \"CommentLine\")),\n      optional: true\n    },\n    tokens: {\n      validate: (0, _utils.assertEach)(Object.assign(() => {}, {\n        type: \"any\"\n      })),\n      optional: true\n    }\n  }\n});\ndefineType(\"ForInStatement\", {\n  visitor: [\"left\", \"right\", \"body\"],\n  aliases: [\"Scopable\", \"Statement\", \"For\", \"BlockParent\", \"Loop\", \"ForXStatement\"],\n  fields: {\n    left: {\n      validate: !process.env.BABEL_TYPES_8_BREAKING ? (0, _utils.assertNodeType)(\"VariableDeclaration\", \"LVal\") : (0, _utils.assertNodeType)(\"VariableDeclaration\", \"Identifier\", \"MemberExpression\", \"ArrayPattern\", \"ObjectPattern\", \"TSAsExpression\", \"TSTypeAssertion\", \"TSNonNullExpression\")\n    },\n    right: {\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    },\n    body: {\n      validate: (0, _utils.assertNodeType)(\"Statement\")\n    }\n  }\n});\ndefineType(\"ForStatement\", {\n  visitor: [\"init\", \"test\", \"update\", \"body\"],\n  aliases: [\"Scopable\", \"Statement\", \"For\", \"BlockParent\", \"Loop\"],\n  fields: {\n    init: {\n      validate: (0, _utils.assertNodeType)(\"VariableDeclaration\", \"Expression\"),\n      optional: true\n    },\n    test: {\n      validate: (0, _utils.assertNodeType)(\"Expression\"),\n      optional: true\n    },\n    update: {\n      validate: (0, _utils.assertNodeType)(\"Expression\"),\n      optional: true\n    },\n    body: {\n      validate: (0, _utils.assertNodeType)(\"Statement\")\n    }\n  }\n});\n\nconst functionCommon = () => ({\n  params: {\n    validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"Identifier\", \"Pattern\", \"RestElement\")))\n  },\n  generator: {\n    default: false\n  },\n  async: {\n    default: false\n  }\n});\n\nexports.functionCommon = functionCommon;\n\nconst functionTypeAnnotationCommon = () => ({\n  returnType: {\n    validate: (0, _utils.assertNodeType)(\"TypeAnnotation\", \"TSTypeAnnotation\", \"Noop\"),\n    optional: true\n  },\n  typeParameters: {\n    validate: (0, _utils.assertNodeType)(\"TypeParameterDeclaration\", \"TSTypeParameterDeclaration\", \"Noop\"),\n    optional: true\n  }\n});\n\nexports.functionTypeAnnotationCommon = functionTypeAnnotationCommon;\n\nconst functionDeclarationCommon = () => Object.assign({}, functionCommon(), {\n  declare: {\n    validate: (0, _utils.assertValueType)(\"boolean\"),\n    optional: true\n  },\n  id: {\n    validate: (0, _utils.assertNodeType)(\"Identifier\"),\n    optional: true\n  }\n});\n\nexports.functionDeclarationCommon = functionDeclarationCommon;\ndefineType(\"FunctionDeclaration\", {\n  builder: [\"id\", \"params\", \"body\", \"generator\", \"async\"],\n  visitor: [\"id\", \"params\", \"body\", \"returnType\", \"typeParameters\"],\n  fields: Object.assign({}, functionDeclarationCommon(), functionTypeAnnotationCommon(), {\n    body: {\n      validate: (0, _utils.assertNodeType)(\"BlockStatement\")\n    },\n    predicate: {\n      validate: (0, _utils.assertNodeType)(\"DeclaredPredicate\", \"InferredPredicate\"),\n      optional: true\n    }\n  }),\n  aliases: [\"Scopable\", \"Function\", \"BlockParent\", \"FunctionParent\", \"Statement\", \"Pureish\", \"Declaration\"],\n  validate: function () {\n    if (!process.env.BABEL_TYPES_8_BREAKING) return () => {};\n    const identifier = (0, _utils.assertNodeType)(\"Identifier\");\n    return function (parent, key, node) {\n      if (!(0, _is.default)(\"ExportDefaultDeclaration\", parent)) {\n        identifier(node, \"id\", node.id);\n      }\n    };\n  }()\n});\ndefineType(\"FunctionExpression\", {\n  inherits: \"FunctionDeclaration\",\n  aliases: [\"Scopable\", \"Function\", \"BlockParent\", \"FunctionParent\", \"Expression\", \"Pureish\"],\n  fields: Object.assign({}, functionCommon(), functionTypeAnnotationCommon(), {\n    id: {\n      validate: (0, _utils.assertNodeType)(\"Identifier\"),\n      optional: true\n    },\n    body: {\n      validate: (0, _utils.assertNodeType)(\"BlockStatement\")\n    },\n    predicate: {\n      validate: (0, _utils.assertNodeType)(\"DeclaredPredicate\", \"InferredPredicate\"),\n      optional: true\n    }\n  })\n});\n\nconst patternLikeCommon = () => ({\n  typeAnnotation: {\n    validate: (0, _utils.assertNodeType)(\"TypeAnnotation\", \"TSTypeAnnotation\", \"Noop\"),\n    optional: true\n  },\n  decorators: {\n    validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"Decorator\"))),\n    optional: true\n  }\n});\n\nexports.patternLikeCommon = patternLikeCommon;\ndefineType(\"Identifier\", {\n  builder: [\"name\"],\n  visitor: [\"typeAnnotation\", \"decorators\"],\n  aliases: [\"Expression\", \"PatternLike\", \"LVal\", \"TSEntityName\"],\n  fields: Object.assign({}, patternLikeCommon(), {\n    name: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"string\"), Object.assign(function (node, key, val) {\n        if (!process.env.BABEL_TYPES_8_BREAKING) return;\n\n        if (!(0, _isValidIdentifier.default)(val, false)) {\n          throw new TypeError(`\"${val}\" is not a valid identifier name`);\n        }\n      }, {\n        type: \"string\"\n      }))\n    },\n    optional: {\n      validate: (0, _utils.assertValueType)(\"boolean\"),\n      optional: true\n    }\n  }),\n\n  validate(parent, key, node) {\n    if (!process.env.BABEL_TYPES_8_BREAKING) return;\n    const match = /\\.(\\w+)$/.exec(key);\n    if (!match) return;\n    const [, parentKey] = match;\n    const nonComp = {\n      computed: false\n    };\n\n    if (parentKey === \"property\") {\n      if ((0, _is.default)(\"MemberExpression\", parent, nonComp)) return;\n      if ((0, _is.default)(\"OptionalMemberExpression\", parent, nonComp)) return;\n    } else if (parentKey === \"key\") {\n      if ((0, _is.default)(\"Property\", parent, nonComp)) return;\n      if ((0, _is.default)(\"Method\", parent, nonComp)) return;\n    } else if (parentKey === \"exported\") {\n      if ((0, _is.default)(\"ExportSpecifier\", parent)) return;\n    } else if (parentKey === \"imported\") {\n      if ((0, _is.default)(\"ImportSpecifier\", parent, {\n        imported: node\n      })) return;\n    } else if (parentKey === \"meta\") {\n      if ((0, _is.default)(\"MetaProperty\", parent, {\n        meta: node\n      })) return;\n    }\n\n    if (((0, _helperValidatorIdentifier.isKeyword)(node.name) || (0, _helperValidatorIdentifier.isReservedWord)(node.name, false)) && node.name !== \"this\") {\n      throw new TypeError(`\"${node.name}\" is not a valid identifier`);\n    }\n  }\n\n});\ndefineType(\"IfStatement\", {\n  visitor: [\"test\", \"consequent\", \"alternate\"],\n  aliases: [\"Statement\", \"Conditional\"],\n  fields: {\n    test: {\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    },\n    consequent: {\n      validate: (0, _utils.assertNodeType)(\"Statement\")\n    },\n    alternate: {\n      optional: true,\n      validate: (0, _utils.assertNodeType)(\"Statement\")\n    }\n  }\n});\ndefineType(\"LabeledStatement\", {\n  visitor: [\"label\", \"body\"],\n  aliases: [\"Statement\"],\n  fields: {\n    label: {\n      validate: (0, _utils.assertNodeType)(\"Identifier\")\n    },\n    body: {\n      validate: (0, _utils.assertNodeType)(\"Statement\")\n    }\n  }\n});\ndefineType(\"StringLiteral\", {\n  builder: [\"value\"],\n  fields: {\n    value: {\n      validate: (0, _utils.assertValueType)(\"string\")\n    }\n  },\n  aliases: [\"Expression\", \"Pureish\", \"Literal\", \"Immutable\"]\n});\ndefineType(\"NumericLiteral\", {\n  builder: [\"value\"],\n  deprecatedAlias: \"NumberLiteral\",\n  fields: {\n    value: {\n      validate: (0, _utils.assertValueType)(\"number\")\n    }\n  },\n  aliases: [\"Expression\", \"Pureish\", \"Literal\", \"Immutable\"]\n});\ndefineType(\"NullLiteral\", {\n  aliases: [\"Expression\", \"Pureish\", \"Literal\", \"Immutable\"]\n});\ndefineType(\"BooleanLiteral\", {\n  builder: [\"value\"],\n  fields: {\n    value: {\n      validate: (0, _utils.assertValueType)(\"boolean\")\n    }\n  },\n  aliases: [\"Expression\", \"Pureish\", \"Literal\", \"Immutable\"]\n});\ndefineType(\"RegExpLiteral\", {\n  builder: [\"pattern\", \"flags\"],\n  deprecatedAlias: \"RegexLiteral\",\n  aliases: [\"Expression\", \"Pureish\", \"Literal\"],\n  fields: {\n    pattern: {\n      validate: (0, _utils.assertValueType)(\"string\")\n    },\n    flags: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"string\"), Object.assign(function (node, key, val) {\n        if (!process.env.BABEL_TYPES_8_BREAKING) return;\n        const invalid = /[^gimsuy]/.exec(val);\n\n        if (invalid) {\n          throw new TypeError(`\"${invalid[0]}\" is not a valid RegExp flag`);\n        }\n      }, {\n        type: \"string\"\n      })),\n      default: \"\"\n    }\n  }\n});\ndefineType(\"LogicalExpression\", {\n  builder: [\"operator\", \"left\", \"right\"],\n  visitor: [\"left\", \"right\"],\n  aliases: [\"Binary\", \"Expression\"],\n  fields: {\n    operator: {\n      validate: (0, _utils.assertOneOf)(..._constants.LOGICAL_OPERATORS)\n    },\n    left: {\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    },\n    right: {\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    }\n  }\n});\ndefineType(\"MemberExpression\", {\n  builder: [\"object\", \"property\", \"computed\", ...(!process.env.BABEL_TYPES_8_BREAKING ? [\"optional\"] : [])],\n  visitor: [\"object\", \"property\"],\n  aliases: [\"Expression\", \"LVal\"],\n  fields: Object.assign({\n    object: {\n      validate: (0, _utils.assertNodeType)(\"Expression\", \"Super\")\n    },\n    property: {\n      validate: function () {\n        const normal = (0, _utils.assertNodeType)(\"Identifier\", \"PrivateName\");\n        const computed = (0, _utils.assertNodeType)(\"Expression\");\n\n        const validator = function (node, key, val) {\n          const validator = node.computed ? computed : normal;\n          validator(node, key, val);\n        };\n\n        validator.oneOfNodeTypes = [\"Expression\", \"Identifier\", \"PrivateName\"];\n        return validator;\n      }()\n    },\n    computed: {\n      default: false\n    }\n  }, !process.env.BABEL_TYPES_8_BREAKING ? {\n    optional: {\n      validate: (0, _utils.assertOneOf)(true, false),\n      optional: true\n    }\n  } : {})\n});\ndefineType(\"NewExpression\", {\n  inherits: \"CallExpression\"\n});\ndefineType(\"Program\", {\n  visitor: [\"directives\", \"body\"],\n  builder: [\"body\", \"directives\", \"sourceType\", \"interpreter\"],\n  fields: {\n    sourceFile: {\n      validate: (0, _utils.assertValueType)(\"string\")\n    },\n    sourceType: {\n      validate: (0, _utils.assertOneOf)(\"script\", \"module\"),\n      default: \"script\"\n    },\n    interpreter: {\n      validate: (0, _utils.assertNodeType)(\"InterpreterDirective\"),\n      default: null,\n      optional: true\n    },\n    directives: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"Directive\"))),\n      default: []\n    },\n    body: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"Statement\")))\n    }\n  },\n  aliases: [\"Scopable\", \"BlockParent\", \"Block\"]\n});\ndefineType(\"ObjectExpression\", {\n  visitor: [\"properties\"],\n  aliases: [\"Expression\"],\n  fields: {\n    properties: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"ObjectMethod\", \"ObjectProperty\", \"SpreadElement\")))\n    }\n  }\n});\ndefineType(\"ObjectMethod\", {\n  builder: [\"kind\", \"key\", \"params\", \"body\", \"computed\", \"generator\", \"async\"],\n  fields: Object.assign({}, functionCommon(), functionTypeAnnotationCommon(), {\n    kind: Object.assign({\n      validate: (0, _utils.assertOneOf)(\"method\", \"get\", \"set\")\n    }, !process.env.BABEL_TYPES_8_BREAKING ? {\n      default: \"method\"\n    } : {}),\n    computed: {\n      default: false\n    },\n    key: {\n      validate: function () {\n        const normal = (0, _utils.assertNodeType)(\"Identifier\", \"StringLiteral\", \"NumericLiteral\", \"BigIntLiteral\");\n        const computed = (0, _utils.assertNodeType)(\"Expression\");\n\n        const validator = function (node, key, val) {\n          const validator = node.computed ? computed : normal;\n          validator(node, key, val);\n        };\n\n        validator.oneOfNodeTypes = [\"Expression\", \"Identifier\", \"StringLiteral\", \"NumericLiteral\", \"BigIntLiteral\"];\n        return validator;\n      }()\n    },\n    decorators: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"Decorator\"))),\n      optional: true\n    },\n    body: {\n      validate: (0, _utils.assertNodeType)(\"BlockStatement\")\n    }\n  }),\n  visitor: [\"key\", \"params\", \"body\", \"decorators\", \"returnType\", \"typeParameters\"],\n  aliases: [\"UserWhitespacable\", \"Function\", \"Scopable\", \"BlockParent\", \"FunctionParent\", \"Method\", \"ObjectMember\"]\n});\ndefineType(\"ObjectProperty\", {\n  builder: [\"key\", \"value\", \"computed\", \"shorthand\", ...(!process.env.BABEL_TYPES_8_BREAKING ? [\"decorators\"] : [])],\n  fields: {\n    computed: {\n      default: false\n    },\n    key: {\n      validate: function () {\n        const normal = (0, _utils.assertNodeType)(\"Identifier\", \"StringLiteral\", \"NumericLiteral\", \"BigIntLiteral\", \"DecimalLiteral\", \"PrivateName\");\n        const computed = (0, _utils.assertNodeType)(\"Expression\");\n        const validator = Object.assign(function (node, key, val) {\n          const validator = node.computed ? computed : normal;\n          validator(node, key, val);\n        }, {\n          oneOfNodeTypes: [\"Expression\", \"Identifier\", \"StringLiteral\", \"NumericLiteral\", \"BigIntLiteral\", \"DecimalLiteral\", \"PrivateName\"]\n        });\n        return validator;\n      }()\n    },\n    value: {\n      validate: (0, _utils.assertNodeType)(\"Expression\", \"PatternLike\")\n    },\n    shorthand: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"boolean\"), Object.assign(function (node, key, val) {\n        if (!process.env.BABEL_TYPES_8_BREAKING) return;\n\n        if (val && node.computed) {\n          throw new TypeError(\"Property shorthand of ObjectProperty cannot be true if computed is true\");\n        }\n      }, {\n        type: \"boolean\"\n      }), function (node, key, val) {\n        if (!process.env.BABEL_TYPES_8_BREAKING) return;\n\n        if (val && !(0, _is.default)(\"Identifier\", node.key)) {\n          throw new TypeError(\"Property shorthand of ObjectProperty cannot be true if key is not an Identifier\");\n        }\n      }),\n      default: false\n    },\n    decorators: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"Decorator\"))),\n      optional: true\n    }\n  },\n  visitor: [\"key\", \"value\", \"decorators\"],\n  aliases: [\"UserWhitespacable\", \"Property\", \"ObjectMember\"],\n  validate: function () {\n    const pattern = (0, _utils.assertNodeType)(\"Identifier\", \"Pattern\", \"TSAsExpression\", \"TSNonNullExpression\", \"TSTypeAssertion\");\n    const expression = (0, _utils.assertNodeType)(\"Expression\");\n    return function (parent, key, node) {\n      if (!process.env.BABEL_TYPES_8_BREAKING) return;\n      const validator = (0, _is.default)(\"ObjectPattern\", parent) ? pattern : expression;\n      validator(node, \"value\", node.value);\n    };\n  }()\n});\ndefineType(\"RestElement\", {\n  visitor: [\"argument\", \"typeAnnotation\"],\n  builder: [\"argument\"],\n  aliases: [\"LVal\", \"PatternLike\"],\n  deprecatedAlias: \"RestProperty\",\n  fields: Object.assign({}, patternLikeCommon(), {\n    argument: {\n      validate: !process.env.BABEL_TYPES_8_BREAKING ? (0, _utils.assertNodeType)(\"LVal\") : (0, _utils.assertNodeType)(\"Identifier\", \"ArrayPattern\", \"ObjectPattern\", \"MemberExpression\", \"TSAsExpression\", \"TSTypeAssertion\", \"TSNonNullExpression\")\n    },\n    optional: {\n      validate: (0, _utils.assertValueType)(\"boolean\"),\n      optional: true\n    }\n  }),\n\n  validate(parent, key) {\n    if (!process.env.BABEL_TYPES_8_BREAKING) return;\n    const match = /(\\w+)\\[(\\d+)\\]/.exec(key);\n    if (!match) throw new Error(\"Internal Babel error: malformed key.\");\n    const [, listKey, index] = match;\n\n    if (parent[listKey].length > +index + 1) {\n      throw new TypeError(`RestElement must be last element of ${listKey}`);\n    }\n  }\n\n});\ndefineType(\"ReturnStatement\", {\n  visitor: [\"argument\"],\n  aliases: [\"Statement\", \"Terminatorless\", \"CompletionStatement\"],\n  fields: {\n    argument: {\n      validate: (0, _utils.assertNodeType)(\"Expression\"),\n      optional: true\n    }\n  }\n});\ndefineType(\"SequenceExpression\", {\n  visitor: [\"expressions\"],\n  fields: {\n    expressions: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"Expression\")))\n    }\n  },\n  aliases: [\"Expression\"]\n});\ndefineType(\"ParenthesizedExpression\", {\n  visitor: [\"expression\"],\n  aliases: [\"Expression\", \"ExpressionWrapper\"],\n  fields: {\n    expression: {\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    }\n  }\n});\ndefineType(\"SwitchCase\", {\n  visitor: [\"test\", \"consequent\"],\n  fields: {\n    test: {\n      validate: (0, _utils.assertNodeType)(\"Expression\"),\n      optional: true\n    },\n    consequent: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"Statement\")))\n    }\n  }\n});\ndefineType(\"SwitchStatement\", {\n  visitor: [\"discriminant\", \"cases\"],\n  aliases: [\"Statement\", \"BlockParent\", \"Scopable\"],\n  fields: {\n    discriminant: {\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    },\n    cases: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"SwitchCase\")))\n    }\n  }\n});\ndefineType(\"ThisExpression\", {\n  aliases: [\"Expression\"]\n});\ndefineType(\"ThrowStatement\", {\n  visitor: [\"argument\"],\n  aliases: [\"Statement\", \"Terminatorless\", \"CompletionStatement\"],\n  fields: {\n    argument: {\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    }\n  }\n});\ndefineType(\"TryStatement\", {\n  visitor: [\"block\", \"handler\", \"finalizer\"],\n  aliases: [\"Statement\"],\n  fields: {\n    block: {\n      validate: (0, _utils.chain)((0, _utils.assertNodeType)(\"BlockStatement\"), Object.assign(function (node) {\n        if (!process.env.BABEL_TYPES_8_BREAKING) return;\n\n        if (!node.handler && !node.finalizer) {\n          throw new TypeError(\"TryStatement expects either a handler or finalizer, or both\");\n        }\n      }, {\n        oneOfNodeTypes: [\"BlockStatement\"]\n      }))\n    },\n    handler: {\n      optional: true,\n      validate: (0, _utils.assertNodeType)(\"CatchClause\")\n    },\n    finalizer: {\n      optional: true,\n      validate: (0, _utils.assertNodeType)(\"BlockStatement\")\n    }\n  }\n});\ndefineType(\"UnaryExpression\", {\n  builder: [\"operator\", \"argument\", \"prefix\"],\n  fields: {\n    prefix: {\n      default: true\n    },\n    argument: {\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    },\n    operator: {\n      validate: (0, _utils.assertOneOf)(..._constants.UNARY_OPERATORS)\n    }\n  },\n  visitor: [\"argument\"],\n  aliases: [\"UnaryLike\", \"Expression\"]\n});\ndefineType(\"UpdateExpression\", {\n  builder: [\"operator\", \"argument\", \"prefix\"],\n  fields: {\n    prefix: {\n      default: false\n    },\n    argument: {\n      validate: !process.env.BABEL_TYPES_8_BREAKING ? (0, _utils.assertNodeType)(\"Expression\") : (0, _utils.assertNodeType)(\"Identifier\", \"MemberExpression\")\n    },\n    operator: {\n      validate: (0, _utils.assertOneOf)(..._constants.UPDATE_OPERATORS)\n    }\n  },\n  visitor: [\"argument\"],\n  aliases: [\"Expression\"]\n});\ndefineType(\"VariableDeclaration\", {\n  builder: [\"kind\", \"declarations\"],\n  visitor: [\"declarations\"],\n  aliases: [\"Statement\", \"Declaration\"],\n  fields: {\n    declare: {\n      validate: (0, _utils.assertValueType)(\"boolean\"),\n      optional: true\n    },\n    kind: {\n      validate: (0, _utils.assertOneOf)(\"var\", \"let\", \"const\")\n    },\n    declarations: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"VariableDeclarator\")))\n    }\n  },\n\n  validate(parent, key, node) {\n    if (!process.env.BABEL_TYPES_8_BREAKING) return;\n    if (!(0, _is.default)(\"ForXStatement\", parent, {\n      left: node\n    })) return;\n\n    if (node.declarations.length !== 1) {\n      throw new TypeError(`Exactly one VariableDeclarator is required in the VariableDeclaration of a ${parent.type}`);\n    }\n  }\n\n});\ndefineType(\"VariableDeclarator\", {\n  visitor: [\"id\", \"init\"],\n  fields: {\n    id: {\n      validate: function () {\n        if (!process.env.BABEL_TYPES_8_BREAKING) {\n          return (0, _utils.assertNodeType)(\"LVal\");\n        }\n\n        const normal = (0, _utils.assertNodeType)(\"Identifier\", \"ArrayPattern\", \"ObjectPattern\");\n        const without = (0, _utils.assertNodeType)(\"Identifier\");\n        return function (node, key, val) {\n          const validator = node.init ? normal : without;\n          validator(node, key, val);\n        };\n      }()\n    },\n    definite: {\n      optional: true,\n      validate: (0, _utils.assertValueType)(\"boolean\")\n    },\n    init: {\n      optional: true,\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    }\n  }\n});\ndefineType(\"WhileStatement\", {\n  visitor: [\"test\", \"body\"],\n  aliases: [\"Statement\", \"BlockParent\", \"Loop\", \"While\", \"Scopable\"],\n  fields: {\n    test: {\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    },\n    body: {\n      validate: (0, _utils.assertNodeType)(\"Statement\")\n    }\n  }\n});\ndefineType(\"WithStatement\", {\n  visitor: [\"object\", \"body\"],\n  aliases: [\"Statement\"],\n  fields: {\n    object: {\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    },\n    body: {\n      validate: (0, _utils.assertNodeType)(\"Statement\")\n    }\n  }\n});\ndefineType(\"AssignmentPattern\", {\n  visitor: [\"left\", \"right\", \"decorators\"],\n  builder: [\"left\", \"right\"],\n  aliases: [\"Pattern\", \"PatternLike\", \"LVal\"],\n  fields: Object.assign({}, patternLikeCommon(), {\n    left: {\n      validate: (0, _utils.assertNodeType)(\"Identifier\", \"ObjectPattern\", \"ArrayPattern\", \"MemberExpression\", \"TSAsExpression\", \"TSTypeAssertion\", \"TSNonNullExpression\")\n    },\n    right: {\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    },\n    decorators: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"Decorator\"))),\n      optional: true\n    }\n  })\n});\ndefineType(\"ArrayPattern\", {\n  visitor: [\"elements\", \"typeAnnotation\"],\n  builder: [\"elements\"],\n  aliases: [\"Pattern\", \"PatternLike\", \"LVal\"],\n  fields: Object.assign({}, patternLikeCommon(), {\n    elements: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeOrValueType)(\"null\", \"PatternLike\", \"LVal\")))\n    },\n    decorators: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"Decorator\"))),\n      optional: true\n    },\n    optional: {\n      validate: (0, _utils.assertValueType)(\"boolean\"),\n      optional: true\n    }\n  })\n});\ndefineType(\"ArrowFunctionExpression\", {\n  builder: [\"params\", \"body\", \"async\"],\n  visitor: [\"params\", \"body\", \"returnType\", \"typeParameters\"],\n  aliases: [\"Scopable\", \"Function\", \"BlockParent\", \"FunctionParent\", \"Expression\", \"Pureish\"],\n  fields: Object.assign({}, functionCommon(), functionTypeAnnotationCommon(), {\n    expression: {\n      validate: (0, _utils.assertValueType)(\"boolean\")\n    },\n    body: {\n      validate: (0, _utils.assertNodeType)(\"BlockStatement\", \"Expression\")\n    },\n    predicate: {\n      validate: (0, _utils.assertNodeType)(\"DeclaredPredicate\", \"InferredPredicate\"),\n      optional: true\n    }\n  })\n});\ndefineType(\"ClassBody\", {\n  visitor: [\"body\"],\n  fields: {\n    body: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"ClassMethod\", \"ClassPrivateMethod\", \"ClassProperty\", \"ClassPrivateProperty\", \"ClassAccessorProperty\", \"TSDeclareMethod\", \"TSIndexSignature\", \"StaticBlock\")))\n    }\n  }\n});\ndefineType(\"ClassExpression\", {\n  builder: [\"id\", \"superClass\", \"body\", \"decorators\"],\n  visitor: [\"id\", \"body\", \"superClass\", \"mixins\", \"typeParameters\", \"superTypeParameters\", \"implements\", \"decorators\"],\n  aliases: [\"Scopable\", \"Class\", \"Expression\"],\n  fields: {\n    id: {\n      validate: (0, _utils.assertNodeType)(\"Identifier\"),\n      optional: true\n    },\n    typeParameters: {\n      validate: (0, _utils.assertNodeType)(\"TypeParameterDeclaration\", \"TSTypeParameterDeclaration\", \"Noop\"),\n      optional: true\n    },\n    body: {\n      validate: (0, _utils.assertNodeType)(\"ClassBody\")\n    },\n    superClass: {\n      optional: true,\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    },\n    superTypeParameters: {\n      validate: (0, _utils.assertNodeType)(\"TypeParameterInstantiation\", \"TSTypeParameterInstantiation\"),\n      optional: true\n    },\n    implements: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"TSExpressionWithTypeArguments\", \"ClassImplements\"))),\n      optional: true\n    },\n    decorators: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"Decorator\"))),\n      optional: true\n    },\n    mixins: {\n      validate: (0, _utils.assertNodeType)(\"InterfaceExtends\"),\n      optional: true\n    }\n  }\n});\ndefineType(\"ClassDeclaration\", {\n  inherits: \"ClassExpression\",\n  aliases: [\"Scopable\", \"Class\", \"Statement\", \"Declaration\"],\n  fields: {\n    id: {\n      validate: (0, _utils.assertNodeType)(\"Identifier\")\n    },\n    typeParameters: {\n      validate: (0, _utils.assertNodeType)(\"TypeParameterDeclaration\", \"TSTypeParameterDeclaration\", \"Noop\"),\n      optional: true\n    },\n    body: {\n      validate: (0, _utils.assertNodeType)(\"ClassBody\")\n    },\n    superClass: {\n      optional: true,\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    },\n    superTypeParameters: {\n      validate: (0, _utils.assertNodeType)(\"TypeParameterInstantiation\", \"TSTypeParameterInstantiation\"),\n      optional: true\n    },\n    implements: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"TSExpressionWithTypeArguments\", \"ClassImplements\"))),\n      optional: true\n    },\n    decorators: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"Decorator\"))),\n      optional: true\n    },\n    mixins: {\n      validate: (0, _utils.assertNodeType)(\"InterfaceExtends\"),\n      optional: true\n    },\n    declare: {\n      validate: (0, _utils.assertValueType)(\"boolean\"),\n      optional: true\n    },\n    abstract: {\n      validate: (0, _utils.assertValueType)(\"boolean\"),\n      optional: true\n    }\n  },\n  validate: function () {\n    const identifier = (0, _utils.assertNodeType)(\"Identifier\");\n    return function (parent, key, node) {\n      if (!process.env.BABEL_TYPES_8_BREAKING) return;\n\n      if (!(0, _is.default)(\"ExportDefaultDeclaration\", parent)) {\n        identifier(node, \"id\", node.id);\n      }\n    };\n  }()\n});\ndefineType(\"ExportAllDeclaration\", {\n  visitor: [\"source\"],\n  aliases: [\"Statement\", \"Declaration\", \"ModuleDeclaration\", \"ExportDeclaration\"],\n  fields: {\n    source: {\n      validate: (0, _utils.assertNodeType)(\"StringLiteral\")\n    },\n    exportKind: (0, _utils.validateOptional)((0, _utils.assertOneOf)(\"type\", \"value\")),\n    assertions: {\n      optional: true,\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"ImportAttribute\")))\n    }\n  }\n});\ndefineType(\"ExportDefaultDeclaration\", {\n  visitor: [\"declaration\"],\n  aliases: [\"Statement\", \"Declaration\", \"ModuleDeclaration\", \"ExportDeclaration\"],\n  fields: {\n    declaration: {\n      validate: (0, _utils.assertNodeType)(\"TSDeclareFunction\", \"FunctionDeclaration\", \"ClassDeclaration\", \"Expression\")\n    },\n    exportKind: (0, _utils.validateOptional)((0, _utils.assertOneOf)(\"value\"))\n  }\n});\ndefineType(\"ExportNamedDeclaration\", {\n  visitor: [\"declaration\", \"specifiers\", \"source\"],\n  aliases: [\"Statement\", \"Declaration\", \"ModuleDeclaration\", \"ExportDeclaration\"],\n  fields: {\n    declaration: {\n      optional: true,\n      validate: (0, _utils.chain)((0, _utils.assertNodeType)(\"Declaration\"), Object.assign(function (node, key, val) {\n        if (!process.env.BABEL_TYPES_8_BREAKING) return;\n\n        if (val && node.specifiers.length) {\n          throw new TypeError(\"Only declaration or specifiers is allowed on ExportNamedDeclaration\");\n        }\n      }, {\n        oneOfNodeTypes: [\"Declaration\"]\n      }), function (node, key, val) {\n        if (!process.env.BABEL_TYPES_8_BREAKING) return;\n\n        if (val && node.source) {\n          throw new TypeError(\"Cannot export a declaration from a source\");\n        }\n      })\n    },\n    assertions: {\n      optional: true,\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"ImportAttribute\")))\n    },\n    specifiers: {\n      default: [],\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)(function () {\n        const sourced = (0, _utils.assertNodeType)(\"ExportSpecifier\", \"ExportDefaultSpecifier\", \"ExportNamespaceSpecifier\");\n        const sourceless = (0, _utils.assertNodeType)(\"ExportSpecifier\");\n        if (!process.env.BABEL_TYPES_8_BREAKING) return sourced;\n        return function (node, key, val) {\n          const validator = node.source ? sourced : sourceless;\n          validator(node, key, val);\n        };\n      }()))\n    },\n    source: {\n      validate: (0, _utils.assertNodeType)(\"StringLiteral\"),\n      optional: true\n    },\n    exportKind: (0, _utils.validateOptional)((0, _utils.assertOneOf)(\"type\", \"value\"))\n  }\n});\ndefineType(\"ExportSpecifier\", {\n  visitor: [\"local\", \"exported\"],\n  aliases: [\"ModuleSpecifier\"],\n  fields: {\n    local: {\n      validate: (0, _utils.assertNodeType)(\"Identifier\")\n    },\n    exported: {\n      validate: (0, _utils.assertNodeType)(\"Identifier\", \"StringLiteral\")\n    },\n    exportKind: {\n      validate: (0, _utils.assertOneOf)(\"type\", \"value\"),\n      optional: true\n    }\n  }\n});\ndefineType(\"ForOfStatement\", {\n  visitor: [\"left\", \"right\", \"body\"],\n  builder: [\"left\", \"right\", \"body\", \"await\"],\n  aliases: [\"Scopable\", \"Statement\", \"For\", \"BlockParent\", \"Loop\", \"ForXStatement\"],\n  fields: {\n    left: {\n      validate: function () {\n        if (!process.env.BABEL_TYPES_8_BREAKING) {\n          return (0, _utils.assertNodeType)(\"VariableDeclaration\", \"LVal\");\n        }\n\n        const declaration = (0, _utils.assertNodeType)(\"VariableDeclaration\");\n        const lval = (0, _utils.assertNodeType)(\"Identifier\", \"MemberExpression\", \"ArrayPattern\", \"ObjectPattern\", \"TSAsExpression\", \"TSTypeAssertion\", \"TSNonNullExpression\");\n        return function (node, key, val) {\n          if ((0, _is.default)(\"VariableDeclaration\", val)) {\n            declaration(node, key, val);\n          } else {\n            lval(node, key, val);\n          }\n        };\n      }()\n    },\n    right: {\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    },\n    body: {\n      validate: (0, _utils.assertNodeType)(\"Statement\")\n    },\n    await: {\n      default: false\n    }\n  }\n});\ndefineType(\"ImportDeclaration\", {\n  visitor: [\"specifiers\", \"source\"],\n  aliases: [\"Statement\", \"Declaration\", \"ModuleDeclaration\"],\n  fields: {\n    assertions: {\n      optional: true,\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"ImportAttribute\")))\n    },\n    specifiers: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"ImportSpecifier\", \"ImportDefaultSpecifier\", \"ImportNamespaceSpecifier\")))\n    },\n    source: {\n      validate: (0, _utils.assertNodeType)(\"StringLiteral\")\n    },\n    importKind: {\n      validate: (0, _utils.assertOneOf)(\"type\", \"typeof\", \"value\"),\n      optional: true\n    }\n  }\n});\ndefineType(\"ImportDefaultSpecifier\", {\n  visitor: [\"local\"],\n  aliases: [\"ModuleSpecifier\"],\n  fields: {\n    local: {\n      validate: (0, _utils.assertNodeType)(\"Identifier\")\n    }\n  }\n});\ndefineType(\"ImportNamespaceSpecifier\", {\n  visitor: [\"local\"],\n  aliases: [\"ModuleSpecifier\"],\n  fields: {\n    local: {\n      validate: (0, _utils.assertNodeType)(\"Identifier\")\n    }\n  }\n});\ndefineType(\"ImportSpecifier\", {\n  visitor: [\"local\", \"imported\"],\n  aliases: [\"ModuleSpecifier\"],\n  fields: {\n    local: {\n      validate: (0, _utils.assertNodeType)(\"Identifier\")\n    },\n    imported: {\n      validate: (0, _utils.assertNodeType)(\"Identifier\", \"StringLiteral\")\n    },\n    importKind: {\n      validate: (0, _utils.assertOneOf)(\"type\", \"typeof\", \"value\"),\n      optional: true\n    }\n  }\n});\ndefineType(\"MetaProperty\", {\n  visitor: [\"meta\", \"property\"],\n  aliases: [\"Expression\"],\n  fields: {\n    meta: {\n      validate: (0, _utils.chain)((0, _utils.assertNodeType)(\"Identifier\"), Object.assign(function (node, key, val) {\n        if (!process.env.BABEL_TYPES_8_BREAKING) return;\n        let property;\n\n        switch (val.name) {\n          case \"function\":\n            property = \"sent\";\n            break;\n\n          case \"new\":\n            property = \"target\";\n            break;\n\n          case \"import\":\n            property = \"meta\";\n            break;\n        }\n\n        if (!(0, _is.default)(\"Identifier\", node.property, {\n          name: property\n        })) {\n          throw new TypeError(\"Unrecognised MetaProperty\");\n        }\n      }, {\n        oneOfNodeTypes: [\"Identifier\"]\n      }))\n    },\n    property: {\n      validate: (0, _utils.assertNodeType)(\"Identifier\")\n    }\n  }\n});\n\nconst classMethodOrPropertyCommon = () => ({\n  abstract: {\n    validate: (0, _utils.assertValueType)(\"boolean\"),\n    optional: true\n  },\n  accessibility: {\n    validate: (0, _utils.assertOneOf)(\"public\", \"private\", \"protected\"),\n    optional: true\n  },\n  static: {\n    default: false\n  },\n  override: {\n    default: false\n  },\n  computed: {\n    default: false\n  },\n  optional: {\n    validate: (0, _utils.assertValueType)(\"boolean\"),\n    optional: true\n  },\n  key: {\n    validate: (0, _utils.chain)(function () {\n      const normal = (0, _utils.assertNodeType)(\"Identifier\", \"StringLiteral\", \"NumericLiteral\");\n      const computed = (0, _utils.assertNodeType)(\"Expression\");\n      return function (node, key, val) {\n        const validator = node.computed ? computed : normal;\n        validator(node, key, val);\n      };\n    }(), (0, _utils.assertNodeType)(\"Identifier\", \"StringLiteral\", \"NumericLiteral\", \"BigIntLiteral\", \"Expression\"))\n  }\n});\n\nexports.classMethodOrPropertyCommon = classMethodOrPropertyCommon;\n\nconst classMethodOrDeclareMethodCommon = () => Object.assign({}, functionCommon(), classMethodOrPropertyCommon(), {\n  params: {\n    validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"Identifier\", \"Pattern\", \"RestElement\", \"TSParameterProperty\")))\n  },\n  kind: {\n    validate: (0, _utils.assertOneOf)(\"get\", \"set\", \"method\", \"constructor\"),\n    default: \"method\"\n  },\n  access: {\n    validate: (0, _utils.chain)((0, _utils.assertValueType)(\"string\"), (0, _utils.assertOneOf)(\"public\", \"private\", \"protected\")),\n    optional: true\n  },\n  decorators: {\n    validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"Decorator\"))),\n    optional: true\n  }\n});\n\nexports.classMethodOrDeclareMethodCommon = classMethodOrDeclareMethodCommon;\ndefineType(\"ClassMethod\", {\n  aliases: [\"Function\", \"Scopable\", \"BlockParent\", \"FunctionParent\", \"Method\"],\n  builder: [\"kind\", \"key\", \"params\", \"body\", \"computed\", \"static\", \"generator\", \"async\"],\n  visitor: [\"key\", \"params\", \"body\", \"decorators\", \"returnType\", \"typeParameters\"],\n  fields: Object.assign({}, classMethodOrDeclareMethodCommon(), functionTypeAnnotationCommon(), {\n    body: {\n      validate: (0, _utils.assertNodeType)(\"BlockStatement\")\n    }\n  })\n});\ndefineType(\"ObjectPattern\", {\n  visitor: [\"properties\", \"typeAnnotation\", \"decorators\"],\n  builder: [\"properties\"],\n  aliases: [\"Pattern\", \"PatternLike\", \"LVal\"],\n  fields: Object.assign({}, patternLikeCommon(), {\n    properties: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"RestElement\", \"ObjectProperty\")))\n    }\n  })\n});\ndefineType(\"SpreadElement\", {\n  visitor: [\"argument\"],\n  aliases: [\"UnaryLike\"],\n  deprecatedAlias: \"SpreadProperty\",\n  fields: {\n    argument: {\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    }\n  }\n});\ndefineType(\"Super\", {\n  aliases: [\"Expression\"]\n});\ndefineType(\"TaggedTemplateExpression\", {\n  visitor: [\"tag\", \"quasi\", \"typeParameters\"],\n  builder: [\"tag\", \"quasi\"],\n  aliases: [\"Expression\"],\n  fields: {\n    tag: {\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    },\n    quasi: {\n      validate: (0, _utils.assertNodeType)(\"TemplateLiteral\")\n    },\n    typeParameters: {\n      validate: (0, _utils.assertNodeType)(\"TypeParameterInstantiation\", \"TSTypeParameterInstantiation\"),\n      optional: true\n    }\n  }\n});\ndefineType(\"TemplateElement\", {\n  builder: [\"value\", \"tail\"],\n  fields: {\n    value: {\n      validate: (0, _utils.assertShape)({\n        raw: {\n          validate: (0, _utils.assertValueType)(\"string\")\n        },\n        cooked: {\n          validate: (0, _utils.assertValueType)(\"string\"),\n          optional: true\n        }\n      })\n    },\n    tail: {\n      default: false\n    }\n  }\n});\ndefineType(\"TemplateLiteral\", {\n  visitor: [\"quasis\", \"expressions\"],\n  aliases: [\"Expression\", \"Literal\"],\n  fields: {\n    quasis: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"TemplateElement\")))\n    },\n    expressions: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"Expression\", \"TSType\")), function (node, key, val) {\n        if (node.quasis.length !== val.length + 1) {\n          throw new TypeError(`Number of ${node.type} quasis should be exactly one more than the number of expressions.\\nExpected ${val.length + 1} quasis but got ${node.quasis.length}`);\n        }\n      })\n    }\n  }\n});\ndefineType(\"YieldExpression\", {\n  builder: [\"argument\", \"delegate\"],\n  visitor: [\"argument\"],\n  aliases: [\"Expression\", \"Terminatorless\"],\n  fields: {\n    delegate: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"boolean\"), Object.assign(function (node, key, val) {\n        if (!process.env.BABEL_TYPES_8_BREAKING) return;\n\n        if (val && !node.argument) {\n          throw new TypeError(\"Property delegate of YieldExpression cannot be true if there is no argument\");\n        }\n      }, {\n        type: \"boolean\"\n      })),\n      default: false\n    },\n    argument: {\n      optional: true,\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    }\n  }\n});\ndefineType(\"AwaitExpression\", {\n  builder: [\"argument\"],\n  visitor: [\"argument\"],\n  aliases: [\"Expression\", \"Terminatorless\"],\n  fields: {\n    argument: {\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    }\n  }\n});\ndefineType(\"Import\", {\n  aliases: [\"Expression\"]\n});\ndefineType(\"BigIntLiteral\", {\n  builder: [\"value\"],\n  fields: {\n    value: {\n      validate: (0, _utils.assertValueType)(\"string\")\n    }\n  },\n  aliases: [\"Expression\", \"Pureish\", \"Literal\", \"Immutable\"]\n});\ndefineType(\"ExportNamespaceSpecifier\", {\n  visitor: [\"exported\"],\n  aliases: [\"ModuleSpecifier\"],\n  fields: {\n    exported: {\n      validate: (0, _utils.assertNodeType)(\"Identifier\")\n    }\n  }\n});\ndefineType(\"OptionalMemberExpression\", {\n  builder: [\"object\", \"property\", \"computed\", \"optional\"],\n  visitor: [\"object\", \"property\"],\n  aliases: [\"Expression\"],\n  fields: {\n    object: {\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    },\n    property: {\n      validate: function () {\n        const normal = (0, _utils.assertNodeType)(\"Identifier\");\n        const computed = (0, _utils.assertNodeType)(\"Expression\");\n        const validator = Object.assign(function (node, key, val) {\n          const validator = node.computed ? computed : normal;\n          validator(node, key, val);\n        }, {\n          oneOfNodeTypes: [\"Expression\", \"Identifier\"]\n        });\n        return validator;\n      }()\n    },\n    computed: {\n      default: false\n    },\n    optional: {\n      validate: !process.env.BABEL_TYPES_8_BREAKING ? (0, _utils.assertValueType)(\"boolean\") : (0, _utils.chain)((0, _utils.assertValueType)(\"boolean\"), (0, _utils.assertOptionalChainStart)())\n    }\n  }\n});\ndefineType(\"OptionalCallExpression\", {\n  visitor: [\"callee\", \"arguments\", \"typeParameters\", \"typeArguments\"],\n  builder: [\"callee\", \"arguments\", \"optional\"],\n  aliases: [\"Expression\"],\n  fields: {\n    callee: {\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    },\n    arguments: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"Expression\", \"SpreadElement\", \"JSXNamespacedName\", \"ArgumentPlaceholder\")))\n    },\n    optional: {\n      validate: !process.env.BABEL_TYPES_8_BREAKING ? (0, _utils.assertValueType)(\"boolean\") : (0, _utils.chain)((0, _utils.assertValueType)(\"boolean\"), (0, _utils.assertOptionalChainStart)())\n    },\n    typeArguments: {\n      validate: (0, _utils.assertNodeType)(\"TypeParameterInstantiation\"),\n      optional: true\n    },\n    typeParameters: {\n      validate: (0, _utils.assertNodeType)(\"TSTypeParameterInstantiation\"),\n      optional: true\n    }\n  }\n});\ndefineType(\"ClassProperty\", {\n  visitor: [\"key\", \"value\", \"typeAnnotation\", \"decorators\"],\n  builder: [\"key\", \"value\", \"typeAnnotation\", \"decorators\", \"computed\", \"static\"],\n  aliases: [\"Property\"],\n  fields: Object.assign({}, classMethodOrPropertyCommon(), {\n    value: {\n      validate: (0, _utils.assertNodeType)(\"Expression\"),\n      optional: true\n    },\n    definite: {\n      validate: (0, _utils.assertValueType)(\"boolean\"),\n      optional: true\n    },\n    typeAnnotation: {\n      validate: (0, _utils.assertNodeType)(\"TypeAnnotation\", \"TSTypeAnnotation\", \"Noop\"),\n      optional: true\n    },\n    decorators: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"Decorator\"))),\n      optional: true\n    },\n    readonly: {\n      validate: (0, _utils.assertValueType)(\"boolean\"),\n      optional: true\n    },\n    declare: {\n      validate: (0, _utils.assertValueType)(\"boolean\"),\n      optional: true\n    },\n    variance: {\n      validate: (0, _utils.assertNodeType)(\"Variance\"),\n      optional: true\n    }\n  })\n});\ndefineType(\"ClassAccessorProperty\", {\n  visitor: [\"key\", \"value\", \"typeAnnotation\", \"decorators\"],\n  builder: [\"key\", \"value\", \"typeAnnotation\", \"decorators\", \"computed\", \"static\"],\n  aliases: [\"Property\", \"Accessor\"],\n  fields: Object.assign({}, classMethodOrPropertyCommon(), {\n    key: {\n      validate: (0, _utils.chain)(function () {\n        const normal = (0, _utils.assertNodeType)(\"Identifier\", \"StringLiteral\", \"NumericLiteral\", \"BigIntLiteral\", \"PrivateName\");\n        const computed = (0, _utils.assertNodeType)(\"Expression\");\n        return function (node, key, val) {\n          const validator = node.computed ? computed : normal;\n          validator(node, key, val);\n        };\n      }(), (0, _utils.assertNodeType)(\"Identifier\", \"StringLiteral\", \"NumericLiteral\", \"BigIntLiteral\", \"Expression\", \"PrivateName\"))\n    },\n    value: {\n      validate: (0, _utils.assertNodeType)(\"Expression\"),\n      optional: true\n    },\n    definite: {\n      validate: (0, _utils.assertValueType)(\"boolean\"),\n      optional: true\n    },\n    typeAnnotation: {\n      validate: (0, _utils.assertNodeType)(\"TypeAnnotation\", \"TSTypeAnnotation\", \"Noop\"),\n      optional: true\n    },\n    decorators: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"Decorator\"))),\n      optional: true\n    },\n    readonly: {\n      validate: (0, _utils.assertValueType)(\"boolean\"),\n      optional: true\n    },\n    declare: {\n      validate: (0, _utils.assertValueType)(\"boolean\"),\n      optional: true\n    },\n    variance: {\n      validate: (0, _utils.assertNodeType)(\"Variance\"),\n      optional: true\n    }\n  })\n});\ndefineType(\"ClassPrivateProperty\", {\n  visitor: [\"key\", \"value\", \"decorators\", \"typeAnnotation\"],\n  builder: [\"key\", \"value\", \"decorators\", \"static\"],\n  aliases: [\"Property\", \"Private\"],\n  fields: {\n    key: {\n      validate: (0, _utils.assertNodeType)(\"PrivateName\")\n    },\n    value: {\n      validate: (0, _utils.assertNodeType)(\"Expression\"),\n      optional: true\n    },\n    typeAnnotation: {\n      validate: (0, _utils.assertNodeType)(\"TypeAnnotation\", \"TSTypeAnnotation\", \"Noop\"),\n      optional: true\n    },\n    decorators: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"Decorator\"))),\n      optional: true\n    },\n    static: {\n      validate: (0, _utils.assertValueType)(\"boolean\"),\n      default: false\n    },\n    readonly: {\n      validate: (0, _utils.assertValueType)(\"boolean\"),\n      optional: true\n    },\n    definite: {\n      validate: (0, _utils.assertValueType)(\"boolean\"),\n      optional: true\n    },\n    variance: {\n      validate: (0, _utils.assertNodeType)(\"Variance\"),\n      optional: true\n    }\n  }\n});\ndefineType(\"ClassPrivateMethod\", {\n  builder: [\"kind\", \"key\", \"params\", \"body\", \"static\"],\n  visitor: [\"key\", \"params\", \"body\", \"decorators\", \"returnType\", \"typeParameters\"],\n  aliases: [\"Function\", \"Scopable\", \"BlockParent\", \"FunctionParent\", \"Method\", \"Private\"],\n  fields: Object.assign({}, classMethodOrDeclareMethodCommon(), functionTypeAnnotationCommon(), {\n    kind: {\n      validate: (0, _utils.assertOneOf)(\"get\", \"set\", \"method\"),\n      default: \"method\"\n    },\n    key: {\n      validate: (0, _utils.assertNodeType)(\"PrivateName\")\n    },\n    body: {\n      validate: (0, _utils.assertNodeType)(\"BlockStatement\")\n    }\n  })\n});\ndefineType(\"PrivateName\", {\n  visitor: [\"id\"],\n  aliases: [\"Private\"],\n  fields: {\n    id: {\n      validate: (0, _utils.assertNodeType)(\"Identifier\")\n    }\n  }\n});\ndefineType(\"StaticBlock\", {\n  visitor: [\"body\"],\n  fields: {\n    body: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"Statement\")))\n    }\n  },\n  aliases: [\"Scopable\", \"BlockParent\", \"FunctionParent\"]\n});","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = is;\n\nvar _shallowEqual = require(\"../utils/shallowEqual\");\n\nvar _isType = require(\"./isType\");\n\nvar _isPlaceholderType = require(\"./isPlaceholderType\");\n\nvar _definitions = require(\"../definitions\");\n\nfunction is(type, node, opts) {\n  if (!node) return false;\n  const matches = (0, _isType.default)(node.type, type);\n\n  if (!matches) {\n    if (!opts && node.type === \"Placeholder\" && type in _definitions.FLIPPED_ALIAS_KEYS) {\n      return (0, _isPlaceholderType.default)(node.expectedNode, type);\n    }\n\n    return false;\n  }\n\n  if (typeof opts === \"undefined\") {\n    return true;\n  } else {\n    return (0, _shallowEqual.default)(node, opts);\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isType;\n\nvar _definitions = require(\"../definitions\");\n\nfunction isType(nodeType, targetType) {\n  if (nodeType === targetType) return true;\n  if (_definitions.ALIAS_KEYS[targetType]) return false;\n  const aliases = _definitions.FLIPPED_ALIAS_KEYS[targetType];\n\n  if (aliases) {\n    if (aliases[0] === nodeType) return true;\n\n    for (const alias of aliases) {\n      if (nodeType === alias) return true;\n    }\n  }\n\n  return false;\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isPlaceholderType;\n\nvar _definitions = require(\"../definitions\");\n\nfunction isPlaceholderType(placeholderType, targetType) {\n  if (placeholderType === targetType) return true;\n  const aliases = _definitions.PLACEHOLDERS_ALIAS[placeholderType];\n\n  if (aliases) {\n    for (const alias of aliases) {\n      if (targetType === alias) return true;\n    }\n  }\n\n  return false;\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isValidIdentifier;\n\nvar _helperValidatorIdentifier = require(\"@babel/helper-validator-identifier\");\n\nfunction isValidIdentifier(name, reserved = true) {\n  if (typeof name !== \"string\") return false;\n\n  if (reserved) {\n    if ((0, _helperValidatorIdentifier.isKeyword)(name) || (0, _helperValidatorIdentifier.isStrictReservedWord)(name, true)) {\n      return false;\n    }\n  }\n\n  return (0, _helperValidatorIdentifier.isIdentifierName)(name);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"isIdentifierChar\", {\n  enumerable: true,\n  get: function () {\n    return _identifier.isIdentifierChar;\n  }\n});\nObject.defineProperty(exports, \"isIdentifierName\", {\n  enumerable: true,\n  get: function () {\n    return _identifier.isIdentifierName;\n  }\n});\nObject.defineProperty(exports, \"isIdentifierStart\", {\n  enumerable: true,\n  get: function () {\n    return _identifier.isIdentifierStart;\n  }\n});\nObject.defineProperty(exports, \"isKeyword\", {\n  enumerable: true,\n  get: function () {\n    return _keyword.isKeyword;\n  }\n});\nObject.defineProperty(exports, \"isReservedWord\", {\n  enumerable: true,\n  get: function () {\n    return _keyword.isReservedWord;\n  }\n});\nObject.defineProperty(exports, \"isStrictBindOnlyReservedWord\", {\n  enumerable: true,\n  get: function () {\n    return _keyword.isStrictBindOnlyReservedWord;\n  }\n});\nObject.defineProperty(exports, \"isStrictBindReservedWord\", {\n  enumerable: true,\n  get: function () {\n    return _keyword.isStrictBindReservedWord;\n  }\n});\nObject.defineProperty(exports, \"isStrictReservedWord\", {\n  enumerable: true,\n  get: function () {\n    return _keyword.isStrictReservedWord;\n  }\n});\n\nvar _identifier = require(\"./identifier\");\n\nvar _keyword = require(\"./keyword\");","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isIdentifierChar = isIdentifierChar;\nexports.isIdentifierName = isIdentifierName;\nexports.isIdentifierStart = isIdentifierStart;\nlet nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u0870-\\u0887\\u0889-\\u088e\\u08a0-\\u08c9\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c5d\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cdd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d04-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u1711\\u171f-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4c\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf3\\u1cf5\\u1cf6\\u1cfa\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31bf\\u31f0-\\u31ff\\u3400-\\u4dbf\\u4e00-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7ca\\ua7d0\\ua7d1\\ua7d3\\ua7d5-\\ua7d9\\ua7f2-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab69\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\nlet nonASCIIidentifierChars = \"\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u07fd\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u0898-\\u089f\\u08ca-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u09fe\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0afa-\\u0aff\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b55-\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c04\\u0c3c\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0d00-\\u0d03\\u0d3b\\u0d3c\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d81-\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0ebc\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1715\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u180f-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1abf-\\u1ace\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf4\\u1cf7-\\u1cf9\\u1dc0-\\u1dff\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua82c\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua8ff-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\";\nconst nonASCIIidentifierStart = new RegExp(\"[\" + nonASCIIidentifierStartChars + \"]\");\nconst nonASCIIidentifier = new RegExp(\"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\");\nnonASCIIidentifierStartChars = nonASCIIidentifierChars = null;\nconst astralIdentifierStartCodes = [0, 11, 2, 25, 2, 18, 2, 1, 2, 14, 3, 13, 35, 122, 70, 52, 268, 28, 4, 48, 48, 31, 14, 29, 6, 37, 11, 29, 3, 35, 5, 7, 2, 4, 43, 157, 19, 35, 5, 35, 5, 39, 9, 51, 13, 10, 2, 14, 2, 6, 2, 1, 2, 10, 2, 14, 2, 6, 2, 1, 68, 310, 10, 21, 11, 7, 25, 5, 2, 41, 2, 8, 70, 5, 3, 0, 2, 43, 2, 1, 4, 0, 3, 22, 11, 22, 10, 30, 66, 18, 2, 1, 11, 21, 11, 25, 71, 55, 7, 1, 65, 0, 16, 3, 2, 2, 2, 28, 43, 28, 4, 28, 36, 7, 2, 27, 28, 53, 11, 21, 11, 18, 14, 17, 111, 72, 56, 50, 14, 50, 14, 35, 349, 41, 7, 1, 79, 28, 11, 0, 9, 21, 43, 17, 47, 20, 28, 22, 13, 52, 58, 1, 3, 0, 14, 44, 33, 24, 27, 35, 30, 0, 3, 0, 9, 34, 4, 0, 13, 47, 15, 3, 22, 0, 2, 0, 36, 17, 2, 24, 85, 6, 2, 0, 2, 3, 2, 14, 2, 9, 8, 46, 39, 7, 3, 1, 3, 21, 2, 6, 2, 1, 2, 4, 4, 0, 19, 0, 13, 4, 159, 52, 19, 3, 21, 2, 31, 47, 21, 1, 2, 0, 185, 46, 42, 3, 37, 47, 21, 0, 60, 42, 14, 0, 72, 26, 38, 6, 186, 43, 117, 63, 32, 7, 3, 0, 3, 7, 2, 1, 2, 23, 16, 0, 2, 0, 95, 7, 3, 38, 17, 0, 2, 0, 29, 0, 11, 39, 8, 0, 22, 0, 12, 45, 20, 0, 19, 72, 264, 8, 2, 36, 18, 0, 50, 29, 113, 6, 2, 1, 2, 37, 22, 0, 26, 5, 2, 1, 2, 31, 15, 0, 328, 18, 190, 0, 80, 921, 103, 110, 18, 195, 2637, 96, 16, 1070, 4050, 582, 8634, 568, 8, 30, 18, 78, 18, 29, 19, 47, 17, 3, 32, 20, 6, 18, 689, 63, 129, 74, 6, 0, 67, 12, 65, 1, 2, 0, 29, 6135, 9, 1237, 43, 8, 8936, 3, 2, 6, 2, 1, 2, 290, 46, 2, 18, 3, 9, 395, 2309, 106, 6, 12, 4, 8, 8, 9, 5991, 84, 2, 70, 2, 1, 3, 0, 3, 1, 3, 3, 2, 11, 2, 0, 2, 6, 2, 64, 2, 3, 3, 7, 2, 6, 2, 27, 2, 3, 2, 4, 2, 0, 4, 6, 2, 339, 3, 24, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 7, 1845, 30, 482, 44, 11, 6, 17, 0, 322, 29, 19, 43, 1269, 6, 2, 3, 2, 1, 2, 14, 2, 196, 60, 67, 8, 0, 1205, 3, 2, 26, 2, 1, 2, 0, 3, 0, 2, 9, 2, 3, 2, 0, 2, 0, 7, 0, 5, 0, 2, 0, 2, 0, 2, 2, 2, 1, 2, 0, 3, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 1, 2, 0, 3, 3, 2, 6, 2, 3, 2, 3, 2, 0, 2, 9, 2, 16, 6, 2, 2, 4, 2, 16, 4421, 42719, 33, 4152, 8, 221, 3, 5761, 15, 7472, 3104, 541, 1507, 4938];\nconst astralIdentifierCodes = [509, 0, 227, 0, 150, 4, 294, 9, 1368, 2, 2, 1, 6, 3, 41, 2, 5, 0, 166, 1, 574, 3, 9, 9, 370, 1, 154, 10, 50, 3, 123, 2, 54, 14, 32, 10, 3, 1, 11, 3, 46, 10, 8, 0, 46, 9, 7, 2, 37, 13, 2, 9, 6, 1, 45, 0, 13, 2, 49, 13, 9, 3, 2, 11, 83, 11, 7, 0, 161, 11, 6, 9, 7, 3, 56, 1, 2, 6, 3, 1, 3, 2, 10, 0, 11, 1, 3, 6, 4, 4, 193, 17, 10, 9, 5, 0, 82, 19, 13, 9, 214, 6, 3, 8, 28, 1, 83, 16, 16, 9, 82, 12, 9, 9, 84, 14, 5, 9, 243, 14, 166, 9, 71, 5, 2, 1, 3, 3, 2, 0, 2, 1, 13, 9, 120, 6, 3, 6, 4, 0, 29, 9, 41, 6, 2, 3, 9, 0, 10, 10, 47, 15, 406, 7, 2, 7, 17, 9, 57, 21, 2, 13, 123, 5, 4, 0, 2, 1, 2, 6, 2, 0, 9, 9, 49, 4, 2, 1, 2, 4, 9, 9, 330, 3, 19306, 9, 87, 9, 39, 4, 60, 6, 26, 9, 1014, 0, 2, 54, 8, 3, 82, 0, 12, 1, 19628, 1, 4706, 45, 3, 22, 543, 4, 4, 5, 9, 7, 3, 6, 31, 3, 149, 2, 1418, 49, 513, 54, 5, 49, 9, 0, 15, 0, 23, 4, 2, 14, 1361, 6, 2, 16, 3, 6, 2, 1, 2, 4, 262, 6, 10, 9, 357, 0, 62, 13, 1495, 6, 110, 6, 6, 9, 4759, 9, 787719, 239];\n\nfunction isInAstralSet(code, set) {\n  let pos = 0x10000;\n\n  for (let i = 0, length = set.length; i < length; i += 2) {\n    pos += set[i];\n    if (pos > code) return false;\n    pos += set[i + 1];\n    if (pos >= code) return true;\n  }\n\n  return false;\n}\n\nfunction isIdentifierStart(code) {\n  if (code < 65) return code === 36;\n  if (code <= 90) return true;\n  if (code < 97) return code === 95;\n  if (code <= 122) return true;\n\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code));\n  }\n\n  return isInAstralSet(code, astralIdentifierStartCodes);\n}\n\nfunction isIdentifierChar(code) {\n  if (code < 48) return code === 36;\n  if (code < 58) return true;\n  if (code < 65) return false;\n  if (code <= 90) return true;\n  if (code < 97) return code === 95;\n  if (code <= 122) return true;\n\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code));\n  }\n\n  return isInAstralSet(code, astralIdentifierStartCodes) || isInAstralSet(code, astralIdentifierCodes);\n}\n\nfunction isIdentifierName(name) {\n  let isFirst = true;\n\n  for (let i = 0; i < name.length; i++) {\n    let cp = name.charCodeAt(i);\n\n    if ((cp & 0xfc00) === 0xd800 && i + 1 < name.length) {\n      const trail = name.charCodeAt(++i);\n\n      if ((trail & 0xfc00) === 0xdc00) {\n        cp = 0x10000 + ((cp & 0x3ff) << 10) + (trail & 0x3ff);\n      }\n    }\n\n    if (isFirst) {\n      isFirst = false;\n\n      if (!isIdentifierStart(cp)) {\n        return false;\n      }\n    } else if (!isIdentifierChar(cp)) {\n      return false;\n    }\n  }\n\n  return !isFirst;\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isKeyword = isKeyword;\nexports.isReservedWord = isReservedWord;\nexports.isStrictBindOnlyReservedWord = isStrictBindOnlyReservedWord;\nexports.isStrictBindReservedWord = isStrictBindReservedWord;\nexports.isStrictReservedWord = isStrictReservedWord;\nconst reservedWords = {\n  keyword: [\"break\", \"case\", \"catch\", \"continue\", \"debugger\", \"default\", \"do\", \"else\", \"finally\", \"for\", \"function\", \"if\", \"return\", \"switch\", \"throw\", \"try\", \"var\", \"const\", \"while\", \"with\", \"new\", \"this\", \"super\", \"class\", \"extends\", \"export\", \"import\", \"null\", \"true\", \"false\", \"in\", \"instanceof\", \"typeof\", \"void\", \"delete\"],\n  strict: [\"implements\", \"interface\", \"let\", \"package\", \"private\", \"protected\", \"public\", \"static\", \"yield\"],\n  strictBind: [\"eval\", \"arguments\"]\n};\nconst keywords = new Set(reservedWords.keyword);\nconst reservedWordsStrictSet = new Set(reservedWords.strict);\nconst reservedWordsStrictBindSet = new Set(reservedWords.strictBind);\n\nfunction isReservedWord(word, inModule) {\n  return inModule && word === \"await\" || word === \"enum\";\n}\n\nfunction isStrictReservedWord(word, inModule) {\n  return isReservedWord(word, inModule) || reservedWordsStrictSet.has(word);\n}\n\nfunction isStrictBindOnlyReservedWord(word) {\n  return reservedWordsStrictBindSet.has(word);\n}\n\nfunction isStrictBindReservedWord(word, inModule) {\n  return isStrictReservedWord(word, inModule) || isStrictBindOnlyReservedWord(word);\n}\n\nfunction isKeyword(word) {\n  return keywords.has(word);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.UPDATE_OPERATORS = exports.UNARY_OPERATORS = exports.STRING_UNARY_OPERATORS = exports.STATEMENT_OR_BLOCK_KEYS = exports.NUMBER_UNARY_OPERATORS = exports.NUMBER_BINARY_OPERATORS = exports.NOT_LOCAL_BINDING = exports.LOGICAL_OPERATORS = exports.INHERIT_KEYS = exports.FOR_INIT_KEYS = exports.FLATTENABLE_KEYS = exports.EQUALITY_BINARY_OPERATORS = exports.COMPARISON_BINARY_OPERATORS = exports.COMMENT_KEYS = exports.BOOLEAN_UNARY_OPERATORS = exports.BOOLEAN_NUMBER_BINARY_OPERATORS = exports.BOOLEAN_BINARY_OPERATORS = exports.BLOCK_SCOPED_SYMBOL = exports.BINARY_OPERATORS = exports.ASSIGNMENT_OPERATORS = void 0;\nconst STATEMENT_OR_BLOCK_KEYS = [\"consequent\", \"body\", \"alternate\"];\nexports.STATEMENT_OR_BLOCK_KEYS = STATEMENT_OR_BLOCK_KEYS;\nconst FLATTENABLE_KEYS = [\"body\", \"expressions\"];\nexports.FLATTENABLE_KEYS = FLATTENABLE_KEYS;\nconst FOR_INIT_KEYS = [\"left\", \"init\"];\nexports.FOR_INIT_KEYS = FOR_INIT_KEYS;\nconst COMMENT_KEYS = [\"leadingComments\", \"trailingComments\", \"innerComments\"];\nexports.COMMENT_KEYS = COMMENT_KEYS;\nconst LOGICAL_OPERATORS = [\"||\", \"&&\", \"??\"];\nexports.LOGICAL_OPERATORS = LOGICAL_OPERATORS;\nconst UPDATE_OPERATORS = [\"++\", \"--\"];\nexports.UPDATE_OPERATORS = UPDATE_OPERATORS;\nconst BOOLEAN_NUMBER_BINARY_OPERATORS = [\">\", \"<\", \">=\", \"<=\"];\nexports.BOOLEAN_NUMBER_BINARY_OPERATORS = BOOLEAN_NUMBER_BINARY_OPERATORS;\nconst EQUALITY_BINARY_OPERATORS = [\"==\", \"===\", \"!=\", \"!==\"];\nexports.EQUALITY_BINARY_OPERATORS = EQUALITY_BINARY_OPERATORS;\nconst COMPARISON_BINARY_OPERATORS = [...EQUALITY_BINARY_OPERATORS, \"in\", \"instanceof\"];\nexports.COMPARISON_BINARY_OPERATORS = COMPARISON_BINARY_OPERATORS;\nconst BOOLEAN_BINARY_OPERATORS = [...COMPARISON_BINARY_OPERATORS, ...BOOLEAN_NUMBER_BINARY_OPERATORS];\nexports.BOOLEAN_BINARY_OPERATORS = BOOLEAN_BINARY_OPERATORS;\nconst NUMBER_BINARY_OPERATORS = [\"-\", \"/\", \"%\", \"*\", \"**\", \"&\", \"|\", \">>\", \">>>\", \"<<\", \"^\"];\nexports.NUMBER_BINARY_OPERATORS = NUMBER_BINARY_OPERATORS;\nconst BINARY_OPERATORS = [\"+\", ...NUMBER_BINARY_OPERATORS, ...BOOLEAN_BINARY_OPERATORS, \"|>\"];\nexports.BINARY_OPERATORS = BINARY_OPERATORS;\nconst ASSIGNMENT_OPERATORS = [\"=\", \"+=\", ...NUMBER_BINARY_OPERATORS.map(op => op + \"=\"), ...LOGICAL_OPERATORS.map(op => op + \"=\")];\nexports.ASSIGNMENT_OPERATORS = ASSIGNMENT_OPERATORS;\nconst BOOLEAN_UNARY_OPERATORS = [\"delete\", \"!\"];\nexports.BOOLEAN_UNARY_OPERATORS = BOOLEAN_UNARY_OPERATORS;\nconst NUMBER_UNARY_OPERATORS = [\"+\", \"-\", \"~\"];\nexports.NUMBER_UNARY_OPERATORS = NUMBER_UNARY_OPERATORS;\nconst STRING_UNARY_OPERATORS = [\"typeof\"];\nexports.STRING_UNARY_OPERATORS = STRING_UNARY_OPERATORS;\nconst UNARY_OPERATORS = [\"void\", \"throw\", ...BOOLEAN_UNARY_OPERATORS, ...NUMBER_UNARY_OPERATORS, ...STRING_UNARY_OPERATORS];\nexports.UNARY_OPERATORS = UNARY_OPERATORS;\nconst INHERIT_KEYS = {\n  optional: [\"typeAnnotation\", \"typeParameters\", \"returnType\"],\n  force: [\"start\", \"loc\", \"end\"]\n};\nexports.INHERIT_KEYS = INHERIT_KEYS;\nconst BLOCK_SCOPED_SYMBOL = Symbol.for(\"var used to be block scoped\");\nexports.BLOCK_SCOPED_SYMBOL = BLOCK_SCOPED_SYMBOL;\nconst NOT_LOCAL_BINDING = Symbol.for(\"should not be considered a local binding\");\nexports.NOT_LOCAL_BINDING = NOT_LOCAL_BINDING;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.VISITOR_KEYS = exports.NODE_PARENT_VALIDATIONS = exports.NODE_FIELDS = exports.FLIPPED_ALIAS_KEYS = exports.DEPRECATED_KEYS = exports.BUILDER_KEYS = exports.ALIAS_KEYS = void 0;\nexports.arrayOf = arrayOf;\nexports.arrayOfType = arrayOfType;\nexports.assertEach = assertEach;\nexports.assertNodeOrValueType = assertNodeOrValueType;\nexports.assertNodeType = assertNodeType;\nexports.assertOneOf = assertOneOf;\nexports.assertOptionalChainStart = assertOptionalChainStart;\nexports.assertShape = assertShape;\nexports.assertValueType = assertValueType;\nexports.chain = chain;\nexports.default = defineType;\nexports.defineAliasedType = defineAliasedType;\nexports.typeIs = typeIs;\nexports.validate = validate;\nexports.validateArrayOfType = validateArrayOfType;\nexports.validateOptional = validateOptional;\nexports.validateOptionalType = validateOptionalType;\nexports.validateType = validateType;\n\nvar _is = require(\"../validators/is\");\n\nvar _validate = require(\"../validators/validate\");\n\nconst VISITOR_KEYS = {};\nexports.VISITOR_KEYS = VISITOR_KEYS;\nconst ALIAS_KEYS = {};\nexports.ALIAS_KEYS = ALIAS_KEYS;\nconst FLIPPED_ALIAS_KEYS = {};\nexports.FLIPPED_ALIAS_KEYS = FLIPPED_ALIAS_KEYS;\nconst NODE_FIELDS = {};\nexports.NODE_FIELDS = NODE_FIELDS;\nconst BUILDER_KEYS = {};\nexports.BUILDER_KEYS = BUILDER_KEYS;\nconst DEPRECATED_KEYS = {};\nexports.DEPRECATED_KEYS = DEPRECATED_KEYS;\nconst NODE_PARENT_VALIDATIONS = {};\nexports.NODE_PARENT_VALIDATIONS = NODE_PARENT_VALIDATIONS;\n\nfunction getType(val) {\n  if (Array.isArray(val)) {\n    return \"array\";\n  } else if (val === null) {\n    return \"null\";\n  } else {\n    return typeof val;\n  }\n}\n\nfunction validate(validate) {\n  return {\n    validate\n  };\n}\n\nfunction typeIs(typeName) {\n  return typeof typeName === \"string\" ? assertNodeType(typeName) : assertNodeType(...typeName);\n}\n\nfunction validateType(typeName) {\n  return validate(typeIs(typeName));\n}\n\nfunction validateOptional(validate) {\n  return {\n    validate,\n    optional: true\n  };\n}\n\nfunction validateOptionalType(typeName) {\n  return {\n    validate: typeIs(typeName),\n    optional: true\n  };\n}\n\nfunction arrayOf(elementType) {\n  return chain(assertValueType(\"array\"), assertEach(elementType));\n}\n\nfunction arrayOfType(typeName) {\n  return arrayOf(typeIs(typeName));\n}\n\nfunction validateArrayOfType(typeName) {\n  return validate(arrayOfType(typeName));\n}\n\nfunction assertEach(callback) {\n  function validator(node, key, val) {\n    if (!Array.isArray(val)) return;\n\n    for (let i = 0; i < val.length; i++) {\n      const subkey = `${key}[${i}]`;\n      const v = val[i];\n      callback(node, subkey, v);\n      if (process.env.BABEL_TYPES_8_BREAKING) (0, _validate.validateChild)(node, subkey, v);\n    }\n  }\n\n  validator.each = callback;\n  return validator;\n}\n\nfunction assertOneOf(...values) {\n  function validate(node, key, val) {\n    if (values.indexOf(val) < 0) {\n      throw new TypeError(`Property ${key} expected value to be one of ${JSON.stringify(values)} but got ${JSON.stringify(val)}`);\n    }\n  }\n\n  validate.oneOf = values;\n  return validate;\n}\n\nfunction assertNodeType(...types) {\n  function validate(node, key, val) {\n    for (const type of types) {\n      if ((0, _is.default)(type, val)) {\n        (0, _validate.validateChild)(node, key, val);\n        return;\n      }\n    }\n\n    throw new TypeError(`Property ${key} of ${node.type} expected node to be of a type ${JSON.stringify(types)} but instead got ${JSON.stringify(val == null ? void 0 : val.type)}`);\n  }\n\n  validate.oneOfNodeTypes = types;\n  return validate;\n}\n\nfunction assertNodeOrValueType(...types) {\n  function validate(node, key, val) {\n    for (const type of types) {\n      if (getType(val) === type || (0, _is.default)(type, val)) {\n        (0, _validate.validateChild)(node, key, val);\n        return;\n      }\n    }\n\n    throw new TypeError(`Property ${key} of ${node.type} expected node to be of a type ${JSON.stringify(types)} but instead got ${JSON.stringify(val == null ? void 0 : val.type)}`);\n  }\n\n  validate.oneOfNodeOrValueTypes = types;\n  return validate;\n}\n\nfunction assertValueType(type) {\n  function validate(node, key, val) {\n    const valid = getType(val) === type;\n\n    if (!valid) {\n      throw new TypeError(`Property ${key} expected type of ${type} but got ${getType(val)}`);\n    }\n  }\n\n  validate.type = type;\n  return validate;\n}\n\nfunction assertShape(shape) {\n  function validate(node, key, val) {\n    const errors = [];\n\n    for (const property of Object.keys(shape)) {\n      try {\n        (0, _validate.validateField)(node, property, val[property], shape[property]);\n      } catch (error) {\n        if (error instanceof TypeError) {\n          errors.push(error.message);\n          continue;\n        }\n\n        throw error;\n      }\n    }\n\n    if (errors.length) {\n      throw new TypeError(`Property ${key} of ${node.type} expected to have the following:\\n${errors.join(\"\\n\")}`);\n    }\n  }\n\n  validate.shapeOf = shape;\n  return validate;\n}\n\nfunction assertOptionalChainStart() {\n  function validate(node) {\n    var _current;\n\n    let current = node;\n\n    while (node) {\n      const {\n        type\n      } = current;\n\n      if (type === \"OptionalCallExpression\") {\n        if (current.optional) return;\n        current = current.callee;\n        continue;\n      }\n\n      if (type === \"OptionalMemberExpression\") {\n        if (current.optional) return;\n        current = current.object;\n        continue;\n      }\n\n      break;\n    }\n\n    throw new TypeError(`Non-optional ${node.type} must chain from an optional OptionalMemberExpression or OptionalCallExpression. Found chain from ${(_current = current) == null ? void 0 : _current.type}`);\n  }\n\n  return validate;\n}\n\nfunction chain(...fns) {\n  function validate(...args) {\n    for (const fn of fns) {\n      fn(...args);\n    }\n  }\n\n  validate.chainOf = fns;\n\n  if (fns.length >= 2 && \"type\" in fns[0] && fns[0].type === \"array\" && !(\"each\" in fns[1])) {\n    throw new Error(`An assertValueType(\"array\") validator can only be followed by an assertEach(...) validator.`);\n  }\n\n  return validate;\n}\n\nconst validTypeOpts = [\"aliases\", \"builder\", \"deprecatedAlias\", \"fields\", \"inherits\", \"visitor\", \"validate\"];\nconst validFieldKeys = [\"default\", \"optional\", \"validate\"];\n\nfunction defineAliasedType(...aliases) {\n  return (type, opts = {}) => {\n    let defined = opts.aliases;\n\n    if (!defined) {\n      var _store$opts$inherits$, _defined;\n\n      if (opts.inherits) defined = (_store$opts$inherits$ = store[opts.inherits].aliases) == null ? void 0 : _store$opts$inherits$.slice();\n      (_defined = defined) != null ? _defined : defined = [];\n      opts.aliases = defined;\n    }\n\n    const additional = aliases.filter(a => !defined.includes(a));\n    defined.unshift(...additional);\n    return defineType(type, opts);\n  };\n}\n\nfunction defineType(type, opts = {}) {\n  const inherits = opts.inherits && store[opts.inherits] || {};\n  let fields = opts.fields;\n\n  if (!fields) {\n    fields = {};\n\n    if (inherits.fields) {\n      const keys = Object.getOwnPropertyNames(inherits.fields);\n\n      for (const key of keys) {\n        const field = inherits.fields[key];\n        const def = field.default;\n\n        if (Array.isArray(def) ? def.length > 0 : def && typeof def === \"object\") {\n          throw new Error(\"field defaults can only be primitives or empty arrays currently\");\n        }\n\n        fields[key] = {\n          default: Array.isArray(def) ? [] : def,\n          optional: field.optional,\n          validate: field.validate\n        };\n      }\n    }\n  }\n\n  const visitor = opts.visitor || inherits.visitor || [];\n  const aliases = opts.aliases || inherits.aliases || [];\n  const builder = opts.builder || inherits.builder || opts.visitor || [];\n\n  for (const k of Object.keys(opts)) {\n    if (validTypeOpts.indexOf(k) === -1) {\n      throw new Error(`Unknown type option \"${k}\" on ${type}`);\n    }\n  }\n\n  if (opts.deprecatedAlias) {\n    DEPRECATED_KEYS[opts.deprecatedAlias] = type;\n  }\n\n  for (const key of visitor.concat(builder)) {\n    fields[key] = fields[key] || {};\n  }\n\n  for (const key of Object.keys(fields)) {\n    const field = fields[key];\n\n    if (field.default !== undefined && builder.indexOf(key) === -1) {\n      field.optional = true;\n    }\n\n    if (field.default === undefined) {\n      field.default = null;\n    } else if (!field.validate && field.default != null) {\n      field.validate = assertValueType(getType(field.default));\n    }\n\n    for (const k of Object.keys(field)) {\n      if (validFieldKeys.indexOf(k) === -1) {\n        throw new Error(`Unknown field key \"${k}\" on ${type}.${key}`);\n      }\n    }\n  }\n\n  VISITOR_KEYS[type] = opts.visitor = visitor;\n  BUILDER_KEYS[type] = opts.builder = builder;\n  NODE_FIELDS[type] = opts.fields = fields;\n  ALIAS_KEYS[type] = opts.aliases = aliases;\n  aliases.forEach(alias => {\n    FLIPPED_ALIAS_KEYS[alias] = FLIPPED_ALIAS_KEYS[alias] || [];\n    FLIPPED_ALIAS_KEYS[alias].push(type);\n  });\n\n  if (opts.validate) {\n    NODE_PARENT_VALIDATIONS[type] = opts.validate;\n  }\n\n  store[type] = opts;\n}\n\nconst store = {};","\"use strict\";\n\nvar _utils = require(\"./utils\");\n\nconst defineType = (0, _utils.defineAliasedType)(\"Flow\");\n\nconst defineInterfaceishType = name => {\n  defineType(name, {\n    builder: [\"id\", \"typeParameters\", \"extends\", \"body\"],\n    visitor: [\"id\", \"typeParameters\", \"extends\", \"mixins\", \"implements\", \"body\"],\n    aliases: [\"FlowDeclaration\", \"Statement\", \"Declaration\"],\n    fields: {\n      id: (0, _utils.validateType)(\"Identifier\"),\n      typeParameters: (0, _utils.validateOptionalType)(\"TypeParameterDeclaration\"),\n      extends: (0, _utils.validateOptional)((0, _utils.arrayOfType)(\"InterfaceExtends\")),\n      mixins: (0, _utils.validateOptional)((0, _utils.arrayOfType)(\"InterfaceExtends\")),\n      implements: (0, _utils.validateOptional)((0, _utils.arrayOfType)(\"ClassImplements\")),\n      body: (0, _utils.validateType)(\"ObjectTypeAnnotation\")\n    }\n  });\n};\n\ndefineType(\"AnyTypeAnnotation\", {\n  aliases: [\"FlowType\", \"FlowBaseAnnotation\"]\n});\ndefineType(\"ArrayTypeAnnotation\", {\n  visitor: [\"elementType\"],\n  aliases: [\"FlowType\"],\n  fields: {\n    elementType: (0, _utils.validateType)(\"FlowType\")\n  }\n});\ndefineType(\"BooleanTypeAnnotation\", {\n  aliases: [\"FlowType\", \"FlowBaseAnnotation\"]\n});\ndefineType(\"BooleanLiteralTypeAnnotation\", {\n  builder: [\"value\"],\n  aliases: [\"FlowType\"],\n  fields: {\n    value: (0, _utils.validate)((0, _utils.assertValueType)(\"boolean\"))\n  }\n});\ndefineType(\"NullLiteralTypeAnnotation\", {\n  aliases: [\"FlowType\", \"FlowBaseAnnotation\"]\n});\ndefineType(\"ClassImplements\", {\n  visitor: [\"id\", \"typeParameters\"],\n  fields: {\n    id: (0, _utils.validateType)(\"Identifier\"),\n    typeParameters: (0, _utils.validateOptionalType)(\"TypeParameterInstantiation\")\n  }\n});\ndefineInterfaceishType(\"DeclareClass\");\ndefineType(\"DeclareFunction\", {\n  visitor: [\"id\"],\n  aliases: [\"FlowDeclaration\", \"Statement\", \"Declaration\"],\n  fields: {\n    id: (0, _utils.validateType)(\"Identifier\"),\n    predicate: (0, _utils.validateOptionalType)(\"DeclaredPredicate\")\n  }\n});\ndefineInterfaceishType(\"DeclareInterface\");\ndefineType(\"DeclareModule\", {\n  builder: [\"id\", \"body\", \"kind\"],\n  visitor: [\"id\", \"body\"],\n  aliases: [\"FlowDeclaration\", \"Statement\", \"Declaration\"],\n  fields: {\n    id: (0, _utils.validateType)([\"Identifier\", \"StringLiteral\"]),\n    body: (0, _utils.validateType)(\"BlockStatement\"),\n    kind: (0, _utils.validateOptional)((0, _utils.assertOneOf)(\"CommonJS\", \"ES\"))\n  }\n});\ndefineType(\"DeclareModuleExports\", {\n  visitor: [\"typeAnnotation\"],\n  aliases: [\"FlowDeclaration\", \"Statement\", \"Declaration\"],\n  fields: {\n    typeAnnotation: (0, _utils.validateType)(\"TypeAnnotation\")\n  }\n});\ndefineType(\"DeclareTypeAlias\", {\n  visitor: [\"id\", \"typeParameters\", \"right\"],\n  aliases: [\"FlowDeclaration\", \"Statement\", \"Declaration\"],\n  fields: {\n    id: (0, _utils.validateType)(\"Identifier\"),\n    typeParameters: (0, _utils.validateOptionalType)(\"TypeParameterDeclaration\"),\n    right: (0, _utils.validateType)(\"FlowType\")\n  }\n});\ndefineType(\"DeclareOpaqueType\", {\n  visitor: [\"id\", \"typeParameters\", \"supertype\"],\n  aliases: [\"FlowDeclaration\", \"Statement\", \"Declaration\"],\n  fields: {\n    id: (0, _utils.validateType)(\"Identifier\"),\n    typeParameters: (0, _utils.validateOptionalType)(\"TypeParameterDeclaration\"),\n    supertype: (0, _utils.validateOptionalType)(\"FlowType\"),\n    impltype: (0, _utils.validateOptionalType)(\"FlowType\")\n  }\n});\ndefineType(\"DeclareVariable\", {\n  visitor: [\"id\"],\n  aliases: [\"FlowDeclaration\", \"Statement\", \"Declaration\"],\n  fields: {\n    id: (0, _utils.validateType)(\"Identifier\")\n  }\n});\ndefineType(\"DeclareExportDeclaration\", {\n  visitor: [\"declaration\", \"specifiers\", \"source\"],\n  aliases: [\"FlowDeclaration\", \"Statement\", \"Declaration\"],\n  fields: {\n    declaration: (0, _utils.validateOptionalType)(\"Flow\"),\n    specifiers: (0, _utils.validateOptional)((0, _utils.arrayOfType)([\"ExportSpecifier\", \"ExportNamespaceSpecifier\"])),\n    source: (0, _utils.validateOptionalType)(\"StringLiteral\"),\n    default: (0, _utils.validateOptional)((0, _utils.assertValueType)(\"boolean\"))\n  }\n});\ndefineType(\"DeclareExportAllDeclaration\", {\n  visitor: [\"source\"],\n  aliases: [\"FlowDeclaration\", \"Statement\", \"Declaration\"],\n  fields: {\n    source: (0, _utils.validateType)(\"StringLiteral\"),\n    exportKind: (0, _utils.validateOptional)((0, _utils.assertOneOf)(\"type\", \"value\"))\n  }\n});\ndefineType(\"DeclaredPredicate\", {\n  visitor: [\"value\"],\n  aliases: [\"FlowPredicate\"],\n  fields: {\n    value: (0, _utils.validateType)(\"Flow\")\n  }\n});\ndefineType(\"ExistsTypeAnnotation\", {\n  aliases: [\"FlowType\"]\n});\ndefineType(\"FunctionTypeAnnotation\", {\n  visitor: [\"typeParameters\", \"params\", \"rest\", \"returnType\"],\n  aliases: [\"FlowType\"],\n  fields: {\n    typeParameters: (0, _utils.validateOptionalType)(\"TypeParameterDeclaration\"),\n    params: (0, _utils.validate)((0, _utils.arrayOfType)(\"FunctionTypeParam\")),\n    rest: (0, _utils.validateOptionalType)(\"FunctionTypeParam\"),\n    this: (0, _utils.validateOptionalType)(\"FunctionTypeParam\"),\n    returnType: (0, _utils.validateType)(\"FlowType\")\n  }\n});\ndefineType(\"FunctionTypeParam\", {\n  visitor: [\"name\", \"typeAnnotation\"],\n  fields: {\n    name: (0, _utils.validateOptionalType)(\"Identifier\"),\n    typeAnnotation: (0, _utils.validateType)(\"FlowType\"),\n    optional: (0, _utils.validateOptional)((0, _utils.assertValueType)(\"boolean\"))\n  }\n});\ndefineType(\"GenericTypeAnnotation\", {\n  visitor: [\"id\", \"typeParameters\"],\n  aliases: [\"FlowType\"],\n  fields: {\n    id: (0, _utils.validateType)([\"Identifier\", \"QualifiedTypeIdentifier\"]),\n    typeParameters: (0, _utils.validateOptionalType)(\"TypeParameterInstantiation\")\n  }\n});\ndefineType(\"InferredPredicate\", {\n  aliases: [\"FlowPredicate\"]\n});\ndefineType(\"InterfaceExtends\", {\n  visitor: [\"id\", \"typeParameters\"],\n  fields: {\n    id: (0, _utils.validateType)([\"Identifier\", \"QualifiedTypeIdentifier\"]),\n    typeParameters: (0, _utils.validateOptionalType)(\"TypeParameterInstantiation\")\n  }\n});\ndefineInterfaceishType(\"InterfaceDeclaration\");\ndefineType(\"InterfaceTypeAnnotation\", {\n  visitor: [\"extends\", \"body\"],\n  aliases: [\"FlowType\"],\n  fields: {\n    extends: (0, _utils.validateOptional)((0, _utils.arrayOfType)(\"InterfaceExtends\")),\n    body: (0, _utils.validateType)(\"ObjectTypeAnnotation\")\n  }\n});\ndefineType(\"IntersectionTypeAnnotation\", {\n  visitor: [\"types\"],\n  aliases: [\"FlowType\"],\n  fields: {\n    types: (0, _utils.validate)((0, _utils.arrayOfType)(\"FlowType\"))\n  }\n});\ndefineType(\"MixedTypeAnnotation\", {\n  aliases: [\"FlowType\", \"FlowBaseAnnotation\"]\n});\ndefineType(\"EmptyTypeAnnotation\", {\n  aliases: [\"FlowType\", \"FlowBaseAnnotation\"]\n});\ndefineType(\"NullableTypeAnnotation\", {\n  visitor: [\"typeAnnotation\"],\n  aliases: [\"FlowType\"],\n  fields: {\n    typeAnnotation: (0, _utils.validateType)(\"FlowType\")\n  }\n});\ndefineType(\"NumberLiteralTypeAnnotation\", {\n  builder: [\"value\"],\n  aliases: [\"FlowType\"],\n  fields: {\n    value: (0, _utils.validate)((0, _utils.assertValueType)(\"number\"))\n  }\n});\ndefineType(\"NumberTypeAnnotation\", {\n  aliases: [\"FlowType\", \"FlowBaseAnnotation\"]\n});\ndefineType(\"ObjectTypeAnnotation\", {\n  visitor: [\"properties\", \"indexers\", \"callProperties\", \"internalSlots\"],\n  aliases: [\"FlowType\"],\n  builder: [\"properties\", \"indexers\", \"callProperties\", \"internalSlots\", \"exact\"],\n  fields: {\n    properties: (0, _utils.validate)((0, _utils.arrayOfType)([\"ObjectTypeProperty\", \"ObjectTypeSpreadProperty\"])),\n    indexers: {\n      validate: (0, _utils.arrayOfType)(\"ObjectTypeIndexer\"),\n      optional: true,\n      default: []\n    },\n    callProperties: {\n      validate: (0, _utils.arrayOfType)(\"ObjectTypeCallProperty\"),\n      optional: true,\n      default: []\n    },\n    internalSlots: {\n      validate: (0, _utils.arrayOfType)(\"ObjectTypeInternalSlot\"),\n      optional: true,\n      default: []\n    },\n    exact: {\n      validate: (0, _utils.assertValueType)(\"boolean\"),\n      default: false\n    },\n    inexact: (0, _utils.validateOptional)((0, _utils.assertValueType)(\"boolean\"))\n  }\n});\ndefineType(\"ObjectTypeInternalSlot\", {\n  visitor: [\"id\", \"value\", \"optional\", \"static\", \"method\"],\n  aliases: [\"UserWhitespacable\"],\n  fields: {\n    id: (0, _utils.validateType)(\"Identifier\"),\n    value: (0, _utils.validateType)(\"FlowType\"),\n    optional: (0, _utils.validate)((0, _utils.assertValueType)(\"boolean\")),\n    static: (0, _utils.validate)((0, _utils.assertValueType)(\"boolean\")),\n    method: (0, _utils.validate)((0, _utils.assertValueType)(\"boolean\"))\n  }\n});\ndefineType(\"ObjectTypeCallProperty\", {\n  visitor: [\"value\"],\n  aliases: [\"UserWhitespacable\"],\n  fields: {\n    value: (0, _utils.validateType)(\"FlowType\"),\n    static: (0, _utils.validate)((0, _utils.assertValueType)(\"boolean\"))\n  }\n});\ndefineType(\"ObjectTypeIndexer\", {\n  visitor: [\"id\", \"key\", \"value\", \"variance\"],\n  aliases: [\"UserWhitespacable\"],\n  fields: {\n    id: (0, _utils.validateOptionalType)(\"Identifier\"),\n    key: (0, _utils.validateType)(\"FlowType\"),\n    value: (0, _utils.validateType)(\"FlowType\"),\n    static: (0, _utils.validate)((0, _utils.assertValueType)(\"boolean\")),\n    variance: (0, _utils.validateOptionalType)(\"Variance\")\n  }\n});\ndefineType(\"ObjectTypeProperty\", {\n  visitor: [\"key\", \"value\", \"variance\"],\n  aliases: [\"UserWhitespacable\"],\n  fields: {\n    key: (0, _utils.validateType)([\"Identifier\", \"StringLiteral\"]),\n    value: (0, _utils.validateType)(\"FlowType\"),\n    kind: (0, _utils.validate)((0, _utils.assertOneOf)(\"init\", \"get\", \"set\")),\n    static: (0, _utils.validate)((0, _utils.assertValueType)(\"boolean\")),\n    proto: (0, _utils.validate)((0, _utils.assertValueType)(\"boolean\")),\n    optional: (0, _utils.validate)((0, _utils.assertValueType)(\"boolean\")),\n    variance: (0, _utils.validateOptionalType)(\"Variance\"),\n    method: (0, _utils.validate)((0, _utils.assertValueType)(\"boolean\"))\n  }\n});\ndefineType(\"ObjectTypeSpreadProperty\", {\n  visitor: [\"argument\"],\n  aliases: [\"UserWhitespacable\"],\n  fields: {\n    argument: (0, _utils.validateType)(\"FlowType\")\n  }\n});\ndefineType(\"OpaqueType\", {\n  visitor: [\"id\", \"typeParameters\", \"supertype\", \"impltype\"],\n  aliases: [\"FlowDeclaration\", \"Statement\", \"Declaration\"],\n  fields: {\n    id: (0, _utils.validateType)(\"Identifier\"),\n    typeParameters: (0, _utils.validateOptionalType)(\"TypeParameterDeclaration\"),\n    supertype: (0, _utils.validateOptionalType)(\"FlowType\"),\n    impltype: (0, _utils.validateType)(\"FlowType\")\n  }\n});\ndefineType(\"QualifiedTypeIdentifier\", {\n  visitor: [\"id\", \"qualification\"],\n  fields: {\n    id: (0, _utils.validateType)(\"Identifier\"),\n    qualification: (0, _utils.validateType)([\"Identifier\", \"QualifiedTypeIdentifier\"])\n  }\n});\ndefineType(\"StringLiteralTypeAnnotation\", {\n  builder: [\"value\"],\n  aliases: [\"FlowType\"],\n  fields: {\n    value: (0, _utils.validate)((0, _utils.assertValueType)(\"string\"))\n  }\n});\ndefineType(\"StringTypeAnnotation\", {\n  aliases: [\"FlowType\", \"FlowBaseAnnotation\"]\n});\ndefineType(\"SymbolTypeAnnotation\", {\n  aliases: [\"FlowType\", \"FlowBaseAnnotation\"]\n});\ndefineType(\"ThisTypeAnnotation\", {\n  aliases: [\"FlowType\", \"FlowBaseAnnotation\"]\n});\ndefineType(\"TupleTypeAnnotation\", {\n  visitor: [\"types\"],\n  aliases: [\"FlowType\"],\n  fields: {\n    types: (0, _utils.validate)((0, _utils.arrayOfType)(\"FlowType\"))\n  }\n});\ndefineType(\"TypeofTypeAnnotation\", {\n  visitor: [\"argument\"],\n  aliases: [\"FlowType\"],\n  fields: {\n    argument: (0, _utils.validateType)(\"FlowType\")\n  }\n});\ndefineType(\"TypeAlias\", {\n  visitor: [\"id\", \"typeParameters\", \"right\"],\n  aliases: [\"FlowDeclaration\", \"Statement\", \"Declaration\"],\n  fields: {\n    id: (0, _utils.validateType)(\"Identifier\"),\n    typeParameters: (0, _utils.validateOptionalType)(\"TypeParameterDeclaration\"),\n    right: (0, _utils.validateType)(\"FlowType\")\n  }\n});\ndefineType(\"TypeAnnotation\", {\n  visitor: [\"typeAnnotation\"],\n  fields: {\n    typeAnnotation: (0, _utils.validateType)(\"FlowType\")\n  }\n});\ndefineType(\"TypeCastExpression\", {\n  visitor: [\"expression\", \"typeAnnotation\"],\n  aliases: [\"ExpressionWrapper\", \"Expression\"],\n  fields: {\n    expression: (0, _utils.validateType)(\"Expression\"),\n    typeAnnotation: (0, _utils.validateType)(\"TypeAnnotation\")\n  }\n});\ndefineType(\"TypeParameter\", {\n  visitor: [\"bound\", \"default\", \"variance\"],\n  fields: {\n    name: (0, _utils.validate)((0, _utils.assertValueType)(\"string\")),\n    bound: (0, _utils.validateOptionalType)(\"TypeAnnotation\"),\n    default: (0, _utils.validateOptionalType)(\"FlowType\"),\n    variance: (0, _utils.validateOptionalType)(\"Variance\")\n  }\n});\ndefineType(\"TypeParameterDeclaration\", {\n  visitor: [\"params\"],\n  fields: {\n    params: (0, _utils.validate)((0, _utils.arrayOfType)(\"TypeParameter\"))\n  }\n});\ndefineType(\"TypeParameterInstantiation\", {\n  visitor: [\"params\"],\n  fields: {\n    params: (0, _utils.validate)((0, _utils.arrayOfType)(\"FlowType\"))\n  }\n});\ndefineType(\"UnionTypeAnnotation\", {\n  visitor: [\"types\"],\n  aliases: [\"FlowType\"],\n  fields: {\n    types: (0, _utils.validate)((0, _utils.arrayOfType)(\"FlowType\"))\n  }\n});\ndefineType(\"Variance\", {\n  builder: [\"kind\"],\n  fields: {\n    kind: (0, _utils.validate)((0, _utils.assertOneOf)(\"minus\", \"plus\"))\n  }\n});\ndefineType(\"VoidTypeAnnotation\", {\n  aliases: [\"FlowType\", \"FlowBaseAnnotation\"]\n});\ndefineType(\"EnumDeclaration\", {\n  aliases: [\"Statement\", \"Declaration\"],\n  visitor: [\"id\", \"body\"],\n  fields: {\n    id: (0, _utils.validateType)(\"Identifier\"),\n    body: (0, _utils.validateType)([\"EnumBooleanBody\", \"EnumNumberBody\", \"EnumStringBody\", \"EnumSymbolBody\"])\n  }\n});\ndefineType(\"EnumBooleanBody\", {\n  aliases: [\"EnumBody\"],\n  visitor: [\"members\"],\n  fields: {\n    explicitType: (0, _utils.validate)((0, _utils.assertValueType)(\"boolean\")),\n    members: (0, _utils.validateArrayOfType)(\"EnumBooleanMember\"),\n    hasUnknownMembers: (0, _utils.validate)((0, _utils.assertValueType)(\"boolean\"))\n  }\n});\ndefineType(\"EnumNumberBody\", {\n  aliases: [\"EnumBody\"],\n  visitor: [\"members\"],\n  fields: {\n    explicitType: (0, _utils.validate)((0, _utils.assertValueType)(\"boolean\")),\n    members: (0, _utils.validateArrayOfType)(\"EnumNumberMember\"),\n    hasUnknownMembers: (0, _utils.validate)((0, _utils.assertValueType)(\"boolean\"))\n  }\n});\ndefineType(\"EnumStringBody\", {\n  aliases: [\"EnumBody\"],\n  visitor: [\"members\"],\n  fields: {\n    explicitType: (0, _utils.validate)((0, _utils.assertValueType)(\"boolean\")),\n    members: (0, _utils.validateArrayOfType)([\"EnumStringMember\", \"EnumDefaultedMember\"]),\n    hasUnknownMembers: (0, _utils.validate)((0, _utils.assertValueType)(\"boolean\"))\n  }\n});\ndefineType(\"EnumSymbolBody\", {\n  aliases: [\"EnumBody\"],\n  visitor: [\"members\"],\n  fields: {\n    members: (0, _utils.validateArrayOfType)(\"EnumDefaultedMember\"),\n    hasUnknownMembers: (0, _utils.validate)((0, _utils.assertValueType)(\"boolean\"))\n  }\n});\ndefineType(\"EnumBooleanMember\", {\n  aliases: [\"EnumMember\"],\n  visitor: [\"id\"],\n  fields: {\n    id: (0, _utils.validateType)(\"Identifier\"),\n    init: (0, _utils.validateType)(\"BooleanLiteral\")\n  }\n});\ndefineType(\"EnumNumberMember\", {\n  aliases: [\"EnumMember\"],\n  visitor: [\"id\", \"init\"],\n  fields: {\n    id: (0, _utils.validateType)(\"Identifier\"),\n    init: (0, _utils.validateType)(\"NumericLiteral\")\n  }\n});\ndefineType(\"EnumStringMember\", {\n  aliases: [\"EnumMember\"],\n  visitor: [\"id\", \"init\"],\n  fields: {\n    id: (0, _utils.validateType)(\"Identifier\"),\n    init: (0, _utils.validateType)(\"StringLiteral\")\n  }\n});\ndefineType(\"EnumDefaultedMember\", {\n  aliases: [\"EnumMember\"],\n  visitor: [\"id\"],\n  fields: {\n    id: (0, _utils.validateType)(\"Identifier\")\n  }\n});\ndefineType(\"IndexedAccessType\", {\n  visitor: [\"objectType\", \"indexType\"],\n  aliases: [\"FlowType\"],\n  fields: {\n    objectType: (0, _utils.validateType)(\"FlowType\"),\n    indexType: (0, _utils.validateType)(\"FlowType\")\n  }\n});\ndefineType(\"OptionalIndexedAccessType\", {\n  visitor: [\"objectType\", \"indexType\"],\n  aliases: [\"FlowType\"],\n  fields: {\n    objectType: (0, _utils.validateType)(\"FlowType\"),\n    indexType: (0, _utils.validateType)(\"FlowType\"),\n    optional: (0, _utils.validate)((0, _utils.assertValueType)(\"boolean\"))\n  }\n});","\"use strict\";\n\nvar _utils = require(\"./utils\");\n\nconst defineType = (0, _utils.defineAliasedType)(\"JSX\");\ndefineType(\"JSXAttribute\", {\n  visitor: [\"name\", \"value\"],\n  aliases: [\"Immutable\"],\n  fields: {\n    name: {\n      validate: (0, _utils.assertNodeType)(\"JSXIdentifier\", \"JSXNamespacedName\")\n    },\n    value: {\n      optional: true,\n      validate: (0, _utils.assertNodeType)(\"JSXElement\", \"JSXFragment\", \"StringLiteral\", \"JSXExpressionContainer\")\n    }\n  }\n});\ndefineType(\"JSXClosingElement\", {\n  visitor: [\"name\"],\n  aliases: [\"Immutable\"],\n  fields: {\n    name: {\n      validate: (0, _utils.assertNodeType)(\"JSXIdentifier\", \"JSXMemberExpression\", \"JSXNamespacedName\")\n    }\n  }\n});\ndefineType(\"JSXElement\", {\n  builder: [\"openingElement\", \"closingElement\", \"children\", \"selfClosing\"],\n  visitor: [\"openingElement\", \"children\", \"closingElement\"],\n  aliases: [\"Immutable\", \"Expression\"],\n  fields: Object.assign({\n    openingElement: {\n      validate: (0, _utils.assertNodeType)(\"JSXOpeningElement\")\n    },\n    closingElement: {\n      optional: true,\n      validate: (0, _utils.assertNodeType)(\"JSXClosingElement\")\n    },\n    children: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"JSXText\", \"JSXExpressionContainer\", \"JSXSpreadChild\", \"JSXElement\", \"JSXFragment\")))\n    }\n  }, {\n    selfClosing: {\n      validate: (0, _utils.assertValueType)(\"boolean\"),\n      optional: true\n    }\n  })\n});\ndefineType(\"JSXEmptyExpression\", {});\ndefineType(\"JSXExpressionContainer\", {\n  visitor: [\"expression\"],\n  aliases: [\"Immutable\"],\n  fields: {\n    expression: {\n      validate: (0, _utils.assertNodeType)(\"Expression\", \"JSXEmptyExpression\")\n    }\n  }\n});\ndefineType(\"JSXSpreadChild\", {\n  visitor: [\"expression\"],\n  aliases: [\"Immutable\"],\n  fields: {\n    expression: {\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    }\n  }\n});\ndefineType(\"JSXIdentifier\", {\n  builder: [\"name\"],\n  fields: {\n    name: {\n      validate: (0, _utils.assertValueType)(\"string\")\n    }\n  }\n});\ndefineType(\"JSXMemberExpression\", {\n  visitor: [\"object\", \"property\"],\n  fields: {\n    object: {\n      validate: (0, _utils.assertNodeType)(\"JSXMemberExpression\", \"JSXIdentifier\")\n    },\n    property: {\n      validate: (0, _utils.assertNodeType)(\"JSXIdentifier\")\n    }\n  }\n});\ndefineType(\"JSXNamespacedName\", {\n  visitor: [\"namespace\", \"name\"],\n  fields: {\n    namespace: {\n      validate: (0, _utils.assertNodeType)(\"JSXIdentifier\")\n    },\n    name: {\n      validate: (0, _utils.assertNodeType)(\"JSXIdentifier\")\n    }\n  }\n});\ndefineType(\"JSXOpeningElement\", {\n  builder: [\"name\", \"attributes\", \"selfClosing\"],\n  visitor: [\"name\", \"attributes\"],\n  aliases: [\"Immutable\"],\n  fields: {\n    name: {\n      validate: (0, _utils.assertNodeType)(\"JSXIdentifier\", \"JSXMemberExpression\", \"JSXNamespacedName\")\n    },\n    selfClosing: {\n      default: false\n    },\n    attributes: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"JSXAttribute\", \"JSXSpreadAttribute\")))\n    },\n    typeParameters: {\n      validate: (0, _utils.assertNodeType)(\"TypeParameterInstantiation\", \"TSTypeParameterInstantiation\"),\n      optional: true\n    }\n  }\n});\ndefineType(\"JSXSpreadAttribute\", {\n  visitor: [\"argument\"],\n  fields: {\n    argument: {\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    }\n  }\n});\ndefineType(\"JSXText\", {\n  aliases: [\"Immutable\"],\n  builder: [\"value\"],\n  fields: {\n    value: {\n      validate: (0, _utils.assertValueType)(\"string\")\n    }\n  }\n});\ndefineType(\"JSXFragment\", {\n  builder: [\"openingFragment\", \"closingFragment\", \"children\"],\n  visitor: [\"openingFragment\", \"children\", \"closingFragment\"],\n  aliases: [\"Immutable\", \"Expression\"],\n  fields: {\n    openingFragment: {\n      validate: (0, _utils.assertNodeType)(\"JSXOpeningFragment\")\n    },\n    closingFragment: {\n      validate: (0, _utils.assertNodeType)(\"JSXClosingFragment\")\n    },\n    children: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"JSXText\", \"JSXExpressionContainer\", \"JSXSpreadChild\", \"JSXElement\", \"JSXFragment\")))\n    }\n  }\n});\ndefineType(\"JSXOpeningFragment\", {\n  aliases: [\"Immutable\"]\n});\ndefineType(\"JSXClosingFragment\", {\n  aliases: [\"Immutable\"]\n});","\"use strict\";\n\nvar _utils = require(\"./utils\");\n\nvar _placeholders = require(\"./placeholders\");\n\nconst defineType = (0, _utils.defineAliasedType)(\"Miscellaneous\");\n{\n  defineType(\"Noop\", {\n    visitor: []\n  });\n}\ndefineType(\"Placeholder\", {\n  visitor: [],\n  builder: [\"expectedNode\", \"name\"],\n  fields: {\n    name: {\n      validate: (0, _utils.assertNodeType)(\"Identifier\")\n    },\n    expectedNode: {\n      validate: (0, _utils.assertOneOf)(..._placeholders.PLACEHOLDERS)\n    }\n  }\n});\ndefineType(\"V8IntrinsicIdentifier\", {\n  builder: [\"name\"],\n  fields: {\n    name: {\n      validate: (0, _utils.assertValueType)(\"string\")\n    }\n  }\n});","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PLACEHOLDERS_FLIPPED_ALIAS = exports.PLACEHOLDERS_ALIAS = exports.PLACEHOLDERS = void 0;\n\nvar _utils = require(\"./utils\");\n\nconst PLACEHOLDERS = [\"Identifier\", \"StringLiteral\", \"Expression\", \"Statement\", \"Declaration\", \"BlockStatement\", \"ClassBody\", \"Pattern\"];\nexports.PLACEHOLDERS = PLACEHOLDERS;\nconst PLACEHOLDERS_ALIAS = {\n  Declaration: [\"Statement\"],\n  Pattern: [\"PatternLike\", \"LVal\"]\n};\nexports.PLACEHOLDERS_ALIAS = PLACEHOLDERS_ALIAS;\n\nfor (const type of PLACEHOLDERS) {\n  const alias = _utils.ALIAS_KEYS[type];\n  if (alias != null && alias.length) PLACEHOLDERS_ALIAS[type] = alias;\n}\n\nconst PLACEHOLDERS_FLIPPED_ALIAS = {};\nexports.PLACEHOLDERS_FLIPPED_ALIAS = PLACEHOLDERS_FLIPPED_ALIAS;\nObject.keys(PLACEHOLDERS_ALIAS).forEach(type => {\n  PLACEHOLDERS_ALIAS[type].forEach(alias => {\n    if (!Object.hasOwnProperty.call(PLACEHOLDERS_FLIPPED_ALIAS, alias)) {\n      PLACEHOLDERS_FLIPPED_ALIAS[alias] = [];\n    }\n\n    PLACEHOLDERS_FLIPPED_ALIAS[alias].push(type);\n  });\n});","\"use strict\";\n\nvar _utils = require(\"./utils\");\n\n(0, _utils.default)(\"ArgumentPlaceholder\", {});\n(0, _utils.default)(\"BindExpression\", {\n  visitor: [\"object\", \"callee\"],\n  aliases: [\"Expression\"],\n  fields: !process.env.BABEL_TYPES_8_BREAKING ? {\n    object: {\n      validate: Object.assign(() => {}, {\n        oneOfNodeTypes: [\"Expression\"]\n      })\n    },\n    callee: {\n      validate: Object.assign(() => {}, {\n        oneOfNodeTypes: [\"Expression\"]\n      })\n    }\n  } : {\n    object: {\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    },\n    callee: {\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    }\n  }\n});\n(0, _utils.default)(\"ImportAttribute\", {\n  visitor: [\"key\", \"value\"],\n  fields: {\n    key: {\n      validate: (0, _utils.assertNodeType)(\"Identifier\", \"StringLiteral\")\n    },\n    value: {\n      validate: (0, _utils.assertNodeType)(\"StringLiteral\")\n    }\n  }\n});\n(0, _utils.default)(\"Decorator\", {\n  visitor: [\"expression\"],\n  fields: {\n    expression: {\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    }\n  }\n});\n(0, _utils.default)(\"DoExpression\", {\n  visitor: [\"body\"],\n  builder: [\"body\", \"async\"],\n  aliases: [\"Expression\"],\n  fields: {\n    body: {\n      validate: (0, _utils.assertNodeType)(\"BlockStatement\")\n    },\n    async: {\n      validate: (0, _utils.assertValueType)(\"boolean\"),\n      default: false\n    }\n  }\n});\n(0, _utils.default)(\"ExportDefaultSpecifier\", {\n  visitor: [\"exported\"],\n  aliases: [\"ModuleSpecifier\"],\n  fields: {\n    exported: {\n      validate: (0, _utils.assertNodeType)(\"Identifier\")\n    }\n  }\n});\n(0, _utils.default)(\"RecordExpression\", {\n  visitor: [\"properties\"],\n  aliases: [\"Expression\"],\n  fields: {\n    properties: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"ObjectProperty\", \"SpreadElement\")))\n    }\n  }\n});\n(0, _utils.default)(\"TupleExpression\", {\n  fields: {\n    elements: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"Expression\", \"SpreadElement\"))),\n      default: []\n    }\n  },\n  visitor: [\"elements\"],\n  aliases: [\"Expression\"]\n});\n(0, _utils.default)(\"DecimalLiteral\", {\n  builder: [\"value\"],\n  fields: {\n    value: {\n      validate: (0, _utils.assertValueType)(\"string\")\n    }\n  },\n  aliases: [\"Expression\", \"Pureish\", \"Literal\", \"Immutable\"]\n});\n(0, _utils.default)(\"ModuleExpression\", {\n  visitor: [\"body\"],\n  fields: {\n    body: {\n      validate: (0, _utils.assertNodeType)(\"Program\")\n    }\n  },\n  aliases: [\"Expression\"]\n});\n(0, _utils.default)(\"TopicReference\", {\n  aliases: [\"Expression\"]\n});\n(0, _utils.default)(\"PipelineTopicExpression\", {\n  builder: [\"expression\"],\n  visitor: [\"expression\"],\n  fields: {\n    expression: {\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    }\n  },\n  aliases: [\"Expression\"]\n});\n(0, _utils.default)(\"PipelineBareFunction\", {\n  builder: [\"callee\"],\n  visitor: [\"callee\"],\n  fields: {\n    callee: {\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    }\n  },\n  aliases: [\"Expression\"]\n});\n(0, _utils.default)(\"PipelinePrimaryTopicReference\", {\n  aliases: [\"Expression\"]\n});","\"use strict\";\n\nvar _utils = require(\"./utils\");\n\nvar _core = require(\"./core\");\n\nvar _is = require(\"../validators/is\");\n\nconst defineType = (0, _utils.defineAliasedType)(\"TypeScript\");\nconst bool = (0, _utils.assertValueType)(\"boolean\");\n\nconst tSFunctionTypeAnnotationCommon = () => ({\n  returnType: {\n    validate: (0, _utils.assertNodeType)(\"TSTypeAnnotation\", \"Noop\"),\n    optional: true\n  },\n  typeParameters: {\n    validate: (0, _utils.assertNodeType)(\"TSTypeParameterDeclaration\", \"Noop\"),\n    optional: true\n  }\n});\n\ndefineType(\"TSParameterProperty\", {\n  aliases: [\"LVal\"],\n  visitor: [\"parameter\"],\n  fields: {\n    accessibility: {\n      validate: (0, _utils.assertOneOf)(\"public\", \"private\", \"protected\"),\n      optional: true\n    },\n    readonly: {\n      validate: (0, _utils.assertValueType)(\"boolean\"),\n      optional: true\n    },\n    parameter: {\n      validate: (0, _utils.assertNodeType)(\"Identifier\", \"AssignmentPattern\")\n    },\n    override: {\n      validate: (0, _utils.assertValueType)(\"boolean\"),\n      optional: true\n    },\n    decorators: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"Decorator\"))),\n      optional: true\n    }\n  }\n});\ndefineType(\"TSDeclareFunction\", {\n  aliases: [\"Statement\", \"Declaration\"],\n  visitor: [\"id\", \"typeParameters\", \"params\", \"returnType\"],\n  fields: Object.assign({}, (0, _core.functionDeclarationCommon)(), tSFunctionTypeAnnotationCommon())\n});\ndefineType(\"TSDeclareMethod\", {\n  visitor: [\"decorators\", \"key\", \"typeParameters\", \"params\", \"returnType\"],\n  fields: Object.assign({}, (0, _core.classMethodOrDeclareMethodCommon)(), tSFunctionTypeAnnotationCommon())\n});\ndefineType(\"TSQualifiedName\", {\n  aliases: [\"TSEntityName\"],\n  visitor: [\"left\", \"right\"],\n  fields: {\n    left: (0, _utils.validateType)(\"TSEntityName\"),\n    right: (0, _utils.validateType)(\"Identifier\")\n  }\n});\n\nconst signatureDeclarationCommon = () => ({\n  typeParameters: (0, _utils.validateOptionalType)(\"TSTypeParameterDeclaration\"),\n  [\"parameters\"]: (0, _utils.validateArrayOfType)([\"Identifier\", \"RestElement\"]),\n  [\"typeAnnotation\"]: (0, _utils.validateOptionalType)(\"TSTypeAnnotation\")\n});\n\nconst callConstructSignatureDeclaration = {\n  aliases: [\"TSTypeElement\"],\n  visitor: [\"typeParameters\", \"parameters\", \"typeAnnotation\"],\n  fields: signatureDeclarationCommon()\n};\ndefineType(\"TSCallSignatureDeclaration\", callConstructSignatureDeclaration);\ndefineType(\"TSConstructSignatureDeclaration\", callConstructSignatureDeclaration);\n\nconst namedTypeElementCommon = () => ({\n  key: (0, _utils.validateType)(\"Expression\"),\n  computed: {\n    default: false\n  },\n  optional: (0, _utils.validateOptional)(bool)\n});\n\ndefineType(\"TSPropertySignature\", {\n  aliases: [\"TSTypeElement\"],\n  visitor: [\"key\", \"typeAnnotation\", \"initializer\"],\n  fields: Object.assign({}, namedTypeElementCommon(), {\n    readonly: (0, _utils.validateOptional)(bool),\n    typeAnnotation: (0, _utils.validateOptionalType)(\"TSTypeAnnotation\"),\n    initializer: (0, _utils.validateOptionalType)(\"Expression\"),\n    kind: {\n      validate: (0, _utils.assertOneOf)(\"get\", \"set\")\n    }\n  })\n});\ndefineType(\"TSMethodSignature\", {\n  aliases: [\"TSTypeElement\"],\n  visitor: [\"key\", \"typeParameters\", \"parameters\", \"typeAnnotation\"],\n  fields: Object.assign({}, signatureDeclarationCommon(), namedTypeElementCommon(), {\n    kind: {\n      validate: (0, _utils.assertOneOf)(\"method\", \"get\", \"set\")\n    }\n  })\n});\ndefineType(\"TSIndexSignature\", {\n  aliases: [\"TSTypeElement\"],\n  visitor: [\"parameters\", \"typeAnnotation\"],\n  fields: {\n    readonly: (0, _utils.validateOptional)(bool),\n    static: (0, _utils.validateOptional)(bool),\n    parameters: (0, _utils.validateArrayOfType)(\"Identifier\"),\n    typeAnnotation: (0, _utils.validateOptionalType)(\"TSTypeAnnotation\")\n  }\n});\nconst tsKeywordTypes = [\"TSAnyKeyword\", \"TSBooleanKeyword\", \"TSBigIntKeyword\", \"TSIntrinsicKeyword\", \"TSNeverKeyword\", \"TSNullKeyword\", \"TSNumberKeyword\", \"TSObjectKeyword\", \"TSStringKeyword\", \"TSSymbolKeyword\", \"TSUndefinedKeyword\", \"TSUnknownKeyword\", \"TSVoidKeyword\"];\n\nfor (const type of tsKeywordTypes) {\n  defineType(type, {\n    aliases: [\"TSType\", \"TSBaseType\"],\n    visitor: [],\n    fields: {}\n  });\n}\n\ndefineType(\"TSThisType\", {\n  aliases: [\"TSType\", \"TSBaseType\"],\n  visitor: [],\n  fields: {}\n});\nconst fnOrCtrBase = {\n  aliases: [\"TSType\"],\n  visitor: [\"typeParameters\", \"parameters\", \"typeAnnotation\"]\n};\ndefineType(\"TSFunctionType\", Object.assign({}, fnOrCtrBase, {\n  fields: signatureDeclarationCommon()\n}));\ndefineType(\"TSConstructorType\", Object.assign({}, fnOrCtrBase, {\n  fields: Object.assign({}, signatureDeclarationCommon(), {\n    abstract: (0, _utils.validateOptional)(bool)\n  })\n}));\ndefineType(\"TSTypeReference\", {\n  aliases: [\"TSType\"],\n  visitor: [\"typeName\", \"typeParameters\"],\n  fields: {\n    typeName: (0, _utils.validateType)(\"TSEntityName\"),\n    typeParameters: (0, _utils.validateOptionalType)(\"TSTypeParameterInstantiation\")\n  }\n});\ndefineType(\"TSTypePredicate\", {\n  aliases: [\"TSType\"],\n  visitor: [\"parameterName\", \"typeAnnotation\"],\n  builder: [\"parameterName\", \"typeAnnotation\", \"asserts\"],\n  fields: {\n    parameterName: (0, _utils.validateType)([\"Identifier\", \"TSThisType\"]),\n    typeAnnotation: (0, _utils.validateOptionalType)(\"TSTypeAnnotation\"),\n    asserts: (0, _utils.validateOptional)(bool)\n  }\n});\ndefineType(\"TSTypeQuery\", {\n  aliases: [\"TSType\"],\n  visitor: [\"exprName\", \"typeParameters\"],\n  fields: {\n    exprName: (0, _utils.validateType)([\"TSEntityName\", \"TSImportType\"]),\n    typeParameters: (0, _utils.validateOptionalType)(\"TSTypeParameterInstantiation\")\n  }\n});\ndefineType(\"TSTypeLiteral\", {\n  aliases: [\"TSType\"],\n  visitor: [\"members\"],\n  fields: {\n    members: (0, _utils.validateArrayOfType)(\"TSTypeElement\")\n  }\n});\ndefineType(\"TSArrayType\", {\n  aliases: [\"TSType\"],\n  visitor: [\"elementType\"],\n  fields: {\n    elementType: (0, _utils.validateType)(\"TSType\")\n  }\n});\ndefineType(\"TSTupleType\", {\n  aliases: [\"TSType\"],\n  visitor: [\"elementTypes\"],\n  fields: {\n    elementTypes: (0, _utils.validateArrayOfType)([\"TSType\", \"TSNamedTupleMember\"])\n  }\n});\ndefineType(\"TSOptionalType\", {\n  aliases: [\"TSType\"],\n  visitor: [\"typeAnnotation\"],\n  fields: {\n    typeAnnotation: (0, _utils.validateType)(\"TSType\")\n  }\n});\ndefineType(\"TSRestType\", {\n  aliases: [\"TSType\"],\n  visitor: [\"typeAnnotation\"],\n  fields: {\n    typeAnnotation: (0, _utils.validateType)(\"TSType\")\n  }\n});\ndefineType(\"TSNamedTupleMember\", {\n  visitor: [\"label\", \"elementType\"],\n  builder: [\"label\", \"elementType\", \"optional\"],\n  fields: {\n    label: (0, _utils.validateType)(\"Identifier\"),\n    optional: {\n      validate: bool,\n      default: false\n    },\n    elementType: (0, _utils.validateType)(\"TSType\")\n  }\n});\nconst unionOrIntersection = {\n  aliases: [\"TSType\"],\n  visitor: [\"types\"],\n  fields: {\n    types: (0, _utils.validateArrayOfType)(\"TSType\")\n  }\n};\ndefineType(\"TSUnionType\", unionOrIntersection);\ndefineType(\"TSIntersectionType\", unionOrIntersection);\ndefineType(\"TSConditionalType\", {\n  aliases: [\"TSType\"],\n  visitor: [\"checkType\", \"extendsType\", \"trueType\", \"falseType\"],\n  fields: {\n    checkType: (0, _utils.validateType)(\"TSType\"),\n    extendsType: (0, _utils.validateType)(\"TSType\"),\n    trueType: (0, _utils.validateType)(\"TSType\"),\n    falseType: (0, _utils.validateType)(\"TSType\")\n  }\n});\ndefineType(\"TSInferType\", {\n  aliases: [\"TSType\"],\n  visitor: [\"typeParameter\"],\n  fields: {\n    typeParameter: (0, _utils.validateType)(\"TSTypeParameter\")\n  }\n});\ndefineType(\"TSParenthesizedType\", {\n  aliases: [\"TSType\"],\n  visitor: [\"typeAnnotation\"],\n  fields: {\n    typeAnnotation: (0, _utils.validateType)(\"TSType\")\n  }\n});\ndefineType(\"TSTypeOperator\", {\n  aliases: [\"TSType\"],\n  visitor: [\"typeAnnotation\"],\n  fields: {\n    operator: (0, _utils.validate)((0, _utils.assertValueType)(\"string\")),\n    typeAnnotation: (0, _utils.validateType)(\"TSType\")\n  }\n});\ndefineType(\"TSIndexedAccessType\", {\n  aliases: [\"TSType\"],\n  visitor: [\"objectType\", \"indexType\"],\n  fields: {\n    objectType: (0, _utils.validateType)(\"TSType\"),\n    indexType: (0, _utils.validateType)(\"TSType\")\n  }\n});\ndefineType(\"TSMappedType\", {\n  aliases: [\"TSType\"],\n  visitor: [\"typeParameter\", \"typeAnnotation\", \"nameType\"],\n  fields: {\n    readonly: (0, _utils.validateOptional)((0, _utils.assertOneOf)(true, false, \"+\", \"-\")),\n    typeParameter: (0, _utils.validateType)(\"TSTypeParameter\"),\n    optional: (0, _utils.validateOptional)((0, _utils.assertOneOf)(true, false, \"+\", \"-\")),\n    typeAnnotation: (0, _utils.validateOptionalType)(\"TSType\"),\n    nameType: (0, _utils.validateOptionalType)(\"TSType\")\n  }\n});\ndefineType(\"TSLiteralType\", {\n  aliases: [\"TSType\", \"TSBaseType\"],\n  visitor: [\"literal\"],\n  fields: {\n    literal: {\n      validate: function () {\n        const unaryExpression = (0, _utils.assertNodeType)(\"NumericLiteral\", \"BigIntLiteral\");\n        const unaryOperator = (0, _utils.assertOneOf)(\"-\");\n        const literal = (0, _utils.assertNodeType)(\"NumericLiteral\", \"StringLiteral\", \"BooleanLiteral\", \"BigIntLiteral\", \"TemplateLiteral\");\n\n        function validator(parent, key, node) {\n          if ((0, _is.default)(\"UnaryExpression\", node)) {\n            unaryOperator(node, \"operator\", node.operator);\n            unaryExpression(node, \"argument\", node.argument);\n          } else {\n            literal(parent, key, node);\n          }\n        }\n\n        validator.oneOfNodeTypes = [\"NumericLiteral\", \"StringLiteral\", \"BooleanLiteral\", \"BigIntLiteral\", \"TemplateLiteral\", \"UnaryExpression\"];\n        return validator;\n      }()\n    }\n  }\n});\ndefineType(\"TSExpressionWithTypeArguments\", {\n  aliases: [\"TSType\"],\n  visitor: [\"expression\", \"typeParameters\"],\n  fields: {\n    expression: (0, _utils.validateType)(\"TSEntityName\"),\n    typeParameters: (0, _utils.validateOptionalType)(\"TSTypeParameterInstantiation\")\n  }\n});\ndefineType(\"TSInterfaceDeclaration\", {\n  aliases: [\"Statement\", \"Declaration\"],\n  visitor: [\"id\", \"typeParameters\", \"extends\", \"body\"],\n  fields: {\n    declare: (0, _utils.validateOptional)(bool),\n    id: (0, _utils.validateType)(\"Identifier\"),\n    typeParameters: (0, _utils.validateOptionalType)(\"TSTypeParameterDeclaration\"),\n    extends: (0, _utils.validateOptional)((0, _utils.arrayOfType)(\"TSExpressionWithTypeArguments\")),\n    body: (0, _utils.validateType)(\"TSInterfaceBody\")\n  }\n});\ndefineType(\"TSInterfaceBody\", {\n  visitor: [\"body\"],\n  fields: {\n    body: (0, _utils.validateArrayOfType)(\"TSTypeElement\")\n  }\n});\ndefineType(\"TSTypeAliasDeclaration\", {\n  aliases: [\"Statement\", \"Declaration\"],\n  visitor: [\"id\", \"typeParameters\", \"typeAnnotation\"],\n  fields: {\n    declare: (0, _utils.validateOptional)(bool),\n    id: (0, _utils.validateType)(\"Identifier\"),\n    typeParameters: (0, _utils.validateOptionalType)(\"TSTypeParameterDeclaration\"),\n    typeAnnotation: (0, _utils.validateType)(\"TSType\")\n  }\n});\ndefineType(\"TSInstantiationExpression\", {\n  aliases: [\"Expression\"],\n  visitor: [\"expression\", \"typeParameters\"],\n  fields: {\n    expression: (0, _utils.validateType)(\"Expression\"),\n    typeParameters: (0, _utils.validateOptionalType)(\"TSTypeParameterInstantiation\")\n  }\n});\ndefineType(\"TSAsExpression\", {\n  aliases: [\"Expression\", \"LVal\", \"PatternLike\"],\n  visitor: [\"expression\", \"typeAnnotation\"],\n  fields: {\n    expression: (0, _utils.validateType)(\"Expression\"),\n    typeAnnotation: (0, _utils.validateType)(\"TSType\")\n  }\n});\ndefineType(\"TSTypeAssertion\", {\n  aliases: [\"Expression\", \"LVal\", \"PatternLike\"],\n  visitor: [\"typeAnnotation\", \"expression\"],\n  fields: {\n    typeAnnotation: (0, _utils.validateType)(\"TSType\"),\n    expression: (0, _utils.validateType)(\"Expression\")\n  }\n});\ndefineType(\"TSEnumDeclaration\", {\n  aliases: [\"Statement\", \"Declaration\"],\n  visitor: [\"id\", \"members\"],\n  fields: {\n    declare: (0, _utils.validateOptional)(bool),\n    const: (0, _utils.validateOptional)(bool),\n    id: (0, _utils.validateType)(\"Identifier\"),\n    members: (0, _utils.validateArrayOfType)(\"TSEnumMember\"),\n    initializer: (0, _utils.validateOptionalType)(\"Expression\")\n  }\n});\ndefineType(\"TSEnumMember\", {\n  visitor: [\"id\", \"initializer\"],\n  fields: {\n    id: (0, _utils.validateType)([\"Identifier\", \"StringLiteral\"]),\n    initializer: (0, _utils.validateOptionalType)(\"Expression\")\n  }\n});\ndefineType(\"TSModuleDeclaration\", {\n  aliases: [\"Statement\", \"Declaration\"],\n  visitor: [\"id\", \"body\"],\n  fields: {\n    declare: (0, _utils.validateOptional)(bool),\n    global: (0, _utils.validateOptional)(bool),\n    id: (0, _utils.validateType)([\"Identifier\", \"StringLiteral\"]),\n    body: (0, _utils.validateType)([\"TSModuleBlock\", \"TSModuleDeclaration\"])\n  }\n});\ndefineType(\"TSModuleBlock\", {\n  aliases: [\"Scopable\", \"Block\", \"BlockParent\"],\n  visitor: [\"body\"],\n  fields: {\n    body: (0, _utils.validateArrayOfType)(\"Statement\")\n  }\n});\ndefineType(\"TSImportType\", {\n  aliases: [\"TSType\"],\n  visitor: [\"argument\", \"qualifier\", \"typeParameters\"],\n  fields: {\n    argument: (0, _utils.validateType)(\"StringLiteral\"),\n    qualifier: (0, _utils.validateOptionalType)(\"TSEntityName\"),\n    typeParameters: (0, _utils.validateOptionalType)(\"TSTypeParameterInstantiation\")\n  }\n});\ndefineType(\"TSImportEqualsDeclaration\", {\n  aliases: [\"Statement\"],\n  visitor: [\"id\", \"moduleReference\"],\n  fields: {\n    isExport: (0, _utils.validate)(bool),\n    id: (0, _utils.validateType)(\"Identifier\"),\n    moduleReference: (0, _utils.validateType)([\"TSEntityName\", \"TSExternalModuleReference\"]),\n    importKind: {\n      validate: (0, _utils.assertOneOf)(\"type\", \"value\"),\n      optional: true\n    }\n  }\n});\ndefineType(\"TSExternalModuleReference\", {\n  visitor: [\"expression\"],\n  fields: {\n    expression: (0, _utils.validateType)(\"StringLiteral\")\n  }\n});\ndefineType(\"TSNonNullExpression\", {\n  aliases: [\"Expression\", \"LVal\", \"PatternLike\"],\n  visitor: [\"expression\"],\n  fields: {\n    expression: (0, _utils.validateType)(\"Expression\")\n  }\n});\ndefineType(\"TSExportAssignment\", {\n  aliases: [\"Statement\"],\n  visitor: [\"expression\"],\n  fields: {\n    expression: (0, _utils.validateType)(\"Expression\")\n  }\n});\ndefineType(\"TSNamespaceExportDeclaration\", {\n  aliases: [\"Statement\"],\n  visitor: [\"id\"],\n  fields: {\n    id: (0, _utils.validateType)(\"Identifier\")\n  }\n});\ndefineType(\"TSTypeAnnotation\", {\n  visitor: [\"typeAnnotation\"],\n  fields: {\n    typeAnnotation: {\n      validate: (0, _utils.assertNodeType)(\"TSType\")\n    }\n  }\n});\ndefineType(\"TSTypeParameterInstantiation\", {\n  visitor: [\"params\"],\n  fields: {\n    params: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"TSType\")))\n    }\n  }\n});\ndefineType(\"TSTypeParameterDeclaration\", {\n  visitor: [\"params\"],\n  fields: {\n    params: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"TSTypeParameter\")))\n    }\n  }\n});\ndefineType(\"TSTypeParameter\", {\n  builder: [\"constraint\", \"default\", \"name\"],\n  visitor: [\"constraint\", \"default\"],\n  fields: {\n    name: {\n      validate: (0, _utils.assertValueType)(\"string\")\n    },\n    in: {\n      validate: (0, _utils.assertValueType)(\"boolean\"),\n      optional: true\n    },\n    out: {\n      validate: (0, _utils.assertValueType)(\"boolean\"),\n      optional: true\n    },\n    constraint: {\n      validate: (0, _utils.assertNodeType)(\"TSType\"),\n      optional: true\n    },\n    default: {\n      validate: (0, _utils.assertNodeType)(\"TSType\"),\n      optional: true\n    }\n  }\n});","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = assertNode;\n\nvar _isNode = require(\"../validators/isNode\");\n\nfunction assertNode(node) {\n  if (!(0, _isNode.default)(node)) {\n    var _node$type;\n\n    const type = (_node$type = node == null ? void 0 : node.type) != null ? _node$type : JSON.stringify(node);\n    throw new TypeError(`Not a valid node of type \"${type}\"`);\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isNode;\n\nvar _definitions = require(\"../definitions\");\n\nfunction isNode(node) {\n  return !!(node && _definitions.VISITOR_KEYS[node.type]);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.assertAccessor = assertAccessor;\nexports.assertAnyTypeAnnotation = assertAnyTypeAnnotation;\nexports.assertArgumentPlaceholder = assertArgumentPlaceholder;\nexports.assertArrayExpression = assertArrayExpression;\nexports.assertArrayPattern = assertArrayPattern;\nexports.assertArrayTypeAnnotation = assertArrayTypeAnnotation;\nexports.assertArrowFunctionExpression = assertArrowFunctionExpression;\nexports.assertAssignmentExpression = assertAssignmentExpression;\nexports.assertAssignmentPattern = assertAssignmentPattern;\nexports.assertAwaitExpression = assertAwaitExpression;\nexports.assertBigIntLiteral = assertBigIntLiteral;\nexports.assertBinary = assertBinary;\nexports.assertBinaryExpression = assertBinaryExpression;\nexports.assertBindExpression = assertBindExpression;\nexports.assertBlock = assertBlock;\nexports.assertBlockParent = assertBlockParent;\nexports.assertBlockStatement = assertBlockStatement;\nexports.assertBooleanLiteral = assertBooleanLiteral;\nexports.assertBooleanLiteralTypeAnnotation = assertBooleanLiteralTypeAnnotation;\nexports.assertBooleanTypeAnnotation = assertBooleanTypeAnnotation;\nexports.assertBreakStatement = assertBreakStatement;\nexports.assertCallExpression = assertCallExpression;\nexports.assertCatchClause = assertCatchClause;\nexports.assertClass = assertClass;\nexports.assertClassAccessorProperty = assertClassAccessorProperty;\nexports.assertClassBody = assertClassBody;\nexports.assertClassDeclaration = assertClassDeclaration;\nexports.assertClassExpression = assertClassExpression;\nexports.assertClassImplements = assertClassImplements;\nexports.assertClassMethod = assertClassMethod;\nexports.assertClassPrivateMethod = assertClassPrivateMethod;\nexports.assertClassPrivateProperty = assertClassPrivateProperty;\nexports.assertClassProperty = assertClassProperty;\nexports.assertCompletionStatement = assertCompletionStatement;\nexports.assertConditional = assertConditional;\nexports.assertConditionalExpression = assertConditionalExpression;\nexports.assertContinueStatement = assertContinueStatement;\nexports.assertDebuggerStatement = assertDebuggerStatement;\nexports.assertDecimalLiteral = assertDecimalLiteral;\nexports.assertDeclaration = assertDeclaration;\nexports.assertDeclareClass = assertDeclareClass;\nexports.assertDeclareExportAllDeclaration = assertDeclareExportAllDeclaration;\nexports.assertDeclareExportDeclaration = assertDeclareExportDeclaration;\nexports.assertDeclareFunction = assertDeclareFunction;\nexports.assertDeclareInterface = assertDeclareInterface;\nexports.assertDeclareModule = assertDeclareModule;\nexports.assertDeclareModuleExports = assertDeclareModuleExports;\nexports.assertDeclareOpaqueType = assertDeclareOpaqueType;\nexports.assertDeclareTypeAlias = assertDeclareTypeAlias;\nexports.assertDeclareVariable = assertDeclareVariable;\nexports.assertDeclaredPredicate = assertDeclaredPredicate;\nexports.assertDecorator = assertDecorator;\nexports.assertDirective = assertDirective;\nexports.assertDirectiveLiteral = assertDirectiveLiteral;\nexports.assertDoExpression = assertDoExpression;\nexports.assertDoWhileStatement = assertDoWhileStatement;\nexports.assertEmptyStatement = assertEmptyStatement;\nexports.assertEmptyTypeAnnotation = assertEmptyTypeAnnotation;\nexports.assertEnumBody = assertEnumBody;\nexports.assertEnumBooleanBody = assertEnumBooleanBody;\nexports.assertEnumBooleanMember = assertEnumBooleanMember;\nexports.assertEnumDeclaration = assertEnumDeclaration;\nexports.assertEnumDefaultedMember = assertEnumDefaultedMember;\nexports.assertEnumMember = assertEnumMember;\nexports.assertEnumNumberBody = assertEnumNumberBody;\nexports.assertEnumNumberMember = assertEnumNumberMember;\nexports.assertEnumStringBody = assertEnumStringBody;\nexports.assertEnumStringMember = assertEnumStringMember;\nexports.assertEnumSymbolBody = assertEnumSymbolBody;\nexports.assertExistsTypeAnnotation = assertExistsTypeAnnotation;\nexports.assertExportAllDeclaration = assertExportAllDeclaration;\nexports.assertExportDeclaration = assertExportDeclaration;\nexports.assertExportDefaultDeclaration = assertExportDefaultDeclaration;\nexports.assertExportDefaultSpecifier = assertExportDefaultSpecifier;\nexports.assertExportNamedDeclaration = assertExportNamedDeclaration;\nexports.assertExportNamespaceSpecifier = assertExportNamespaceSpecifier;\nexports.assertExportSpecifier = assertExportSpecifier;\nexports.assertExpression = assertExpression;\nexports.assertExpressionStatement = assertExpressionStatement;\nexports.assertExpressionWrapper = assertExpressionWrapper;\nexports.assertFile = assertFile;\nexports.assertFlow = assertFlow;\nexports.assertFlowBaseAnnotation = assertFlowBaseAnnotation;\nexports.assertFlowDeclaration = assertFlowDeclaration;\nexports.assertFlowPredicate = assertFlowPredicate;\nexports.assertFlowType = assertFlowType;\nexports.assertFor = assertFor;\nexports.assertForInStatement = assertForInStatement;\nexports.assertForOfStatement = assertForOfStatement;\nexports.assertForStatement = assertForStatement;\nexports.assertForXStatement = assertForXStatement;\nexports.assertFunction = assertFunction;\nexports.assertFunctionDeclaration = assertFunctionDeclaration;\nexports.assertFunctionExpression = assertFunctionExpression;\nexports.assertFunctionParent = assertFunctionParent;\nexports.assertFunctionTypeAnnotation = assertFunctionTypeAnnotation;\nexports.assertFunctionTypeParam = assertFunctionTypeParam;\nexports.assertGenericTypeAnnotation = assertGenericTypeAnnotation;\nexports.assertIdentifier = assertIdentifier;\nexports.assertIfStatement = assertIfStatement;\nexports.assertImmutable = assertImmutable;\nexports.assertImport = assertImport;\nexports.assertImportAttribute = assertImportAttribute;\nexports.assertImportDeclaration = assertImportDeclaration;\nexports.assertImportDefaultSpecifier = assertImportDefaultSpecifier;\nexports.assertImportNamespaceSpecifier = assertImportNamespaceSpecifier;\nexports.assertImportSpecifier = assertImportSpecifier;\nexports.assertIndexedAccessType = assertIndexedAccessType;\nexports.assertInferredPredicate = assertInferredPredicate;\nexports.assertInterfaceDeclaration = assertInterfaceDeclaration;\nexports.assertInterfaceExtends = assertInterfaceExtends;\nexports.assertInterfaceTypeAnnotation = assertInterfaceTypeAnnotation;\nexports.assertInterpreterDirective = assertInterpreterDirective;\nexports.assertIntersectionTypeAnnotation = assertIntersectionTypeAnnotation;\nexports.assertJSX = assertJSX;\nexports.assertJSXAttribute = assertJSXAttribute;\nexports.assertJSXClosingElement = assertJSXClosingElement;\nexports.assertJSXClosingFragment = assertJSXClosingFragment;\nexports.assertJSXElement = assertJSXElement;\nexports.assertJSXEmptyExpression = assertJSXEmptyExpression;\nexports.assertJSXExpressionContainer = assertJSXExpressionContainer;\nexports.assertJSXFragment = assertJSXFragment;\nexports.assertJSXIdentifier = assertJSXIdentifier;\nexports.assertJSXMemberExpression = assertJSXMemberExpression;\nexports.assertJSXNamespacedName = assertJSXNamespacedName;\nexports.assertJSXOpeningElement = assertJSXOpeningElement;\nexports.assertJSXOpeningFragment = assertJSXOpeningFragment;\nexports.assertJSXSpreadAttribute = assertJSXSpreadAttribute;\nexports.assertJSXSpreadChild = assertJSXSpreadChild;\nexports.assertJSXText = assertJSXText;\nexports.assertLVal = assertLVal;\nexports.assertLabeledStatement = assertLabeledStatement;\nexports.assertLiteral = assertLiteral;\nexports.assertLogicalExpression = assertLogicalExpression;\nexports.assertLoop = assertLoop;\nexports.assertMemberExpression = assertMemberExpression;\nexports.assertMetaProperty = assertMetaProperty;\nexports.assertMethod = assertMethod;\nexports.assertMiscellaneous = assertMiscellaneous;\nexports.assertMixedTypeAnnotation = assertMixedTypeAnnotation;\nexports.assertModuleDeclaration = assertModuleDeclaration;\nexports.assertModuleExpression = assertModuleExpression;\nexports.assertModuleSpecifier = assertModuleSpecifier;\nexports.assertNewExpression = assertNewExpression;\nexports.assertNoop = assertNoop;\nexports.assertNullLiteral = assertNullLiteral;\nexports.assertNullLiteralTypeAnnotation = assertNullLiteralTypeAnnotation;\nexports.assertNullableTypeAnnotation = assertNullableTypeAnnotation;\nexports.assertNumberLiteral = assertNumberLiteral;\nexports.assertNumberLiteralTypeAnnotation = assertNumberLiteralTypeAnnotation;\nexports.assertNumberTypeAnnotation = assertNumberTypeAnnotation;\nexports.assertNumericLiteral = assertNumericLiteral;\nexports.assertObjectExpression = assertObjectExpression;\nexports.assertObjectMember = assertObjectMember;\nexports.assertObjectMethod = assertObjectMethod;\nexports.assertObjectPattern = assertObjectPattern;\nexports.assertObjectProperty = assertObjectProperty;\nexports.assertObjectTypeAnnotation = assertObjectTypeAnnotation;\nexports.assertObjectTypeCallProperty = assertObjectTypeCallProperty;\nexports.assertObjectTypeIndexer = assertObjectTypeIndexer;\nexports.assertObjectTypeInternalSlot = assertObjectTypeInternalSlot;\nexports.assertObjectTypeProperty = assertObjectTypeProperty;\nexports.assertObjectTypeSpreadProperty = assertObjectTypeSpreadProperty;\nexports.assertOpaqueType = assertOpaqueType;\nexports.assertOptionalCallExpression = assertOptionalCallExpression;\nexports.assertOptionalIndexedAccessType = assertOptionalIndexedAccessType;\nexports.assertOptionalMemberExpression = assertOptionalMemberExpression;\nexports.assertParenthesizedExpression = assertParenthesizedExpression;\nexports.assertPattern = assertPattern;\nexports.assertPatternLike = assertPatternLike;\nexports.assertPipelineBareFunction = assertPipelineBareFunction;\nexports.assertPipelinePrimaryTopicReference = assertPipelinePrimaryTopicReference;\nexports.assertPipelineTopicExpression = assertPipelineTopicExpression;\nexports.assertPlaceholder = assertPlaceholder;\nexports.assertPrivate = assertPrivate;\nexports.assertPrivateName = assertPrivateName;\nexports.assertProgram = assertProgram;\nexports.assertProperty = assertProperty;\nexports.assertPureish = assertPureish;\nexports.assertQualifiedTypeIdentifier = assertQualifiedTypeIdentifier;\nexports.assertRecordExpression = assertRecordExpression;\nexports.assertRegExpLiteral = assertRegExpLiteral;\nexports.assertRegexLiteral = assertRegexLiteral;\nexports.assertRestElement = assertRestElement;\nexports.assertRestProperty = assertRestProperty;\nexports.assertReturnStatement = assertReturnStatement;\nexports.assertScopable = assertScopable;\nexports.assertSequenceExpression = assertSequenceExpression;\nexports.assertSpreadElement = assertSpreadElement;\nexports.assertSpreadProperty = assertSpreadProperty;\nexports.assertStandardized = assertStandardized;\nexports.assertStatement = assertStatement;\nexports.assertStaticBlock = assertStaticBlock;\nexports.assertStringLiteral = assertStringLiteral;\nexports.assertStringLiteralTypeAnnotation = assertStringLiteralTypeAnnotation;\nexports.assertStringTypeAnnotation = assertStringTypeAnnotation;\nexports.assertSuper = assertSuper;\nexports.assertSwitchCase = assertSwitchCase;\nexports.assertSwitchStatement = assertSwitchStatement;\nexports.assertSymbolTypeAnnotation = assertSymbolTypeAnnotation;\nexports.assertTSAnyKeyword = assertTSAnyKeyword;\nexports.assertTSArrayType = assertTSArrayType;\nexports.assertTSAsExpression = assertTSAsExpression;\nexports.assertTSBaseType = assertTSBaseType;\nexports.assertTSBigIntKeyword = assertTSBigIntKeyword;\nexports.assertTSBooleanKeyword = assertTSBooleanKeyword;\nexports.assertTSCallSignatureDeclaration = assertTSCallSignatureDeclaration;\nexports.assertTSConditionalType = assertTSConditionalType;\nexports.assertTSConstructSignatureDeclaration = assertTSConstructSignatureDeclaration;\nexports.assertTSConstructorType = assertTSConstructorType;\nexports.assertTSDeclareFunction = assertTSDeclareFunction;\nexports.assertTSDeclareMethod = assertTSDeclareMethod;\nexports.assertTSEntityName = assertTSEntityName;\nexports.assertTSEnumDeclaration = assertTSEnumDeclaration;\nexports.assertTSEnumMember = assertTSEnumMember;\nexports.assertTSExportAssignment = assertTSExportAssignment;\nexports.assertTSExpressionWithTypeArguments = assertTSExpressionWithTypeArguments;\nexports.assertTSExternalModuleReference = assertTSExternalModuleReference;\nexports.assertTSFunctionType = assertTSFunctionType;\nexports.assertTSImportEqualsDeclaration = assertTSImportEqualsDeclaration;\nexports.assertTSImportType = assertTSImportType;\nexports.assertTSIndexSignature = assertTSIndexSignature;\nexports.assertTSIndexedAccessType = assertTSIndexedAccessType;\nexports.assertTSInferType = assertTSInferType;\nexports.assertTSInstantiationExpression = assertTSInstantiationExpression;\nexports.assertTSInterfaceBody = assertTSInterfaceBody;\nexports.assertTSInterfaceDeclaration = assertTSInterfaceDeclaration;\nexports.assertTSIntersectionType = assertTSIntersectionType;\nexports.assertTSIntrinsicKeyword = assertTSIntrinsicKeyword;\nexports.assertTSLiteralType = assertTSLiteralType;\nexports.assertTSMappedType = assertTSMappedType;\nexports.assertTSMethodSignature = assertTSMethodSignature;\nexports.assertTSModuleBlock = assertTSModuleBlock;\nexports.assertTSModuleDeclaration = assertTSModuleDeclaration;\nexports.assertTSNamedTupleMember = assertTSNamedTupleMember;\nexports.assertTSNamespaceExportDeclaration = assertTSNamespaceExportDeclaration;\nexports.assertTSNeverKeyword = assertTSNeverKeyword;\nexports.assertTSNonNullExpression = assertTSNonNullExpression;\nexports.assertTSNullKeyword = assertTSNullKeyword;\nexports.assertTSNumberKeyword = assertTSNumberKeyword;\nexports.assertTSObjectKeyword = assertTSObjectKeyword;\nexports.assertTSOptionalType = assertTSOptionalType;\nexports.assertTSParameterProperty = assertTSParameterProperty;\nexports.assertTSParenthesizedType = assertTSParenthesizedType;\nexports.assertTSPropertySignature = assertTSPropertySignature;\nexports.assertTSQualifiedName = assertTSQualifiedName;\nexports.assertTSRestType = assertTSRestType;\nexports.assertTSStringKeyword = assertTSStringKeyword;\nexports.assertTSSymbolKeyword = assertTSSymbolKeyword;\nexports.assertTSThisType = assertTSThisType;\nexports.assertTSTupleType = assertTSTupleType;\nexports.assertTSType = assertTSType;\nexports.assertTSTypeAliasDeclaration = assertTSTypeAliasDeclaration;\nexports.assertTSTypeAnnotation = assertTSTypeAnnotation;\nexports.assertTSTypeAssertion = assertTSTypeAssertion;\nexports.assertTSTypeElement = assertTSTypeElement;\nexports.assertTSTypeLiteral = assertTSTypeLiteral;\nexports.assertTSTypeOperator = assertTSTypeOperator;\nexports.assertTSTypeParameter = assertTSTypeParameter;\nexports.assertTSTypeParameterDeclaration = assertTSTypeParameterDeclaration;\nexports.assertTSTypeParameterInstantiation = assertTSTypeParameterInstantiation;\nexports.assertTSTypePredicate = assertTSTypePredicate;\nexports.assertTSTypeQuery = assertTSTypeQuery;\nexports.assertTSTypeReference = assertTSTypeReference;\nexports.assertTSUndefinedKeyword = assertTSUndefinedKeyword;\nexports.assertTSUnionType = assertTSUnionType;\nexports.assertTSUnknownKeyword = assertTSUnknownKeyword;\nexports.assertTSVoidKeyword = assertTSVoidKeyword;\nexports.assertTaggedTemplateExpression = assertTaggedTemplateExpression;\nexports.assertTemplateElement = assertTemplateElement;\nexports.assertTemplateLiteral = assertTemplateLiteral;\nexports.assertTerminatorless = assertTerminatorless;\nexports.assertThisExpression = assertThisExpression;\nexports.assertThisTypeAnnotation = assertThisTypeAnnotation;\nexports.assertThrowStatement = assertThrowStatement;\nexports.assertTopicReference = assertTopicReference;\nexports.assertTryStatement = assertTryStatement;\nexports.assertTupleExpression = assertTupleExpression;\nexports.assertTupleTypeAnnotation = assertTupleTypeAnnotation;\nexports.assertTypeAlias = assertTypeAlias;\nexports.assertTypeAnnotation = assertTypeAnnotation;\nexports.assertTypeCastExpression = assertTypeCastExpression;\nexports.assertTypeParameter = assertTypeParameter;\nexports.assertTypeParameterDeclaration = assertTypeParameterDeclaration;\nexports.assertTypeParameterInstantiation = assertTypeParameterInstantiation;\nexports.assertTypeScript = assertTypeScript;\nexports.assertTypeofTypeAnnotation = assertTypeofTypeAnnotation;\nexports.assertUnaryExpression = assertUnaryExpression;\nexports.assertUnaryLike = assertUnaryLike;\nexports.assertUnionTypeAnnotation = assertUnionTypeAnnotation;\nexports.assertUpdateExpression = assertUpdateExpression;\nexports.assertUserWhitespacable = assertUserWhitespacable;\nexports.assertV8IntrinsicIdentifier = assertV8IntrinsicIdentifier;\nexports.assertVariableDeclaration = assertVariableDeclaration;\nexports.assertVariableDeclarator = assertVariableDeclarator;\nexports.assertVariance = assertVariance;\nexports.assertVoidTypeAnnotation = assertVoidTypeAnnotation;\nexports.assertWhile = assertWhile;\nexports.assertWhileStatement = assertWhileStatement;\nexports.assertWithStatement = assertWithStatement;\nexports.assertYieldExpression = assertYieldExpression;\n\nvar _is = require(\"../../validators/is\");\n\nfunction assert(type, node, opts) {\n  if (!(0, _is.default)(type, node, opts)) {\n    throw new Error(`Expected type \"${type}\" with option ${JSON.stringify(opts)}, ` + `but instead got \"${node.type}\".`);\n  }\n}\n\nfunction assertArrayExpression(node, opts) {\n  assert(\"ArrayExpression\", node, opts);\n}\n\nfunction assertAssignmentExpression(node, opts) {\n  assert(\"AssignmentExpression\", node, opts);\n}\n\nfunction assertBinaryExpression(node, opts) {\n  assert(\"BinaryExpression\", node, opts);\n}\n\nfunction assertInterpreterDirective(node, opts) {\n  assert(\"InterpreterDirective\", node, opts);\n}\n\nfunction assertDirective(node, opts) {\n  assert(\"Directive\", node, opts);\n}\n\nfunction assertDirectiveLiteral(node, opts) {\n  assert(\"DirectiveLiteral\", node, opts);\n}\n\nfunction assertBlockStatement(node, opts) {\n  assert(\"BlockStatement\", node, opts);\n}\n\nfunction assertBreakStatement(node, opts) {\n  assert(\"BreakStatement\", node, opts);\n}\n\nfunction assertCallExpression(node, opts) {\n  assert(\"CallExpression\", node, opts);\n}\n\nfunction assertCatchClause(node, opts) {\n  assert(\"CatchClause\", node, opts);\n}\n\nfunction assertConditionalExpression(node, opts) {\n  assert(\"ConditionalExpression\", node, opts);\n}\n\nfunction assertContinueStatement(node, opts) {\n  assert(\"ContinueStatement\", node, opts);\n}\n\nfunction assertDebuggerStatement(node, opts) {\n  assert(\"DebuggerStatement\", node, opts);\n}\n\nfunction assertDoWhileStatement(node, opts) {\n  assert(\"DoWhileStatement\", node, opts);\n}\n\nfunction assertEmptyStatement(node, opts) {\n  assert(\"EmptyStatement\", node, opts);\n}\n\nfunction assertExpressionStatement(node, opts) {\n  assert(\"ExpressionStatement\", node, opts);\n}\n\nfunction assertFile(node, opts) {\n  assert(\"File\", node, opts);\n}\n\nfunction assertForInStatement(node, opts) {\n  assert(\"ForInStatement\", node, opts);\n}\n\nfunction assertForStatement(node, opts) {\n  assert(\"ForStatement\", node, opts);\n}\n\nfunction assertFunctionDeclaration(node, opts) {\n  assert(\"FunctionDeclaration\", node, opts);\n}\n\nfunction assertFunctionExpression(node, opts) {\n  assert(\"FunctionExpression\", node, opts);\n}\n\nfunction assertIdentifier(node, opts) {\n  assert(\"Identifier\", node, opts);\n}\n\nfunction assertIfStatement(node, opts) {\n  assert(\"IfStatement\", node, opts);\n}\n\nfunction assertLabeledStatement(node, opts) {\n  assert(\"LabeledStatement\", node, opts);\n}\n\nfunction assertStringLiteral(node, opts) {\n  assert(\"StringLiteral\", node, opts);\n}\n\nfunction assertNumericLiteral(node, opts) {\n  assert(\"NumericLiteral\", node, opts);\n}\n\nfunction assertNullLiteral(node, opts) {\n  assert(\"NullLiteral\", node, opts);\n}\n\nfunction assertBooleanLiteral(node, opts) {\n  assert(\"BooleanLiteral\", node, opts);\n}\n\nfunction assertRegExpLiteral(node, opts) {\n  assert(\"RegExpLiteral\", node, opts);\n}\n\nfunction assertLogicalExpression(node, opts) {\n  assert(\"LogicalExpression\", node, opts);\n}\n\nfunction assertMemberExpression(node, opts) {\n  assert(\"MemberExpression\", node, opts);\n}\n\nfunction assertNewExpression(node, opts) {\n  assert(\"NewExpression\", node, opts);\n}\n\nfunction assertProgram(node, opts) {\n  assert(\"Program\", node, opts);\n}\n\nfunction assertObjectExpression(node, opts) {\n  assert(\"ObjectExpression\", node, opts);\n}\n\nfunction assertObjectMethod(node, opts) {\n  assert(\"ObjectMethod\", node, opts);\n}\n\nfunction assertObjectProperty(node, opts) {\n  assert(\"ObjectProperty\", node, opts);\n}\n\nfunction assertRestElement(node, opts) {\n  assert(\"RestElement\", node, opts);\n}\n\nfunction assertReturnStatement(node, opts) {\n  assert(\"ReturnStatement\", node, opts);\n}\n\nfunction assertSequenceExpression(node, opts) {\n  assert(\"SequenceExpression\", node, opts);\n}\n\nfunction assertParenthesizedExpression(node, opts) {\n  assert(\"ParenthesizedExpression\", node, opts);\n}\n\nfunction assertSwitchCase(node, opts) {\n  assert(\"SwitchCase\", node, opts);\n}\n\nfunction assertSwitchStatement(node, opts) {\n  assert(\"SwitchStatement\", node, opts);\n}\n\nfunction assertThisExpression(node, opts) {\n  assert(\"ThisExpression\", node, opts);\n}\n\nfunction assertThrowStatement(node, opts) {\n  assert(\"ThrowStatement\", node, opts);\n}\n\nfunction assertTryStatement(node, opts) {\n  assert(\"TryStatement\", node, opts);\n}\n\nfunction assertUnaryExpression(node, opts) {\n  assert(\"UnaryExpression\", node, opts);\n}\n\nfunction assertUpdateExpression(node, opts) {\n  assert(\"UpdateExpression\", node, opts);\n}\n\nfunction assertVariableDeclaration(node, opts) {\n  assert(\"VariableDeclaration\", node, opts);\n}\n\nfunction assertVariableDeclarator(node, opts) {\n  assert(\"VariableDeclarator\", node, opts);\n}\n\nfunction assertWhileStatement(node, opts) {\n  assert(\"WhileStatement\", node, opts);\n}\n\nfunction assertWithStatement(node, opts) {\n  assert(\"WithStatement\", node, opts);\n}\n\nfunction assertAssignmentPattern(node, opts) {\n  assert(\"AssignmentPattern\", node, opts);\n}\n\nfunction assertArrayPattern(node, opts) {\n  assert(\"ArrayPattern\", node, opts);\n}\n\nfunction assertArrowFunctionExpression(node, opts) {\n  assert(\"ArrowFunctionExpression\", node, opts);\n}\n\nfunction assertClassBody(node, opts) {\n  assert(\"ClassBody\", node, opts);\n}\n\nfunction assertClassExpression(node, opts) {\n  assert(\"ClassExpression\", node, opts);\n}\n\nfunction assertClassDeclaration(node, opts) {\n  assert(\"ClassDeclaration\", node, opts);\n}\n\nfunction assertExportAllDeclaration(node, opts) {\n  assert(\"ExportAllDeclaration\", node, opts);\n}\n\nfunction assertExportDefaultDeclaration(node, opts) {\n  assert(\"ExportDefaultDeclaration\", node, opts);\n}\n\nfunction assertExportNamedDeclaration(node, opts) {\n  assert(\"ExportNamedDeclaration\", node, opts);\n}\n\nfunction assertExportSpecifier(node, opts) {\n  assert(\"ExportSpecifier\", node, opts);\n}\n\nfunction assertForOfStatement(node, opts) {\n  assert(\"ForOfStatement\", node, opts);\n}\n\nfunction assertImportDeclaration(node, opts) {\n  assert(\"ImportDeclaration\", node, opts);\n}\n\nfunction assertImportDefaultSpecifier(node, opts) {\n  assert(\"ImportDefaultSpecifier\", node, opts);\n}\n\nfunction assertImportNamespaceSpecifier(node, opts) {\n  assert(\"ImportNamespaceSpecifier\", node, opts);\n}\n\nfunction assertImportSpecifier(node, opts) {\n  assert(\"ImportSpecifier\", node, opts);\n}\n\nfunction assertMetaProperty(node, opts) {\n  assert(\"MetaProperty\", node, opts);\n}\n\nfunction assertClassMethod(node, opts) {\n  assert(\"ClassMethod\", node, opts);\n}\n\nfunction assertObjectPattern(node, opts) {\n  assert(\"ObjectPattern\", node, opts);\n}\n\nfunction assertSpreadElement(node, opts) {\n  assert(\"SpreadElement\", node, opts);\n}\n\nfunction assertSuper(node, opts) {\n  assert(\"Super\", node, opts);\n}\n\nfunction assertTaggedTemplateExpression(node, opts) {\n  assert(\"TaggedTemplateExpression\", node, opts);\n}\n\nfunction assertTemplateElement(node, opts) {\n  assert(\"TemplateElement\", node, opts);\n}\n\nfunction assertTemplateLiteral(node, opts) {\n  assert(\"TemplateLiteral\", node, opts);\n}\n\nfunction assertYieldExpression(node, opts) {\n  assert(\"YieldExpression\", node, opts);\n}\n\nfunction assertAwaitExpression(node, opts) {\n  assert(\"AwaitExpression\", node, opts);\n}\n\nfunction assertImport(node, opts) {\n  assert(\"Import\", node, opts);\n}\n\nfunction assertBigIntLiteral(node, opts) {\n  assert(\"BigIntLiteral\", node, opts);\n}\n\nfunction assertExportNamespaceSpecifier(node, opts) {\n  assert(\"ExportNamespaceSpecifier\", node, opts);\n}\n\nfunction assertOptionalMemberExpression(node, opts) {\n  assert(\"OptionalMemberExpression\", node, opts);\n}\n\nfunction assertOptionalCallExpression(node, opts) {\n  assert(\"OptionalCallExpression\", node, opts);\n}\n\nfunction assertClassProperty(node, opts) {\n  assert(\"ClassProperty\", node, opts);\n}\n\nfunction assertClassAccessorProperty(node, opts) {\n  assert(\"ClassAccessorProperty\", node, opts);\n}\n\nfunction assertClassPrivateProperty(node, opts) {\n  assert(\"ClassPrivateProperty\", node, opts);\n}\n\nfunction assertClassPrivateMethod(node, opts) {\n  assert(\"ClassPrivateMethod\", node, opts);\n}\n\nfunction assertPrivateName(node, opts) {\n  assert(\"PrivateName\", node, opts);\n}\n\nfunction assertStaticBlock(node, opts) {\n  assert(\"StaticBlock\", node, opts);\n}\n\nfunction assertAnyTypeAnnotation(node, opts) {\n  assert(\"AnyTypeAnnotation\", node, opts);\n}\n\nfunction assertArrayTypeAnnotation(node, opts) {\n  assert(\"ArrayTypeAnnotation\", node, opts);\n}\n\nfunction assertBooleanTypeAnnotation(node, opts) {\n  assert(\"BooleanTypeAnnotation\", node, opts);\n}\n\nfunction assertBooleanLiteralTypeAnnotation(node, opts) {\n  assert(\"BooleanLiteralTypeAnnotation\", node, opts);\n}\n\nfunction assertNullLiteralTypeAnnotation(node, opts) {\n  assert(\"NullLiteralTypeAnnotation\", node, opts);\n}\n\nfunction assertClassImplements(node, opts) {\n  assert(\"ClassImplements\", node, opts);\n}\n\nfunction assertDeclareClass(node, opts) {\n  assert(\"DeclareClass\", node, opts);\n}\n\nfunction assertDeclareFunction(node, opts) {\n  assert(\"DeclareFunction\", node, opts);\n}\n\nfunction assertDeclareInterface(node, opts) {\n  assert(\"DeclareInterface\", node, opts);\n}\n\nfunction assertDeclareModule(node, opts) {\n  assert(\"DeclareModule\", node, opts);\n}\n\nfunction assertDeclareModuleExports(node, opts) {\n  assert(\"DeclareModuleExports\", node, opts);\n}\n\nfunction assertDeclareTypeAlias(node, opts) {\n  assert(\"DeclareTypeAlias\", node, opts);\n}\n\nfunction assertDeclareOpaqueType(node, opts) {\n  assert(\"DeclareOpaqueType\", node, opts);\n}\n\nfunction assertDeclareVariable(node, opts) {\n  assert(\"DeclareVariable\", node, opts);\n}\n\nfunction assertDeclareExportDeclaration(node, opts) {\n  assert(\"DeclareExportDeclaration\", node, opts);\n}\n\nfunction assertDeclareExportAllDeclaration(node, opts) {\n  assert(\"DeclareExportAllDeclaration\", node, opts);\n}\n\nfunction assertDeclaredPredicate(node, opts) {\n  assert(\"DeclaredPredicate\", node, opts);\n}\n\nfunction assertExistsTypeAnnotation(node, opts) {\n  assert(\"ExistsTypeAnnotation\", node, opts);\n}\n\nfunction assertFunctionTypeAnnotation(node, opts) {\n  assert(\"FunctionTypeAnnotation\", node, opts);\n}\n\nfunction assertFunctionTypeParam(node, opts) {\n  assert(\"FunctionTypeParam\", node, opts);\n}\n\nfunction assertGenericTypeAnnotation(node, opts) {\n  assert(\"GenericTypeAnnotation\", node, opts);\n}\n\nfunction assertInferredPredicate(node, opts) {\n  assert(\"InferredPredicate\", node, opts);\n}\n\nfunction assertInterfaceExtends(node, opts) {\n  assert(\"InterfaceExtends\", node, opts);\n}\n\nfunction assertInterfaceDeclaration(node, opts) {\n  assert(\"InterfaceDeclaration\", node, opts);\n}\n\nfunction assertInterfaceTypeAnnotation(node, opts) {\n  assert(\"InterfaceTypeAnnotation\", node, opts);\n}\n\nfunction assertIntersectionTypeAnnotation(node, opts) {\n  assert(\"IntersectionTypeAnnotation\", node, opts);\n}\n\nfunction assertMixedTypeAnnotation(node, opts) {\n  assert(\"MixedTypeAnnotation\", node, opts);\n}\n\nfunction assertEmptyTypeAnnotation(node, opts) {\n  assert(\"EmptyTypeAnnotation\", node, opts);\n}\n\nfunction assertNullableTypeAnnotation(node, opts) {\n  assert(\"NullableTypeAnnotation\", node, opts);\n}\n\nfunction assertNumberLiteralTypeAnnotation(node, opts) {\n  assert(\"NumberLiteralTypeAnnotation\", node, opts);\n}\n\nfunction assertNumberTypeAnnotation(node, opts) {\n  assert(\"NumberTypeAnnotation\", node, opts);\n}\n\nfunction assertObjectTypeAnnotation(node, opts) {\n  assert(\"ObjectTypeAnnotation\", node, opts);\n}\n\nfunction assertObjectTypeInternalSlot(node, opts) {\n  assert(\"ObjectTypeInternalSlot\", node, opts);\n}\n\nfunction assertObjectTypeCallProperty(node, opts) {\n  assert(\"ObjectTypeCallProperty\", node, opts);\n}\n\nfunction assertObjectTypeIndexer(node, opts) {\n  assert(\"ObjectTypeIndexer\", node, opts);\n}\n\nfunction assertObjectTypeProperty(node, opts) {\n  assert(\"ObjectTypeProperty\", node, opts);\n}\n\nfunction assertObjectTypeSpreadProperty(node, opts) {\n  assert(\"ObjectTypeSpreadProperty\", node, opts);\n}\n\nfunction assertOpaqueType(node, opts) {\n  assert(\"OpaqueType\", node, opts);\n}\n\nfunction assertQualifiedTypeIdentifier(node, opts) {\n  assert(\"QualifiedTypeIdentifier\", node, opts);\n}\n\nfunction assertStringLiteralTypeAnnotation(node, opts) {\n  assert(\"StringLiteralTypeAnnotation\", node, opts);\n}\n\nfunction assertStringTypeAnnotation(node, opts) {\n  assert(\"StringTypeAnnotation\", node, opts);\n}\n\nfunction assertSymbolTypeAnnotation(node, opts) {\n  assert(\"SymbolTypeAnnotation\", node, opts);\n}\n\nfunction assertThisTypeAnnotation(node, opts) {\n  assert(\"ThisTypeAnnotation\", node, opts);\n}\n\nfunction assertTupleTypeAnnotation(node, opts) {\n  assert(\"TupleTypeAnnotation\", node, opts);\n}\n\nfunction assertTypeofTypeAnnotation(node, opts) {\n  assert(\"TypeofTypeAnnotation\", node, opts);\n}\n\nfunction assertTypeAlias(node, opts) {\n  assert(\"TypeAlias\", node, opts);\n}\n\nfunction assertTypeAnnotation(node, opts) {\n  assert(\"TypeAnnotation\", node, opts);\n}\n\nfunction assertTypeCastExpression(node, opts) {\n  assert(\"TypeCastExpression\", node, opts);\n}\n\nfunction assertTypeParameter(node, opts) {\n  assert(\"TypeParameter\", node, opts);\n}\n\nfunction assertTypeParameterDeclaration(node, opts) {\n  assert(\"TypeParameterDeclaration\", node, opts);\n}\n\nfunction assertTypeParameterInstantiation(node, opts) {\n  assert(\"TypeParameterInstantiation\", node, opts);\n}\n\nfunction assertUnionTypeAnnotation(node, opts) {\n  assert(\"UnionTypeAnnotation\", node, opts);\n}\n\nfunction assertVariance(node, opts) {\n  assert(\"Variance\", node, opts);\n}\n\nfunction assertVoidTypeAnnotation(node, opts) {\n  assert(\"VoidTypeAnnotation\", node, opts);\n}\n\nfunction assertEnumDeclaration(node, opts) {\n  assert(\"EnumDeclaration\", node, opts);\n}\n\nfunction assertEnumBooleanBody(node, opts) {\n  assert(\"EnumBooleanBody\", node, opts);\n}\n\nfunction assertEnumNumberBody(node, opts) {\n  assert(\"EnumNumberBody\", node, opts);\n}\n\nfunction assertEnumStringBody(node, opts) {\n  assert(\"EnumStringBody\", node, opts);\n}\n\nfunction assertEnumSymbolBody(node, opts) {\n  assert(\"EnumSymbolBody\", node, opts);\n}\n\nfunction assertEnumBooleanMember(node, opts) {\n  assert(\"EnumBooleanMember\", node, opts);\n}\n\nfunction assertEnumNumberMember(node, opts) {\n  assert(\"EnumNumberMember\", node, opts);\n}\n\nfunction assertEnumStringMember(node, opts) {\n  assert(\"EnumStringMember\", node, opts);\n}\n\nfunction assertEnumDefaultedMember(node, opts) {\n  assert(\"EnumDefaultedMember\", node, opts);\n}\n\nfunction assertIndexedAccessType(node, opts) {\n  assert(\"IndexedAccessType\", node, opts);\n}\n\nfunction assertOptionalIndexedAccessType(node, opts) {\n  assert(\"OptionalIndexedAccessType\", node, opts);\n}\n\nfunction assertJSXAttribute(node, opts) {\n  assert(\"JSXAttribute\", node, opts);\n}\n\nfunction assertJSXClosingElement(node, opts) {\n  assert(\"JSXClosingElement\", node, opts);\n}\n\nfunction assertJSXElement(node, opts) {\n  assert(\"JSXElement\", node, opts);\n}\n\nfunction assertJSXEmptyExpression(node, opts) {\n  assert(\"JSXEmptyExpression\", node, opts);\n}\n\nfunction assertJSXExpressionContainer(node, opts) {\n  assert(\"JSXExpressionContainer\", node, opts);\n}\n\nfunction assertJSXSpreadChild(node, opts) {\n  assert(\"JSXSpreadChild\", node, opts);\n}\n\nfunction assertJSXIdentifier(node, opts) {\n  assert(\"JSXIdentifier\", node, opts);\n}\n\nfunction assertJSXMemberExpression(node, opts) {\n  assert(\"JSXMemberExpression\", node, opts);\n}\n\nfunction assertJSXNamespacedName(node, opts) {\n  assert(\"JSXNamespacedName\", node, opts);\n}\n\nfunction assertJSXOpeningElement(node, opts) {\n  assert(\"JSXOpeningElement\", node, opts);\n}\n\nfunction assertJSXSpreadAttribute(node, opts) {\n  assert(\"JSXSpreadAttribute\", node, opts);\n}\n\nfunction assertJSXText(node, opts) {\n  assert(\"JSXText\", node, opts);\n}\n\nfunction assertJSXFragment(node, opts) {\n  assert(\"JSXFragment\", node, opts);\n}\n\nfunction assertJSXOpeningFragment(node, opts) {\n  assert(\"JSXOpeningFragment\", node, opts);\n}\n\nfunction assertJSXClosingFragment(node, opts) {\n  assert(\"JSXClosingFragment\", node, opts);\n}\n\nfunction assertNoop(node, opts) {\n  assert(\"Noop\", node, opts);\n}\n\nfunction assertPlaceholder(node, opts) {\n  assert(\"Placeholder\", node, opts);\n}\n\nfunction assertV8IntrinsicIdentifier(node, opts) {\n  assert(\"V8IntrinsicIdentifier\", node, opts);\n}\n\nfunction assertArgumentPlaceholder(node, opts) {\n  assert(\"ArgumentPlaceholder\", node, opts);\n}\n\nfunction assertBindExpression(node, opts) {\n  assert(\"BindExpression\", node, opts);\n}\n\nfunction assertImportAttribute(node, opts) {\n  assert(\"ImportAttribute\", node, opts);\n}\n\nfunction assertDecorator(node, opts) {\n  assert(\"Decorator\", node, opts);\n}\n\nfunction assertDoExpression(node, opts) {\n  assert(\"DoExpression\", node, opts);\n}\n\nfunction assertExportDefaultSpecifier(node, opts) {\n  assert(\"ExportDefaultSpecifier\", node, opts);\n}\n\nfunction assertRecordExpression(node, opts) {\n  assert(\"RecordExpression\", node, opts);\n}\n\nfunction assertTupleExpression(node, opts) {\n  assert(\"TupleExpression\", node, opts);\n}\n\nfunction assertDecimalLiteral(node, opts) {\n  assert(\"DecimalLiteral\", node, opts);\n}\n\nfunction assertModuleExpression(node, opts) {\n  assert(\"ModuleExpression\", node, opts);\n}\n\nfunction assertTopicReference(node, opts) {\n  assert(\"TopicReference\", node, opts);\n}\n\nfunction assertPipelineTopicExpression(node, opts) {\n  assert(\"PipelineTopicExpression\", node, opts);\n}\n\nfunction assertPipelineBareFunction(node, opts) {\n  assert(\"PipelineBareFunction\", node, opts);\n}\n\nfunction assertPipelinePrimaryTopicReference(node, opts) {\n  assert(\"PipelinePrimaryTopicReference\", node, opts);\n}\n\nfunction assertTSParameterProperty(node, opts) {\n  assert(\"TSParameterProperty\", node, opts);\n}\n\nfunction assertTSDeclareFunction(node, opts) {\n  assert(\"TSDeclareFunction\", node, opts);\n}\n\nfunction assertTSDeclareMethod(node, opts) {\n  assert(\"TSDeclareMethod\", node, opts);\n}\n\nfunction assertTSQualifiedName(node, opts) {\n  assert(\"TSQualifiedName\", node, opts);\n}\n\nfunction assertTSCallSignatureDeclaration(node, opts) {\n  assert(\"TSCallSignatureDeclaration\", node, opts);\n}\n\nfunction assertTSConstructSignatureDeclaration(node, opts) {\n  assert(\"TSConstructSignatureDeclaration\", node, opts);\n}\n\nfunction assertTSPropertySignature(node, opts) {\n  assert(\"TSPropertySignature\", node, opts);\n}\n\nfunction assertTSMethodSignature(node, opts) {\n  assert(\"TSMethodSignature\", node, opts);\n}\n\nfunction assertTSIndexSignature(node, opts) {\n  assert(\"TSIndexSignature\", node, opts);\n}\n\nfunction assertTSAnyKeyword(node, opts) {\n  assert(\"TSAnyKeyword\", node, opts);\n}\n\nfunction assertTSBooleanKeyword(node, opts) {\n  assert(\"TSBooleanKeyword\", node, opts);\n}\n\nfunction assertTSBigIntKeyword(node, opts) {\n  assert(\"TSBigIntKeyword\", node, opts);\n}\n\nfunction assertTSIntrinsicKeyword(node, opts) {\n  assert(\"TSIntrinsicKeyword\", node, opts);\n}\n\nfunction assertTSNeverKeyword(node, opts) {\n  assert(\"TSNeverKeyword\", node, opts);\n}\n\nfunction assertTSNullKeyword(node, opts) {\n  assert(\"TSNullKeyword\", node, opts);\n}\n\nfunction assertTSNumberKeyword(node, opts) {\n  assert(\"TSNumberKeyword\", node, opts);\n}\n\nfunction assertTSObjectKeyword(node, opts) {\n  assert(\"TSObjectKeyword\", node, opts);\n}\n\nfunction assertTSStringKeyword(node, opts) {\n  assert(\"TSStringKeyword\", node, opts);\n}\n\nfunction assertTSSymbolKeyword(node, opts) {\n  assert(\"TSSymbolKeyword\", node, opts);\n}\n\nfunction assertTSUndefinedKeyword(node, opts) {\n  assert(\"TSUndefinedKeyword\", node, opts);\n}\n\nfunction assertTSUnknownKeyword(node, opts) {\n  assert(\"TSUnknownKeyword\", node, opts);\n}\n\nfunction assertTSVoidKeyword(node, opts) {\n  assert(\"TSVoidKeyword\", node, opts);\n}\n\nfunction assertTSThisType(node, opts) {\n  assert(\"TSThisType\", node, opts);\n}\n\nfunction assertTSFunctionType(node, opts) {\n  assert(\"TSFunctionType\", node, opts);\n}\n\nfunction assertTSConstructorType(node, opts) {\n  assert(\"TSConstructorType\", node, opts);\n}\n\nfunction assertTSTypeReference(node, opts) {\n  assert(\"TSTypeReference\", node, opts);\n}\n\nfunction assertTSTypePredicate(node, opts) {\n  assert(\"TSTypePredicate\", node, opts);\n}\n\nfunction assertTSTypeQuery(node, opts) {\n  assert(\"TSTypeQuery\", node, opts);\n}\n\nfunction assertTSTypeLiteral(node, opts) {\n  assert(\"TSTypeLiteral\", node, opts);\n}\n\nfunction assertTSArrayType(node, opts) {\n  assert(\"TSArrayType\", node, opts);\n}\n\nfunction assertTSTupleType(node, opts) {\n  assert(\"TSTupleType\", node, opts);\n}\n\nfunction assertTSOptionalType(node, opts) {\n  assert(\"TSOptionalType\", node, opts);\n}\n\nfunction assertTSRestType(node, opts) {\n  assert(\"TSRestType\", node, opts);\n}\n\nfunction assertTSNamedTupleMember(node, opts) {\n  assert(\"TSNamedTupleMember\", node, opts);\n}\n\nfunction assertTSUnionType(node, opts) {\n  assert(\"TSUnionType\", node, opts);\n}\n\nfunction assertTSIntersectionType(node, opts) {\n  assert(\"TSIntersectionType\", node, opts);\n}\n\nfunction assertTSConditionalType(node, opts) {\n  assert(\"TSConditionalType\", node, opts);\n}\n\nfunction assertTSInferType(node, opts) {\n  assert(\"TSInferType\", node, opts);\n}\n\nfunction assertTSParenthesizedType(node, opts) {\n  assert(\"TSParenthesizedType\", node, opts);\n}\n\nfunction assertTSTypeOperator(node, opts) {\n  assert(\"TSTypeOperator\", node, opts);\n}\n\nfunction assertTSIndexedAccessType(node, opts) {\n  assert(\"TSIndexedAccessType\", node, opts);\n}\n\nfunction assertTSMappedType(node, opts) {\n  assert(\"TSMappedType\", node, opts);\n}\n\nfunction assertTSLiteralType(node, opts) {\n  assert(\"TSLiteralType\", node, opts);\n}\n\nfunction assertTSExpressionWithTypeArguments(node, opts) {\n  assert(\"TSExpressionWithTypeArguments\", node, opts);\n}\n\nfunction assertTSInterfaceDeclaration(node, opts) {\n  assert(\"TSInterfaceDeclaration\", node, opts);\n}\n\nfunction assertTSInterfaceBody(node, opts) {\n  assert(\"TSInterfaceBody\", node, opts);\n}\n\nfunction assertTSTypeAliasDeclaration(node, opts) {\n  assert(\"TSTypeAliasDeclaration\", node, opts);\n}\n\nfunction assertTSInstantiationExpression(node, opts) {\n  assert(\"TSInstantiationExpression\", node, opts);\n}\n\nfunction assertTSAsExpression(node, opts) {\n  assert(\"TSAsExpression\", node, opts);\n}\n\nfunction assertTSTypeAssertion(node, opts) {\n  assert(\"TSTypeAssertion\", node, opts);\n}\n\nfunction assertTSEnumDeclaration(node, opts) {\n  assert(\"TSEnumDeclaration\", node, opts);\n}\n\nfunction assertTSEnumMember(node, opts) {\n  assert(\"TSEnumMember\", node, opts);\n}\n\nfunction assertTSModuleDeclaration(node, opts) {\n  assert(\"TSModuleDeclaration\", node, opts);\n}\n\nfunction assertTSModuleBlock(node, opts) {\n  assert(\"TSModuleBlock\", node, opts);\n}\n\nfunction assertTSImportType(node, opts) {\n  assert(\"TSImportType\", node, opts);\n}\n\nfunction assertTSImportEqualsDeclaration(node, opts) {\n  assert(\"TSImportEqualsDeclaration\", node, opts);\n}\n\nfunction assertTSExternalModuleReference(node, opts) {\n  assert(\"TSExternalModuleReference\", node, opts);\n}\n\nfunction assertTSNonNullExpression(node, opts) {\n  assert(\"TSNonNullExpression\", node, opts);\n}\n\nfunction assertTSExportAssignment(node, opts) {\n  assert(\"TSExportAssignment\", node, opts);\n}\n\nfunction assertTSNamespaceExportDeclaration(node, opts) {\n  assert(\"TSNamespaceExportDeclaration\", node, opts);\n}\n\nfunction assertTSTypeAnnotation(node, opts) {\n  assert(\"TSTypeAnnotation\", node, opts);\n}\n\nfunction assertTSTypeParameterInstantiation(node, opts) {\n  assert(\"TSTypeParameterInstantiation\", node, opts);\n}\n\nfunction assertTSTypeParameterDeclaration(node, opts) {\n  assert(\"TSTypeParameterDeclaration\", node, opts);\n}\n\nfunction assertTSTypeParameter(node, opts) {\n  assert(\"TSTypeParameter\", node, opts);\n}\n\nfunction assertStandardized(node, opts) {\n  assert(\"Standardized\", node, opts);\n}\n\nfunction assertExpression(node, opts) {\n  assert(\"Expression\", node, opts);\n}\n\nfunction assertBinary(node, opts) {\n  assert(\"Binary\", node, opts);\n}\n\nfunction assertScopable(node, opts) {\n  assert(\"Scopable\", node, opts);\n}\n\nfunction assertBlockParent(node, opts) {\n  assert(\"BlockParent\", node, opts);\n}\n\nfunction assertBlock(node, opts) {\n  assert(\"Block\", node, opts);\n}\n\nfunction assertStatement(node, opts) {\n  assert(\"Statement\", node, opts);\n}\n\nfunction assertTerminatorless(node, opts) {\n  assert(\"Terminatorless\", node, opts);\n}\n\nfunction assertCompletionStatement(node, opts) {\n  assert(\"CompletionStatement\", node, opts);\n}\n\nfunction assertConditional(node, opts) {\n  assert(\"Conditional\", node, opts);\n}\n\nfunction assertLoop(node, opts) {\n  assert(\"Loop\", node, opts);\n}\n\nfunction assertWhile(node, opts) {\n  assert(\"While\", node, opts);\n}\n\nfunction assertExpressionWrapper(node, opts) {\n  assert(\"ExpressionWrapper\", node, opts);\n}\n\nfunction assertFor(node, opts) {\n  assert(\"For\", node, opts);\n}\n\nfunction assertForXStatement(node, opts) {\n  assert(\"ForXStatement\", node, opts);\n}\n\nfunction assertFunction(node, opts) {\n  assert(\"Function\", node, opts);\n}\n\nfunction assertFunctionParent(node, opts) {\n  assert(\"FunctionParent\", node, opts);\n}\n\nfunction assertPureish(node, opts) {\n  assert(\"Pureish\", node, opts);\n}\n\nfunction assertDeclaration(node, opts) {\n  assert(\"Declaration\", node, opts);\n}\n\nfunction assertPatternLike(node, opts) {\n  assert(\"PatternLike\", node, opts);\n}\n\nfunction assertLVal(node, opts) {\n  assert(\"LVal\", node, opts);\n}\n\nfunction assertTSEntityName(node, opts) {\n  assert(\"TSEntityName\", node, opts);\n}\n\nfunction assertLiteral(node, opts) {\n  assert(\"Literal\", node, opts);\n}\n\nfunction assertImmutable(node, opts) {\n  assert(\"Immutable\", node, opts);\n}\n\nfunction assertUserWhitespacable(node, opts) {\n  assert(\"UserWhitespacable\", node, opts);\n}\n\nfunction assertMethod(node, opts) {\n  assert(\"Method\", node, opts);\n}\n\nfunction assertObjectMember(node, opts) {\n  assert(\"ObjectMember\", node, opts);\n}\n\nfunction assertProperty(node, opts) {\n  assert(\"Property\", node, opts);\n}\n\nfunction assertUnaryLike(node, opts) {\n  assert(\"UnaryLike\", node, opts);\n}\n\nfunction assertPattern(node, opts) {\n  assert(\"Pattern\", node, opts);\n}\n\nfunction assertClass(node, opts) {\n  assert(\"Class\", node, opts);\n}\n\nfunction assertModuleDeclaration(node, opts) {\n  assert(\"ModuleDeclaration\", node, opts);\n}\n\nfunction assertExportDeclaration(node, opts) {\n  assert(\"ExportDeclaration\", node, opts);\n}\n\nfunction assertModuleSpecifier(node, opts) {\n  assert(\"ModuleSpecifier\", node, opts);\n}\n\nfunction assertAccessor(node, opts) {\n  assert(\"Accessor\", node, opts);\n}\n\nfunction assertPrivate(node, opts) {\n  assert(\"Private\", node, opts);\n}\n\nfunction assertFlow(node, opts) {\n  assert(\"Flow\", node, opts);\n}\n\nfunction assertFlowType(node, opts) {\n  assert(\"FlowType\", node, opts);\n}\n\nfunction assertFlowBaseAnnotation(node, opts) {\n  assert(\"FlowBaseAnnotation\", node, opts);\n}\n\nfunction assertFlowDeclaration(node, opts) {\n  assert(\"FlowDeclaration\", node, opts);\n}\n\nfunction assertFlowPredicate(node, opts) {\n  assert(\"FlowPredicate\", node, opts);\n}\n\nfunction assertEnumBody(node, opts) {\n  assert(\"EnumBody\", node, opts);\n}\n\nfunction assertEnumMember(node, opts) {\n  assert(\"EnumMember\", node, opts);\n}\n\nfunction assertJSX(node, opts) {\n  assert(\"JSX\", node, opts);\n}\n\nfunction assertMiscellaneous(node, opts) {\n  assert(\"Miscellaneous\", node, opts);\n}\n\nfunction assertTypeScript(node, opts) {\n  assert(\"TypeScript\", node, opts);\n}\n\nfunction assertTSTypeElement(node, opts) {\n  assert(\"TSTypeElement\", node, opts);\n}\n\nfunction assertTSType(node, opts) {\n  assert(\"TSType\", node, opts);\n}\n\nfunction assertTSBaseType(node, opts) {\n  assert(\"TSBaseType\", node, opts);\n}\n\nfunction assertNumberLiteral(node, opts) {\n  console.trace(\"The node type NumberLiteral has been renamed to NumericLiteral\");\n  assert(\"NumberLiteral\", node, opts);\n}\n\nfunction assertRegexLiteral(node, opts) {\n  console.trace(\"The node type RegexLiteral has been renamed to RegExpLiteral\");\n  assert(\"RegexLiteral\", node, opts);\n}\n\nfunction assertRestProperty(node, opts) {\n  console.trace(\"The node type RestProperty has been renamed to RestElement\");\n  assert(\"RestProperty\", node, opts);\n}\n\nfunction assertSpreadProperty(node, opts) {\n  console.trace(\"The node type SpreadProperty has been renamed to SpreadElement\");\n  assert(\"SpreadProperty\", node, opts);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _generated = require(\"../generated\");\n\nvar _default = createTypeAnnotationBasedOnTypeof;\nexports.default = _default;\n\nfunction createTypeAnnotationBasedOnTypeof(type) {\n  switch (type) {\n    case \"string\":\n      return (0, _generated.stringTypeAnnotation)();\n\n    case \"number\":\n      return (0, _generated.numberTypeAnnotation)();\n\n    case \"undefined\":\n      return (0, _generated.voidTypeAnnotation)();\n\n    case \"boolean\":\n      return (0, _generated.booleanTypeAnnotation)();\n\n    case \"function\":\n      return (0, _generated.genericTypeAnnotation)((0, _generated.identifier)(\"Function\"));\n\n    case \"object\":\n      return (0, _generated.genericTypeAnnotation)((0, _generated.identifier)(\"Object\"));\n\n    case \"symbol\":\n      return (0, _generated.genericTypeAnnotation)((0, _generated.identifier)(\"Symbol\"));\n\n    case \"bigint\":\n      return (0, _generated.anyTypeAnnotation)();\n  }\n\n  throw new Error(\"Invalid typeof value: \" + type);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createFlowUnionType;\n\nvar _generated = require(\"../generated\");\n\nvar _removeTypeDuplicates = require(\"../../modifications/flow/removeTypeDuplicates\");\n\nfunction createFlowUnionType(types) {\n  const flattened = (0, _removeTypeDuplicates.default)(types);\n\n  if (flattened.length === 1) {\n    return flattened[0];\n  } else {\n    return (0, _generated.unionTypeAnnotation)(flattened);\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = removeTypeDuplicates;\n\nvar _generated = require(\"../../validators/generated\");\n\nfunction getQualifiedName(node) {\n  return (0, _generated.isIdentifier)(node) ? node.name : `${node.id.name}.${getQualifiedName(node.qualification)}`;\n}\n\nfunction removeTypeDuplicates(nodes) {\n  const generics = new Map();\n  const bases = new Map();\n  const typeGroups = new Set();\n  const types = [];\n\n  for (let i = 0; i < nodes.length; i++) {\n    const node = nodes[i];\n    if (!node) continue;\n\n    if (types.indexOf(node) >= 0) {\n      continue;\n    }\n\n    if ((0, _generated.isAnyTypeAnnotation)(node)) {\n      return [node];\n    }\n\n    if ((0, _generated.isFlowBaseAnnotation)(node)) {\n      bases.set(node.type, node);\n      continue;\n    }\n\n    if ((0, _generated.isUnionTypeAnnotation)(node)) {\n      if (!typeGroups.has(node.types)) {\n        nodes = nodes.concat(node.types);\n        typeGroups.add(node.types);\n      }\n\n      continue;\n    }\n\n    if ((0, _generated.isGenericTypeAnnotation)(node)) {\n      const name = getQualifiedName(node.id);\n\n      if (generics.has(name)) {\n        let existing = generics.get(name);\n\n        if (existing.typeParameters) {\n          if (node.typeParameters) {\n            existing.typeParameters.params = removeTypeDuplicates(existing.typeParameters.params.concat(node.typeParameters.params));\n          }\n        } else {\n          existing = node.typeParameters;\n        }\n      } else {\n        generics.set(name, node);\n      }\n\n      continue;\n    }\n\n    types.push(node);\n  }\n\n  for (const [, baseType] of bases) {\n    types.push(baseType);\n  }\n\n  for (const [, genericName] of generics) {\n    types.push(genericName);\n  }\n\n  return types;\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createTSUnionType;\n\nvar _generated = require(\"../generated\");\n\nvar _removeTypeDuplicates = require(\"../../modifications/typescript/removeTypeDuplicates\");\n\nvar _index = require(\"../../validators/generated/index\");\n\nfunction createTSUnionType(typeAnnotations) {\n  const types = typeAnnotations.map(type => {\n    return (0, _index.isTSTypeAnnotation)(type) ? type.typeAnnotation : type;\n  });\n  const flattened = (0, _removeTypeDuplicates.default)(types);\n\n  if (flattened.length === 1) {\n    return flattened[0];\n  } else {\n    return (0, _generated.tsUnionType)(flattened);\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = removeTypeDuplicates;\n\nvar _generated = require(\"../../validators/generated\");\n\nfunction getQualifiedName(node) {\n  return (0, _generated.isIdentifier)(node) ? node.name : `${node.right.name}.${getQualifiedName(node.left)}`;\n}\n\nfunction removeTypeDuplicates(nodes) {\n  const generics = new Map();\n  const bases = new Map();\n  const typeGroups = new Set();\n  const types = [];\n\n  for (let i = 0; i < nodes.length; i++) {\n    const node = nodes[i];\n    if (!node) continue;\n\n    if (types.indexOf(node) >= 0) {\n      continue;\n    }\n\n    if ((0, _generated.isTSAnyKeyword)(node)) {\n      return [node];\n    }\n\n    if ((0, _generated.isTSBaseType)(node)) {\n      bases.set(node.type, node);\n      continue;\n    }\n\n    if ((0, _generated.isTSUnionType)(node)) {\n      if (!typeGroups.has(node.types)) {\n        nodes.push(...node.types);\n        typeGroups.add(node.types);\n      }\n\n      continue;\n    }\n\n    if ((0, _generated.isTSTypeReference)(node) && node.typeParameters) {\n      const name = getQualifiedName(node.typeName);\n\n      if (generics.has(name)) {\n        let existing = generics.get(name);\n\n        if (existing.typeParameters) {\n          if (node.typeParameters) {\n            existing.typeParameters.params = removeTypeDuplicates(existing.typeParameters.params.concat(node.typeParameters.params));\n          }\n        } else {\n          existing = node.typeParameters;\n        }\n      } else {\n        generics.set(name, node);\n      }\n\n      continue;\n    }\n\n    types.push(node);\n  }\n\n  for (const [, baseType] of bases) {\n    types.push(baseType);\n  }\n\n  for (const [, genericName] of generics) {\n    types.push(genericName);\n  }\n\n  return types;\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"AnyTypeAnnotation\", {\n  enumerable: true,\n  get: function () {\n    return _index.anyTypeAnnotation;\n  }\n});\nObject.defineProperty(exports, \"ArgumentPlaceholder\", {\n  enumerable: true,\n  get: function () {\n    return _index.argumentPlaceholder;\n  }\n});\nObject.defineProperty(exports, \"ArrayExpression\", {\n  enumerable: true,\n  get: function () {\n    return _index.arrayExpression;\n  }\n});\nObject.defineProperty(exports, \"ArrayPattern\", {\n  enumerable: true,\n  get: function () {\n    return _index.arrayPattern;\n  }\n});\nObject.defineProperty(exports, \"ArrayTypeAnnotation\", {\n  enumerable: true,\n  get: function () {\n    return _index.arrayTypeAnnotation;\n  }\n});\nObject.defineProperty(exports, \"ArrowFunctionExpression\", {\n  enumerable: true,\n  get: function () {\n    return _index.arrowFunctionExpression;\n  }\n});\nObject.defineProperty(exports, \"AssignmentExpression\", {\n  enumerable: true,\n  get: function () {\n    return _index.assignmentExpression;\n  }\n});\nObject.defineProperty(exports, \"AssignmentPattern\", {\n  enumerable: true,\n  get: function () {\n    return _index.assignmentPattern;\n  }\n});\nObject.defineProperty(exports, \"AwaitExpression\", {\n  enumerable: true,\n  get: function () {\n    return _index.awaitExpression;\n  }\n});\nObject.defineProperty(exports, \"BigIntLiteral\", {\n  enumerable: true,\n  get: function () {\n    return _index.bigIntLiteral;\n  }\n});\nObject.defineProperty(exports, \"BinaryExpression\", {\n  enumerable: true,\n  get: function () {\n    return _index.binaryExpression;\n  }\n});\nObject.defineProperty(exports, \"BindExpression\", {\n  enumerable: true,\n  get: function () {\n    return _index.bindExpression;\n  }\n});\nObject.defineProperty(exports, \"BlockStatement\", {\n  enumerable: true,\n  get: function () {\n    return _index.blockStatement;\n  }\n});\nObject.defineProperty(exports, \"BooleanLiteral\", {\n  enumerable: true,\n  get: function () {\n    return _index.booleanLiteral;\n  }\n});\nObject.defineProperty(exports, \"BooleanLiteralTypeAnnotation\", {\n  enumerable: true,\n  get: function () {\n    return _index.booleanLiteralTypeAnnotation;\n  }\n});\nObject.defineProperty(exports, \"BooleanTypeAnnotation\", {\n  enumerable: true,\n  get: function () {\n    return _index.booleanTypeAnnotation;\n  }\n});\nObject.defineProperty(exports, \"BreakStatement\", {\n  enumerable: true,\n  get: function () {\n    return _index.breakStatement;\n  }\n});\nObject.defineProperty(exports, \"CallExpression\", {\n  enumerable: true,\n  get: function () {\n    return _index.callExpression;\n  }\n});\nObject.defineProperty(exports, \"CatchClause\", {\n  enumerable: true,\n  get: function () {\n    return _index.catchClause;\n  }\n});\nObject.defineProperty(exports, \"ClassAccessorProperty\", {\n  enumerable: true,\n  get: function () {\n    return _index.classAccessorProperty;\n  }\n});\nObject.defineProperty(exports, \"ClassBody\", {\n  enumerable: true,\n  get: function () {\n    return _index.classBody;\n  }\n});\nObject.defineProperty(exports, \"ClassDeclaration\", {\n  enumerable: true,\n  get: function () {\n    return _index.classDeclaration;\n  }\n});\nObject.defineProperty(exports, \"ClassExpression\", {\n  enumerable: true,\n  get: function () {\n    return _index.classExpression;\n  }\n});\nObject.defineProperty(exports, \"ClassImplements\", {\n  enumerable: true,\n  get: function () {\n    return _index.classImplements;\n  }\n});\nObject.defineProperty(exports, \"ClassMethod\", {\n  enumerable: true,\n  get: function () {\n    return _index.classMethod;\n  }\n});\nObject.defineProperty(exports, \"ClassPrivateMethod\", {\n  enumerable: true,\n  get: function () {\n    return _index.classPrivateMethod;\n  }\n});\nObject.defineProperty(exports, \"ClassPrivateProperty\", {\n  enumerable: true,\n  get: function () {\n    return _index.classPrivateProperty;\n  }\n});\nObject.defineProperty(exports, \"ClassProperty\", {\n  enumerable: true,\n  get: function () {\n    return _index.classProperty;\n  }\n});\nObject.defineProperty(exports, \"ConditionalExpression\", {\n  enumerable: true,\n  get: function () {\n    return _index.conditionalExpression;\n  }\n});\nObject.defineProperty(exports, \"ContinueStatement\", {\n  enumerable: true,\n  get: function () {\n    return _index.continueStatement;\n  }\n});\nObject.defineProperty(exports, \"DebuggerStatement\", {\n  enumerable: true,\n  get: function () {\n    return _index.debuggerStatement;\n  }\n});\nObject.defineProperty(exports, \"DecimalLiteral\", {\n  enumerable: true,\n  get: function () {\n    return _index.decimalLiteral;\n  }\n});\nObject.defineProperty(exports, \"DeclareClass\", {\n  enumerable: true,\n  get: function () {\n    return _index.declareClass;\n  }\n});\nObject.defineProperty(exports, \"DeclareExportAllDeclaration\", {\n  enumerable: true,\n  get: function () {\n    return _index.declareExportAllDeclaration;\n  }\n});\nObject.defineProperty(exports, \"DeclareExportDeclaration\", {\n  enumerable: true,\n  get: function () {\n    return _index.declareExportDeclaration;\n  }\n});\nObject.defineProperty(exports, \"DeclareFunction\", {\n  enumerable: true,\n  get: function () {\n    return _index.declareFunction;\n  }\n});\nObject.defineProperty(exports, \"DeclareInterface\", {\n  enumerable: true,\n  get: function () {\n    return _index.declareInterface;\n  }\n});\nObject.defineProperty(exports, \"DeclareModule\", {\n  enumerable: true,\n  get: function () {\n    return _index.declareModule;\n  }\n});\nObject.defineProperty(exports, \"DeclareModuleExports\", {\n  enumerable: true,\n  get: function () {\n    return _index.declareModuleExports;\n  }\n});\nObject.defineProperty(exports, \"DeclareOpaqueType\", {\n  enumerable: true,\n  get: function () {\n    return _index.declareOpaqueType;\n  }\n});\nObject.defineProperty(exports, \"DeclareTypeAlias\", {\n  enumerable: true,\n  get: function () {\n    return _index.declareTypeAlias;\n  }\n});\nObject.defineProperty(exports, \"DeclareVariable\", {\n  enumerable: true,\n  get: function () {\n    return _index.declareVariable;\n  }\n});\nObject.defineProperty(exports, \"DeclaredPredicate\", {\n  enumerable: true,\n  get: function () {\n    return _index.declaredPredicate;\n  }\n});\nObject.defineProperty(exports, \"Decorator\", {\n  enumerable: true,\n  get: function () {\n    return _index.decorator;\n  }\n});\nObject.defineProperty(exports, \"Directive\", {\n  enumerable: true,\n  get: function () {\n    return _index.directive;\n  }\n});\nObject.defineProperty(exports, \"DirectiveLiteral\", {\n  enumerable: true,\n  get: function () {\n    return _index.directiveLiteral;\n  }\n});\nObject.defineProperty(exports, \"DoExpression\", {\n  enumerable: true,\n  get: function () {\n    return _index.doExpression;\n  }\n});\nObject.defineProperty(exports, \"DoWhileStatement\", {\n  enumerable: true,\n  get: function () {\n    return _index.doWhileStatement;\n  }\n});\nObject.defineProperty(exports, \"EmptyStatement\", {\n  enumerable: true,\n  get: function () {\n    return _index.emptyStatement;\n  }\n});\nObject.defineProperty(exports, \"EmptyTypeAnnotation\", {\n  enumerable: true,\n  get: function () {\n    return _index.emptyTypeAnnotation;\n  }\n});\nObject.defineProperty(exports, \"EnumBooleanBody\", {\n  enumerable: true,\n  get: function () {\n    return _index.enumBooleanBody;\n  }\n});\nObject.defineProperty(exports, \"EnumBooleanMember\", {\n  enumerable: true,\n  get: function () {\n    return _index.enumBooleanMember;\n  }\n});\nObject.defineProperty(exports, \"EnumDeclaration\", {\n  enumerable: true,\n  get: function () {\n    return _index.enumDeclaration;\n  }\n});\nObject.defineProperty(exports, \"EnumDefaultedMember\", {\n  enumerable: true,\n  get: function () {\n    return _index.enumDefaultedMember;\n  }\n});\nObject.defineProperty(exports, \"EnumNumberBody\", {\n  enumerable: true,\n  get: function () {\n    return _index.enumNumberBody;\n  }\n});\nObject.defineProperty(exports, \"EnumNumberMember\", {\n  enumerable: true,\n  get: function () {\n    return _index.enumNumberMember;\n  }\n});\nObject.defineProperty(exports, \"EnumStringBody\", {\n  enumerable: true,\n  get: function () {\n    return _index.enumStringBody;\n  }\n});\nObject.defineProperty(exports, \"EnumStringMember\", {\n  enumerable: true,\n  get: function () {\n    return _index.enumStringMember;\n  }\n});\nObject.defineProperty(exports, \"EnumSymbolBody\", {\n  enumerable: true,\n  get: function () {\n    return _index.enumSymbolBody;\n  }\n});\nObject.defineProperty(exports, \"ExistsTypeAnnotation\", {\n  enumerable: true,\n  get: function () {\n    return _index.existsTypeAnnotation;\n  }\n});\nObject.defineProperty(exports, \"ExportAllDeclaration\", {\n  enumerable: true,\n  get: function () {\n    return _index.exportAllDeclaration;\n  }\n});\nObject.defineProperty(exports, \"ExportDefaultDeclaration\", {\n  enumerable: true,\n  get: function () {\n    return _index.exportDefaultDeclaration;\n  }\n});\nObject.defineProperty(exports, \"ExportDefaultSpecifier\", {\n  enumerable: true,\n  get: function () {\n    return _index.exportDefaultSpecifier;\n  }\n});\nObject.defineProperty(exports, \"ExportNamedDeclaration\", {\n  enumerable: true,\n  get: function () {\n    return _index.exportNamedDeclaration;\n  }\n});\nObject.defineProperty(exports, \"ExportNamespaceSpecifier\", {\n  enumerable: true,\n  get: function () {\n    return _index.exportNamespaceSpecifier;\n  }\n});\nObject.defineProperty(exports, \"ExportSpecifier\", {\n  enumerable: true,\n  get: function () {\n    return _index.exportSpecifier;\n  }\n});\nObject.defineProperty(exports, \"ExpressionStatement\", {\n  enumerable: true,\n  get: function () {\n    return _index.expressionStatement;\n  }\n});\nObject.defineProperty(exports, \"File\", {\n  enumerable: true,\n  get: function () {\n    return _index.file;\n  }\n});\nObject.defineProperty(exports, \"ForInStatement\", {\n  enumerable: true,\n  get: function () {\n    return _index.forInStatement;\n  }\n});\nObject.defineProperty(exports, \"ForOfStatement\", {\n  enumerable: true,\n  get: function () {\n    return _index.forOfStatement;\n  }\n});\nObject.defineProperty(exports, \"ForStatement\", {\n  enumerable: true,\n  get: function () {\n    return _index.forStatement;\n  }\n});\nObject.defineProperty(exports, \"FunctionDeclaration\", {\n  enumerable: true,\n  get: function () {\n    return _index.functionDeclaration;\n  }\n});\nObject.defineProperty(exports, \"FunctionExpression\", {\n  enumerable: true,\n  get: function () {\n    return _index.functionExpression;\n  }\n});\nObject.defineProperty(exports, \"FunctionTypeAnnotation\", {\n  enumerable: true,\n  get: function () {\n    return _index.functionTypeAnnotation;\n  }\n});\nObject.defineProperty(exports, \"FunctionTypeParam\", {\n  enumerable: true,\n  get: function () {\n    return _index.functionTypeParam;\n  }\n});\nObject.defineProperty(exports, \"GenericTypeAnnotation\", {\n  enumerable: true,\n  get: function () {\n    return _index.genericTypeAnnotation;\n  }\n});\nObject.defineProperty(exports, \"Identifier\", {\n  enumerable: true,\n  get: function () {\n    return _index.identifier;\n  }\n});\nObject.defineProperty(exports, \"IfStatement\", {\n  enumerable: true,\n  get: function () {\n    return _index.ifStatement;\n  }\n});\nObject.defineProperty(exports, \"Import\", {\n  enumerable: true,\n  get: function () {\n    return _index.import;\n  }\n});\nObject.defineProperty(exports, \"ImportAttribute\", {\n  enumerable: true,\n  get: function () {\n    return _index.importAttribute;\n  }\n});\nObject.defineProperty(exports, \"ImportDeclaration\", {\n  enumerable: true,\n  get: function () {\n    return _index.importDeclaration;\n  }\n});\nObject.defineProperty(exports, \"ImportDefaultSpecifier\", {\n  enumerable: true,\n  get: function () {\n    return _index.importDefaultSpecifier;\n  }\n});\nObject.defineProperty(exports, \"ImportNamespaceSpecifier\", {\n  enumerable: true,\n  get: function () {\n    return _index.importNamespaceSpecifier;\n  }\n});\nObject.defineProperty(exports, \"ImportSpecifier\", {\n  enumerable: true,\n  get: function () {\n    return _index.importSpecifier;\n  }\n});\nObject.defineProperty(exports, \"IndexedAccessType\", {\n  enumerable: true,\n  get: function () {\n    return _index.indexedAccessType;\n  }\n});\nObject.defineProperty(exports, \"InferredPredicate\", {\n  enumerable: true,\n  get: function () {\n    return _index.inferredPredicate;\n  }\n});\nObject.defineProperty(exports, \"InterfaceDeclaration\", {\n  enumerable: true,\n  get: function () {\n    return _index.interfaceDeclaration;\n  }\n});\nObject.defineProperty(exports, \"InterfaceExtends\", {\n  enumerable: true,\n  get: function () {\n    return _index.interfaceExtends;\n  }\n});\nObject.defineProperty(exports, \"InterfaceTypeAnnotation\", {\n  enumerable: true,\n  get: function () {\n    return _index.interfaceTypeAnnotation;\n  }\n});\nObject.defineProperty(exports, \"InterpreterDirective\", {\n  enumerable: true,\n  get: function () {\n    return _index.interpreterDirective;\n  }\n});\nObject.defineProperty(exports, \"IntersectionTypeAnnotation\", {\n  enumerable: true,\n  get: function () {\n    return _index.intersectionTypeAnnotation;\n  }\n});\nObject.defineProperty(exports, \"JSXAttribute\", {\n  enumerable: true,\n  get: function () {\n    return _index.jsxAttribute;\n  }\n});\nObject.defineProperty(exports, \"JSXClosingElement\", {\n  enumerable: true,\n  get: function () {\n    return _index.jsxClosingElement;\n  }\n});\nObject.defineProperty(exports, \"JSXClosingFragment\", {\n  enumerable: true,\n  get: function () {\n    return _index.jsxClosingFragment;\n  }\n});\nObject.defineProperty(exports, \"JSXElement\", {\n  enumerable: true,\n  get: function () {\n    return _index.jsxElement;\n  }\n});\nObject.defineProperty(exports, \"JSXEmptyExpression\", {\n  enumerable: true,\n  get: function () {\n    return _index.jsxEmptyExpression;\n  }\n});\nObject.defineProperty(exports, \"JSXExpressionContainer\", {\n  enumerable: true,\n  get: function () {\n    return _index.jsxExpressionContainer;\n  }\n});\nObject.defineProperty(exports, \"JSXFragment\", {\n  enumerable: true,\n  get: function () {\n    return _index.jsxFragment;\n  }\n});\nObject.defineProperty(exports, \"JSXIdentifier\", {\n  enumerable: true,\n  get: function () {\n    return _index.jsxIdentifier;\n  }\n});\nObject.defineProperty(exports, \"JSXMemberExpression\", {\n  enumerable: true,\n  get: function () {\n    return _index.jsxMemberExpression;\n  }\n});\nObject.defineProperty(exports, \"JSXNamespacedName\", {\n  enumerable: true,\n  get: function () {\n    return _index.jsxNamespacedName;\n  }\n});\nObject.defineProperty(exports, \"JSXOpeningElement\", {\n  enumerable: true,\n  get: function () {\n    return _index.jsxOpeningElement;\n  }\n});\nObject.defineProperty(exports, \"JSXOpeningFragment\", {\n  enumerable: true,\n  get: function () {\n    return _index.jsxOpeningFragment;\n  }\n});\nObject.defineProperty(exports, \"JSXSpreadAttribute\", {\n  enumerable: true,\n  get: function () {\n    return _index.jsxSpreadAttribute;\n  }\n});\nObject.defineProperty(exports, \"JSXSpreadChild\", {\n  enumerable: true,\n  get: function () {\n    return _index.jsxSpreadChild;\n  }\n});\nObject.defineProperty(exports, \"JSXText\", {\n  enumerable: true,\n  get: function () {\n    return _index.jsxText;\n  }\n});\nObject.defineProperty(exports, \"LabeledStatement\", {\n  enumerable: true,\n  get: function () {\n    return _index.labeledStatement;\n  }\n});\nObject.defineProperty(exports, \"LogicalExpression\", {\n  enumerable: true,\n  get: function () {\n    return _index.logicalExpression;\n  }\n});\nObject.defineProperty(exports, \"MemberExpression\", {\n  enumerable: true,\n  get: function () {\n    return _index.memberExpression;\n  }\n});\nObject.defineProperty(exports, \"MetaProperty\", {\n  enumerable: true,\n  get: function () {\n    return _index.metaProperty;\n  }\n});\nObject.defineProperty(exports, \"MixedTypeAnnotation\", {\n  enumerable: true,\n  get: function () {\n    return _index.mixedTypeAnnotation;\n  }\n});\nObject.defineProperty(exports, \"ModuleExpression\", {\n  enumerable: true,\n  get: function () {\n    return _index.moduleExpression;\n  }\n});\nObject.defineProperty(exports, \"NewExpression\", {\n  enumerable: true,\n  get: function () {\n    return _index.newExpression;\n  }\n});\nObject.defineProperty(exports, \"Noop\", {\n  enumerable: true,\n  get: function () {\n    return _index.noop;\n  }\n});\nObject.defineProperty(exports, \"NullLiteral\", {\n  enumerable: true,\n  get: function () {\n    return _index.nullLiteral;\n  }\n});\nObject.defineProperty(exports, \"NullLiteralTypeAnnotation\", {\n  enumerable: true,\n  get: function () {\n    return _index.nullLiteralTypeAnnotation;\n  }\n});\nObject.defineProperty(exports, \"NullableTypeAnnotation\", {\n  enumerable: true,\n  get: function () {\n    return _index.nullableTypeAnnotation;\n  }\n});\nObject.defineProperty(exports, \"NumberLiteral\", {\n  enumerable: true,\n  get: function () {\n    return _index.numberLiteral;\n  }\n});\nObject.defineProperty(exports, \"NumberLiteralTypeAnnotation\", {\n  enumerable: true,\n  get: function () {\n    return _index.numberLiteralTypeAnnotation;\n  }\n});\nObject.defineProperty(exports, \"NumberTypeAnnotation\", {\n  enumerable: true,\n  get: function () {\n    return _index.numberTypeAnnotation;\n  }\n});\nObject.defineProperty(exports, \"NumericLiteral\", {\n  enumerable: true,\n  get: function () {\n    return _index.numericLiteral;\n  }\n});\nObject.defineProperty(exports, \"ObjectExpression\", {\n  enumerable: true,\n  get: function () {\n    return _index.objectExpression;\n  }\n});\nObject.defineProperty(exports, \"ObjectMethod\", {\n  enumerable: true,\n  get: function () {\n    return _index.objectMethod;\n  }\n});\nObject.defineProperty(exports, \"ObjectPattern\", {\n  enumerable: true,\n  get: function () {\n    return _index.objectPattern;\n  }\n});\nObject.defineProperty(exports, \"ObjectProperty\", {\n  enumerable: true,\n  get: function () {\n    return _index.objectProperty;\n  }\n});\nObject.defineProperty(exports, \"ObjectTypeAnnotation\", {\n  enumerable: true,\n  get: function () {\n    return _index.objectTypeAnnotation;\n  }\n});\nObject.defineProperty(exports, \"ObjectTypeCallProperty\", {\n  enumerable: true,\n  get: function () {\n    return _index.objectTypeCallProperty;\n  }\n});\nObject.defineProperty(exports, \"ObjectTypeIndexer\", {\n  enumerable: true,\n  get: function () {\n    return _index.objectTypeIndexer;\n  }\n});\nObject.defineProperty(exports, \"ObjectTypeInternalSlot\", {\n  enumerable: true,\n  get: function () {\n    return _index.objectTypeInternalSlot;\n  }\n});\nObject.defineProperty(exports, \"ObjectTypeProperty\", {\n  enumerable: true,\n  get: function () {\n    return _index.objectTypeProperty;\n  }\n});\nObject.defineProperty(exports, \"ObjectTypeSpreadProperty\", {\n  enumerable: true,\n  get: function () {\n    return _index.objectTypeSpreadProperty;\n  }\n});\nObject.defineProperty(exports, \"OpaqueType\", {\n  enumerable: true,\n  get: function () {\n    return _index.opaqueType;\n  }\n});\nObject.defineProperty(exports, \"OptionalCallExpression\", {\n  enumerable: true,\n  get: function () {\n    return _index.optionalCallExpression;\n  }\n});\nObject.defineProperty(exports, \"OptionalIndexedAccessType\", {\n  enumerable: true,\n  get: function () {\n    return _index.optionalIndexedAccessType;\n  }\n});\nObject.defineProperty(exports, \"OptionalMemberExpression\", {\n  enumerable: true,\n  get: function () {\n    return _index.optionalMemberExpression;\n  }\n});\nObject.defineProperty(exports, \"ParenthesizedExpression\", {\n  enumerable: true,\n  get: function () {\n    return _index.parenthesizedExpression;\n  }\n});\nObject.defineProperty(exports, \"PipelineBareFunction\", {\n  enumerable: true,\n  get: function () {\n    return _index.pipelineBareFunction;\n  }\n});\nObject.defineProperty(exports, \"PipelinePrimaryTopicReference\", {\n  enumerable: true,\n  get: function () {\n    return _index.pipelinePrimaryTopicReference;\n  }\n});\nObject.defineProperty(exports, \"PipelineTopicExpression\", {\n  enumerable: true,\n  get: function () {\n    return _index.pipelineTopicExpression;\n  }\n});\nObject.defineProperty(exports, \"Placeholder\", {\n  enumerable: true,\n  get: function () {\n    return _index.placeholder;\n  }\n});\nObject.defineProperty(exports, \"PrivateName\", {\n  enumerable: true,\n  get: function () {\n    return _index.privateName;\n  }\n});\nObject.defineProperty(exports, \"Program\", {\n  enumerable: true,\n  get: function () {\n    return _index.program;\n  }\n});\nObject.defineProperty(exports, \"QualifiedTypeIdentifier\", {\n  enumerable: true,\n  get: function () {\n    return _index.qualifiedTypeIdentifier;\n  }\n});\nObject.defineProperty(exports, \"RecordExpression\", {\n  enumerable: true,\n  get: function () {\n    return _index.recordExpression;\n  }\n});\nObject.defineProperty(exports, \"RegExpLiteral\", {\n  enumerable: true,\n  get: function () {\n    return _index.regExpLiteral;\n  }\n});\nObject.defineProperty(exports, \"RegexLiteral\", {\n  enumerable: true,\n  get: function () {\n    return _index.regexLiteral;\n  }\n});\nObject.defineProperty(exports, \"RestElement\", {\n  enumerable: true,\n  get: function () {\n    return _index.restElement;\n  }\n});\nObject.defineProperty(exports, \"RestProperty\", {\n  enumerable: true,\n  get: function () {\n    return _index.restProperty;\n  }\n});\nObject.defineProperty(exports, \"ReturnStatement\", {\n  enumerable: true,\n  get: function () {\n    return _index.returnStatement;\n  }\n});\nObject.defineProperty(exports, \"SequenceExpression\", {\n  enumerable: true,\n  get: function () {\n    return _index.sequenceExpression;\n  }\n});\nObject.defineProperty(exports, \"SpreadElement\", {\n  enumerable: true,\n  get: function () {\n    return _index.spreadElement;\n  }\n});\nObject.defineProperty(exports, \"SpreadProperty\", {\n  enumerable: true,\n  get: function () {\n    return _index.spreadProperty;\n  }\n});\nObject.defineProperty(exports, \"StaticBlock\", {\n  enumerable: true,\n  get: function () {\n    return _index.staticBlock;\n  }\n});\nObject.defineProperty(exports, \"StringLiteral\", {\n  enumerable: true,\n  get: function () {\n    return _index.stringLiteral;\n  }\n});\nObject.defineProperty(exports, \"StringLiteralTypeAnnotation\", {\n  enumerable: true,\n  get: function () {\n    return _index.stringLiteralTypeAnnotation;\n  }\n});\nObject.defineProperty(exports, \"StringTypeAnnotation\", {\n  enumerable: true,\n  get: function () {\n    return _index.stringTypeAnnotation;\n  }\n});\nObject.defineProperty(exports, \"Super\", {\n  enumerable: true,\n  get: function () {\n    return _index.super;\n  }\n});\nObject.defineProperty(exports, \"SwitchCase\", {\n  enumerable: true,\n  get: function () {\n    return _index.switchCase;\n  }\n});\nObject.defineProperty(exports, \"SwitchStatement\", {\n  enumerable: true,\n  get: function () {\n    return _index.switchStatement;\n  }\n});\nObject.defineProperty(exports, \"SymbolTypeAnnotation\", {\n  enumerable: true,\n  get: function () {\n    return _index.symbolTypeAnnotation;\n  }\n});\nObject.defineProperty(exports, \"TSAnyKeyword\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsAnyKeyword;\n  }\n});\nObject.defineProperty(exports, \"TSArrayType\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsArrayType;\n  }\n});\nObject.defineProperty(exports, \"TSAsExpression\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsAsExpression;\n  }\n});\nObject.defineProperty(exports, \"TSBigIntKeyword\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsBigIntKeyword;\n  }\n});\nObject.defineProperty(exports, \"TSBooleanKeyword\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsBooleanKeyword;\n  }\n});\nObject.defineProperty(exports, \"TSCallSignatureDeclaration\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsCallSignatureDeclaration;\n  }\n});\nObject.defineProperty(exports, \"TSConditionalType\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsConditionalType;\n  }\n});\nObject.defineProperty(exports, \"TSConstructSignatureDeclaration\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsConstructSignatureDeclaration;\n  }\n});\nObject.defineProperty(exports, \"TSConstructorType\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsConstructorType;\n  }\n});\nObject.defineProperty(exports, \"TSDeclareFunction\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsDeclareFunction;\n  }\n});\nObject.defineProperty(exports, \"TSDeclareMethod\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsDeclareMethod;\n  }\n});\nObject.defineProperty(exports, \"TSEnumDeclaration\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsEnumDeclaration;\n  }\n});\nObject.defineProperty(exports, \"TSEnumMember\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsEnumMember;\n  }\n});\nObject.defineProperty(exports, \"TSExportAssignment\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsExportAssignment;\n  }\n});\nObject.defineProperty(exports, \"TSExpressionWithTypeArguments\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsExpressionWithTypeArguments;\n  }\n});\nObject.defineProperty(exports, \"TSExternalModuleReference\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsExternalModuleReference;\n  }\n});\nObject.defineProperty(exports, \"TSFunctionType\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsFunctionType;\n  }\n});\nObject.defineProperty(exports, \"TSImportEqualsDeclaration\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsImportEqualsDeclaration;\n  }\n});\nObject.defineProperty(exports, \"TSImportType\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsImportType;\n  }\n});\nObject.defineProperty(exports, \"TSIndexSignature\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsIndexSignature;\n  }\n});\nObject.defineProperty(exports, \"TSIndexedAccessType\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsIndexedAccessType;\n  }\n});\nObject.defineProperty(exports, \"TSInferType\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsInferType;\n  }\n});\nObject.defineProperty(exports, \"TSInstantiationExpression\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsInstantiationExpression;\n  }\n});\nObject.defineProperty(exports, \"TSInterfaceBody\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsInterfaceBody;\n  }\n});\nObject.defineProperty(exports, \"TSInterfaceDeclaration\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsInterfaceDeclaration;\n  }\n});\nObject.defineProperty(exports, \"TSIntersectionType\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsIntersectionType;\n  }\n});\nObject.defineProperty(exports, \"TSIntrinsicKeyword\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsIntrinsicKeyword;\n  }\n});\nObject.defineProperty(exports, \"TSLiteralType\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsLiteralType;\n  }\n});\nObject.defineProperty(exports, \"TSMappedType\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsMappedType;\n  }\n});\nObject.defineProperty(exports, \"TSMethodSignature\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsMethodSignature;\n  }\n});\nObject.defineProperty(exports, \"TSModuleBlock\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsModuleBlock;\n  }\n});\nObject.defineProperty(exports, \"TSModuleDeclaration\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsModuleDeclaration;\n  }\n});\nObject.defineProperty(exports, \"TSNamedTupleMember\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsNamedTupleMember;\n  }\n});\nObject.defineProperty(exports, \"TSNamespaceExportDeclaration\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsNamespaceExportDeclaration;\n  }\n});\nObject.defineProperty(exports, \"TSNeverKeyword\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsNeverKeyword;\n  }\n});\nObject.defineProperty(exports, \"TSNonNullExpression\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsNonNullExpression;\n  }\n});\nObject.defineProperty(exports, \"TSNullKeyword\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsNullKeyword;\n  }\n});\nObject.defineProperty(exports, \"TSNumberKeyword\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsNumberKeyword;\n  }\n});\nObject.defineProperty(exports, \"TSObjectKeyword\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsObjectKeyword;\n  }\n});\nObject.defineProperty(exports, \"TSOptionalType\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsOptionalType;\n  }\n});\nObject.defineProperty(exports, \"TSParameterProperty\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsParameterProperty;\n  }\n});\nObject.defineProperty(exports, \"TSParenthesizedType\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsParenthesizedType;\n  }\n});\nObject.defineProperty(exports, \"TSPropertySignature\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsPropertySignature;\n  }\n});\nObject.defineProperty(exports, \"TSQualifiedName\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsQualifiedName;\n  }\n});\nObject.defineProperty(exports, \"TSRestType\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsRestType;\n  }\n});\nObject.defineProperty(exports, \"TSStringKeyword\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsStringKeyword;\n  }\n});\nObject.defineProperty(exports, \"TSSymbolKeyword\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsSymbolKeyword;\n  }\n});\nObject.defineProperty(exports, \"TSThisType\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsThisType;\n  }\n});\nObject.defineProperty(exports, \"TSTupleType\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsTupleType;\n  }\n});\nObject.defineProperty(exports, \"TSTypeAliasDeclaration\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsTypeAliasDeclaration;\n  }\n});\nObject.defineProperty(exports, \"TSTypeAnnotation\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsTypeAnnotation;\n  }\n});\nObject.defineProperty(exports, \"TSTypeAssertion\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsTypeAssertion;\n  }\n});\nObject.defineProperty(exports, \"TSTypeLiteral\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsTypeLiteral;\n  }\n});\nObject.defineProperty(exports, \"TSTypeOperator\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsTypeOperator;\n  }\n});\nObject.defineProperty(exports, \"TSTypeParameter\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsTypeParameter;\n  }\n});\nObject.defineProperty(exports, \"TSTypeParameterDeclaration\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsTypeParameterDeclaration;\n  }\n});\nObject.defineProperty(exports, \"TSTypeParameterInstantiation\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsTypeParameterInstantiation;\n  }\n});\nObject.defineProperty(exports, \"TSTypePredicate\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsTypePredicate;\n  }\n});\nObject.defineProperty(exports, \"TSTypeQuery\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsTypeQuery;\n  }\n});\nObject.defineProperty(exports, \"TSTypeReference\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsTypeReference;\n  }\n});\nObject.defineProperty(exports, \"TSUndefinedKeyword\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsUndefinedKeyword;\n  }\n});\nObject.defineProperty(exports, \"TSUnionType\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsUnionType;\n  }\n});\nObject.defineProperty(exports, \"TSUnknownKeyword\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsUnknownKeyword;\n  }\n});\nObject.defineProperty(exports, \"TSVoidKeyword\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsVoidKeyword;\n  }\n});\nObject.defineProperty(exports, \"TaggedTemplateExpression\", {\n  enumerable: true,\n  get: function () {\n    return _index.taggedTemplateExpression;\n  }\n});\nObject.defineProperty(exports, \"TemplateElement\", {\n  enumerable: true,\n  get: function () {\n    return _index.templateElement;\n  }\n});\nObject.defineProperty(exports, \"TemplateLiteral\", {\n  enumerable: true,\n  get: function () {\n    return _index.templateLiteral;\n  }\n});\nObject.defineProperty(exports, \"ThisExpression\", {\n  enumerable: true,\n  get: function () {\n    return _index.thisExpression;\n  }\n});\nObject.defineProperty(exports, \"ThisTypeAnnotation\", {\n  enumerable: true,\n  get: function () {\n    return _index.thisTypeAnnotation;\n  }\n});\nObject.defineProperty(exports, \"ThrowStatement\", {\n  enumerable: true,\n  get: function () {\n    return _index.throwStatement;\n  }\n});\nObject.defineProperty(exports, \"TopicReference\", {\n  enumerable: true,\n  get: function () {\n    return _index.topicReference;\n  }\n});\nObject.defineProperty(exports, \"TryStatement\", {\n  enumerable: true,\n  get: function () {\n    return _index.tryStatement;\n  }\n});\nObject.defineProperty(exports, \"TupleExpression\", {\n  enumerable: true,\n  get: function () {\n    return _index.tupleExpression;\n  }\n});\nObject.defineProperty(exports, \"TupleTypeAnnotation\", {\n  enumerable: true,\n  get: function () {\n    return _index.tupleTypeAnnotation;\n  }\n});\nObject.defineProperty(exports, \"TypeAlias\", {\n  enumerable: true,\n  get: function () {\n    return _index.typeAlias;\n  }\n});\nObject.defineProperty(exports, \"TypeAnnotation\", {\n  enumerable: true,\n  get: function () {\n    return _index.typeAnnotation;\n  }\n});\nObject.defineProperty(exports, \"TypeCastExpression\", {\n  enumerable: true,\n  get: function () {\n    return _index.typeCastExpression;\n  }\n});\nObject.defineProperty(exports, \"TypeParameter\", {\n  enumerable: true,\n  get: function () {\n    return _index.typeParameter;\n  }\n});\nObject.defineProperty(exports, \"TypeParameterDeclaration\", {\n  enumerable: true,\n  get: function () {\n    return _index.typeParameterDeclaration;\n  }\n});\nObject.defineProperty(exports, \"TypeParameterInstantiation\", {\n  enumerable: true,\n  get: function () {\n    return _index.typeParameterInstantiation;\n  }\n});\nObject.defineProperty(exports, \"TypeofTypeAnnotation\", {\n  enumerable: true,\n  get: function () {\n    return _index.typeofTypeAnnotation;\n  }\n});\nObject.defineProperty(exports, \"UnaryExpression\", {\n  enumerable: true,\n  get: function () {\n    return _index.unaryExpression;\n  }\n});\nObject.defineProperty(exports, \"UnionTypeAnnotation\", {\n  enumerable: true,\n  get: function () {\n    return _index.unionTypeAnnotation;\n  }\n});\nObject.defineProperty(exports, \"UpdateExpression\", {\n  enumerable: true,\n  get: function () {\n    return _index.updateExpression;\n  }\n});\nObject.defineProperty(exports, \"V8IntrinsicIdentifier\", {\n  enumerable: true,\n  get: function () {\n    return _index.v8IntrinsicIdentifier;\n  }\n});\nObject.defineProperty(exports, \"VariableDeclaration\", {\n  enumerable: true,\n  get: function () {\n    return _index.variableDeclaration;\n  }\n});\nObject.defineProperty(exports, \"VariableDeclarator\", {\n  enumerable: true,\n  get: function () {\n    return _index.variableDeclarator;\n  }\n});\nObject.defineProperty(exports, \"Variance\", {\n  enumerable: true,\n  get: function () {\n    return _index.variance;\n  }\n});\nObject.defineProperty(exports, \"VoidTypeAnnotation\", {\n  enumerable: true,\n  get: function () {\n    return _index.voidTypeAnnotation;\n  }\n});\nObject.defineProperty(exports, \"WhileStatement\", {\n  enumerable: true,\n  get: function () {\n    return _index.whileStatement;\n  }\n});\nObject.defineProperty(exports, \"WithStatement\", {\n  enumerable: true,\n  get: function () {\n    return _index.withStatement;\n  }\n});\nObject.defineProperty(exports, \"YieldExpression\", {\n  enumerable: true,\n  get: function () {\n    return _index.yieldExpression;\n  }\n});\n\nvar _index = require(\"./index\");","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = cloneNode;\n\nvar _definitions = require(\"../definitions\");\n\nvar _generated = require(\"../validators/generated\");\n\nconst has = Function.call.bind(Object.prototype.hasOwnProperty);\n\nfunction cloneIfNode(obj, deep, withoutLoc, commentsCache) {\n  if (obj && typeof obj.type === \"string\") {\n    return cloneNodeInternal(obj, deep, withoutLoc, commentsCache);\n  }\n\n  return obj;\n}\n\nfunction cloneIfNodeOrArray(obj, deep, withoutLoc, commentsCache) {\n  if (Array.isArray(obj)) {\n    return obj.map(node => cloneIfNode(node, deep, withoutLoc, commentsCache));\n  }\n\n  return cloneIfNode(obj, deep, withoutLoc, commentsCache);\n}\n\nfunction cloneNode(node, deep = true, withoutLoc = false) {\n  return cloneNodeInternal(node, deep, withoutLoc, new Map());\n}\n\nfunction cloneNodeInternal(node, deep = true, withoutLoc = false, commentsCache) {\n  if (!node) return node;\n  const {\n    type\n  } = node;\n  const newNode = {\n    type: node.type\n  };\n\n  if ((0, _generated.isIdentifier)(node)) {\n    newNode.name = node.name;\n\n    if (has(node, \"optional\") && typeof node.optional === \"boolean\") {\n      newNode.optional = node.optional;\n    }\n\n    if (has(node, \"typeAnnotation\")) {\n      newNode.typeAnnotation = deep ? cloneIfNodeOrArray(node.typeAnnotation, true, withoutLoc, commentsCache) : node.typeAnnotation;\n    }\n  } else if (!has(_definitions.NODE_FIELDS, type)) {\n    throw new Error(`Unknown node type: \"${type}\"`);\n  } else {\n    for (const field of Object.keys(_definitions.NODE_FIELDS[type])) {\n      if (has(node, field)) {\n        if (deep) {\n          newNode[field] = (0, _generated.isFile)(node) && field === \"comments\" ? maybeCloneComments(node.comments, deep, withoutLoc, commentsCache) : cloneIfNodeOrArray(node[field], true, withoutLoc, commentsCache);\n        } else {\n          newNode[field] = node[field];\n        }\n      }\n    }\n  }\n\n  if (has(node, \"loc\")) {\n    if (withoutLoc) {\n      newNode.loc = null;\n    } else {\n      newNode.loc = node.loc;\n    }\n  }\n\n  if (has(node, \"leadingComments\")) {\n    newNode.leadingComments = maybeCloneComments(node.leadingComments, deep, withoutLoc, commentsCache);\n  }\n\n  if (has(node, \"innerComments\")) {\n    newNode.innerComments = maybeCloneComments(node.innerComments, deep, withoutLoc, commentsCache);\n  }\n\n  if (has(node, \"trailingComments\")) {\n    newNode.trailingComments = maybeCloneComments(node.trailingComments, deep, withoutLoc, commentsCache);\n  }\n\n  if (has(node, \"extra\")) {\n    newNode.extra = Object.assign({}, node.extra);\n  }\n\n  return newNode;\n}\n\nfunction maybeCloneComments(comments, deep, withoutLoc, commentsCache) {\n  if (!comments || !deep) {\n    return comments;\n  }\n\n  return comments.map(comment => {\n    const cache = commentsCache.get(comment);\n    if (cache) return cache;\n    const {\n      type,\n      value,\n      loc\n    } = comment;\n    const ret = {\n      type,\n      value,\n      loc\n    };\n\n    if (withoutLoc) {\n      ret.loc = null;\n    }\n\n    commentsCache.set(comment, ret);\n    return ret;\n  });\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = clone;\n\nvar _cloneNode = require(\"./cloneNode\");\n\nfunction clone(node) {\n  return (0, _cloneNode.default)(node, false);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = cloneDeep;\n\nvar _cloneNode = require(\"./cloneNode\");\n\nfunction cloneDeep(node) {\n  return (0, _cloneNode.default)(node);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = cloneDeepWithoutLoc;\n\nvar _cloneNode = require(\"./cloneNode\");\n\nfunction cloneDeepWithoutLoc(node) {\n  return (0, _cloneNode.default)(node, true, true);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = cloneWithoutLoc;\n\nvar _cloneNode = require(\"./cloneNode\");\n\nfunction cloneWithoutLoc(node) {\n  return (0, _cloneNode.default)(node, false, true);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = addComment;\n\nvar _addComments = require(\"./addComments\");\n\nfunction addComment(node, type, content, line) {\n  return (0, _addComments.default)(node, type, [{\n    type: line ? \"CommentLine\" : \"CommentBlock\",\n    value: content\n  }]);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = addComments;\n\nfunction addComments(node, type, comments) {\n  if (!comments || !node) return node;\n  const key = `${type}Comments`;\n\n  if (node[key]) {\n    if (type === \"leading\") {\n      node[key] = comments.concat(node[key]);\n    } else {\n      node[key].push(...comments);\n    }\n  } else {\n    node[key] = comments;\n  }\n\n  return node;\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = inheritInnerComments;\n\nvar _inherit = require(\"../utils/inherit\");\n\nfunction inheritInnerComments(child, parent) {\n  (0, _inherit.default)(\"innerComments\", child, parent);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = inherit;\n\nfunction inherit(key, child, parent) {\n  if (child && parent) {\n    child[key] = Array.from(new Set([].concat(child[key], parent[key]).filter(Boolean)));\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = inheritLeadingComments;\n\nvar _inherit = require(\"../utils/inherit\");\n\nfunction inheritLeadingComments(child, parent) {\n  (0, _inherit.default)(\"leadingComments\", child, parent);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = inheritsComments;\n\nvar _inheritTrailingComments = require(\"./inheritTrailingComments\");\n\nvar _inheritLeadingComments = require(\"./inheritLeadingComments\");\n\nvar _inheritInnerComments = require(\"./inheritInnerComments\");\n\nfunction inheritsComments(child, parent) {\n  (0, _inheritTrailingComments.default)(child, parent);\n  (0, _inheritLeadingComments.default)(child, parent);\n  (0, _inheritInnerComments.default)(child, parent);\n  return child;\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = inheritTrailingComments;\n\nvar _inherit = require(\"../utils/inherit\");\n\nfunction inheritTrailingComments(child, parent) {\n  (0, _inherit.default)(\"trailingComments\", child, parent);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = removeComments;\n\nvar _constants = require(\"../constants\");\n\nfunction removeComments(node) {\n  _constants.COMMENT_KEYS.forEach(key => {\n    node[key] = null;\n  });\n\n  return node;\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WHILE_TYPES = exports.USERWHITESPACABLE_TYPES = exports.UNARYLIKE_TYPES = exports.TYPESCRIPT_TYPES = exports.TSTYPE_TYPES = exports.TSTYPEELEMENT_TYPES = exports.TSENTITYNAME_TYPES = exports.TSBASETYPE_TYPES = exports.TERMINATORLESS_TYPES = exports.STATEMENT_TYPES = exports.STANDARDIZED_TYPES = exports.SCOPABLE_TYPES = exports.PUREISH_TYPES = exports.PROPERTY_TYPES = exports.PRIVATE_TYPES = exports.PATTERN_TYPES = exports.PATTERNLIKE_TYPES = exports.OBJECTMEMBER_TYPES = exports.MODULESPECIFIER_TYPES = exports.MODULEDECLARATION_TYPES = exports.MISCELLANEOUS_TYPES = exports.METHOD_TYPES = exports.LVAL_TYPES = exports.LOOP_TYPES = exports.LITERAL_TYPES = exports.JSX_TYPES = exports.IMMUTABLE_TYPES = exports.FUNCTION_TYPES = exports.FUNCTIONPARENT_TYPES = exports.FOR_TYPES = exports.FORXSTATEMENT_TYPES = exports.FLOW_TYPES = exports.FLOWTYPE_TYPES = exports.FLOWPREDICATE_TYPES = exports.FLOWDECLARATION_TYPES = exports.FLOWBASEANNOTATION_TYPES = exports.EXPRESSION_TYPES = exports.EXPRESSIONWRAPPER_TYPES = exports.EXPORTDECLARATION_TYPES = exports.ENUMMEMBER_TYPES = exports.ENUMBODY_TYPES = exports.DECLARATION_TYPES = exports.CONDITIONAL_TYPES = exports.COMPLETIONSTATEMENT_TYPES = exports.CLASS_TYPES = exports.BLOCK_TYPES = exports.BLOCKPARENT_TYPES = exports.BINARY_TYPES = exports.ACCESSOR_TYPES = void 0;\n\nvar _definitions = require(\"../../definitions\");\n\nconst STANDARDIZED_TYPES = _definitions.FLIPPED_ALIAS_KEYS[\"Standardized\"];\nexports.STANDARDIZED_TYPES = STANDARDIZED_TYPES;\nconst EXPRESSION_TYPES = _definitions.FLIPPED_ALIAS_KEYS[\"Expression\"];\nexports.EXPRESSION_TYPES = EXPRESSION_TYPES;\nconst BINARY_TYPES = _definitions.FLIPPED_ALIAS_KEYS[\"Binary\"];\nexports.BINARY_TYPES = BINARY_TYPES;\nconst SCOPABLE_TYPES = _definitions.FLIPPED_ALIAS_KEYS[\"Scopable\"];\nexports.SCOPABLE_TYPES = SCOPABLE_TYPES;\nconst BLOCKPARENT_TYPES = _definitions.FLIPPED_ALIAS_KEYS[\"BlockParent\"];\nexports.BLOCKPARENT_TYPES = BLOCKPARENT_TYPES;\nconst BLOCK_TYPES = _definitions.FLIPPED_ALIAS_KEYS[\"Block\"];\nexports.BLOCK_TYPES = BLOCK_TYPES;\nconst STATEMENT_TYPES = _definitions.FLIPPED_ALIAS_KEYS[\"Statement\"];\nexports.STATEMENT_TYPES = STATEMENT_TYPES;\nconst TERMINATORLESS_TYPES = _definitions.FLIPPED_ALIAS_KEYS[\"Terminatorless\"];\nexports.TERMINATORLESS_TYPES = TERMINATORLESS_TYPES;\nconst COMPLETIONSTATEMENT_TYPES = _definitions.FLIPPED_ALIAS_KEYS[\"CompletionStatement\"];\nexports.COMPLETIONSTATEMENT_TYPES = COMPLETIONSTATEMENT_TYPES;\nconst CONDITIONAL_TYPES = _definitions.FLIPPED_ALIAS_KEYS[\"Conditional\"];\nexports.CONDITIONAL_TYPES = CONDITIONAL_TYPES;\nconst LOOP_TYPES = _definitions.FLIPPED_ALIAS_KEYS[\"Loop\"];\nexports.LOOP_TYPES = LOOP_TYPES;\nconst WHILE_TYPES = _definitions.FLIPPED_ALIAS_KEYS[\"While\"];\nexports.WHILE_TYPES = WHILE_TYPES;\nconst EXPRESSIONWRAPPER_TYPES = _definitions.FLIPPED_ALIAS_KEYS[\"ExpressionWrapper\"];\nexports.EXPRESSIONWRAPPER_TYPES = EXPRESSIONWRAPPER_TYPES;\nconst FOR_TYPES = _definitions.FLIPPED_ALIAS_KEYS[\"For\"];\nexports.FOR_TYPES = FOR_TYPES;\nconst FORXSTATEMENT_TYPES = _definitions.FLIPPED_ALIAS_KEYS[\"ForXStatement\"];\nexports.FORXSTATEMENT_TYPES = FORXSTATEMENT_TYPES;\nconst FUNCTION_TYPES = _definitions.FLIPPED_ALIAS_KEYS[\"Function\"];\nexports.FUNCTION_TYPES = FUNCTION_TYPES;\nconst FUNCTIONPARENT_TYPES = _definitions.FLIPPED_ALIAS_KEYS[\"FunctionParent\"];\nexports.FUNCTIONPARENT_TYPES = FUNCTIONPARENT_TYPES;\nconst PUREISH_TYPES = _definitions.FLIPPED_ALIAS_KEYS[\"Pureish\"];\nexports.PUREISH_TYPES = PUREISH_TYPES;\nconst DECLARATION_TYPES = _definitions.FLIPPED_ALIAS_KEYS[\"Declaration\"];\nexports.DECLARATION_TYPES = DECLARATION_TYPES;\nconst PATTERNLIKE_TYPES = _definitions.FLIPPED_ALIAS_KEYS[\"PatternLike\"];\nexports.PATTERNLIKE_TYPES = PATTERNLIKE_TYPES;\nconst LVAL_TYPES = _definitions.FLIPPED_ALIAS_KEYS[\"LVal\"];\nexports.LVAL_TYPES = LVAL_TYPES;\nconst TSENTITYNAME_TYPES = _definitions.FLIPPED_ALIAS_KEYS[\"TSEntityName\"];\nexports.TSENTITYNAME_TYPES = TSENTITYNAME_TYPES;\nconst LITERAL_TYPES = _definitions.FLIPPED_ALIAS_KEYS[\"Literal\"];\nexports.LITERAL_TYPES = LITERAL_TYPES;\nconst IMMUTABLE_TYPES = _definitions.FLIPPED_ALIAS_KEYS[\"Immutable\"];\nexports.IMMUTABLE_TYPES = IMMUTABLE_TYPES;\nconst USERWHITESPACABLE_TYPES = _definitions.FLIPPED_ALIAS_KEYS[\"UserWhitespacable\"];\nexports.USERWHITESPACABLE_TYPES = USERWHITESPACABLE_TYPES;\nconst METHOD_TYPES = _definitions.FLIPPED_ALIAS_KEYS[\"Method\"];\nexports.METHOD_TYPES = METHOD_TYPES;\nconst OBJECTMEMBER_TYPES = _definitions.FLIPPED_ALIAS_KEYS[\"ObjectMember\"];\nexports.OBJECTMEMBER_TYPES = OBJECTMEMBER_TYPES;\nconst PROPERTY_TYPES = _definitions.FLIPPED_ALIAS_KEYS[\"Property\"];\nexports.PROPERTY_TYPES = PROPERTY_TYPES;\nconst UNARYLIKE_TYPES = _definitions.FLIPPED_ALIAS_KEYS[\"UnaryLike\"];\nexports.UNARYLIKE_TYPES = UNARYLIKE_TYPES;\nconst PATTERN_TYPES = _definitions.FLIPPED_ALIAS_KEYS[\"Pattern\"];\nexports.PATTERN_TYPES = PATTERN_TYPES;\nconst CLASS_TYPES = _definitions.FLIPPED_ALIAS_KEYS[\"Class\"];\nexports.CLASS_TYPES = CLASS_TYPES;\nconst MODULEDECLARATION_TYPES = _definitions.FLIPPED_ALIAS_KEYS[\"ModuleDeclaration\"];\nexports.MODULEDECLARATION_TYPES = MODULEDECLARATION_TYPES;\nconst EXPORTDECLARATION_TYPES = _definitions.FLIPPED_ALIAS_KEYS[\"ExportDeclaration\"];\nexports.EXPORTDECLARATION_TYPES = EXPORTDECLARATION_TYPES;\nconst MODULESPECIFIER_TYPES = _definitions.FLIPPED_ALIAS_KEYS[\"ModuleSpecifier\"];\nexports.MODULESPECIFIER_TYPES = MODULESPECIFIER_TYPES;\nconst ACCESSOR_TYPES = _definitions.FLIPPED_ALIAS_KEYS[\"Accessor\"];\nexports.ACCESSOR_TYPES = ACCESSOR_TYPES;\nconst PRIVATE_TYPES = _definitions.FLIPPED_ALIAS_KEYS[\"Private\"];\nexports.PRIVATE_TYPES = PRIVATE_TYPES;\nconst FLOW_TYPES = _definitions.FLIPPED_ALIAS_KEYS[\"Flow\"];\nexports.FLOW_TYPES = FLOW_TYPES;\nconst FLOWTYPE_TYPES = _definitions.FLIPPED_ALIAS_KEYS[\"FlowType\"];\nexports.FLOWTYPE_TYPES = FLOWTYPE_TYPES;\nconst FLOWBASEANNOTATION_TYPES = _definitions.FLIPPED_ALIAS_KEYS[\"FlowBaseAnnotation\"];\nexports.FLOWBASEANNOTATION_TYPES = FLOWBASEANNOTATION_TYPES;\nconst FLOWDECLARATION_TYPES = _definitions.FLIPPED_ALIAS_KEYS[\"FlowDeclaration\"];\nexports.FLOWDECLARATION_TYPES = FLOWDECLARATION_TYPES;\nconst FLOWPREDICATE_TYPES = _definitions.FLIPPED_ALIAS_KEYS[\"FlowPredicate\"];\nexports.FLOWPREDICATE_TYPES = FLOWPREDICATE_TYPES;\nconst ENUMBODY_TYPES = _definitions.FLIPPED_ALIAS_KEYS[\"EnumBody\"];\nexports.ENUMBODY_TYPES = ENUMBODY_TYPES;\nconst ENUMMEMBER_TYPES = _definitions.FLIPPED_ALIAS_KEYS[\"EnumMember\"];\nexports.ENUMMEMBER_TYPES = ENUMMEMBER_TYPES;\nconst JSX_TYPES = _definitions.FLIPPED_ALIAS_KEYS[\"JSX\"];\nexports.JSX_TYPES = JSX_TYPES;\nconst MISCELLANEOUS_TYPES = _definitions.FLIPPED_ALIAS_KEYS[\"Miscellaneous\"];\nexports.MISCELLANEOUS_TYPES = MISCELLANEOUS_TYPES;\nconst TYPESCRIPT_TYPES = _definitions.FLIPPED_ALIAS_KEYS[\"TypeScript\"];\nexports.TYPESCRIPT_TYPES = TYPESCRIPT_TYPES;\nconst TSTYPEELEMENT_TYPES = _definitions.FLIPPED_ALIAS_KEYS[\"TSTypeElement\"];\nexports.TSTYPEELEMENT_TYPES = TSTYPEELEMENT_TYPES;\nconst TSTYPE_TYPES = _definitions.FLIPPED_ALIAS_KEYS[\"TSType\"];\nexports.TSTYPE_TYPES = TSTYPE_TYPES;\nconst TSBASETYPE_TYPES = _definitions.FLIPPED_ALIAS_KEYS[\"TSBaseType\"];\nexports.TSBASETYPE_TYPES = TSBASETYPE_TYPES;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = ensureBlock;\n\nvar _toBlock = require(\"./toBlock\");\n\nfunction ensureBlock(node, key = \"body\") {\n  const result = (0, _toBlock.default)(node[key], node);\n  node[key] = result;\n  return result;\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = toBlock;\n\nvar _generated = require(\"../validators/generated\");\n\nvar _generated2 = require(\"../builders/generated\");\n\nfunction toBlock(node, parent) {\n  if ((0, _generated.isBlockStatement)(node)) {\n    return node;\n  }\n\n  let blockNodes = [];\n\n  if ((0, _generated.isEmptyStatement)(node)) {\n    blockNodes = [];\n  } else {\n    if (!(0, _generated.isStatement)(node)) {\n      if ((0, _generated.isFunction)(parent)) {\n        node = (0, _generated2.returnStatement)(node);\n      } else {\n        node = (0, _generated2.expressionStatement)(node);\n      }\n    }\n\n    blockNodes = [node];\n  }\n\n  return (0, _generated2.blockStatement)(blockNodes);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = toBindingIdentifierName;\n\nvar _toIdentifier = require(\"./toIdentifier\");\n\nfunction toBindingIdentifierName(name) {\n  name = (0, _toIdentifier.default)(name);\n  if (name === \"eval\" || name === \"arguments\") name = \"_\" + name;\n  return name;\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = toIdentifier;\n\nvar _isValidIdentifier = require(\"../validators/isValidIdentifier\");\n\nvar _helperValidatorIdentifier = require(\"@babel/helper-validator-identifier\");\n\nfunction toIdentifier(input) {\n  input = input + \"\";\n  let name = \"\";\n\n  for (const c of input) {\n    name += (0, _helperValidatorIdentifier.isIdentifierChar)(c.codePointAt(0)) ? c : \"-\";\n  }\n\n  name = name.replace(/^[-0-9]+/, \"\");\n  name = name.replace(/[-\\s]+(.)?/g, function (match, c) {\n    return c ? c.toUpperCase() : \"\";\n  });\n\n  if (!(0, _isValidIdentifier.default)(name)) {\n    name = `_${name}`;\n  }\n\n  return name || \"_\";\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = toComputedKey;\n\nvar _generated = require(\"../validators/generated\");\n\nvar _generated2 = require(\"../builders/generated\");\n\nfunction toComputedKey(node, key = node.key || node.property) {\n  if (!node.computed && (0, _generated.isIdentifier)(key)) key = (0, _generated2.stringLiteral)(key.name);\n  return key;\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _generated = require(\"../validators/generated\");\n\nvar _default = toExpression;\nexports.default = _default;\n\nfunction toExpression(node) {\n  if ((0, _generated.isExpressionStatement)(node)) {\n    node = node.expression;\n  }\n\n  if ((0, _generated.isExpression)(node)) {\n    return node;\n  }\n\n  if ((0, _generated.isClass)(node)) {\n    node.type = \"ClassExpression\";\n  } else if ((0, _generated.isFunction)(node)) {\n    node.type = \"FunctionExpression\";\n  }\n\n  if (!(0, _generated.isExpression)(node)) {\n    throw new Error(`cannot turn ${node.type} to an expression`);\n  }\n\n  return node;\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = toKeyAlias;\n\nvar _generated = require(\"../validators/generated\");\n\nvar _cloneNode = require(\"../clone/cloneNode\");\n\nvar _removePropertiesDeep = require(\"../modifications/removePropertiesDeep\");\n\nfunction toKeyAlias(node, key = node.key) {\n  let alias;\n\n  if (node.kind === \"method\") {\n    return toKeyAlias.increment() + \"\";\n  } else if ((0, _generated.isIdentifier)(key)) {\n    alias = key.name;\n  } else if ((0, _generated.isStringLiteral)(key)) {\n    alias = JSON.stringify(key.value);\n  } else {\n    alias = JSON.stringify((0, _removePropertiesDeep.default)((0, _cloneNode.default)(key)));\n  }\n\n  if (node.computed) {\n    alias = `[${alias}]`;\n  }\n\n  if (node.static) {\n    alias = `static:${alias}`;\n  }\n\n  return alias;\n}\n\ntoKeyAlias.uid = 0;\n\ntoKeyAlias.increment = function () {\n  if (toKeyAlias.uid >= Number.MAX_SAFE_INTEGER) {\n    return toKeyAlias.uid = 0;\n  } else {\n    return toKeyAlias.uid++;\n  }\n};","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = removePropertiesDeep;\n\nvar _traverseFast = require(\"../traverse/traverseFast\");\n\nvar _removeProperties = require(\"./removeProperties\");\n\nfunction removePropertiesDeep(tree, opts) {\n  (0, _traverseFast.default)(tree, _removeProperties.default, opts);\n  return tree;\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = traverseFast;\n\nvar _definitions = require(\"../definitions\");\n\nfunction traverseFast(node, enter, opts) {\n  if (!node) return;\n  const keys = _definitions.VISITOR_KEYS[node.type];\n  if (!keys) return;\n  opts = opts || {};\n  enter(node, opts);\n\n  for (const key of keys) {\n    const subNode = node[key];\n\n    if (Array.isArray(subNode)) {\n      for (const node of subNode) {\n        traverseFast(node, enter, opts);\n      }\n    } else {\n      traverseFast(subNode, enter, opts);\n    }\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = removeProperties;\n\nvar _constants = require(\"../constants\");\n\nconst CLEAR_KEYS = [\"tokens\", \"start\", \"end\", \"loc\", \"raw\", \"rawValue\"];\nconst CLEAR_KEYS_PLUS_COMMENTS = [..._constants.COMMENT_KEYS, \"comments\", ...CLEAR_KEYS];\n\nfunction removeProperties(node, opts = {}) {\n  const map = opts.preserveComments ? CLEAR_KEYS : CLEAR_KEYS_PLUS_COMMENTS;\n\n  for (const key of map) {\n    if (node[key] != null) node[key] = undefined;\n  }\n\n  for (const key of Object.keys(node)) {\n    if (key[0] === \"_\" && node[key] != null) node[key] = undefined;\n  }\n\n  const symbols = Object.getOwnPropertySymbols(node);\n\n  for (const sym of symbols) {\n    node[sym] = null;\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = toSequenceExpression;\n\nvar _gatherSequenceExpressions = require(\"./gatherSequenceExpressions\");\n\nfunction toSequenceExpression(nodes, scope) {\n  if (!(nodes != null && nodes.length)) return;\n  const declars = [];\n  const result = (0, _gatherSequenceExpressions.default)(nodes, scope, declars);\n  if (!result) return;\n\n  for (const declar of declars) {\n    scope.push(declar);\n  }\n\n  return result;\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = gatherSequenceExpressions;\n\nvar _getBindingIdentifiers = require(\"../retrievers/getBindingIdentifiers\");\n\nvar _generated = require(\"../validators/generated\");\n\nvar _generated2 = require(\"../builders/generated\");\n\nvar _cloneNode = require(\"../clone/cloneNode\");\n\nfunction gatherSequenceExpressions(nodes, scope, declars) {\n  const exprs = [];\n  let ensureLastUndefined = true;\n\n  for (const node of nodes) {\n    if (!(0, _generated.isEmptyStatement)(node)) {\n      ensureLastUndefined = false;\n    }\n\n    if ((0, _generated.isExpression)(node)) {\n      exprs.push(node);\n    } else if ((0, _generated.isExpressionStatement)(node)) {\n      exprs.push(node.expression);\n    } else if ((0, _generated.isVariableDeclaration)(node)) {\n      if (node.kind !== \"var\") return;\n\n      for (const declar of node.declarations) {\n        const bindings = (0, _getBindingIdentifiers.default)(declar);\n\n        for (const key of Object.keys(bindings)) {\n          declars.push({\n            kind: node.kind,\n            id: (0, _cloneNode.default)(bindings[key])\n          });\n        }\n\n        if (declar.init) {\n          exprs.push((0, _generated2.assignmentExpression)(\"=\", declar.id, declar.init));\n        }\n      }\n\n      ensureLastUndefined = true;\n    } else if ((0, _generated.isIfStatement)(node)) {\n      const consequent = node.consequent ? gatherSequenceExpressions([node.consequent], scope, declars) : scope.buildUndefinedNode();\n      const alternate = node.alternate ? gatherSequenceExpressions([node.alternate], scope, declars) : scope.buildUndefinedNode();\n      if (!consequent || !alternate) return;\n      exprs.push((0, _generated2.conditionalExpression)(node.test, consequent, alternate));\n    } else if ((0, _generated.isBlockStatement)(node)) {\n      const body = gatherSequenceExpressions(node.body, scope, declars);\n      if (!body) return;\n      exprs.push(body);\n    } else if ((0, _generated.isEmptyStatement)(node)) {\n      if (nodes.indexOf(node) === 0) {\n        ensureLastUndefined = true;\n      }\n    } else {\n      return;\n    }\n  }\n\n  if (ensureLastUndefined) {\n    exprs.push(scope.buildUndefinedNode());\n  }\n\n  if (exprs.length === 1) {\n    return exprs[0];\n  } else {\n    return (0, _generated2.sequenceExpression)(exprs);\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = getBindingIdentifiers;\n\nvar _generated = require(\"../validators/generated\");\n\nfunction getBindingIdentifiers(node, duplicates, outerOnly) {\n  const search = [].concat(node);\n  const ids = Object.create(null);\n\n  while (search.length) {\n    const id = search.shift();\n    if (!id) continue;\n    const keys = getBindingIdentifiers.keys[id.type];\n\n    if ((0, _generated.isIdentifier)(id)) {\n      if (duplicates) {\n        const _ids = ids[id.name] = ids[id.name] || [];\n\n        _ids.push(id);\n      } else {\n        ids[id.name] = id;\n      }\n\n      continue;\n    }\n\n    if ((0, _generated.isExportDeclaration)(id) && !(0, _generated.isExportAllDeclaration)(id)) {\n      if ((0, _generated.isDeclaration)(id.declaration)) {\n        search.push(id.declaration);\n      }\n\n      continue;\n    }\n\n    if (outerOnly) {\n      if ((0, _generated.isFunctionDeclaration)(id)) {\n        search.push(id.id);\n        continue;\n      }\n\n      if ((0, _generated.isFunctionExpression)(id)) {\n        continue;\n      }\n    }\n\n    if (keys) {\n      for (let i = 0; i < keys.length; i++) {\n        const key = keys[i];\n        const nodes = id[key];\n\n        if (nodes) {\n          Array.isArray(nodes) ? search.push(...nodes) : search.push(nodes);\n        }\n      }\n    }\n  }\n\n  return ids;\n}\n\ngetBindingIdentifiers.keys = {\n  DeclareClass: [\"id\"],\n  DeclareFunction: [\"id\"],\n  DeclareModule: [\"id\"],\n  DeclareVariable: [\"id\"],\n  DeclareInterface: [\"id\"],\n  DeclareTypeAlias: [\"id\"],\n  DeclareOpaqueType: [\"id\"],\n  InterfaceDeclaration: [\"id\"],\n  TypeAlias: [\"id\"],\n  OpaqueType: [\"id\"],\n  CatchClause: [\"param\"],\n  LabeledStatement: [\"label\"],\n  UnaryExpression: [\"argument\"],\n  AssignmentExpression: [\"left\"],\n  ImportSpecifier: [\"local\"],\n  ImportNamespaceSpecifier: [\"local\"],\n  ImportDefaultSpecifier: [\"local\"],\n  ImportDeclaration: [\"specifiers\"],\n  ExportSpecifier: [\"exported\"],\n  ExportNamespaceSpecifier: [\"exported\"],\n  ExportDefaultSpecifier: [\"exported\"],\n  FunctionDeclaration: [\"id\", \"params\"],\n  FunctionExpression: [\"id\", \"params\"],\n  ArrowFunctionExpression: [\"params\"],\n  ObjectMethod: [\"params\"],\n  ClassMethod: [\"params\"],\n  ClassPrivateMethod: [\"params\"],\n  ForInStatement: [\"left\"],\n  ForOfStatement: [\"left\"],\n  ClassDeclaration: [\"id\"],\n  ClassExpression: [\"id\"],\n  RestElement: [\"argument\"],\n  UpdateExpression: [\"argument\"],\n  ObjectProperty: [\"value\"],\n  AssignmentPattern: [\"left\"],\n  ArrayPattern: [\"elements\"],\n  ObjectPattern: [\"properties\"],\n  VariableDeclaration: [\"declarations\"],\n  VariableDeclarator: [\"id\"]\n};","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _generated = require(\"../validators/generated\");\n\nvar _generated2 = require(\"../builders/generated\");\n\nvar _default = toStatement;\nexports.default = _default;\n\nfunction toStatement(node, ignore) {\n  if ((0, _generated.isStatement)(node)) {\n    return node;\n  }\n\n  let mustHaveId = false;\n  let newType;\n\n  if ((0, _generated.isClass)(node)) {\n    mustHaveId = true;\n    newType = \"ClassDeclaration\";\n  } else if ((0, _generated.isFunction)(node)) {\n    mustHaveId = true;\n    newType = \"FunctionDeclaration\";\n  } else if ((0, _generated.isAssignmentExpression)(node)) {\n    return (0, _generated2.expressionStatement)(node);\n  }\n\n  if (mustHaveId && !node.id) {\n    newType = false;\n  }\n\n  if (!newType) {\n    if (ignore) {\n      return false;\n    } else {\n      throw new Error(`cannot turn ${node.type} to a statement`);\n    }\n  }\n\n  node.type = newType;\n  return node;\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _isValidIdentifier = require(\"../validators/isValidIdentifier\");\n\nvar _generated = require(\"../builders/generated\");\n\nvar _default = valueToNode;\nexports.default = _default;\nconst objectToString = Function.call.bind(Object.prototype.toString);\n\nfunction isRegExp(value) {\n  return objectToString(value) === \"[object RegExp]\";\n}\n\nfunction isPlainObject(value) {\n  if (typeof value !== \"object\" || value === null || Object.prototype.toString.call(value) !== \"[object Object]\") {\n    return false;\n  }\n\n  const proto = Object.getPrototypeOf(value);\n  return proto === null || Object.getPrototypeOf(proto) === null;\n}\n\nfunction valueToNode(value) {\n  if (value === undefined) {\n    return (0, _generated.identifier)(\"undefined\");\n  }\n\n  if (value === true || value === false) {\n    return (0, _generated.booleanLiteral)(value);\n  }\n\n  if (value === null) {\n    return (0, _generated.nullLiteral)();\n  }\n\n  if (typeof value === \"string\") {\n    return (0, _generated.stringLiteral)(value);\n  }\n\n  if (typeof value === \"number\") {\n    let result;\n\n    if (Number.isFinite(value)) {\n      result = (0, _generated.numericLiteral)(Math.abs(value));\n    } else {\n      let numerator;\n\n      if (Number.isNaN(value)) {\n        numerator = (0, _generated.numericLiteral)(0);\n      } else {\n        numerator = (0, _generated.numericLiteral)(1);\n      }\n\n      result = (0, _generated.binaryExpression)(\"/\", numerator, (0, _generated.numericLiteral)(0));\n    }\n\n    if (value < 0 || Object.is(value, -0)) {\n      result = (0, _generated.unaryExpression)(\"-\", result);\n    }\n\n    return result;\n  }\n\n  if (isRegExp(value)) {\n    const pattern = value.source;\n    const flags = value.toString().match(/\\/([a-z]+|)$/)[1];\n    return (0, _generated.regExpLiteral)(pattern, flags);\n  }\n\n  if (Array.isArray(value)) {\n    return (0, _generated.arrayExpression)(value.map(valueToNode));\n  }\n\n  if (isPlainObject(value)) {\n    const props = [];\n\n    for (const key of Object.keys(value)) {\n      let nodeKey;\n\n      if ((0, _isValidIdentifier.default)(key)) {\n        nodeKey = (0, _generated.identifier)(key);\n      } else {\n        nodeKey = (0, _generated.stringLiteral)(key);\n      }\n\n      props.push((0, _generated.objectProperty)(nodeKey, valueToNode(value[key])));\n    }\n\n    return (0, _generated.objectExpression)(props);\n  }\n\n  throw new Error(\"don't know how to turn this value into a node\");\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = appendToMemberExpression;\n\nvar _generated = require(\"../builders/generated\");\n\nfunction appendToMemberExpression(member, append, computed = false) {\n  member.object = (0, _generated.memberExpression)(member.object, member.property, member.computed);\n  member.property = append;\n  member.computed = !!computed;\n  return member;\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = inherits;\n\nvar _constants = require(\"../constants\");\n\nvar _inheritsComments = require(\"../comments/inheritsComments\");\n\nfunction inherits(child, parent) {\n  if (!child || !parent) return child;\n\n  for (const key of _constants.INHERIT_KEYS.optional) {\n    if (child[key] == null) {\n      child[key] = parent[key];\n    }\n  }\n\n  for (const key of Object.keys(parent)) {\n    if (key[0] === \"_\" && key !== \"__clone\") {\n      child[key] = parent[key];\n    }\n  }\n\n  for (const key of _constants.INHERIT_KEYS.force) {\n    child[key] = parent[key];\n  }\n\n  (0, _inheritsComments.default)(child, parent);\n  return child;\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = prependToMemberExpression;\n\nvar _generated = require(\"../builders/generated\");\n\nvar _ = require(\"..\");\n\nfunction prependToMemberExpression(member, prepend) {\n  if ((0, _.isSuper)(member.object)) {\n    throw new Error(\"Cannot prepend node to super property access (`super.foo`).\");\n  }\n\n  member.object = (0, _generated.memberExpression)(prepend, member.object);\n  return member;\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _getBindingIdentifiers = require(\"./getBindingIdentifiers\");\n\nvar _default = getOuterBindingIdentifiers;\nexports.default = _default;\n\nfunction getOuterBindingIdentifiers(node, duplicates) {\n  return (0, _getBindingIdentifiers.default)(node, duplicates, true);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = traverse;\n\nvar _definitions = require(\"../definitions\");\n\nfunction traverse(node, handlers, state) {\n  if (typeof handlers === \"function\") {\n    handlers = {\n      enter: handlers\n    };\n  }\n\n  const {\n    enter,\n    exit\n  } = handlers;\n  traverseSimpleImpl(node, enter, exit, state, []);\n}\n\nfunction traverseSimpleImpl(node, enter, exit, state, ancestors) {\n  const keys = _definitions.VISITOR_KEYS[node.type];\n  if (!keys) return;\n  if (enter) enter(node, ancestors, state);\n\n  for (const key of keys) {\n    const subNode = node[key];\n\n    if (Array.isArray(subNode)) {\n      for (let i = 0; i < subNode.length; i++) {\n        const child = subNode[i];\n        if (!child) continue;\n        ancestors.push({\n          node,\n          key,\n          index: i\n        });\n        traverseSimpleImpl(child, enter, exit, state, ancestors);\n        ancestors.pop();\n      }\n    } else if (subNode) {\n      ancestors.push({\n        node,\n        key\n      });\n      traverseSimpleImpl(subNode, enter, exit, state, ancestors);\n      ancestors.pop();\n    }\n  }\n\n  if (exit) exit(node, ancestors, state);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isBinding;\n\nvar _getBindingIdentifiers = require(\"../retrievers/getBindingIdentifiers\");\n\nfunction isBinding(node, parent, grandparent) {\n  if (grandparent && node.type === \"Identifier\" && parent.type === \"ObjectProperty\" && grandparent.type === \"ObjectExpression\") {\n    return false;\n  }\n\n  const keys = _getBindingIdentifiers.default.keys[parent.type];\n\n  if (keys) {\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i];\n      const val = parent[key];\n\n      if (Array.isArray(val)) {\n        if (val.indexOf(node) >= 0) return true;\n      } else {\n        if (val === node) return true;\n      }\n    }\n  }\n\n  return false;\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isBlockScoped;\n\nvar _generated = require(\"./generated\");\n\nvar _isLet = require(\"./isLet\");\n\nfunction isBlockScoped(node) {\n  return (0, _generated.isFunctionDeclaration)(node) || (0, _generated.isClassDeclaration)(node) || (0, _isLet.default)(node);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isLet;\n\nvar _generated = require(\"./generated\");\n\nvar _constants = require(\"../constants\");\n\nfunction isLet(node) {\n  return (0, _generated.isVariableDeclaration)(node) && (node.kind !== \"var\" || node[_constants.BLOCK_SCOPED_SYMBOL]);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isImmutable;\n\nvar _isType = require(\"./isType\");\n\nvar _generated = require(\"./generated\");\n\nfunction isImmutable(node) {\n  if ((0, _isType.default)(node.type, \"Immutable\")) return true;\n\n  if ((0, _generated.isIdentifier)(node)) {\n    if (node.name === \"undefined\") {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  return false;\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isNodesEquivalent;\n\nvar _definitions = require(\"../definitions\");\n\nfunction isNodesEquivalent(a, b) {\n  if (typeof a !== \"object\" || typeof b !== \"object\" || a == null || b == null) {\n    return a === b;\n  }\n\n  if (a.type !== b.type) {\n    return false;\n  }\n\n  const fields = Object.keys(_definitions.NODE_FIELDS[a.type] || a.type);\n  const visitorKeys = _definitions.VISITOR_KEYS[a.type];\n\n  for (const field of fields) {\n    const val_a = a[field];\n    const val_b = b[field];\n\n    if (typeof val_a !== typeof val_b) {\n      return false;\n    }\n\n    if (val_a == null && val_b == null) {\n      continue;\n    } else if (val_a == null || val_b == null) {\n      return false;\n    }\n\n    if (Array.isArray(val_a)) {\n      if (!Array.isArray(val_b)) {\n        return false;\n      }\n\n      if (val_a.length !== val_b.length) {\n        return false;\n      }\n\n      for (let i = 0; i < val_a.length; i++) {\n        if (!isNodesEquivalent(val_a[i], val_b[i])) {\n          return false;\n        }\n      }\n\n      continue;\n    }\n\n    if (typeof val_a === \"object\" && !(visitorKeys != null && visitorKeys.includes(field))) {\n      for (const key of Object.keys(val_a)) {\n        if (val_a[key] !== val_b[key]) {\n          return false;\n        }\n      }\n\n      continue;\n    }\n\n    if (!isNodesEquivalent(val_a, val_b)) {\n      return false;\n    }\n  }\n\n  return true;\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isReferenced;\n\nfunction isReferenced(node, parent, grandparent) {\n  switch (parent.type) {\n    case \"MemberExpression\":\n    case \"OptionalMemberExpression\":\n      if (parent.property === node) {\n        return !!parent.computed;\n      }\n\n      return parent.object === node;\n\n    case \"JSXMemberExpression\":\n      return parent.object === node;\n\n    case \"VariableDeclarator\":\n      return parent.init === node;\n\n    case \"ArrowFunctionExpression\":\n      return parent.body === node;\n\n    case \"PrivateName\":\n      return false;\n\n    case \"ClassMethod\":\n    case \"ClassPrivateMethod\":\n    case \"ObjectMethod\":\n      if (parent.key === node) {\n        return !!parent.computed;\n      }\n\n      return false;\n\n    case \"ObjectProperty\":\n      if (parent.key === node) {\n        return !!parent.computed;\n      }\n\n      return !grandparent || grandparent.type !== \"ObjectPattern\";\n\n    case \"ClassProperty\":\n    case \"ClassAccessorProperty\":\n      if (parent.key === node) {\n        return !!parent.computed;\n      }\n\n      return true;\n\n    case \"ClassPrivateProperty\":\n      return parent.key !== node;\n\n    case \"ClassDeclaration\":\n    case \"ClassExpression\":\n      return parent.superClass === node;\n\n    case \"AssignmentExpression\":\n      return parent.right === node;\n\n    case \"AssignmentPattern\":\n      return parent.right === node;\n\n    case \"LabeledStatement\":\n      return false;\n\n    case \"CatchClause\":\n      return false;\n\n    case \"RestElement\":\n      return false;\n\n    case \"BreakStatement\":\n    case \"ContinueStatement\":\n      return false;\n\n    case \"FunctionDeclaration\":\n    case \"FunctionExpression\":\n      return false;\n\n    case \"ExportNamespaceSpecifier\":\n    case \"ExportDefaultSpecifier\":\n      return false;\n\n    case \"ExportSpecifier\":\n      if (grandparent != null && grandparent.source) {\n        return false;\n      }\n\n      return parent.local === node;\n\n    case \"ImportDefaultSpecifier\":\n    case \"ImportNamespaceSpecifier\":\n    case \"ImportSpecifier\":\n      return false;\n\n    case \"ImportAttribute\":\n      return false;\n\n    case \"JSXAttribute\":\n      return false;\n\n    case \"ObjectPattern\":\n    case \"ArrayPattern\":\n      return false;\n\n    case \"MetaProperty\":\n      return false;\n\n    case \"ObjectTypeProperty\":\n      return parent.key !== node;\n\n    case \"TSEnumMember\":\n      return parent.id !== node;\n\n    case \"TSPropertySignature\":\n      if (parent.key === node) {\n        return !!parent.computed;\n      }\n\n      return true;\n  }\n\n  return true;\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isScope;\n\nvar _generated = require(\"./generated\");\n\nfunction isScope(node, parent) {\n  if ((0, _generated.isBlockStatement)(node) && ((0, _generated.isFunction)(parent) || (0, _generated.isCatchClause)(parent))) {\n    return false;\n  }\n\n  if ((0, _generated.isPattern)(node) && ((0, _generated.isFunction)(parent) || (0, _generated.isCatchClause)(parent))) {\n    return true;\n  }\n\n  return (0, _generated.isScopable)(node);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isSpecifierDefault;\n\nvar _generated = require(\"./generated\");\n\nfunction isSpecifierDefault(specifier) {\n  return (0, _generated.isImportDefaultSpecifier)(specifier) || (0, _generated.isIdentifier)(specifier.imported || specifier.exported, {\n    name: \"default\"\n  });\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isValidES3Identifier;\n\nvar _isValidIdentifier = require(\"./isValidIdentifier\");\n\nconst RESERVED_WORDS_ES3_ONLY = new Set([\"abstract\", \"boolean\", \"byte\", \"char\", \"double\", \"enum\", \"final\", \"float\", \"goto\", \"implements\", \"int\", \"interface\", \"long\", \"native\", \"package\", \"private\", \"protected\", \"public\", \"short\", \"static\", \"synchronized\", \"throws\", \"transient\", \"volatile\"]);\n\nfunction isValidES3Identifier(name) {\n  return (0, _isValidIdentifier.default)(name) && !RESERVED_WORDS_ES3_ONLY.has(name);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isVar;\n\nvar _generated = require(\"./generated\");\n\nvar _constants = require(\"../constants\");\n\nfunction isVar(node) {\n  return (0, _generated.isVariableDeclaration)(node, {\n    kind: \"var\"\n  }) && !node[_constants.BLOCK_SCOPED_SYMBOL];\n}","\"use strict\";\nexports.__esModule = true;\nfunction binaryOperation(operator, left, right) {\n    switch (operator) {\n        case '+':\n            return left + right;\n        case '-':\n            return left - right;\n        case '/':\n            return left / right;\n        case '%':\n            return left % right;\n        case '*':\n            return left * right;\n        case '**':\n            return Math.pow(left, right);\n        case '&':\n            return left & right;\n        case '|':\n            return left | right;\n        case '>>':\n            return left >> right;\n        case '>>>':\n            return left >>> right;\n        case '<<':\n            return left << right;\n        case '^':\n            return left ^ right;\n        case '==':\n            return left == right;\n        case '===':\n            return left === right;\n        case '!=':\n            return left != right;\n        case '!==':\n            return left !== right;\n        case 'in':\n            return left in right;\n        case 'instanceof':\n            return left instanceof right;\n        case '>':\n            return left > right;\n        case '<':\n            return left < right;\n        case '>=':\n            return left >= right;\n        case '<=':\n            return left <= right;\n    }\n}\nexports[\"default\"] = binaryOperation;\n","'use strict';\n\nmodule.exports = walkAST;\nfunction walkAST(ast, before, after, options) {\n  if (after && typeof after === 'object' && typeof options === 'undefined') {\n    options = after;\n    after = null;\n  }\n  options = options || {includeDependencies: false};\n  var parents = (options.parents = options.parents || []);\n\n  var replace = function replace(replacement) {\n    if (Array.isArray(replacement) && !replace.arrayAllowed) {\n      throw new Error(\n        'replace() can only be called with an array if the last parent is a Block or NamedBlock'\n      );\n    }\n    ast = replacement;\n  };\n  replace.arrayAllowed =\n    parents[0] &&\n    (/^(Named)?Block$/.test(parents[0].type) ||\n      (parents[0].type === 'RawInclude' && ast.type === 'IncludeFilter'));\n\n  if (before) {\n    var result = before(ast, replace);\n    if (result === false) {\n      return ast;\n    } else if (Array.isArray(ast)) {\n      // return right here to skip after() call on array\n      return walkAndMergeNodes(ast);\n    }\n  }\n\n  parents.unshift(ast);\n\n  switch (ast.type) {\n    case 'NamedBlock':\n    case 'Block':\n      ast.nodes = walkAndMergeNodes(ast.nodes);\n      break;\n    case 'Case':\n    case 'Filter':\n    case 'Mixin':\n    case 'Tag':\n    case 'InterpolatedTag':\n    case 'When':\n    case 'Code':\n    case 'While':\n      if (ast.block) {\n        ast.block = walkAST(ast.block, before, after, options);\n      }\n      break;\n    case 'Each':\n      if (ast.block) {\n        ast.block = walkAST(ast.block, before, after, options);\n      }\n      if (ast.alternate) {\n        ast.alternate = walkAST(ast.alternate, before, after, options);\n      }\n      break;\n    case 'EachOf':\n      if (ast.block) {\n        ast.block = walkAST(ast.block, before, after, options);\n      }\n      break;\n    case 'Conditional':\n      if (ast.consequent) {\n        ast.consequent = walkAST(ast.consequent, before, after, options);\n      }\n      if (ast.alternate) {\n        ast.alternate = walkAST(ast.alternate, before, after, options);\n      }\n      break;\n    case 'Include':\n      walkAST(ast.block, before, after, options);\n      walkAST(ast.file, before, after, options);\n      break;\n    case 'Extends':\n      walkAST(ast.file, before, after, options);\n      break;\n    case 'RawInclude':\n      ast.filters = walkAndMergeNodes(ast.filters);\n      walkAST(ast.file, before, after, options);\n      break;\n    case 'Attrs':\n    case 'BlockComment':\n    case 'Comment':\n    case 'Doctype':\n    case 'IncludeFilter':\n    case 'MixinBlock':\n    case 'YieldBlock':\n    case 'Text':\n      break;\n    case 'FileReference':\n      if (options.includeDependencies && ast.ast) {\n        walkAST(ast.ast, before, after, options);\n      }\n      break;\n    default:\n      throw new Error('Unexpected node type ' + ast.type);\n      break;\n  }\n\n  parents.shift();\n\n  after && after(ast, replace);\n  return ast;\n\n  function walkAndMergeNodes(nodes) {\n    return nodes.reduce(function(nodes, node) {\n      var result = walkAST(node, before, after, options);\n      if (Array.isArray(result)) {\n        return nodes.concat(result);\n      } else {\n        return nodes.concat([result]);\n      }\n    }, []);\n  }\n}\n",null,"import assertNever from 'assert-never';\nimport {ancestor as walk} from 'babel-walk';\nimport * as t from '@babel/types';\nimport isReferenced from './reference';\n\nconst isScope = (node: t.Node) => t.isFunctionParent(node) || t.isProgram(node);\nconst isBlockScope = (node: t.Node) =>\n  t.isBlockStatement(node) || isScope(node);\n\nconst declaresArguments = (node: t.Node) =>\n  t.isFunction(node) && !t.isArrowFunctionExpression(node);\n\nconst declaresThis = declaresArguments;\n\nconst LOCALS_SYMBOL = Symbol('locals');\n\nconst getLocals = (node: t.Node): Set<string> | undefined =>\n  (node as any)[LOCALS_SYMBOL];\nconst declareLocals = (node: t.Node): Set<string> =>\n  ((node as any)[LOCALS_SYMBOL] = (node as any)[LOCALS_SYMBOL] || new Set());\n\nconst setLocal = (node: t.Node, name: string) => declareLocals(node).add(name);\n\n// First pass\n\nfunction declareFunction(node: t.Function) {\n  for (const param of node.params) {\n    declarePattern(param, node);\n  }\n  const id = (node as t.FunctionDeclaration).id;\n  if (id) {\n    setLocal(node, id.name);\n  }\n}\n\nfunction declarePattern(node: t.LVal, parent: t.Node) {\n  switch (node.type) {\n    case 'Identifier':\n      setLocal(parent, node.name);\n      break;\n    case 'ObjectPattern':\n      for (const prop of node.properties) {\n        switch (prop.type) {\n          case 'RestElement':\n            declarePattern(prop.argument, parent);\n            break;\n          case 'ObjectProperty':\n            declarePattern(prop.value as t.LVal, parent);\n            break;\n          default:\n            assertNever(prop);\n            break;\n        }\n      }\n      break;\n    case 'ArrayPattern':\n      for (const element of node.elements) {\n        if (element) declarePattern(element, parent);\n      }\n      break;\n    case 'RestElement':\n      declarePattern(node.argument, parent);\n      break;\n    case 'AssignmentPattern':\n      declarePattern(node.left, parent);\n      break;\n    // istanbul ignore next\n    default:\n      throw new Error('Unrecognized pattern type: ' + node.type);\n  }\n}\n\nfunction declareModuleSpecifier(\n  node:\n    | t.ImportSpecifier\n    | t.ImportDefaultSpecifier\n    | t.ImportNamespaceSpecifier,\n  _state: unknown,\n  parents: t.Node[],\n) {\n  for (let i = parents.length - 2; i >= 0; i--) {\n    if (isScope(parents[i])) {\n      setLocal(parents[i], node.local.name);\n      return;\n    }\n  }\n}\n\nconst firstPass = walk({\n  VariableDeclaration(node, _state, parents) {\n    for (let i = parents.length - 2; i >= 0; i--) {\n      if (\n        node.kind === 'var'\n          ? t.isFunctionParent(parents[i])\n          : isBlockScope(parents[i])\n      ) {\n        for (const declaration of node.declarations) {\n          declarePattern(declaration.id, parents[i]);\n        }\n        return;\n      }\n    }\n  },\n  FunctionDeclaration(node, _state, parents) {\n    if (node.id) {\n      for (let i = parents.length - 2; i >= 0; i--) {\n        if (isScope(parents[i])) {\n          setLocal(parents[i], node.id.name);\n          return;\n        }\n      }\n    }\n  },\n  Function: declareFunction,\n  ClassDeclaration(node, _state, parents) {\n    for (let i = parents.length - 2; i >= 0; i--) {\n      if (isScope(parents[i])) {\n        setLocal(parents[i], node.id.name);\n        return;\n      }\n    }\n  },\n  TryStatement(node) {\n    if (node.handler === null) return;\n    if (node.handler.param === null) return;\n    declarePattern(node.handler.param, node.handler);\n  },\n  ImportDefaultSpecifier: declareModuleSpecifier,\n  ImportSpecifier: declareModuleSpecifier,\n  ImportNamespaceSpecifier: declareModuleSpecifier,\n});\n\n// Second pass\n\nconst secondPass = walk<{\n  globals: (t.Identifier | t.ThisExpression)[];\n}>({\n  Identifier(node, state, parents) {\n    const name = node.name;\n    if (name === 'undefined') return;\n\n    const lastParent = parents[parents.length - 2];\n    if (lastParent) {\n      if (!isReferenced(node, lastParent)) return;\n\n      for (const parent of parents) {\n        if (name === 'arguments' && declaresArguments(parent)) {\n          return;\n        }\n        if (getLocals(parent)?.has(name)) {\n          return;\n        }\n      }\n    }\n\n    state.globals.push(node);\n  },\n\n  ThisExpression(node, state, parents) {\n    for (const parent of parents) {\n      if (declaresThis(parent)) {\n        return;\n      }\n    }\n\n    state.globals.push(node);\n  },\n});\n\nexport default function findGlobals(ast: t.Node) {\n  const globals: (t.Identifier | t.ThisExpression)[] = [];\n\n  // istanbul ignore if\n  if (!t.isNode(ast)) {\n    throw new TypeError('Source must be a Babylon AST');\n  }\n\n  firstPass(ast, undefined);\n  secondPass(ast, {globals});\n\n  const groupedGlobals = new Map<string, (t.Identifier | t.ThisExpression)[]>();\n  for (const node of globals) {\n    const name: string = node.type === 'ThisExpression' ? 'this' : node.name;\n    const existing = groupedGlobals.get(name);\n    if (existing) {\n      existing.push(node);\n    } else {\n      groupedGlobals.set(name, [node]);\n    }\n  }\n\n  return [...groupedGlobals]\n    .map(([name, nodes]) => ({name, nodes}))\n    .sort((a, b) => (a.name < b.name ? -1 : 1));\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Helper function for exhaustive checks of discriminated unions.\n * https://basarat.gitbooks.io/typescript/docs/types/discriminated-unions.html\n *\n * @example\n *\n *    type A = {type: 'a'};\n *    type B = {type: 'b'};\n *    type Union = A | B;\n *\n *    function doSomething(arg: Union) {\n *      if (arg.type === 'a') {\n *        return something;\n *      }\n *\n *      if (arg.type === 'b') {\n *        return somethingElse;\n *      }\n *\n *      // TS will error if there are other types in the union\n *      // Will throw an Error when called at runtime.\n *      // Use `assertNever(arg, true)` instead to fail silently.\n *      return assertNever(arg);\n *    }\n */\nfunction assertNever(value, noThrow) {\n    if (noThrow) {\n        return value;\n    }\n    throw new Error(\"Unhandled discriminated union member: \" + JSON.stringify(value));\n}\nexports.assertNever = assertNever;\nexports.default = assertNever;\n",null,"import * as t from '@babel/types';\n\nexport default function isReferenced(node: t.Node, parent: t.Node) {\n  switch (parent.type) {\n    // yes: { [NODE]: '' }\n    // yes: { NODE }\n    // no: { NODE: '' }\n    case 'ObjectProperty':\n      return parent.value === node || parent.computed;\n\n    // no: break NODE;\n    // no: continue NODE;\n    case 'BreakStatement':\n    case 'ContinueStatement':\n      return false;\n\n    // yes: left = NODE;\n    // yes: NODE = right;\n    case 'AssignmentExpression':\n      return true;\n  }\n\n  return t.isReferenced(node, parent);\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","// Reserved word lists for various dialects of the language\n\nvar reservedWords = {\n  3: \"abstract boolean byte char class double enum export extends final float goto implements import int interface long native package private protected public short static super synchronized throws transient volatile\",\n  5: \"class enum extends super const export import\",\n  6: \"enum\",\n  strict: \"implements interface let package private protected public static yield\",\n  strictBind: \"eval arguments\"\n};\n\n// And the keywords\n\nvar ecma5AndLessKeywords = \"break case catch continue debugger default do else finally for function if return switch throw try var while with null true false instanceof typeof void delete new in this\";\n\nvar keywords = {\n  5: ecma5AndLessKeywords,\n  \"5module\": ecma5AndLessKeywords + \" export import\",\n  6: ecma5AndLessKeywords + \" const class extends export import super\"\n};\n\nvar keywordRelationalOperator = /^in(stanceof)?$/;\n\n// ## Character categories\n\n// Big ugly regular expressions that match characters in the\n// whitespace, identifier, and identifier-start categories. These\n// are only applied when a character is found to actually have a\n// code point above 128.\n// Generated by `bin/generate-identifier-regex.js`.\nvar nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u08a0-\\u08b4\\u08b6-\\u08c7\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d04-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf3\\u1cf5\\u1cf6\\u1cfa\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31bf\\u31f0-\\u31ff\\u3400-\\u4dbf\\u4e00-\\u9ffc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7bf\\ua7c2-\\ua7ca\\ua7f5-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab69\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\nvar nonASCIIidentifierChars = \"\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u07fd\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u08d3-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u09fe\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0afa-\\u0aff\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b55-\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c04\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0d00-\\u0d03\\u0d3b\\u0d3c\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d81-\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0ebc\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1abf\\u1ac0\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf4\\u1cf7-\\u1cf9\\u1dc0-\\u1df9\\u1dfb-\\u1dff\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua82c\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua8ff-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\";\n\nvar nonASCIIidentifierStart = new RegExp(\"[\" + nonASCIIidentifierStartChars + \"]\");\nvar nonASCIIidentifier = new RegExp(\"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\");\n\nnonASCIIidentifierStartChars = nonASCIIidentifierChars = null;\n\n// These are a run-length and offset encoded representation of the\n// >0xffff code points that are a valid part of identifiers. The\n// offset starts at 0x10000, and each pair of numbers represents an\n// offset to the next range, and then a size of the range. They were\n// generated by bin/generate-identifier-regex.js\n\n// eslint-disable-next-line comma-spacing\nvar astralIdentifierStartCodes = [0,11,2,25,2,18,2,1,2,14,3,13,35,122,70,52,268,28,4,48,48,31,14,29,6,37,11,29,3,35,5,7,2,4,43,157,19,35,5,35,5,39,9,51,157,310,10,21,11,7,153,5,3,0,2,43,2,1,4,0,3,22,11,22,10,30,66,18,2,1,11,21,11,25,71,55,7,1,65,0,16,3,2,2,2,28,43,28,4,28,36,7,2,27,28,53,11,21,11,18,14,17,111,72,56,50,14,50,14,35,349,41,7,1,79,28,11,0,9,21,107,20,28,22,13,52,76,44,33,24,27,35,30,0,3,0,9,34,4,0,13,47,15,3,22,0,2,0,36,17,2,24,85,6,2,0,2,3,2,14,2,9,8,46,39,7,3,1,3,21,2,6,2,1,2,4,4,0,19,0,13,4,159,52,19,3,21,2,31,47,21,1,2,0,185,46,42,3,37,47,21,0,60,42,14,0,72,26,230,43,117,63,32,7,3,0,3,7,2,1,2,23,16,0,2,0,95,7,3,38,17,0,2,0,29,0,11,39,8,0,22,0,12,45,20,0,35,56,264,8,2,36,18,0,50,29,113,6,2,1,2,37,22,0,26,5,2,1,2,31,15,0,328,18,190,0,80,921,103,110,18,195,2749,1070,4050,582,8634,568,8,30,114,29,19,47,17,3,32,20,6,18,689,63,129,74,6,0,67,12,65,1,2,0,29,6135,9,1237,43,8,8952,286,50,2,18,3,9,395,2309,106,6,12,4,8,8,9,5991,84,2,70,2,1,3,0,3,1,3,3,2,11,2,0,2,6,2,64,2,3,3,7,2,6,2,27,2,3,2,4,2,0,4,6,2,339,3,24,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,7,2357,44,11,6,17,0,370,43,1301,196,60,67,8,0,1205,3,2,26,2,1,2,0,3,0,2,9,2,3,2,0,2,0,7,0,5,0,2,0,2,0,2,2,2,1,2,0,3,0,2,0,2,0,2,0,2,0,2,1,2,0,3,3,2,6,2,3,2,3,2,0,2,9,2,16,6,2,2,4,2,16,4421,42717,35,4148,12,221,3,5761,15,7472,3104,541,1507,4938];\n\n// eslint-disable-next-line comma-spacing\nvar astralIdentifierCodes = [509,0,227,0,150,4,294,9,1368,2,2,1,6,3,41,2,5,0,166,1,574,3,9,9,370,1,154,10,176,2,54,14,32,9,16,3,46,10,54,9,7,2,37,13,2,9,6,1,45,0,13,2,49,13,9,3,2,11,83,11,7,0,161,11,6,9,7,3,56,1,2,6,3,1,3,2,10,0,11,1,3,6,4,4,193,17,10,9,5,0,82,19,13,9,214,6,3,8,28,1,83,16,16,9,82,12,9,9,84,14,5,9,243,14,166,9,71,5,2,1,3,3,2,0,2,1,13,9,120,6,3,6,4,0,29,9,41,6,2,3,9,0,10,10,47,15,406,7,2,7,17,9,57,21,2,13,123,5,4,0,2,1,2,6,2,0,9,9,49,4,2,1,2,4,9,9,330,3,19306,9,135,4,60,6,26,9,1014,0,2,54,8,3,82,0,12,1,19628,1,5319,4,4,5,9,7,3,6,31,3,149,2,1418,49,513,54,5,49,9,0,15,0,23,4,2,14,1361,6,2,16,3,6,2,1,2,4,262,6,10,9,419,13,1495,6,110,6,6,9,4759,9,787719,239];\n\n// This has a complexity linear to the value of the code. The\n// assumption is that looking up astral identifier characters is\n// rare.\nfunction isInAstralSet(code, set) {\n  var pos = 0x10000;\n  for (var i = 0; i < set.length; i += 2) {\n    pos += set[i];\n    if (pos > code) { return false }\n    pos += set[i + 1];\n    if (pos >= code) { return true }\n  }\n}\n\n// Test whether a given character code starts an identifier.\n\nfunction isIdentifierStart(code, astral) {\n  if (code < 65) { return code === 36 }\n  if (code < 91) { return true }\n  if (code < 97) { return code === 95 }\n  if (code < 123) { return true }\n  if (code <= 0xffff) { return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code)) }\n  if (astral === false) { return false }\n  return isInAstralSet(code, astralIdentifierStartCodes)\n}\n\n// Test whether a given character is part of an identifier.\n\nfunction isIdentifierChar(code, astral) {\n  if (code < 48) { return code === 36 }\n  if (code < 58) { return true }\n  if (code < 65) { return false }\n  if (code < 91) { return true }\n  if (code < 97) { return code === 95 }\n  if (code < 123) { return true }\n  if (code <= 0xffff) { return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code)) }\n  if (astral === false) { return false }\n  return isInAstralSet(code, astralIdentifierStartCodes) || isInAstralSet(code, astralIdentifierCodes)\n}\n\n// ## Token types\n\n// The assignment of fine-grained, information-carrying type objects\n// allows the tokenizer to store the information it has about a\n// token in a way that is very cheap for the parser to look up.\n\n// All token type variables start with an underscore, to make them\n// easy to recognize.\n\n// The `beforeExpr` property is used to disambiguate between regular\n// expressions and divisions. It is set on all token types that can\n// be followed by an expression (thus, a slash after them would be a\n// regular expression).\n//\n// The `startsExpr` property is used to check if the token ends a\n// `yield` expression. It is set on all token types that either can\n// directly start an expression (like a quotation mark) or can\n// continue an expression (like the body of a string).\n//\n// `isLoop` marks a keyword as starting a loop, which is important\n// to know when parsing a label, in order to allow or disallow\n// continue jumps to that label.\n\nvar TokenType = function TokenType(label, conf) {\n  if ( conf === void 0 ) conf = {};\n\n  this.label = label;\n  this.keyword = conf.keyword;\n  this.beforeExpr = !!conf.beforeExpr;\n  this.startsExpr = !!conf.startsExpr;\n  this.isLoop = !!conf.isLoop;\n  this.isAssign = !!conf.isAssign;\n  this.prefix = !!conf.prefix;\n  this.postfix = !!conf.postfix;\n  this.binop = conf.binop || null;\n  this.updateContext = null;\n};\n\nfunction binop(name, prec) {\n  return new TokenType(name, {beforeExpr: true, binop: prec})\n}\nvar beforeExpr = {beforeExpr: true}, startsExpr = {startsExpr: true};\n\n// Map keyword names to token types.\n\nvar keywords$1 = {};\n\n// Succinct definitions of keyword token types\nfunction kw(name, options) {\n  if ( options === void 0 ) options = {};\n\n  options.keyword = name;\n  return keywords$1[name] = new TokenType(name, options)\n}\n\nvar types = {\n  num: new TokenType(\"num\", startsExpr),\n  regexp: new TokenType(\"regexp\", startsExpr),\n  string: new TokenType(\"string\", startsExpr),\n  name: new TokenType(\"name\", startsExpr),\n  eof: new TokenType(\"eof\"),\n\n  // Punctuation token types.\n  bracketL: new TokenType(\"[\", {beforeExpr: true, startsExpr: true}),\n  bracketR: new TokenType(\"]\"),\n  braceL: new TokenType(\"{\", {beforeExpr: true, startsExpr: true}),\n  braceR: new TokenType(\"}\"),\n  parenL: new TokenType(\"(\", {beforeExpr: true, startsExpr: true}),\n  parenR: new TokenType(\")\"),\n  comma: new TokenType(\",\", beforeExpr),\n  semi: new TokenType(\";\", beforeExpr),\n  colon: new TokenType(\":\", beforeExpr),\n  dot: new TokenType(\".\"),\n  question: new TokenType(\"?\", beforeExpr),\n  questionDot: new TokenType(\"?.\"),\n  arrow: new TokenType(\"=>\", beforeExpr),\n  template: new TokenType(\"template\"),\n  invalidTemplate: new TokenType(\"invalidTemplate\"),\n  ellipsis: new TokenType(\"...\", beforeExpr),\n  backQuote: new TokenType(\"`\", startsExpr),\n  dollarBraceL: new TokenType(\"${\", {beforeExpr: true, startsExpr: true}),\n\n  // Operators. These carry several kinds of properties to help the\n  // parser use them properly (the presence of these properties is\n  // what categorizes them as operators).\n  //\n  // `binop`, when present, specifies that this operator is a binary\n  // operator, and will refer to its precedence.\n  //\n  // `prefix` and `postfix` mark the operator as a prefix or postfix\n  // unary operator.\n  //\n  // `isAssign` marks all of `=`, `+=`, `-=` etcetera, which act as\n  // binary operators with a very low precedence, that should result\n  // in AssignmentExpression nodes.\n\n  eq: new TokenType(\"=\", {beforeExpr: true, isAssign: true}),\n  assign: new TokenType(\"_=\", {beforeExpr: true, isAssign: true}),\n  incDec: new TokenType(\"++/--\", {prefix: true, postfix: true, startsExpr: true}),\n  prefix: new TokenType(\"!/~\", {beforeExpr: true, prefix: true, startsExpr: true}),\n  logicalOR: binop(\"||\", 1),\n  logicalAND: binop(\"&&\", 2),\n  bitwiseOR: binop(\"|\", 3),\n  bitwiseXOR: binop(\"^\", 4),\n  bitwiseAND: binop(\"&\", 5),\n  equality: binop(\"==/!=/===/!==\", 6),\n  relational: binop(\"</>/<=/>=\", 7),\n  bitShift: binop(\"<</>>/>>>\", 8),\n  plusMin: new TokenType(\"+/-\", {beforeExpr: true, binop: 9, prefix: true, startsExpr: true}),\n  modulo: binop(\"%\", 10),\n  star: binop(\"*\", 10),\n  slash: binop(\"/\", 10),\n  starstar: new TokenType(\"**\", {beforeExpr: true}),\n  coalesce: binop(\"??\", 1),\n\n  // Keyword token types.\n  _break: kw(\"break\"),\n  _case: kw(\"case\", beforeExpr),\n  _catch: kw(\"catch\"),\n  _continue: kw(\"continue\"),\n  _debugger: kw(\"debugger\"),\n  _default: kw(\"default\", beforeExpr),\n  _do: kw(\"do\", {isLoop: true, beforeExpr: true}),\n  _else: kw(\"else\", beforeExpr),\n  _finally: kw(\"finally\"),\n  _for: kw(\"for\", {isLoop: true}),\n  _function: kw(\"function\", startsExpr),\n  _if: kw(\"if\"),\n  _return: kw(\"return\", beforeExpr),\n  _switch: kw(\"switch\"),\n  _throw: kw(\"throw\", beforeExpr),\n  _try: kw(\"try\"),\n  _var: kw(\"var\"),\n  _const: kw(\"const\"),\n  _while: kw(\"while\", {isLoop: true}),\n  _with: kw(\"with\"),\n  _new: kw(\"new\", {beforeExpr: true, startsExpr: true}),\n  _this: kw(\"this\", startsExpr),\n  _super: kw(\"super\", startsExpr),\n  _class: kw(\"class\", startsExpr),\n  _extends: kw(\"extends\", beforeExpr),\n  _export: kw(\"export\"),\n  _import: kw(\"import\", startsExpr),\n  _null: kw(\"null\", startsExpr),\n  _true: kw(\"true\", startsExpr),\n  _false: kw(\"false\", startsExpr),\n  _in: kw(\"in\", {beforeExpr: true, binop: 7}),\n  _instanceof: kw(\"instanceof\", {beforeExpr: true, binop: 7}),\n  _typeof: kw(\"typeof\", {beforeExpr: true, prefix: true, startsExpr: true}),\n  _void: kw(\"void\", {beforeExpr: true, prefix: true, startsExpr: true}),\n  _delete: kw(\"delete\", {beforeExpr: true, prefix: true, startsExpr: true})\n};\n\n// Matches a whole line break (where CRLF is considered a single\n// line break). Used to count lines.\n\nvar lineBreak = /\\r\\n?|\\n|\\u2028|\\u2029/;\nvar lineBreakG = new RegExp(lineBreak.source, \"g\");\n\nfunction isNewLine(code, ecma2019String) {\n  return code === 10 || code === 13 || (!ecma2019String && (code === 0x2028 || code === 0x2029))\n}\n\nvar nonASCIIwhitespace = /[\\u1680\\u2000-\\u200a\\u202f\\u205f\\u3000\\ufeff]/;\n\nvar skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g;\n\nvar ref = Object.prototype;\nvar hasOwnProperty = ref.hasOwnProperty;\nvar toString = ref.toString;\n\n// Checks if an object has a property.\n\nfunction has(obj, propName) {\n  return hasOwnProperty.call(obj, propName)\n}\n\nvar isArray = Array.isArray || (function (obj) { return (\n  toString.call(obj) === \"[object Array]\"\n); });\n\nfunction wordsRegexp(words) {\n  return new RegExp(\"^(?:\" + words.replace(/ /g, \"|\") + \")$\")\n}\n\n// These are used when `options.locations` is on, for the\n// `startLoc` and `endLoc` properties.\n\nvar Position = function Position(line, col) {\n  this.line = line;\n  this.column = col;\n};\n\nPosition.prototype.offset = function offset (n) {\n  return new Position(this.line, this.column + n)\n};\n\nvar SourceLocation = function SourceLocation(p, start, end) {\n  this.start = start;\n  this.end = end;\n  if (p.sourceFile !== null) { this.source = p.sourceFile; }\n};\n\n// The `getLineInfo` function is mostly useful when the\n// `locations` option is off (for performance reasons) and you\n// want to find the line/column position for a given character\n// offset. `input` should be the code string that the offset refers\n// into.\n\nfunction getLineInfo(input, offset) {\n  for (var line = 1, cur = 0;;) {\n    lineBreakG.lastIndex = cur;\n    var match = lineBreakG.exec(input);\n    if (match && match.index < offset) {\n      ++line;\n      cur = match.index + match[0].length;\n    } else {\n      return new Position(line, offset - cur)\n    }\n  }\n}\n\n// A second optional argument can be given to further configure\n// the parser process. These options are recognized:\n\nvar defaultOptions = {\n  // `ecmaVersion` indicates the ECMAScript version to parse. Must be\n  // either 3, 5, 6 (2015), 7 (2016), 8 (2017), 9 (2018), or 10\n  // (2019). This influences support for strict mode, the set of\n  // reserved words, and support for new syntax features. The default\n  // is 10.\n  ecmaVersion: 10,\n  // `sourceType` indicates the mode the code should be parsed in.\n  // Can be either `\"script\"` or `\"module\"`. This influences global\n  // strict mode and parsing of `import` and `export` declarations.\n  sourceType: \"script\",\n  // `onInsertedSemicolon` can be a callback that will be called\n  // when a semicolon is automatically inserted. It will be passed\n  // the position of the comma as an offset, and if `locations` is\n  // enabled, it is given the location as a `{line, column}` object\n  // as second argument.\n  onInsertedSemicolon: null,\n  // `onTrailingComma` is similar to `onInsertedSemicolon`, but for\n  // trailing commas.\n  onTrailingComma: null,\n  // By default, reserved words are only enforced if ecmaVersion >= 5.\n  // Set `allowReserved` to a boolean value to explicitly turn this on\n  // an off. When this option has the value \"never\", reserved words\n  // and keywords can also not be used as property names.\n  allowReserved: null,\n  // When enabled, a return at the top level is not considered an\n  // error.\n  allowReturnOutsideFunction: false,\n  // When enabled, import/export statements are not constrained to\n  // appearing at the top of the program.\n  allowImportExportEverywhere: false,\n  // When enabled, await identifiers are allowed to appear at the top-level scope,\n  // but they are still not allowed in non-async functions.\n  allowAwaitOutsideFunction: false,\n  // When enabled, hashbang directive in the beginning of file\n  // is allowed and treated as a line comment.\n  allowHashBang: false,\n  // When `locations` is on, `loc` properties holding objects with\n  // `start` and `end` properties in `{line, column}` form (with\n  // line being 1-based and column 0-based) will be attached to the\n  // nodes.\n  locations: false,\n  // A function can be passed as `onToken` option, which will\n  // cause Acorn to call that function with object in the same\n  // format as tokens returned from `tokenizer().getToken()`. Note\n  // that you are not allowed to call the parser from the\n  // callback—that will corrupt its internal state.\n  onToken: null,\n  // A function can be passed as `onComment` option, which will\n  // cause Acorn to call that function with `(block, text, start,\n  // end)` parameters whenever a comment is skipped. `block` is a\n  // boolean indicating whether this is a block (`/* */`) comment,\n  // `text` is the content of the comment, and `start` and `end` are\n  // character offsets that denote the start and end of the comment.\n  // When the `locations` option is on, two more parameters are\n  // passed, the full `{line, column}` locations of the start and\n  // end of the comments. Note that you are not allowed to call the\n  // parser from the callback—that will corrupt its internal state.\n  onComment: null,\n  // Nodes have their start and end characters offsets recorded in\n  // `start` and `end` properties (directly on the node, rather than\n  // the `loc` object, which holds line/column data. To also add a\n  // [semi-standardized][range] `range` property holding a `[start,\n  // end]` array with the same numbers, set the `ranges` option to\n  // `true`.\n  //\n  // [range]: https://bugzilla.mozilla.org/show_bug.cgi?id=745678\n  ranges: false,\n  // It is possible to parse multiple files into a single AST by\n  // passing the tree produced by parsing the first file as\n  // `program` option in subsequent parses. This will add the\n  // toplevel forms of the parsed file to the `Program` (top) node\n  // of an existing parse tree.\n  program: null,\n  // When `locations` is on, you can pass this to record the source\n  // file in every node's `loc` object.\n  sourceFile: null,\n  // This value, if given, is stored in every node, whether\n  // `locations` is on or off.\n  directSourceFile: null,\n  // When enabled, parenthesized expressions are represented by\n  // (non-standard) ParenthesizedExpression nodes\n  preserveParens: false\n};\n\n// Interpret and default an options object\n\nfunction getOptions(opts) {\n  var options = {};\n\n  for (var opt in defaultOptions)\n    { options[opt] = opts && has(opts, opt) ? opts[opt] : defaultOptions[opt]; }\n\n  if (options.ecmaVersion >= 2015)\n    { options.ecmaVersion -= 2009; }\n\n  if (options.allowReserved == null)\n    { options.allowReserved = options.ecmaVersion < 5; }\n\n  if (isArray(options.onToken)) {\n    var tokens = options.onToken;\n    options.onToken = function (token) { return tokens.push(token); };\n  }\n  if (isArray(options.onComment))\n    { options.onComment = pushComment(options, options.onComment); }\n\n  return options\n}\n\nfunction pushComment(options, array) {\n  return function(block, text, start, end, startLoc, endLoc) {\n    var comment = {\n      type: block ? \"Block\" : \"Line\",\n      value: text,\n      start: start,\n      end: end\n    };\n    if (options.locations)\n      { comment.loc = new SourceLocation(this, startLoc, endLoc); }\n    if (options.ranges)\n      { comment.range = [start, end]; }\n    array.push(comment);\n  }\n}\n\n// Each scope gets a bitset that may contain these flags\nvar\n    SCOPE_TOP = 1,\n    SCOPE_FUNCTION = 2,\n    SCOPE_VAR = SCOPE_TOP | SCOPE_FUNCTION,\n    SCOPE_ASYNC = 4,\n    SCOPE_GENERATOR = 8,\n    SCOPE_ARROW = 16,\n    SCOPE_SIMPLE_CATCH = 32,\n    SCOPE_SUPER = 64,\n    SCOPE_DIRECT_SUPER = 128;\n\nfunction functionFlags(async, generator) {\n  return SCOPE_FUNCTION | (async ? SCOPE_ASYNC : 0) | (generator ? SCOPE_GENERATOR : 0)\n}\n\n// Used in checkLVal and declareName to determine the type of a binding\nvar\n    BIND_NONE = 0, // Not a binding\n    BIND_VAR = 1, // Var-style binding\n    BIND_LEXICAL = 2, // Let- or const-style binding\n    BIND_FUNCTION = 3, // Function declaration\n    BIND_SIMPLE_CATCH = 4, // Simple (identifier pattern) catch binding\n    BIND_OUTSIDE = 5; // Special case for function names as bound inside the function\n\nvar Parser = function Parser(options, input, startPos) {\n  this.options = options = getOptions(options);\n  this.sourceFile = options.sourceFile;\n  this.keywords = wordsRegexp(keywords[options.ecmaVersion >= 6 ? 6 : options.sourceType === \"module\" ? \"5module\" : 5]);\n  var reserved = \"\";\n  if (options.allowReserved !== true) {\n    for (var v = options.ecmaVersion;; v--)\n      { if (reserved = reservedWords[v]) { break } }\n    if (options.sourceType === \"module\") { reserved += \" await\"; }\n  }\n  this.reservedWords = wordsRegexp(reserved);\n  var reservedStrict = (reserved ? reserved + \" \" : \"\") + reservedWords.strict;\n  this.reservedWordsStrict = wordsRegexp(reservedStrict);\n  this.reservedWordsStrictBind = wordsRegexp(reservedStrict + \" \" + reservedWords.strictBind);\n  this.input = String(input);\n\n  // Used to signal to callers of `readWord1` whether the word\n  // contained any escape sequences. This is needed because words with\n  // escape sequences must not be interpreted as keywords.\n  this.containsEsc = false;\n\n  // Set up token state\n\n  // The current position of the tokenizer in the input.\n  if (startPos) {\n    this.pos = startPos;\n    this.lineStart = this.input.lastIndexOf(\"\\n\", startPos - 1) + 1;\n    this.curLine = this.input.slice(0, this.lineStart).split(lineBreak).length;\n  } else {\n    this.pos = this.lineStart = 0;\n    this.curLine = 1;\n  }\n\n  // Properties of the current token:\n  // Its type\n  this.type = types.eof;\n  // For tokens that include more information than their type, the value\n  this.value = null;\n  // Its start and end offset\n  this.start = this.end = this.pos;\n  // And, if locations are used, the {line, column} object\n  // corresponding to those offsets\n  this.startLoc = this.endLoc = this.curPosition();\n\n  // Position information for the previous token\n  this.lastTokEndLoc = this.lastTokStartLoc = null;\n  this.lastTokStart = this.lastTokEnd = this.pos;\n\n  // The context stack is used to superficially track syntactic\n  // context to predict whether a regular expression is allowed in a\n  // given position.\n  this.context = this.initialContext();\n  this.exprAllowed = true;\n\n  // Figure out if it's a module code.\n  this.inModule = options.sourceType === \"module\";\n  this.strict = this.inModule || this.strictDirective(this.pos);\n\n  // Used to signify the start of a potential arrow function\n  this.potentialArrowAt = -1;\n\n  // Positions to delayed-check that yield/await does not exist in default parameters.\n  this.yieldPos = this.awaitPos = this.awaitIdentPos = 0;\n  // Labels in scope.\n  this.labels = [];\n  // Thus-far undefined exports.\n  this.undefinedExports = {};\n\n  // If enabled, skip leading hashbang line.\n  if (this.pos === 0 && options.allowHashBang && this.input.slice(0, 2) === \"#!\")\n    { this.skipLineComment(2); }\n\n  // Scope tracking for duplicate variable names (see scope.js)\n  this.scopeStack = [];\n  this.enterScope(SCOPE_TOP);\n\n  // For RegExp validation\n  this.regexpState = null;\n};\n\nvar prototypeAccessors = { inFunction: { configurable: true },inGenerator: { configurable: true },inAsync: { configurable: true },allowSuper: { configurable: true },allowDirectSuper: { configurable: true },treatFunctionsAsVar: { configurable: true } };\n\nParser.prototype.parse = function parse () {\n  var node = this.options.program || this.startNode();\n  this.nextToken();\n  return this.parseTopLevel(node)\n};\n\nprototypeAccessors.inFunction.get = function () { return (this.currentVarScope().flags & SCOPE_FUNCTION) > 0 };\nprototypeAccessors.inGenerator.get = function () { return (this.currentVarScope().flags & SCOPE_GENERATOR) > 0 };\nprototypeAccessors.inAsync.get = function () { return (this.currentVarScope().flags & SCOPE_ASYNC) > 0 };\nprototypeAccessors.allowSuper.get = function () { return (this.currentThisScope().flags & SCOPE_SUPER) > 0 };\nprototypeAccessors.allowDirectSuper.get = function () { return (this.currentThisScope().flags & SCOPE_DIRECT_SUPER) > 0 };\nprototypeAccessors.treatFunctionsAsVar.get = function () { return this.treatFunctionsAsVarInScope(this.currentScope()) };\n\n// Switch to a getter for 7.0.0.\nParser.prototype.inNonArrowFunction = function inNonArrowFunction () { return (this.currentThisScope().flags & SCOPE_FUNCTION) > 0 };\n\nParser.extend = function extend () {\n    var plugins = [], len = arguments.length;\n    while ( len-- ) plugins[ len ] = arguments[ len ];\n\n  var cls = this;\n  for (var i = 0; i < plugins.length; i++) { cls = plugins[i](cls); }\n  return cls\n};\n\nParser.parse = function parse (input, options) {\n  return new this(options, input).parse()\n};\n\nParser.parseExpressionAt = function parseExpressionAt (input, pos, options) {\n  var parser = new this(options, input, pos);\n  parser.nextToken();\n  return parser.parseExpression()\n};\n\nParser.tokenizer = function tokenizer (input, options) {\n  return new this(options, input)\n};\n\nObject.defineProperties( Parser.prototype, prototypeAccessors );\n\nvar pp = Parser.prototype;\n\n// ## Parser utilities\n\nvar literal = /^(?:'((?:\\\\.|[^'\\\\])*?)'|\"((?:\\\\.|[^\"\\\\])*?)\")/;\npp.strictDirective = function(start) {\n  for (;;) {\n    // Try to find string literal.\n    skipWhiteSpace.lastIndex = start;\n    start += skipWhiteSpace.exec(this.input)[0].length;\n    var match = literal.exec(this.input.slice(start));\n    if (!match) { return false }\n    if ((match[1] || match[2]) === \"use strict\") {\n      skipWhiteSpace.lastIndex = start + match[0].length;\n      var spaceAfter = skipWhiteSpace.exec(this.input), end = spaceAfter.index + spaceAfter[0].length;\n      var next = this.input.charAt(end);\n      return next === \";\" || next === \"}\" ||\n        (lineBreak.test(spaceAfter[0]) &&\n         !(/[(`.[+\\-/*%<>=,?^&]/.test(next) || next === \"!\" && this.input.charAt(end + 1) === \"=\"))\n    }\n    start += match[0].length;\n\n    // Skip semicolon, if any.\n    skipWhiteSpace.lastIndex = start;\n    start += skipWhiteSpace.exec(this.input)[0].length;\n    if (this.input[start] === \";\")\n      { start++; }\n  }\n};\n\n// Predicate that tests whether the next token is of the given\n// type, and if yes, consumes it as a side effect.\n\npp.eat = function(type) {\n  if (this.type === type) {\n    this.next();\n    return true\n  } else {\n    return false\n  }\n};\n\n// Tests whether parsed token is a contextual keyword.\n\npp.isContextual = function(name) {\n  return this.type === types.name && this.value === name && !this.containsEsc\n};\n\n// Consumes contextual keyword if possible.\n\npp.eatContextual = function(name) {\n  if (!this.isContextual(name)) { return false }\n  this.next();\n  return true\n};\n\n// Asserts that following token is given contextual keyword.\n\npp.expectContextual = function(name) {\n  if (!this.eatContextual(name)) { this.unexpected(); }\n};\n\n// Test whether a semicolon can be inserted at the current position.\n\npp.canInsertSemicolon = function() {\n  return this.type === types.eof ||\n    this.type === types.braceR ||\n    lineBreak.test(this.input.slice(this.lastTokEnd, this.start))\n};\n\npp.insertSemicolon = function() {\n  if (this.canInsertSemicolon()) {\n    if (this.options.onInsertedSemicolon)\n      { this.options.onInsertedSemicolon(this.lastTokEnd, this.lastTokEndLoc); }\n    return true\n  }\n};\n\n// Consume a semicolon, or, failing that, see if we are allowed to\n// pretend that there is a semicolon at this position.\n\npp.semicolon = function() {\n  if (!this.eat(types.semi) && !this.insertSemicolon()) { this.unexpected(); }\n};\n\npp.afterTrailingComma = function(tokType, notNext) {\n  if (this.type === tokType) {\n    if (this.options.onTrailingComma)\n      { this.options.onTrailingComma(this.lastTokStart, this.lastTokStartLoc); }\n    if (!notNext)\n      { this.next(); }\n    return true\n  }\n};\n\n// Expect a token of a given type. If found, consume it, otherwise,\n// raise an unexpected token error.\n\npp.expect = function(type) {\n  this.eat(type) || this.unexpected();\n};\n\n// Raise an unexpected token error.\n\npp.unexpected = function(pos) {\n  this.raise(pos != null ? pos : this.start, \"Unexpected token\");\n};\n\nfunction DestructuringErrors() {\n  this.shorthandAssign =\n  this.trailingComma =\n  this.parenthesizedAssign =\n  this.parenthesizedBind =\n  this.doubleProto =\n    -1;\n}\n\npp.checkPatternErrors = function(refDestructuringErrors, isAssign) {\n  if (!refDestructuringErrors) { return }\n  if (refDestructuringErrors.trailingComma > -1)\n    { this.raiseRecoverable(refDestructuringErrors.trailingComma, \"Comma is not permitted after the rest element\"); }\n  var parens = isAssign ? refDestructuringErrors.parenthesizedAssign : refDestructuringErrors.parenthesizedBind;\n  if (parens > -1) { this.raiseRecoverable(parens, \"Parenthesized pattern\"); }\n};\n\npp.checkExpressionErrors = function(refDestructuringErrors, andThrow) {\n  if (!refDestructuringErrors) { return false }\n  var shorthandAssign = refDestructuringErrors.shorthandAssign;\n  var doubleProto = refDestructuringErrors.doubleProto;\n  if (!andThrow) { return shorthandAssign >= 0 || doubleProto >= 0 }\n  if (shorthandAssign >= 0)\n    { this.raise(shorthandAssign, \"Shorthand property assignments are valid only in destructuring patterns\"); }\n  if (doubleProto >= 0)\n    { this.raiseRecoverable(doubleProto, \"Redefinition of __proto__ property\"); }\n};\n\npp.checkYieldAwaitInDefaultParams = function() {\n  if (this.yieldPos && (!this.awaitPos || this.yieldPos < this.awaitPos))\n    { this.raise(this.yieldPos, \"Yield expression cannot be a default value\"); }\n  if (this.awaitPos)\n    { this.raise(this.awaitPos, \"Await expression cannot be a default value\"); }\n};\n\npp.isSimpleAssignTarget = function(expr) {\n  if (expr.type === \"ParenthesizedExpression\")\n    { return this.isSimpleAssignTarget(expr.expression) }\n  return expr.type === \"Identifier\" || expr.type === \"MemberExpression\"\n};\n\nvar pp$1 = Parser.prototype;\n\n// ### Statement parsing\n\n// Parse a program. Initializes the parser, reads any number of\n// statements, and wraps them in a Program node.  Optionally takes a\n// `program` argument.  If present, the statements will be appended\n// to its body instead of creating a new node.\n\npp$1.parseTopLevel = function(node) {\n  var exports = {};\n  if (!node.body) { node.body = []; }\n  while (this.type !== types.eof) {\n    var stmt = this.parseStatement(null, true, exports);\n    node.body.push(stmt);\n  }\n  if (this.inModule)\n    { for (var i = 0, list = Object.keys(this.undefinedExports); i < list.length; i += 1)\n      {\n        var name = list[i];\n\n        this.raiseRecoverable(this.undefinedExports[name].start, (\"Export '\" + name + \"' is not defined\"));\n      } }\n  this.adaptDirectivePrologue(node.body);\n  this.next();\n  node.sourceType = this.options.sourceType;\n  return this.finishNode(node, \"Program\")\n};\n\nvar loopLabel = {kind: \"loop\"}, switchLabel = {kind: \"switch\"};\n\npp$1.isLet = function(context) {\n  if (this.options.ecmaVersion < 6 || !this.isContextual(\"let\")) { return false }\n  skipWhiteSpace.lastIndex = this.pos;\n  var skip = skipWhiteSpace.exec(this.input);\n  var next = this.pos + skip[0].length, nextCh = this.input.charCodeAt(next);\n  // For ambiguous cases, determine if a LexicalDeclaration (or only a\n  // Statement) is allowed here. If context is not empty then only a Statement\n  // is allowed. However, `let [` is an explicit negative lookahead for\n  // ExpressionStatement, so special-case it first.\n  if (nextCh === 91) { return true } // '['\n  if (context) { return false }\n\n  if (nextCh === 123) { return true } // '{'\n  if (isIdentifierStart(nextCh, true)) {\n    var pos = next + 1;\n    while (isIdentifierChar(this.input.charCodeAt(pos), true)) { ++pos; }\n    var ident = this.input.slice(next, pos);\n    if (!keywordRelationalOperator.test(ident)) { return true }\n  }\n  return false\n};\n\n// check 'async [no LineTerminator here] function'\n// - 'async /*foo*/ function' is OK.\n// - 'async /*\\n*/ function' is invalid.\npp$1.isAsyncFunction = function() {\n  if (this.options.ecmaVersion < 8 || !this.isContextual(\"async\"))\n    { return false }\n\n  skipWhiteSpace.lastIndex = this.pos;\n  var skip = skipWhiteSpace.exec(this.input);\n  var next = this.pos + skip[0].length;\n  return !lineBreak.test(this.input.slice(this.pos, next)) &&\n    this.input.slice(next, next + 8) === \"function\" &&\n    (next + 8 === this.input.length || !isIdentifierChar(this.input.charAt(next + 8)))\n};\n\n// Parse a single statement.\n//\n// If expecting a statement and finding a slash operator, parse a\n// regular expression literal. This is to handle cases like\n// `if (foo) /blah/.exec(foo)`, where looking at the previous token\n// does not help.\n\npp$1.parseStatement = function(context, topLevel, exports) {\n  var starttype = this.type, node = this.startNode(), kind;\n\n  if (this.isLet(context)) {\n    starttype = types._var;\n    kind = \"let\";\n  }\n\n  // Most types of statements are recognized by the keyword they\n  // start with. Many are trivial to parse, some require a bit of\n  // complexity.\n\n  switch (starttype) {\n  case types._break: case types._continue: return this.parseBreakContinueStatement(node, starttype.keyword)\n  case types._debugger: return this.parseDebuggerStatement(node)\n  case types._do: return this.parseDoStatement(node)\n  case types._for: return this.parseForStatement(node)\n  case types._function:\n    // Function as sole body of either an if statement or a labeled statement\n    // works, but not when it is part of a labeled statement that is the sole\n    // body of an if statement.\n    if ((context && (this.strict || context !== \"if\" && context !== \"label\")) && this.options.ecmaVersion >= 6) { this.unexpected(); }\n    return this.parseFunctionStatement(node, false, !context)\n  case types._class:\n    if (context) { this.unexpected(); }\n    return this.parseClass(node, true)\n  case types._if: return this.parseIfStatement(node)\n  case types._return: return this.parseReturnStatement(node)\n  case types._switch: return this.parseSwitchStatement(node)\n  case types._throw: return this.parseThrowStatement(node)\n  case types._try: return this.parseTryStatement(node)\n  case types._const: case types._var:\n    kind = kind || this.value;\n    if (context && kind !== \"var\") { this.unexpected(); }\n    return this.parseVarStatement(node, kind)\n  case types._while: return this.parseWhileStatement(node)\n  case types._with: return this.parseWithStatement(node)\n  case types.braceL: return this.parseBlock(true, node)\n  case types.semi: return this.parseEmptyStatement(node)\n  case types._export:\n  case types._import:\n    if (this.options.ecmaVersion > 10 && starttype === types._import) {\n      skipWhiteSpace.lastIndex = this.pos;\n      var skip = skipWhiteSpace.exec(this.input);\n      var next = this.pos + skip[0].length, nextCh = this.input.charCodeAt(next);\n      if (nextCh === 40 || nextCh === 46) // '(' or '.'\n        { return this.parseExpressionStatement(node, this.parseExpression()) }\n    }\n\n    if (!this.options.allowImportExportEverywhere) {\n      if (!topLevel)\n        { this.raise(this.start, \"'import' and 'export' may only appear at the top level\"); }\n      if (!this.inModule)\n        { this.raise(this.start, \"'import' and 'export' may appear only with 'sourceType: module'\"); }\n    }\n    return starttype === types._import ? this.parseImport(node) : this.parseExport(node, exports)\n\n    // If the statement does not start with a statement keyword or a\n    // brace, it's an ExpressionStatement or LabeledStatement. We\n    // simply start parsing an expression, and afterwards, if the\n    // next token is a colon and the expression was a simple\n    // Identifier node, we switch to interpreting it as a label.\n  default:\n    if (this.isAsyncFunction()) {\n      if (context) { this.unexpected(); }\n      this.next();\n      return this.parseFunctionStatement(node, true, !context)\n    }\n\n    var maybeName = this.value, expr = this.parseExpression();\n    if (starttype === types.name && expr.type === \"Identifier\" && this.eat(types.colon))\n      { return this.parseLabeledStatement(node, maybeName, expr, context) }\n    else { return this.parseExpressionStatement(node, expr) }\n  }\n};\n\npp$1.parseBreakContinueStatement = function(node, keyword) {\n  var isBreak = keyword === \"break\";\n  this.next();\n  if (this.eat(types.semi) || this.insertSemicolon()) { node.label = null; }\n  else if (this.type !== types.name) { this.unexpected(); }\n  else {\n    node.label = this.parseIdent();\n    this.semicolon();\n  }\n\n  // Verify that there is an actual destination to break or\n  // continue to.\n  var i = 0;\n  for (; i < this.labels.length; ++i) {\n    var lab = this.labels[i];\n    if (node.label == null || lab.name === node.label.name) {\n      if (lab.kind != null && (isBreak || lab.kind === \"loop\")) { break }\n      if (node.label && isBreak) { break }\n    }\n  }\n  if (i === this.labels.length) { this.raise(node.start, \"Unsyntactic \" + keyword); }\n  return this.finishNode(node, isBreak ? \"BreakStatement\" : \"ContinueStatement\")\n};\n\npp$1.parseDebuggerStatement = function(node) {\n  this.next();\n  this.semicolon();\n  return this.finishNode(node, \"DebuggerStatement\")\n};\n\npp$1.parseDoStatement = function(node) {\n  this.next();\n  this.labels.push(loopLabel);\n  node.body = this.parseStatement(\"do\");\n  this.labels.pop();\n  this.expect(types._while);\n  node.test = this.parseParenExpression();\n  if (this.options.ecmaVersion >= 6)\n    { this.eat(types.semi); }\n  else\n    { this.semicolon(); }\n  return this.finishNode(node, \"DoWhileStatement\")\n};\n\n// Disambiguating between a `for` and a `for`/`in` or `for`/`of`\n// loop is non-trivial. Basically, we have to parse the init `var`\n// statement or expression, disallowing the `in` operator (see\n// the second parameter to `parseExpression`), and then check\n// whether the next token is `in` or `of`. When there is no init\n// part (semicolon immediately after the opening parenthesis), it\n// is a regular `for` loop.\n\npp$1.parseForStatement = function(node) {\n  this.next();\n  var awaitAt = (this.options.ecmaVersion >= 9 && (this.inAsync || (!this.inFunction && this.options.allowAwaitOutsideFunction)) && this.eatContextual(\"await\")) ? this.lastTokStart : -1;\n  this.labels.push(loopLabel);\n  this.enterScope(0);\n  this.expect(types.parenL);\n  if (this.type === types.semi) {\n    if (awaitAt > -1) { this.unexpected(awaitAt); }\n    return this.parseFor(node, null)\n  }\n  var isLet = this.isLet();\n  if (this.type === types._var || this.type === types._const || isLet) {\n    var init$1 = this.startNode(), kind = isLet ? \"let\" : this.value;\n    this.next();\n    this.parseVar(init$1, true, kind);\n    this.finishNode(init$1, \"VariableDeclaration\");\n    if ((this.type === types._in || (this.options.ecmaVersion >= 6 && this.isContextual(\"of\"))) && init$1.declarations.length === 1) {\n      if (this.options.ecmaVersion >= 9) {\n        if (this.type === types._in) {\n          if (awaitAt > -1) { this.unexpected(awaitAt); }\n        } else { node.await = awaitAt > -1; }\n      }\n      return this.parseForIn(node, init$1)\n    }\n    if (awaitAt > -1) { this.unexpected(awaitAt); }\n    return this.parseFor(node, init$1)\n  }\n  var refDestructuringErrors = new DestructuringErrors;\n  var init = this.parseExpression(true, refDestructuringErrors);\n  if (this.type === types._in || (this.options.ecmaVersion >= 6 && this.isContextual(\"of\"))) {\n    if (this.options.ecmaVersion >= 9) {\n      if (this.type === types._in) {\n        if (awaitAt > -1) { this.unexpected(awaitAt); }\n      } else { node.await = awaitAt > -1; }\n    }\n    this.toAssignable(init, false, refDestructuringErrors);\n    this.checkLVal(init);\n    return this.parseForIn(node, init)\n  } else {\n    this.checkExpressionErrors(refDestructuringErrors, true);\n  }\n  if (awaitAt > -1) { this.unexpected(awaitAt); }\n  return this.parseFor(node, init)\n};\n\npp$1.parseFunctionStatement = function(node, isAsync, declarationPosition) {\n  this.next();\n  return this.parseFunction(node, FUNC_STATEMENT | (declarationPosition ? 0 : FUNC_HANGING_STATEMENT), false, isAsync)\n};\n\npp$1.parseIfStatement = function(node) {\n  this.next();\n  node.test = this.parseParenExpression();\n  // allow function declarations in branches, but only in non-strict mode\n  node.consequent = this.parseStatement(\"if\");\n  node.alternate = this.eat(types._else) ? this.parseStatement(\"if\") : null;\n  return this.finishNode(node, \"IfStatement\")\n};\n\npp$1.parseReturnStatement = function(node) {\n  if (!this.inFunction && !this.options.allowReturnOutsideFunction)\n    { this.raise(this.start, \"'return' outside of function\"); }\n  this.next();\n\n  // In `return` (and `break`/`continue`), the keywords with\n  // optional arguments, we eagerly look for a semicolon or the\n  // possibility to insert one.\n\n  if (this.eat(types.semi) || this.insertSemicolon()) { node.argument = null; }\n  else { node.argument = this.parseExpression(); this.semicolon(); }\n  return this.finishNode(node, \"ReturnStatement\")\n};\n\npp$1.parseSwitchStatement = function(node) {\n  this.next();\n  node.discriminant = this.parseParenExpression();\n  node.cases = [];\n  this.expect(types.braceL);\n  this.labels.push(switchLabel);\n  this.enterScope(0);\n\n  // Statements under must be grouped (by label) in SwitchCase\n  // nodes. `cur` is used to keep the node that we are currently\n  // adding statements to.\n\n  var cur;\n  for (var sawDefault = false; this.type !== types.braceR;) {\n    if (this.type === types._case || this.type === types._default) {\n      var isCase = this.type === types._case;\n      if (cur) { this.finishNode(cur, \"SwitchCase\"); }\n      node.cases.push(cur = this.startNode());\n      cur.consequent = [];\n      this.next();\n      if (isCase) {\n        cur.test = this.parseExpression();\n      } else {\n        if (sawDefault) { this.raiseRecoverable(this.lastTokStart, \"Multiple default clauses\"); }\n        sawDefault = true;\n        cur.test = null;\n      }\n      this.expect(types.colon);\n    } else {\n      if (!cur) { this.unexpected(); }\n      cur.consequent.push(this.parseStatement(null));\n    }\n  }\n  this.exitScope();\n  if (cur) { this.finishNode(cur, \"SwitchCase\"); }\n  this.next(); // Closing brace\n  this.labels.pop();\n  return this.finishNode(node, \"SwitchStatement\")\n};\n\npp$1.parseThrowStatement = function(node) {\n  this.next();\n  if (lineBreak.test(this.input.slice(this.lastTokEnd, this.start)))\n    { this.raise(this.lastTokEnd, \"Illegal newline after throw\"); }\n  node.argument = this.parseExpression();\n  this.semicolon();\n  return this.finishNode(node, \"ThrowStatement\")\n};\n\n// Reused empty array added for node fields that are always empty.\n\nvar empty = [];\n\npp$1.parseTryStatement = function(node) {\n  this.next();\n  node.block = this.parseBlock();\n  node.handler = null;\n  if (this.type === types._catch) {\n    var clause = this.startNode();\n    this.next();\n    if (this.eat(types.parenL)) {\n      clause.param = this.parseBindingAtom();\n      var simple = clause.param.type === \"Identifier\";\n      this.enterScope(simple ? SCOPE_SIMPLE_CATCH : 0);\n      this.checkLVal(clause.param, simple ? BIND_SIMPLE_CATCH : BIND_LEXICAL);\n      this.expect(types.parenR);\n    } else {\n      if (this.options.ecmaVersion < 10) { this.unexpected(); }\n      clause.param = null;\n      this.enterScope(0);\n    }\n    clause.body = this.parseBlock(false);\n    this.exitScope();\n    node.handler = this.finishNode(clause, \"CatchClause\");\n  }\n  node.finalizer = this.eat(types._finally) ? this.parseBlock() : null;\n  if (!node.handler && !node.finalizer)\n    { this.raise(node.start, \"Missing catch or finally clause\"); }\n  return this.finishNode(node, \"TryStatement\")\n};\n\npp$1.parseVarStatement = function(node, kind) {\n  this.next();\n  this.parseVar(node, false, kind);\n  this.semicolon();\n  return this.finishNode(node, \"VariableDeclaration\")\n};\n\npp$1.parseWhileStatement = function(node) {\n  this.next();\n  node.test = this.parseParenExpression();\n  this.labels.push(loopLabel);\n  node.body = this.parseStatement(\"while\");\n  this.labels.pop();\n  return this.finishNode(node, \"WhileStatement\")\n};\n\npp$1.parseWithStatement = function(node) {\n  if (this.strict) { this.raise(this.start, \"'with' in strict mode\"); }\n  this.next();\n  node.object = this.parseParenExpression();\n  node.body = this.parseStatement(\"with\");\n  return this.finishNode(node, \"WithStatement\")\n};\n\npp$1.parseEmptyStatement = function(node) {\n  this.next();\n  return this.finishNode(node, \"EmptyStatement\")\n};\n\npp$1.parseLabeledStatement = function(node, maybeName, expr, context) {\n  for (var i$1 = 0, list = this.labels; i$1 < list.length; i$1 += 1)\n    {\n    var label = list[i$1];\n\n    if (label.name === maybeName)\n      { this.raise(expr.start, \"Label '\" + maybeName + \"' is already declared\");\n  } }\n  var kind = this.type.isLoop ? \"loop\" : this.type === types._switch ? \"switch\" : null;\n  for (var i = this.labels.length - 1; i >= 0; i--) {\n    var label$1 = this.labels[i];\n    if (label$1.statementStart === node.start) {\n      // Update information about previous labels on this node\n      label$1.statementStart = this.start;\n      label$1.kind = kind;\n    } else { break }\n  }\n  this.labels.push({name: maybeName, kind: kind, statementStart: this.start});\n  node.body = this.parseStatement(context ? context.indexOf(\"label\") === -1 ? context + \"label\" : context : \"label\");\n  this.labels.pop();\n  node.label = expr;\n  return this.finishNode(node, \"LabeledStatement\")\n};\n\npp$1.parseExpressionStatement = function(node, expr) {\n  node.expression = expr;\n  this.semicolon();\n  return this.finishNode(node, \"ExpressionStatement\")\n};\n\n// Parse a semicolon-enclosed block of statements, handling `\"use\n// strict\"` declarations when `allowStrict` is true (used for\n// function bodies).\n\npp$1.parseBlock = function(createNewLexicalScope, node, exitStrict) {\n  if ( createNewLexicalScope === void 0 ) createNewLexicalScope = true;\n  if ( node === void 0 ) node = this.startNode();\n\n  node.body = [];\n  this.expect(types.braceL);\n  if (createNewLexicalScope) { this.enterScope(0); }\n  while (this.type !== types.braceR) {\n    var stmt = this.parseStatement(null);\n    node.body.push(stmt);\n  }\n  if (exitStrict) { this.strict = false; }\n  this.next();\n  if (createNewLexicalScope) { this.exitScope(); }\n  return this.finishNode(node, \"BlockStatement\")\n};\n\n// Parse a regular `for` loop. The disambiguation code in\n// `parseStatement` will already have parsed the init statement or\n// expression.\n\npp$1.parseFor = function(node, init) {\n  node.init = init;\n  this.expect(types.semi);\n  node.test = this.type === types.semi ? null : this.parseExpression();\n  this.expect(types.semi);\n  node.update = this.type === types.parenR ? null : this.parseExpression();\n  this.expect(types.parenR);\n  node.body = this.parseStatement(\"for\");\n  this.exitScope();\n  this.labels.pop();\n  return this.finishNode(node, \"ForStatement\")\n};\n\n// Parse a `for`/`in` and `for`/`of` loop, which are almost\n// same from parser's perspective.\n\npp$1.parseForIn = function(node, init) {\n  var isForIn = this.type === types._in;\n  this.next();\n\n  if (\n    init.type === \"VariableDeclaration\" &&\n    init.declarations[0].init != null &&\n    (\n      !isForIn ||\n      this.options.ecmaVersion < 8 ||\n      this.strict ||\n      init.kind !== \"var\" ||\n      init.declarations[0].id.type !== \"Identifier\"\n    )\n  ) {\n    this.raise(\n      init.start,\n      ((isForIn ? \"for-in\" : \"for-of\") + \" loop variable declaration may not have an initializer\")\n    );\n  } else if (init.type === \"AssignmentPattern\") {\n    this.raise(init.start, \"Invalid left-hand side in for-loop\");\n  }\n  node.left = init;\n  node.right = isForIn ? this.parseExpression() : this.parseMaybeAssign();\n  this.expect(types.parenR);\n  node.body = this.parseStatement(\"for\");\n  this.exitScope();\n  this.labels.pop();\n  return this.finishNode(node, isForIn ? \"ForInStatement\" : \"ForOfStatement\")\n};\n\n// Parse a list of variable declarations.\n\npp$1.parseVar = function(node, isFor, kind) {\n  node.declarations = [];\n  node.kind = kind;\n  for (;;) {\n    var decl = this.startNode();\n    this.parseVarId(decl, kind);\n    if (this.eat(types.eq)) {\n      decl.init = this.parseMaybeAssign(isFor);\n    } else if (kind === \"const\" && !(this.type === types._in || (this.options.ecmaVersion >= 6 && this.isContextual(\"of\")))) {\n      this.unexpected();\n    } else if (decl.id.type !== \"Identifier\" && !(isFor && (this.type === types._in || this.isContextual(\"of\")))) {\n      this.raise(this.lastTokEnd, \"Complex binding patterns require an initialization value\");\n    } else {\n      decl.init = null;\n    }\n    node.declarations.push(this.finishNode(decl, \"VariableDeclarator\"));\n    if (!this.eat(types.comma)) { break }\n  }\n  return node\n};\n\npp$1.parseVarId = function(decl, kind) {\n  decl.id = this.parseBindingAtom();\n  this.checkLVal(decl.id, kind === \"var\" ? BIND_VAR : BIND_LEXICAL, false);\n};\n\nvar FUNC_STATEMENT = 1, FUNC_HANGING_STATEMENT = 2, FUNC_NULLABLE_ID = 4;\n\n// Parse a function declaration or literal (depending on the\n// `statement & FUNC_STATEMENT`).\n\n// Remove `allowExpressionBody` for 7.0.0, as it is only called with false\npp$1.parseFunction = function(node, statement, allowExpressionBody, isAsync) {\n  this.initFunction(node);\n  if (this.options.ecmaVersion >= 9 || this.options.ecmaVersion >= 6 && !isAsync) {\n    if (this.type === types.star && (statement & FUNC_HANGING_STATEMENT))\n      { this.unexpected(); }\n    node.generator = this.eat(types.star);\n  }\n  if (this.options.ecmaVersion >= 8)\n    { node.async = !!isAsync; }\n\n  if (statement & FUNC_STATEMENT) {\n    node.id = (statement & FUNC_NULLABLE_ID) && this.type !== types.name ? null : this.parseIdent();\n    if (node.id && !(statement & FUNC_HANGING_STATEMENT))\n      // If it is a regular function declaration in sloppy mode, then it is\n      // subject to Annex B semantics (BIND_FUNCTION). Otherwise, the binding\n      // mode depends on properties of the current scope (see\n      // treatFunctionsAsVar).\n      { this.checkLVal(node.id, (this.strict || node.generator || node.async) ? this.treatFunctionsAsVar ? BIND_VAR : BIND_LEXICAL : BIND_FUNCTION); }\n  }\n\n  var oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;\n  this.yieldPos = 0;\n  this.awaitPos = 0;\n  this.awaitIdentPos = 0;\n  this.enterScope(functionFlags(node.async, node.generator));\n\n  if (!(statement & FUNC_STATEMENT))\n    { node.id = this.type === types.name ? this.parseIdent() : null; }\n\n  this.parseFunctionParams(node);\n  this.parseFunctionBody(node, allowExpressionBody, false);\n\n  this.yieldPos = oldYieldPos;\n  this.awaitPos = oldAwaitPos;\n  this.awaitIdentPos = oldAwaitIdentPos;\n  return this.finishNode(node, (statement & FUNC_STATEMENT) ? \"FunctionDeclaration\" : \"FunctionExpression\")\n};\n\npp$1.parseFunctionParams = function(node) {\n  this.expect(types.parenL);\n  node.params = this.parseBindingList(types.parenR, false, this.options.ecmaVersion >= 8);\n  this.checkYieldAwaitInDefaultParams();\n};\n\n// Parse a class declaration or literal (depending on the\n// `isStatement` parameter).\n\npp$1.parseClass = function(node, isStatement) {\n  this.next();\n\n  // ecma-262 14.6 Class Definitions\n  // A class definition is always strict mode code.\n  var oldStrict = this.strict;\n  this.strict = true;\n\n  this.parseClassId(node, isStatement);\n  this.parseClassSuper(node);\n  var classBody = this.startNode();\n  var hadConstructor = false;\n  classBody.body = [];\n  this.expect(types.braceL);\n  while (this.type !== types.braceR) {\n    var element = this.parseClassElement(node.superClass !== null);\n    if (element) {\n      classBody.body.push(element);\n      if (element.type === \"MethodDefinition\" && element.kind === \"constructor\") {\n        if (hadConstructor) { this.raise(element.start, \"Duplicate constructor in the same class\"); }\n        hadConstructor = true;\n      }\n    }\n  }\n  this.strict = oldStrict;\n  this.next();\n  node.body = this.finishNode(classBody, \"ClassBody\");\n  return this.finishNode(node, isStatement ? \"ClassDeclaration\" : \"ClassExpression\")\n};\n\npp$1.parseClassElement = function(constructorAllowsSuper) {\n  var this$1 = this;\n\n  if (this.eat(types.semi)) { return null }\n\n  var method = this.startNode();\n  var tryContextual = function (k, noLineBreak) {\n    if ( noLineBreak === void 0 ) noLineBreak = false;\n\n    var start = this$1.start, startLoc = this$1.startLoc;\n    if (!this$1.eatContextual(k)) { return false }\n    if (this$1.type !== types.parenL && (!noLineBreak || !this$1.canInsertSemicolon())) { return true }\n    if (method.key) { this$1.unexpected(); }\n    method.computed = false;\n    method.key = this$1.startNodeAt(start, startLoc);\n    method.key.name = k;\n    this$1.finishNode(method.key, \"Identifier\");\n    return false\n  };\n\n  method.kind = \"method\";\n  method.static = tryContextual(\"static\");\n  var isGenerator = this.eat(types.star);\n  var isAsync = false;\n  if (!isGenerator) {\n    if (this.options.ecmaVersion >= 8 && tryContextual(\"async\", true)) {\n      isAsync = true;\n      isGenerator = this.options.ecmaVersion >= 9 && this.eat(types.star);\n    } else if (tryContextual(\"get\")) {\n      method.kind = \"get\";\n    } else if (tryContextual(\"set\")) {\n      method.kind = \"set\";\n    }\n  }\n  if (!method.key) { this.parsePropertyName(method); }\n  var key = method.key;\n  var allowsDirectSuper = false;\n  if (!method.computed && !method.static && (key.type === \"Identifier\" && key.name === \"constructor\" ||\n      key.type === \"Literal\" && key.value === \"constructor\")) {\n    if (method.kind !== \"method\") { this.raise(key.start, \"Constructor can't have get/set modifier\"); }\n    if (isGenerator) { this.raise(key.start, \"Constructor can't be a generator\"); }\n    if (isAsync) { this.raise(key.start, \"Constructor can't be an async method\"); }\n    method.kind = \"constructor\";\n    allowsDirectSuper = constructorAllowsSuper;\n  } else if (method.static && key.type === \"Identifier\" && key.name === \"prototype\") {\n    this.raise(key.start, \"Classes may not have a static property named prototype\");\n  }\n  this.parseClassMethod(method, isGenerator, isAsync, allowsDirectSuper);\n  if (method.kind === \"get\" && method.value.params.length !== 0)\n    { this.raiseRecoverable(method.value.start, \"getter should have no params\"); }\n  if (method.kind === \"set\" && method.value.params.length !== 1)\n    { this.raiseRecoverable(method.value.start, \"setter should have exactly one param\"); }\n  if (method.kind === \"set\" && method.value.params[0].type === \"RestElement\")\n    { this.raiseRecoverable(method.value.params[0].start, \"Setter cannot use rest params\"); }\n  return method\n};\n\npp$1.parseClassMethod = function(method, isGenerator, isAsync, allowsDirectSuper) {\n  method.value = this.parseMethod(isGenerator, isAsync, allowsDirectSuper);\n  return this.finishNode(method, \"MethodDefinition\")\n};\n\npp$1.parseClassId = function(node, isStatement) {\n  if (this.type === types.name) {\n    node.id = this.parseIdent();\n    if (isStatement)\n      { this.checkLVal(node.id, BIND_LEXICAL, false); }\n  } else {\n    if (isStatement === true)\n      { this.unexpected(); }\n    node.id = null;\n  }\n};\n\npp$1.parseClassSuper = function(node) {\n  node.superClass = this.eat(types._extends) ? this.parseExprSubscripts() : null;\n};\n\n// Parses module export declaration.\n\npp$1.parseExport = function(node, exports) {\n  this.next();\n  // export * from '...'\n  if (this.eat(types.star)) {\n    if (this.options.ecmaVersion >= 11) {\n      if (this.eatContextual(\"as\")) {\n        node.exported = this.parseIdent(true);\n        this.checkExport(exports, node.exported.name, this.lastTokStart);\n      } else {\n        node.exported = null;\n      }\n    }\n    this.expectContextual(\"from\");\n    if (this.type !== types.string) { this.unexpected(); }\n    node.source = this.parseExprAtom();\n    this.semicolon();\n    return this.finishNode(node, \"ExportAllDeclaration\")\n  }\n  if (this.eat(types._default)) { // export default ...\n    this.checkExport(exports, \"default\", this.lastTokStart);\n    var isAsync;\n    if (this.type === types._function || (isAsync = this.isAsyncFunction())) {\n      var fNode = this.startNode();\n      this.next();\n      if (isAsync) { this.next(); }\n      node.declaration = this.parseFunction(fNode, FUNC_STATEMENT | FUNC_NULLABLE_ID, false, isAsync);\n    } else if (this.type === types._class) {\n      var cNode = this.startNode();\n      node.declaration = this.parseClass(cNode, \"nullableID\");\n    } else {\n      node.declaration = this.parseMaybeAssign();\n      this.semicolon();\n    }\n    return this.finishNode(node, \"ExportDefaultDeclaration\")\n  }\n  // export var|const|let|function|class ...\n  if (this.shouldParseExportStatement()) {\n    node.declaration = this.parseStatement(null);\n    if (node.declaration.type === \"VariableDeclaration\")\n      { this.checkVariableExport(exports, node.declaration.declarations); }\n    else\n      { this.checkExport(exports, node.declaration.id.name, node.declaration.id.start); }\n    node.specifiers = [];\n    node.source = null;\n  } else { // export { x, y as z } [from '...']\n    node.declaration = null;\n    node.specifiers = this.parseExportSpecifiers(exports);\n    if (this.eatContextual(\"from\")) {\n      if (this.type !== types.string) { this.unexpected(); }\n      node.source = this.parseExprAtom();\n    } else {\n      for (var i = 0, list = node.specifiers; i < list.length; i += 1) {\n        // check for keywords used as local names\n        var spec = list[i];\n\n        this.checkUnreserved(spec.local);\n        // check if export is defined\n        this.checkLocalExport(spec.local);\n      }\n\n      node.source = null;\n    }\n    this.semicolon();\n  }\n  return this.finishNode(node, \"ExportNamedDeclaration\")\n};\n\npp$1.checkExport = function(exports, name, pos) {\n  if (!exports) { return }\n  if (has(exports, name))\n    { this.raiseRecoverable(pos, \"Duplicate export '\" + name + \"'\"); }\n  exports[name] = true;\n};\n\npp$1.checkPatternExport = function(exports, pat) {\n  var type = pat.type;\n  if (type === \"Identifier\")\n    { this.checkExport(exports, pat.name, pat.start); }\n  else if (type === \"ObjectPattern\")\n    { for (var i = 0, list = pat.properties; i < list.length; i += 1)\n      {\n        var prop = list[i];\n\n        this.checkPatternExport(exports, prop);\n      } }\n  else if (type === \"ArrayPattern\")\n    { for (var i$1 = 0, list$1 = pat.elements; i$1 < list$1.length; i$1 += 1) {\n      var elt = list$1[i$1];\n\n        if (elt) { this.checkPatternExport(exports, elt); }\n    } }\n  else if (type === \"Property\")\n    { this.checkPatternExport(exports, pat.value); }\n  else if (type === \"AssignmentPattern\")\n    { this.checkPatternExport(exports, pat.left); }\n  else if (type === \"RestElement\")\n    { this.checkPatternExport(exports, pat.argument); }\n  else if (type === \"ParenthesizedExpression\")\n    { this.checkPatternExport(exports, pat.expression); }\n};\n\npp$1.checkVariableExport = function(exports, decls) {\n  if (!exports) { return }\n  for (var i = 0, list = decls; i < list.length; i += 1)\n    {\n    var decl = list[i];\n\n    this.checkPatternExport(exports, decl.id);\n  }\n};\n\npp$1.shouldParseExportStatement = function() {\n  return this.type.keyword === \"var\" ||\n    this.type.keyword === \"const\" ||\n    this.type.keyword === \"class\" ||\n    this.type.keyword === \"function\" ||\n    this.isLet() ||\n    this.isAsyncFunction()\n};\n\n// Parses a comma-separated list of module exports.\n\npp$1.parseExportSpecifiers = function(exports) {\n  var nodes = [], first = true;\n  // export { x, y as z } [from '...']\n  this.expect(types.braceL);\n  while (!this.eat(types.braceR)) {\n    if (!first) {\n      this.expect(types.comma);\n      if (this.afterTrailingComma(types.braceR)) { break }\n    } else { first = false; }\n\n    var node = this.startNode();\n    node.local = this.parseIdent(true);\n    node.exported = this.eatContextual(\"as\") ? this.parseIdent(true) : node.local;\n    this.checkExport(exports, node.exported.name, node.exported.start);\n    nodes.push(this.finishNode(node, \"ExportSpecifier\"));\n  }\n  return nodes\n};\n\n// Parses import declaration.\n\npp$1.parseImport = function(node) {\n  this.next();\n  // import '...'\n  if (this.type === types.string) {\n    node.specifiers = empty;\n    node.source = this.parseExprAtom();\n  } else {\n    node.specifiers = this.parseImportSpecifiers();\n    this.expectContextual(\"from\");\n    node.source = this.type === types.string ? this.parseExprAtom() : this.unexpected();\n  }\n  this.semicolon();\n  return this.finishNode(node, \"ImportDeclaration\")\n};\n\n// Parses a comma-separated list of module imports.\n\npp$1.parseImportSpecifiers = function() {\n  var nodes = [], first = true;\n  if (this.type === types.name) {\n    // import defaultObj, { x, y as z } from '...'\n    var node = this.startNode();\n    node.local = this.parseIdent();\n    this.checkLVal(node.local, BIND_LEXICAL);\n    nodes.push(this.finishNode(node, \"ImportDefaultSpecifier\"));\n    if (!this.eat(types.comma)) { return nodes }\n  }\n  if (this.type === types.star) {\n    var node$1 = this.startNode();\n    this.next();\n    this.expectContextual(\"as\");\n    node$1.local = this.parseIdent();\n    this.checkLVal(node$1.local, BIND_LEXICAL);\n    nodes.push(this.finishNode(node$1, \"ImportNamespaceSpecifier\"));\n    return nodes\n  }\n  this.expect(types.braceL);\n  while (!this.eat(types.braceR)) {\n    if (!first) {\n      this.expect(types.comma);\n      if (this.afterTrailingComma(types.braceR)) { break }\n    } else { first = false; }\n\n    var node$2 = this.startNode();\n    node$2.imported = this.parseIdent(true);\n    if (this.eatContextual(\"as\")) {\n      node$2.local = this.parseIdent();\n    } else {\n      this.checkUnreserved(node$2.imported);\n      node$2.local = node$2.imported;\n    }\n    this.checkLVal(node$2.local, BIND_LEXICAL);\n    nodes.push(this.finishNode(node$2, \"ImportSpecifier\"));\n  }\n  return nodes\n};\n\n// Set `ExpressionStatement#directive` property for directive prologues.\npp$1.adaptDirectivePrologue = function(statements) {\n  for (var i = 0; i < statements.length && this.isDirectiveCandidate(statements[i]); ++i) {\n    statements[i].directive = statements[i].expression.raw.slice(1, -1);\n  }\n};\npp$1.isDirectiveCandidate = function(statement) {\n  return (\n    statement.type === \"ExpressionStatement\" &&\n    statement.expression.type === \"Literal\" &&\n    typeof statement.expression.value === \"string\" &&\n    // Reject parenthesized strings.\n    (this.input[statement.start] === \"\\\"\" || this.input[statement.start] === \"'\")\n  )\n};\n\nvar pp$2 = Parser.prototype;\n\n// Convert existing expression atom to assignable pattern\n// if possible.\n\npp$2.toAssignable = function(node, isBinding, refDestructuringErrors) {\n  if (this.options.ecmaVersion >= 6 && node) {\n    switch (node.type) {\n    case \"Identifier\":\n      if (this.inAsync && node.name === \"await\")\n        { this.raise(node.start, \"Cannot use 'await' as identifier inside an async function\"); }\n      break\n\n    case \"ObjectPattern\":\n    case \"ArrayPattern\":\n    case \"RestElement\":\n      break\n\n    case \"ObjectExpression\":\n      node.type = \"ObjectPattern\";\n      if (refDestructuringErrors) { this.checkPatternErrors(refDestructuringErrors, true); }\n      for (var i = 0, list = node.properties; i < list.length; i += 1) {\n        var prop = list[i];\n\n      this.toAssignable(prop, isBinding);\n        // Early error:\n        //   AssignmentRestProperty[Yield, Await] :\n        //     `...` DestructuringAssignmentTarget[Yield, Await]\n        //\n        //   It is a Syntax Error if |DestructuringAssignmentTarget| is an |ArrayLiteral| or an |ObjectLiteral|.\n        if (\n          prop.type === \"RestElement\" &&\n          (prop.argument.type === \"ArrayPattern\" || prop.argument.type === \"ObjectPattern\")\n        ) {\n          this.raise(prop.argument.start, \"Unexpected token\");\n        }\n      }\n      break\n\n    case \"Property\":\n      // AssignmentProperty has type === \"Property\"\n      if (node.kind !== \"init\") { this.raise(node.key.start, \"Object pattern can't contain getter or setter\"); }\n      this.toAssignable(node.value, isBinding);\n      break\n\n    case \"ArrayExpression\":\n      node.type = \"ArrayPattern\";\n      if (refDestructuringErrors) { this.checkPatternErrors(refDestructuringErrors, true); }\n      this.toAssignableList(node.elements, isBinding);\n      break\n\n    case \"SpreadElement\":\n      node.type = \"RestElement\";\n      this.toAssignable(node.argument, isBinding);\n      if (node.argument.type === \"AssignmentPattern\")\n        { this.raise(node.argument.start, \"Rest elements cannot have a default value\"); }\n      break\n\n    case \"AssignmentExpression\":\n      if (node.operator !== \"=\") { this.raise(node.left.end, \"Only '=' operator can be used for specifying default value.\"); }\n      node.type = \"AssignmentPattern\";\n      delete node.operator;\n      this.toAssignable(node.left, isBinding);\n      // falls through to AssignmentPattern\n\n    case \"AssignmentPattern\":\n      break\n\n    case \"ParenthesizedExpression\":\n      this.toAssignable(node.expression, isBinding, refDestructuringErrors);\n      break\n\n    case \"ChainExpression\":\n      this.raiseRecoverable(node.start, \"Optional chaining cannot appear in left-hand side\");\n      break\n\n    case \"MemberExpression\":\n      if (!isBinding) { break }\n\n    default:\n      this.raise(node.start, \"Assigning to rvalue\");\n    }\n  } else if (refDestructuringErrors) { this.checkPatternErrors(refDestructuringErrors, true); }\n  return node\n};\n\n// Convert list of expression atoms to binding list.\n\npp$2.toAssignableList = function(exprList, isBinding) {\n  var end = exprList.length;\n  for (var i = 0; i < end; i++) {\n    var elt = exprList[i];\n    if (elt) { this.toAssignable(elt, isBinding); }\n  }\n  if (end) {\n    var last = exprList[end - 1];\n    if (this.options.ecmaVersion === 6 && isBinding && last && last.type === \"RestElement\" && last.argument.type !== \"Identifier\")\n      { this.unexpected(last.argument.start); }\n  }\n  return exprList\n};\n\n// Parses spread element.\n\npp$2.parseSpread = function(refDestructuringErrors) {\n  var node = this.startNode();\n  this.next();\n  node.argument = this.parseMaybeAssign(false, refDestructuringErrors);\n  return this.finishNode(node, \"SpreadElement\")\n};\n\npp$2.parseRestBinding = function() {\n  var node = this.startNode();\n  this.next();\n\n  // RestElement inside of a function parameter must be an identifier\n  if (this.options.ecmaVersion === 6 && this.type !== types.name)\n    { this.unexpected(); }\n\n  node.argument = this.parseBindingAtom();\n\n  return this.finishNode(node, \"RestElement\")\n};\n\n// Parses lvalue (assignable) atom.\n\npp$2.parseBindingAtom = function() {\n  if (this.options.ecmaVersion >= 6) {\n    switch (this.type) {\n    case types.bracketL:\n      var node = this.startNode();\n      this.next();\n      node.elements = this.parseBindingList(types.bracketR, true, true);\n      return this.finishNode(node, \"ArrayPattern\")\n\n    case types.braceL:\n      return this.parseObj(true)\n    }\n  }\n  return this.parseIdent()\n};\n\npp$2.parseBindingList = function(close, allowEmpty, allowTrailingComma) {\n  var elts = [], first = true;\n  while (!this.eat(close)) {\n    if (first) { first = false; }\n    else { this.expect(types.comma); }\n    if (allowEmpty && this.type === types.comma) {\n      elts.push(null);\n    } else if (allowTrailingComma && this.afterTrailingComma(close)) {\n      break\n    } else if (this.type === types.ellipsis) {\n      var rest = this.parseRestBinding();\n      this.parseBindingListItem(rest);\n      elts.push(rest);\n      if (this.type === types.comma) { this.raise(this.start, \"Comma is not permitted after the rest element\"); }\n      this.expect(close);\n      break\n    } else {\n      var elem = this.parseMaybeDefault(this.start, this.startLoc);\n      this.parseBindingListItem(elem);\n      elts.push(elem);\n    }\n  }\n  return elts\n};\n\npp$2.parseBindingListItem = function(param) {\n  return param\n};\n\n// Parses assignment pattern around given atom if possible.\n\npp$2.parseMaybeDefault = function(startPos, startLoc, left) {\n  left = left || this.parseBindingAtom();\n  if (this.options.ecmaVersion < 6 || !this.eat(types.eq)) { return left }\n  var node = this.startNodeAt(startPos, startLoc);\n  node.left = left;\n  node.right = this.parseMaybeAssign();\n  return this.finishNode(node, \"AssignmentPattern\")\n};\n\n// Verify that a node is an lval — something that can be assigned\n// to.\n// bindingType can be either:\n// 'var' indicating that the lval creates a 'var' binding\n// 'let' indicating that the lval creates a lexical ('let' or 'const') binding\n// 'none' indicating that the binding should be checked for illegal identifiers, but not for duplicate references\n\npp$2.checkLVal = function(expr, bindingType, checkClashes) {\n  if ( bindingType === void 0 ) bindingType = BIND_NONE;\n\n  switch (expr.type) {\n  case \"Identifier\":\n    if (bindingType === BIND_LEXICAL && expr.name === \"let\")\n      { this.raiseRecoverable(expr.start, \"let is disallowed as a lexically bound name\"); }\n    if (this.strict && this.reservedWordsStrictBind.test(expr.name))\n      { this.raiseRecoverable(expr.start, (bindingType ? \"Binding \" : \"Assigning to \") + expr.name + \" in strict mode\"); }\n    if (checkClashes) {\n      if (has(checkClashes, expr.name))\n        { this.raiseRecoverable(expr.start, \"Argument name clash\"); }\n      checkClashes[expr.name] = true;\n    }\n    if (bindingType !== BIND_NONE && bindingType !== BIND_OUTSIDE) { this.declareName(expr.name, bindingType, expr.start); }\n    break\n\n  case \"ChainExpression\":\n    this.raiseRecoverable(expr.start, \"Optional chaining cannot appear in left-hand side\");\n    break\n\n  case \"MemberExpression\":\n    if (bindingType) { this.raiseRecoverable(expr.start, \"Binding member expression\"); }\n    break\n\n  case \"ObjectPattern\":\n    for (var i = 0, list = expr.properties; i < list.length; i += 1)\n      {\n    var prop = list[i];\n\n    this.checkLVal(prop, bindingType, checkClashes);\n  }\n    break\n\n  case \"Property\":\n    // AssignmentProperty has type === \"Property\"\n    this.checkLVal(expr.value, bindingType, checkClashes);\n    break\n\n  case \"ArrayPattern\":\n    for (var i$1 = 0, list$1 = expr.elements; i$1 < list$1.length; i$1 += 1) {\n      var elem = list$1[i$1];\n\n    if (elem) { this.checkLVal(elem, bindingType, checkClashes); }\n    }\n    break\n\n  case \"AssignmentPattern\":\n    this.checkLVal(expr.left, bindingType, checkClashes);\n    break\n\n  case \"RestElement\":\n    this.checkLVal(expr.argument, bindingType, checkClashes);\n    break\n\n  case \"ParenthesizedExpression\":\n    this.checkLVal(expr.expression, bindingType, checkClashes);\n    break\n\n  default:\n    this.raise(expr.start, (bindingType ? \"Binding\" : \"Assigning to\") + \" rvalue\");\n  }\n};\n\n// A recursive descent parser operates by defining functions for all\n\nvar pp$3 = Parser.prototype;\n\n// Check if property name clashes with already added.\n// Object/class getters and setters are not allowed to clash —\n// either with each other or with an init property — and in\n// strict mode, init properties are also not allowed to be repeated.\n\npp$3.checkPropClash = function(prop, propHash, refDestructuringErrors) {\n  if (this.options.ecmaVersion >= 9 && prop.type === \"SpreadElement\")\n    { return }\n  if (this.options.ecmaVersion >= 6 && (prop.computed || prop.method || prop.shorthand))\n    { return }\n  var key = prop.key;\n  var name;\n  switch (key.type) {\n  case \"Identifier\": name = key.name; break\n  case \"Literal\": name = String(key.value); break\n  default: return\n  }\n  var kind = prop.kind;\n  if (this.options.ecmaVersion >= 6) {\n    if (name === \"__proto__\" && kind === \"init\") {\n      if (propHash.proto) {\n        if (refDestructuringErrors) {\n          if (refDestructuringErrors.doubleProto < 0)\n            { refDestructuringErrors.doubleProto = key.start; }\n          // Backwards-compat kludge. Can be removed in version 6.0\n        } else { this.raiseRecoverable(key.start, \"Redefinition of __proto__ property\"); }\n      }\n      propHash.proto = true;\n    }\n    return\n  }\n  name = \"$\" + name;\n  var other = propHash[name];\n  if (other) {\n    var redefinition;\n    if (kind === \"init\") {\n      redefinition = this.strict && other.init || other.get || other.set;\n    } else {\n      redefinition = other.init || other[kind];\n    }\n    if (redefinition)\n      { this.raiseRecoverable(key.start, \"Redefinition of property\"); }\n  } else {\n    other = propHash[name] = {\n      init: false,\n      get: false,\n      set: false\n    };\n  }\n  other[kind] = true;\n};\n\n// ### Expression parsing\n\n// These nest, from the most general expression type at the top to\n// 'atomic', nondivisible expression types at the bottom. Most of\n// the functions will simply let the function(s) below them parse,\n// and, *if* the syntactic construct they handle is present, wrap\n// the AST node that the inner parser gave them in another node.\n\n// Parse a full expression. The optional arguments are used to\n// forbid the `in` operator (in for loops initalization expressions)\n// and provide reference for storing '=' operator inside shorthand\n// property assignment in contexts where both object expression\n// and object pattern might appear (so it's possible to raise\n// delayed syntax error at correct position).\n\npp$3.parseExpression = function(noIn, refDestructuringErrors) {\n  var startPos = this.start, startLoc = this.startLoc;\n  var expr = this.parseMaybeAssign(noIn, refDestructuringErrors);\n  if (this.type === types.comma) {\n    var node = this.startNodeAt(startPos, startLoc);\n    node.expressions = [expr];\n    while (this.eat(types.comma)) { node.expressions.push(this.parseMaybeAssign(noIn, refDestructuringErrors)); }\n    return this.finishNode(node, \"SequenceExpression\")\n  }\n  return expr\n};\n\n// Parse an assignment expression. This includes applications of\n// operators like `+=`.\n\npp$3.parseMaybeAssign = function(noIn, refDestructuringErrors, afterLeftParse) {\n  if (this.isContextual(\"yield\")) {\n    if (this.inGenerator) { return this.parseYield(noIn) }\n    // The tokenizer will assume an expression is allowed after\n    // `yield`, but this isn't that kind of yield\n    else { this.exprAllowed = false; }\n  }\n\n  var ownDestructuringErrors = false, oldParenAssign = -1, oldTrailingComma = -1;\n  if (refDestructuringErrors) {\n    oldParenAssign = refDestructuringErrors.parenthesizedAssign;\n    oldTrailingComma = refDestructuringErrors.trailingComma;\n    refDestructuringErrors.parenthesizedAssign = refDestructuringErrors.trailingComma = -1;\n  } else {\n    refDestructuringErrors = new DestructuringErrors;\n    ownDestructuringErrors = true;\n  }\n\n  var startPos = this.start, startLoc = this.startLoc;\n  if (this.type === types.parenL || this.type === types.name)\n    { this.potentialArrowAt = this.start; }\n  var left = this.parseMaybeConditional(noIn, refDestructuringErrors);\n  if (afterLeftParse) { left = afterLeftParse.call(this, left, startPos, startLoc); }\n  if (this.type.isAssign) {\n    var node = this.startNodeAt(startPos, startLoc);\n    node.operator = this.value;\n    node.left = this.type === types.eq ? this.toAssignable(left, false, refDestructuringErrors) : left;\n    if (!ownDestructuringErrors) {\n      refDestructuringErrors.parenthesizedAssign = refDestructuringErrors.trailingComma = refDestructuringErrors.doubleProto = -1;\n    }\n    if (refDestructuringErrors.shorthandAssign >= node.left.start)\n      { refDestructuringErrors.shorthandAssign = -1; } // reset because shorthand default was used correctly\n    this.checkLVal(left);\n    this.next();\n    node.right = this.parseMaybeAssign(noIn);\n    return this.finishNode(node, \"AssignmentExpression\")\n  } else {\n    if (ownDestructuringErrors) { this.checkExpressionErrors(refDestructuringErrors, true); }\n  }\n  if (oldParenAssign > -1) { refDestructuringErrors.parenthesizedAssign = oldParenAssign; }\n  if (oldTrailingComma > -1) { refDestructuringErrors.trailingComma = oldTrailingComma; }\n  return left\n};\n\n// Parse a ternary conditional (`?:`) operator.\n\npp$3.parseMaybeConditional = function(noIn, refDestructuringErrors) {\n  var startPos = this.start, startLoc = this.startLoc;\n  var expr = this.parseExprOps(noIn, refDestructuringErrors);\n  if (this.checkExpressionErrors(refDestructuringErrors)) { return expr }\n  if (this.eat(types.question)) {\n    var node = this.startNodeAt(startPos, startLoc);\n    node.test = expr;\n    node.consequent = this.parseMaybeAssign();\n    this.expect(types.colon);\n    node.alternate = this.parseMaybeAssign(noIn);\n    return this.finishNode(node, \"ConditionalExpression\")\n  }\n  return expr\n};\n\n// Start the precedence parser.\n\npp$3.parseExprOps = function(noIn, refDestructuringErrors) {\n  var startPos = this.start, startLoc = this.startLoc;\n  var expr = this.parseMaybeUnary(refDestructuringErrors, false);\n  if (this.checkExpressionErrors(refDestructuringErrors)) { return expr }\n  return expr.start === startPos && expr.type === \"ArrowFunctionExpression\" ? expr : this.parseExprOp(expr, startPos, startLoc, -1, noIn)\n};\n\n// Parse binary operators with the operator precedence parsing\n// algorithm. `left` is the left-hand side of the operator.\n// `minPrec` provides context that allows the function to stop and\n// defer further parser to one of its callers when it encounters an\n// operator that has a lower precedence than the set it is parsing.\n\npp$3.parseExprOp = function(left, leftStartPos, leftStartLoc, minPrec, noIn) {\n  var prec = this.type.binop;\n  if (prec != null && (!noIn || this.type !== types._in)) {\n    if (prec > minPrec) {\n      var logical = this.type === types.logicalOR || this.type === types.logicalAND;\n      var coalesce = this.type === types.coalesce;\n      if (coalesce) {\n        // Handle the precedence of `tt.coalesce` as equal to the range of logical expressions.\n        // In other words, `node.right` shouldn't contain logical expressions in order to check the mixed error.\n        prec = types.logicalAND.binop;\n      }\n      var op = this.value;\n      this.next();\n      var startPos = this.start, startLoc = this.startLoc;\n      var right = this.parseExprOp(this.parseMaybeUnary(null, false), startPos, startLoc, prec, noIn);\n      var node = this.buildBinary(leftStartPos, leftStartLoc, left, right, op, logical || coalesce);\n      if ((logical && this.type === types.coalesce) || (coalesce && (this.type === types.logicalOR || this.type === types.logicalAND))) {\n        this.raiseRecoverable(this.start, \"Logical expressions and coalesce expressions cannot be mixed. Wrap either by parentheses\");\n      }\n      return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec, noIn)\n    }\n  }\n  return left\n};\n\npp$3.buildBinary = function(startPos, startLoc, left, right, op, logical) {\n  var node = this.startNodeAt(startPos, startLoc);\n  node.left = left;\n  node.operator = op;\n  node.right = right;\n  return this.finishNode(node, logical ? \"LogicalExpression\" : \"BinaryExpression\")\n};\n\n// Parse unary operators, both prefix and postfix.\n\npp$3.parseMaybeUnary = function(refDestructuringErrors, sawUnary) {\n  var startPos = this.start, startLoc = this.startLoc, expr;\n  if (this.isContextual(\"await\") && (this.inAsync || (!this.inFunction && this.options.allowAwaitOutsideFunction))) {\n    expr = this.parseAwait();\n    sawUnary = true;\n  } else if (this.type.prefix) {\n    var node = this.startNode(), update = this.type === types.incDec;\n    node.operator = this.value;\n    node.prefix = true;\n    this.next();\n    node.argument = this.parseMaybeUnary(null, true);\n    this.checkExpressionErrors(refDestructuringErrors, true);\n    if (update) { this.checkLVal(node.argument); }\n    else if (this.strict && node.operator === \"delete\" &&\n             node.argument.type === \"Identifier\")\n      { this.raiseRecoverable(node.start, \"Deleting local variable in strict mode\"); }\n    else { sawUnary = true; }\n    expr = this.finishNode(node, update ? \"UpdateExpression\" : \"UnaryExpression\");\n  } else {\n    expr = this.parseExprSubscripts(refDestructuringErrors);\n    if (this.checkExpressionErrors(refDestructuringErrors)) { return expr }\n    while (this.type.postfix && !this.canInsertSemicolon()) {\n      var node$1 = this.startNodeAt(startPos, startLoc);\n      node$1.operator = this.value;\n      node$1.prefix = false;\n      node$1.argument = expr;\n      this.checkLVal(expr);\n      this.next();\n      expr = this.finishNode(node$1, \"UpdateExpression\");\n    }\n  }\n\n  if (!sawUnary && this.eat(types.starstar))\n    { return this.buildBinary(startPos, startLoc, expr, this.parseMaybeUnary(null, false), \"**\", false) }\n  else\n    { return expr }\n};\n\n// Parse call, dot, and `[]`-subscript expressions.\n\npp$3.parseExprSubscripts = function(refDestructuringErrors) {\n  var startPos = this.start, startLoc = this.startLoc;\n  var expr = this.parseExprAtom(refDestructuringErrors);\n  if (expr.type === \"ArrowFunctionExpression\" && this.input.slice(this.lastTokStart, this.lastTokEnd) !== \")\")\n    { return expr }\n  var result = this.parseSubscripts(expr, startPos, startLoc);\n  if (refDestructuringErrors && result.type === \"MemberExpression\") {\n    if (refDestructuringErrors.parenthesizedAssign >= result.start) { refDestructuringErrors.parenthesizedAssign = -1; }\n    if (refDestructuringErrors.parenthesizedBind >= result.start) { refDestructuringErrors.parenthesizedBind = -1; }\n  }\n  return result\n};\n\npp$3.parseSubscripts = function(base, startPos, startLoc, noCalls) {\n  var maybeAsyncArrow = this.options.ecmaVersion >= 8 && base.type === \"Identifier\" && base.name === \"async\" &&\n      this.lastTokEnd === base.end && !this.canInsertSemicolon() && base.end - base.start === 5 &&\n      this.potentialArrowAt === base.start;\n  var optionalChained = false;\n\n  while (true) {\n    var element = this.parseSubscript(base, startPos, startLoc, noCalls, maybeAsyncArrow, optionalChained);\n\n    if (element.optional) { optionalChained = true; }\n    if (element === base || element.type === \"ArrowFunctionExpression\") {\n      if (optionalChained) {\n        var chainNode = this.startNodeAt(startPos, startLoc);\n        chainNode.expression = element;\n        element = this.finishNode(chainNode, \"ChainExpression\");\n      }\n      return element\n    }\n\n    base = element;\n  }\n};\n\npp$3.parseSubscript = function(base, startPos, startLoc, noCalls, maybeAsyncArrow, optionalChained) {\n  var optionalSupported = this.options.ecmaVersion >= 11;\n  var optional = optionalSupported && this.eat(types.questionDot);\n  if (noCalls && optional) { this.raise(this.lastTokStart, \"Optional chaining cannot appear in the callee of new expressions\"); }\n\n  var computed = this.eat(types.bracketL);\n  if (computed || (optional && this.type !== types.parenL && this.type !== types.backQuote) || this.eat(types.dot)) {\n    var node = this.startNodeAt(startPos, startLoc);\n    node.object = base;\n    node.property = computed ? this.parseExpression() : this.parseIdent(this.options.allowReserved !== \"never\");\n    node.computed = !!computed;\n    if (computed) { this.expect(types.bracketR); }\n    if (optionalSupported) {\n      node.optional = optional;\n    }\n    base = this.finishNode(node, \"MemberExpression\");\n  } else if (!noCalls && this.eat(types.parenL)) {\n    var refDestructuringErrors = new DestructuringErrors, oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;\n    this.yieldPos = 0;\n    this.awaitPos = 0;\n    this.awaitIdentPos = 0;\n    var exprList = this.parseExprList(types.parenR, this.options.ecmaVersion >= 8, false, refDestructuringErrors);\n    if (maybeAsyncArrow && !optional && !this.canInsertSemicolon() && this.eat(types.arrow)) {\n      this.checkPatternErrors(refDestructuringErrors, false);\n      this.checkYieldAwaitInDefaultParams();\n      if (this.awaitIdentPos > 0)\n        { this.raise(this.awaitIdentPos, \"Cannot use 'await' as identifier inside an async function\"); }\n      this.yieldPos = oldYieldPos;\n      this.awaitPos = oldAwaitPos;\n      this.awaitIdentPos = oldAwaitIdentPos;\n      return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), exprList, true)\n    }\n    this.checkExpressionErrors(refDestructuringErrors, true);\n    this.yieldPos = oldYieldPos || this.yieldPos;\n    this.awaitPos = oldAwaitPos || this.awaitPos;\n    this.awaitIdentPos = oldAwaitIdentPos || this.awaitIdentPos;\n    var node$1 = this.startNodeAt(startPos, startLoc);\n    node$1.callee = base;\n    node$1.arguments = exprList;\n    if (optionalSupported) {\n      node$1.optional = optional;\n    }\n    base = this.finishNode(node$1, \"CallExpression\");\n  } else if (this.type === types.backQuote) {\n    if (optional || optionalChained) {\n      this.raise(this.start, \"Optional chaining cannot appear in the tag of tagged template expressions\");\n    }\n    var node$2 = this.startNodeAt(startPos, startLoc);\n    node$2.tag = base;\n    node$2.quasi = this.parseTemplate({isTagged: true});\n    base = this.finishNode(node$2, \"TaggedTemplateExpression\");\n  }\n  return base\n};\n\n// Parse an atomic expression — either a single token that is an\n// expression, an expression started by a keyword like `function` or\n// `new`, or an expression wrapped in punctuation like `()`, `[]`,\n// or `{}`.\n\npp$3.parseExprAtom = function(refDestructuringErrors) {\n  // If a division operator appears in an expression position, the\n  // tokenizer got confused, and we force it to read a regexp instead.\n  if (this.type === types.slash) { this.readRegexp(); }\n\n  var node, canBeArrow = this.potentialArrowAt === this.start;\n  switch (this.type) {\n  case types._super:\n    if (!this.allowSuper)\n      { this.raise(this.start, \"'super' keyword outside a method\"); }\n    node = this.startNode();\n    this.next();\n    if (this.type === types.parenL && !this.allowDirectSuper)\n      { this.raise(node.start, \"super() call outside constructor of a subclass\"); }\n    // The `super` keyword can appear at below:\n    // SuperProperty:\n    //     super [ Expression ]\n    //     super . IdentifierName\n    // SuperCall:\n    //     super ( Arguments )\n    if (this.type !== types.dot && this.type !== types.bracketL && this.type !== types.parenL)\n      { this.unexpected(); }\n    return this.finishNode(node, \"Super\")\n\n  case types._this:\n    node = this.startNode();\n    this.next();\n    return this.finishNode(node, \"ThisExpression\")\n\n  case types.name:\n    var startPos = this.start, startLoc = this.startLoc, containsEsc = this.containsEsc;\n    var id = this.parseIdent(false);\n    if (this.options.ecmaVersion >= 8 && !containsEsc && id.name === \"async\" && !this.canInsertSemicolon() && this.eat(types._function))\n      { return this.parseFunction(this.startNodeAt(startPos, startLoc), 0, false, true) }\n    if (canBeArrow && !this.canInsertSemicolon()) {\n      if (this.eat(types.arrow))\n        { return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), [id], false) }\n      if (this.options.ecmaVersion >= 8 && id.name === \"async\" && this.type === types.name && !containsEsc) {\n        id = this.parseIdent(false);\n        if (this.canInsertSemicolon() || !this.eat(types.arrow))\n          { this.unexpected(); }\n        return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), [id], true)\n      }\n    }\n    return id\n\n  case types.regexp:\n    var value = this.value;\n    node = this.parseLiteral(value.value);\n    node.regex = {pattern: value.pattern, flags: value.flags};\n    return node\n\n  case types.num: case types.string:\n    return this.parseLiteral(this.value)\n\n  case types._null: case types._true: case types._false:\n    node = this.startNode();\n    node.value = this.type === types._null ? null : this.type === types._true;\n    node.raw = this.type.keyword;\n    this.next();\n    return this.finishNode(node, \"Literal\")\n\n  case types.parenL:\n    var start = this.start, expr = this.parseParenAndDistinguishExpression(canBeArrow);\n    if (refDestructuringErrors) {\n      if (refDestructuringErrors.parenthesizedAssign < 0 && !this.isSimpleAssignTarget(expr))\n        { refDestructuringErrors.parenthesizedAssign = start; }\n      if (refDestructuringErrors.parenthesizedBind < 0)\n        { refDestructuringErrors.parenthesizedBind = start; }\n    }\n    return expr\n\n  case types.bracketL:\n    node = this.startNode();\n    this.next();\n    node.elements = this.parseExprList(types.bracketR, true, true, refDestructuringErrors);\n    return this.finishNode(node, \"ArrayExpression\")\n\n  case types.braceL:\n    return this.parseObj(false, refDestructuringErrors)\n\n  case types._function:\n    node = this.startNode();\n    this.next();\n    return this.parseFunction(node, 0)\n\n  case types._class:\n    return this.parseClass(this.startNode(), false)\n\n  case types._new:\n    return this.parseNew()\n\n  case types.backQuote:\n    return this.parseTemplate()\n\n  case types._import:\n    if (this.options.ecmaVersion >= 11) {\n      return this.parseExprImport()\n    } else {\n      return this.unexpected()\n    }\n\n  default:\n    this.unexpected();\n  }\n};\n\npp$3.parseExprImport = function() {\n  var node = this.startNode();\n\n  // Consume `import` as an identifier for `import.meta`.\n  // Because `this.parseIdent(true)` doesn't check escape sequences, it needs the check of `this.containsEsc`.\n  if (this.containsEsc) { this.raiseRecoverable(this.start, \"Escape sequence in keyword import\"); }\n  var meta = this.parseIdent(true);\n\n  switch (this.type) {\n  case types.parenL:\n    return this.parseDynamicImport(node)\n  case types.dot:\n    node.meta = meta;\n    return this.parseImportMeta(node)\n  default:\n    this.unexpected();\n  }\n};\n\npp$3.parseDynamicImport = function(node) {\n  this.next(); // skip `(`\n\n  // Parse node.source.\n  node.source = this.parseMaybeAssign();\n\n  // Verify ending.\n  if (!this.eat(types.parenR)) {\n    var errorPos = this.start;\n    if (this.eat(types.comma) && this.eat(types.parenR)) {\n      this.raiseRecoverable(errorPos, \"Trailing comma is not allowed in import()\");\n    } else {\n      this.unexpected(errorPos);\n    }\n  }\n\n  return this.finishNode(node, \"ImportExpression\")\n};\n\npp$3.parseImportMeta = function(node) {\n  this.next(); // skip `.`\n\n  var containsEsc = this.containsEsc;\n  node.property = this.parseIdent(true);\n\n  if (node.property.name !== \"meta\")\n    { this.raiseRecoverable(node.property.start, \"The only valid meta property for import is 'import.meta'\"); }\n  if (containsEsc)\n    { this.raiseRecoverable(node.start, \"'import.meta' must not contain escaped characters\"); }\n  if (this.options.sourceType !== \"module\")\n    { this.raiseRecoverable(node.start, \"Cannot use 'import.meta' outside a module\"); }\n\n  return this.finishNode(node, \"MetaProperty\")\n};\n\npp$3.parseLiteral = function(value) {\n  var node = this.startNode();\n  node.value = value;\n  node.raw = this.input.slice(this.start, this.end);\n  if (node.raw.charCodeAt(node.raw.length - 1) === 110) { node.bigint = node.raw.slice(0, -1).replace(/_/g, \"\"); }\n  this.next();\n  return this.finishNode(node, \"Literal\")\n};\n\npp$3.parseParenExpression = function() {\n  this.expect(types.parenL);\n  var val = this.parseExpression();\n  this.expect(types.parenR);\n  return val\n};\n\npp$3.parseParenAndDistinguishExpression = function(canBeArrow) {\n  var startPos = this.start, startLoc = this.startLoc, val, allowTrailingComma = this.options.ecmaVersion >= 8;\n  if (this.options.ecmaVersion >= 6) {\n    this.next();\n\n    var innerStartPos = this.start, innerStartLoc = this.startLoc;\n    var exprList = [], first = true, lastIsComma = false;\n    var refDestructuringErrors = new DestructuringErrors, oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, spreadStart;\n    this.yieldPos = 0;\n    this.awaitPos = 0;\n    // Do not save awaitIdentPos to allow checking awaits nested in parameters\n    while (this.type !== types.parenR) {\n      first ? first = false : this.expect(types.comma);\n      if (allowTrailingComma && this.afterTrailingComma(types.parenR, true)) {\n        lastIsComma = true;\n        break\n      } else if (this.type === types.ellipsis) {\n        spreadStart = this.start;\n        exprList.push(this.parseParenItem(this.parseRestBinding()));\n        if (this.type === types.comma) { this.raise(this.start, \"Comma is not permitted after the rest element\"); }\n        break\n      } else {\n        exprList.push(this.parseMaybeAssign(false, refDestructuringErrors, this.parseParenItem));\n      }\n    }\n    var innerEndPos = this.start, innerEndLoc = this.startLoc;\n    this.expect(types.parenR);\n\n    if (canBeArrow && !this.canInsertSemicolon() && this.eat(types.arrow)) {\n      this.checkPatternErrors(refDestructuringErrors, false);\n      this.checkYieldAwaitInDefaultParams();\n      this.yieldPos = oldYieldPos;\n      this.awaitPos = oldAwaitPos;\n      return this.parseParenArrowList(startPos, startLoc, exprList)\n    }\n\n    if (!exprList.length || lastIsComma) { this.unexpected(this.lastTokStart); }\n    if (spreadStart) { this.unexpected(spreadStart); }\n    this.checkExpressionErrors(refDestructuringErrors, true);\n    this.yieldPos = oldYieldPos || this.yieldPos;\n    this.awaitPos = oldAwaitPos || this.awaitPos;\n\n    if (exprList.length > 1) {\n      val = this.startNodeAt(innerStartPos, innerStartLoc);\n      val.expressions = exprList;\n      this.finishNodeAt(val, \"SequenceExpression\", innerEndPos, innerEndLoc);\n    } else {\n      val = exprList[0];\n    }\n  } else {\n    val = this.parseParenExpression();\n  }\n\n  if (this.options.preserveParens) {\n    var par = this.startNodeAt(startPos, startLoc);\n    par.expression = val;\n    return this.finishNode(par, \"ParenthesizedExpression\")\n  } else {\n    return val\n  }\n};\n\npp$3.parseParenItem = function(item) {\n  return item\n};\n\npp$3.parseParenArrowList = function(startPos, startLoc, exprList) {\n  return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), exprList)\n};\n\n// New's precedence is slightly tricky. It must allow its argument to\n// be a `[]` or dot subscript expression, but not a call — at least,\n// not without wrapping it in parentheses. Thus, it uses the noCalls\n// argument to parseSubscripts to prevent it from consuming the\n// argument list.\n\nvar empty$1 = [];\n\npp$3.parseNew = function() {\n  if (this.containsEsc) { this.raiseRecoverable(this.start, \"Escape sequence in keyword new\"); }\n  var node = this.startNode();\n  var meta = this.parseIdent(true);\n  if (this.options.ecmaVersion >= 6 && this.eat(types.dot)) {\n    node.meta = meta;\n    var containsEsc = this.containsEsc;\n    node.property = this.parseIdent(true);\n    if (node.property.name !== \"target\")\n      { this.raiseRecoverable(node.property.start, \"The only valid meta property for new is 'new.target'\"); }\n    if (containsEsc)\n      { this.raiseRecoverable(node.start, \"'new.target' must not contain escaped characters\"); }\n    if (!this.inNonArrowFunction())\n      { this.raiseRecoverable(node.start, \"'new.target' can only be used in functions\"); }\n    return this.finishNode(node, \"MetaProperty\")\n  }\n  var startPos = this.start, startLoc = this.startLoc, isImport = this.type === types._import;\n  node.callee = this.parseSubscripts(this.parseExprAtom(), startPos, startLoc, true);\n  if (isImport && node.callee.type === \"ImportExpression\") {\n    this.raise(startPos, \"Cannot use new with import()\");\n  }\n  if (this.eat(types.parenL)) { node.arguments = this.parseExprList(types.parenR, this.options.ecmaVersion >= 8, false); }\n  else { node.arguments = empty$1; }\n  return this.finishNode(node, \"NewExpression\")\n};\n\n// Parse template expression.\n\npp$3.parseTemplateElement = function(ref) {\n  var isTagged = ref.isTagged;\n\n  var elem = this.startNode();\n  if (this.type === types.invalidTemplate) {\n    if (!isTagged) {\n      this.raiseRecoverable(this.start, \"Bad escape sequence in untagged template literal\");\n    }\n    elem.value = {\n      raw: this.value,\n      cooked: null\n    };\n  } else {\n    elem.value = {\n      raw: this.input.slice(this.start, this.end).replace(/\\r\\n?/g, \"\\n\"),\n      cooked: this.value\n    };\n  }\n  this.next();\n  elem.tail = this.type === types.backQuote;\n  return this.finishNode(elem, \"TemplateElement\")\n};\n\npp$3.parseTemplate = function(ref) {\n  if ( ref === void 0 ) ref = {};\n  var isTagged = ref.isTagged; if ( isTagged === void 0 ) isTagged = false;\n\n  var node = this.startNode();\n  this.next();\n  node.expressions = [];\n  var curElt = this.parseTemplateElement({isTagged: isTagged});\n  node.quasis = [curElt];\n  while (!curElt.tail) {\n    if (this.type === types.eof) { this.raise(this.pos, \"Unterminated template literal\"); }\n    this.expect(types.dollarBraceL);\n    node.expressions.push(this.parseExpression());\n    this.expect(types.braceR);\n    node.quasis.push(curElt = this.parseTemplateElement({isTagged: isTagged}));\n  }\n  this.next();\n  return this.finishNode(node, \"TemplateLiteral\")\n};\n\npp$3.isAsyncProp = function(prop) {\n  return !prop.computed && prop.key.type === \"Identifier\" && prop.key.name === \"async\" &&\n    (this.type === types.name || this.type === types.num || this.type === types.string || this.type === types.bracketL || this.type.keyword || (this.options.ecmaVersion >= 9 && this.type === types.star)) &&\n    !lineBreak.test(this.input.slice(this.lastTokEnd, this.start))\n};\n\n// Parse an object literal or binding pattern.\n\npp$3.parseObj = function(isPattern, refDestructuringErrors) {\n  var node = this.startNode(), first = true, propHash = {};\n  node.properties = [];\n  this.next();\n  while (!this.eat(types.braceR)) {\n    if (!first) {\n      this.expect(types.comma);\n      if (this.options.ecmaVersion >= 5 && this.afterTrailingComma(types.braceR)) { break }\n    } else { first = false; }\n\n    var prop = this.parseProperty(isPattern, refDestructuringErrors);\n    if (!isPattern) { this.checkPropClash(prop, propHash, refDestructuringErrors); }\n    node.properties.push(prop);\n  }\n  return this.finishNode(node, isPattern ? \"ObjectPattern\" : \"ObjectExpression\")\n};\n\npp$3.parseProperty = function(isPattern, refDestructuringErrors) {\n  var prop = this.startNode(), isGenerator, isAsync, startPos, startLoc;\n  if (this.options.ecmaVersion >= 9 && this.eat(types.ellipsis)) {\n    if (isPattern) {\n      prop.argument = this.parseIdent(false);\n      if (this.type === types.comma) {\n        this.raise(this.start, \"Comma is not permitted after the rest element\");\n      }\n      return this.finishNode(prop, \"RestElement\")\n    }\n    // To disallow parenthesized identifier via `this.toAssignable()`.\n    if (this.type === types.parenL && refDestructuringErrors) {\n      if (refDestructuringErrors.parenthesizedAssign < 0) {\n        refDestructuringErrors.parenthesizedAssign = this.start;\n      }\n      if (refDestructuringErrors.parenthesizedBind < 0) {\n        refDestructuringErrors.parenthesizedBind = this.start;\n      }\n    }\n    // Parse argument.\n    prop.argument = this.parseMaybeAssign(false, refDestructuringErrors);\n    // To disallow trailing comma via `this.toAssignable()`.\n    if (this.type === types.comma && refDestructuringErrors && refDestructuringErrors.trailingComma < 0) {\n      refDestructuringErrors.trailingComma = this.start;\n    }\n    // Finish\n    return this.finishNode(prop, \"SpreadElement\")\n  }\n  if (this.options.ecmaVersion >= 6) {\n    prop.method = false;\n    prop.shorthand = false;\n    if (isPattern || refDestructuringErrors) {\n      startPos = this.start;\n      startLoc = this.startLoc;\n    }\n    if (!isPattern)\n      { isGenerator = this.eat(types.star); }\n  }\n  var containsEsc = this.containsEsc;\n  this.parsePropertyName(prop);\n  if (!isPattern && !containsEsc && this.options.ecmaVersion >= 8 && !isGenerator && this.isAsyncProp(prop)) {\n    isAsync = true;\n    isGenerator = this.options.ecmaVersion >= 9 && this.eat(types.star);\n    this.parsePropertyName(prop, refDestructuringErrors);\n  } else {\n    isAsync = false;\n  }\n  this.parsePropertyValue(prop, isPattern, isGenerator, isAsync, startPos, startLoc, refDestructuringErrors, containsEsc);\n  return this.finishNode(prop, \"Property\")\n};\n\npp$3.parsePropertyValue = function(prop, isPattern, isGenerator, isAsync, startPos, startLoc, refDestructuringErrors, containsEsc) {\n  if ((isGenerator || isAsync) && this.type === types.colon)\n    { this.unexpected(); }\n\n  if (this.eat(types.colon)) {\n    prop.value = isPattern ? this.parseMaybeDefault(this.start, this.startLoc) : this.parseMaybeAssign(false, refDestructuringErrors);\n    prop.kind = \"init\";\n  } else if (this.options.ecmaVersion >= 6 && this.type === types.parenL) {\n    if (isPattern) { this.unexpected(); }\n    prop.kind = \"init\";\n    prop.method = true;\n    prop.value = this.parseMethod(isGenerator, isAsync);\n  } else if (!isPattern && !containsEsc &&\n             this.options.ecmaVersion >= 5 && !prop.computed && prop.key.type === \"Identifier\" &&\n             (prop.key.name === \"get\" || prop.key.name === \"set\") &&\n             (this.type !== types.comma && this.type !== types.braceR && this.type !== types.eq)) {\n    if (isGenerator || isAsync) { this.unexpected(); }\n    prop.kind = prop.key.name;\n    this.parsePropertyName(prop);\n    prop.value = this.parseMethod(false);\n    var paramCount = prop.kind === \"get\" ? 0 : 1;\n    if (prop.value.params.length !== paramCount) {\n      var start = prop.value.start;\n      if (prop.kind === \"get\")\n        { this.raiseRecoverable(start, \"getter should have no params\"); }\n      else\n        { this.raiseRecoverable(start, \"setter should have exactly one param\"); }\n    } else {\n      if (prop.kind === \"set\" && prop.value.params[0].type === \"RestElement\")\n        { this.raiseRecoverable(prop.value.params[0].start, \"Setter cannot use rest params\"); }\n    }\n  } else if (this.options.ecmaVersion >= 6 && !prop.computed && prop.key.type === \"Identifier\") {\n    if (isGenerator || isAsync) { this.unexpected(); }\n    this.checkUnreserved(prop.key);\n    if (prop.key.name === \"await\" && !this.awaitIdentPos)\n      { this.awaitIdentPos = startPos; }\n    prop.kind = \"init\";\n    if (isPattern) {\n      prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key);\n    } else if (this.type === types.eq && refDestructuringErrors) {\n      if (refDestructuringErrors.shorthandAssign < 0)\n        { refDestructuringErrors.shorthandAssign = this.start; }\n      prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key);\n    } else {\n      prop.value = prop.key;\n    }\n    prop.shorthand = true;\n  } else { this.unexpected(); }\n};\n\npp$3.parsePropertyName = function(prop) {\n  if (this.options.ecmaVersion >= 6) {\n    if (this.eat(types.bracketL)) {\n      prop.computed = true;\n      prop.key = this.parseMaybeAssign();\n      this.expect(types.bracketR);\n      return prop.key\n    } else {\n      prop.computed = false;\n    }\n  }\n  return prop.key = this.type === types.num || this.type === types.string ? this.parseExprAtom() : this.parseIdent(this.options.allowReserved !== \"never\")\n};\n\n// Initialize empty function node.\n\npp$3.initFunction = function(node) {\n  node.id = null;\n  if (this.options.ecmaVersion >= 6) { node.generator = node.expression = false; }\n  if (this.options.ecmaVersion >= 8) { node.async = false; }\n};\n\n// Parse object or class method.\n\npp$3.parseMethod = function(isGenerator, isAsync, allowDirectSuper) {\n  var node = this.startNode(), oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;\n\n  this.initFunction(node);\n  if (this.options.ecmaVersion >= 6)\n    { node.generator = isGenerator; }\n  if (this.options.ecmaVersion >= 8)\n    { node.async = !!isAsync; }\n\n  this.yieldPos = 0;\n  this.awaitPos = 0;\n  this.awaitIdentPos = 0;\n  this.enterScope(functionFlags(isAsync, node.generator) | SCOPE_SUPER | (allowDirectSuper ? SCOPE_DIRECT_SUPER : 0));\n\n  this.expect(types.parenL);\n  node.params = this.parseBindingList(types.parenR, false, this.options.ecmaVersion >= 8);\n  this.checkYieldAwaitInDefaultParams();\n  this.parseFunctionBody(node, false, true);\n\n  this.yieldPos = oldYieldPos;\n  this.awaitPos = oldAwaitPos;\n  this.awaitIdentPos = oldAwaitIdentPos;\n  return this.finishNode(node, \"FunctionExpression\")\n};\n\n// Parse arrow function expression with given parameters.\n\npp$3.parseArrowExpression = function(node, params, isAsync) {\n  var oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;\n\n  this.enterScope(functionFlags(isAsync, false) | SCOPE_ARROW);\n  this.initFunction(node);\n  if (this.options.ecmaVersion >= 8) { node.async = !!isAsync; }\n\n  this.yieldPos = 0;\n  this.awaitPos = 0;\n  this.awaitIdentPos = 0;\n\n  node.params = this.toAssignableList(params, true);\n  this.parseFunctionBody(node, true, false);\n\n  this.yieldPos = oldYieldPos;\n  this.awaitPos = oldAwaitPos;\n  this.awaitIdentPos = oldAwaitIdentPos;\n  return this.finishNode(node, \"ArrowFunctionExpression\")\n};\n\n// Parse function body and check parameters.\n\npp$3.parseFunctionBody = function(node, isArrowFunction, isMethod) {\n  var isExpression = isArrowFunction && this.type !== types.braceL;\n  var oldStrict = this.strict, useStrict = false;\n\n  if (isExpression) {\n    node.body = this.parseMaybeAssign();\n    node.expression = true;\n    this.checkParams(node, false);\n  } else {\n    var nonSimple = this.options.ecmaVersion >= 7 && !this.isSimpleParamList(node.params);\n    if (!oldStrict || nonSimple) {\n      useStrict = this.strictDirective(this.end);\n      // If this is a strict mode function, verify that argument names\n      // are not repeated, and it does not try to bind the words `eval`\n      // or `arguments`.\n      if (useStrict && nonSimple)\n        { this.raiseRecoverable(node.start, \"Illegal 'use strict' directive in function with non-simple parameter list\"); }\n    }\n    // Start a new scope with regard to labels and the `inFunction`\n    // flag (restore them to their old value afterwards).\n    var oldLabels = this.labels;\n    this.labels = [];\n    if (useStrict) { this.strict = true; }\n\n    // Add the params to varDeclaredNames to ensure that an error is thrown\n    // if a let/const declaration in the function clashes with one of the params.\n    this.checkParams(node, !oldStrict && !useStrict && !isArrowFunction && !isMethod && this.isSimpleParamList(node.params));\n    // Ensure the function name isn't a forbidden identifier in strict mode, e.g. 'eval'\n    if (this.strict && node.id) { this.checkLVal(node.id, BIND_OUTSIDE); }\n    node.body = this.parseBlock(false, undefined, useStrict && !oldStrict);\n    node.expression = false;\n    this.adaptDirectivePrologue(node.body.body);\n    this.labels = oldLabels;\n  }\n  this.exitScope();\n};\n\npp$3.isSimpleParamList = function(params) {\n  for (var i = 0, list = params; i < list.length; i += 1)\n    {\n    var param = list[i];\n\n    if (param.type !== \"Identifier\") { return false\n  } }\n  return true\n};\n\n// Checks function params for various disallowed patterns such as using \"eval\"\n// or \"arguments\" and duplicate parameters.\n\npp$3.checkParams = function(node, allowDuplicates) {\n  var nameHash = {};\n  for (var i = 0, list = node.params; i < list.length; i += 1)\n    {\n    var param = list[i];\n\n    this.checkLVal(param, BIND_VAR, allowDuplicates ? null : nameHash);\n  }\n};\n\n// Parses a comma-separated list of expressions, and returns them as\n// an array. `close` is the token type that ends the list, and\n// `allowEmpty` can be turned on to allow subsequent commas with\n// nothing in between them to be parsed as `null` (which is needed\n// for array literals).\n\npp$3.parseExprList = function(close, allowTrailingComma, allowEmpty, refDestructuringErrors) {\n  var elts = [], first = true;\n  while (!this.eat(close)) {\n    if (!first) {\n      this.expect(types.comma);\n      if (allowTrailingComma && this.afterTrailingComma(close)) { break }\n    } else { first = false; }\n\n    var elt = (void 0);\n    if (allowEmpty && this.type === types.comma)\n      { elt = null; }\n    else if (this.type === types.ellipsis) {\n      elt = this.parseSpread(refDestructuringErrors);\n      if (refDestructuringErrors && this.type === types.comma && refDestructuringErrors.trailingComma < 0)\n        { refDestructuringErrors.trailingComma = this.start; }\n    } else {\n      elt = this.parseMaybeAssign(false, refDestructuringErrors);\n    }\n    elts.push(elt);\n  }\n  return elts\n};\n\npp$3.checkUnreserved = function(ref) {\n  var start = ref.start;\n  var end = ref.end;\n  var name = ref.name;\n\n  if (this.inGenerator && name === \"yield\")\n    { this.raiseRecoverable(start, \"Cannot use 'yield' as identifier inside a generator\"); }\n  if (this.inAsync && name === \"await\")\n    { this.raiseRecoverable(start, \"Cannot use 'await' as identifier inside an async function\"); }\n  if (this.keywords.test(name))\n    { this.raise(start, (\"Unexpected keyword '\" + name + \"'\")); }\n  if (this.options.ecmaVersion < 6 &&\n    this.input.slice(start, end).indexOf(\"\\\\\") !== -1) { return }\n  var re = this.strict ? this.reservedWordsStrict : this.reservedWords;\n  if (re.test(name)) {\n    if (!this.inAsync && name === \"await\")\n      { this.raiseRecoverable(start, \"Cannot use keyword 'await' outside an async function\"); }\n    this.raiseRecoverable(start, (\"The keyword '\" + name + \"' is reserved\"));\n  }\n};\n\n// Parse the next token as an identifier. If `liberal` is true (used\n// when parsing properties), it will also convert keywords into\n// identifiers.\n\npp$3.parseIdent = function(liberal, isBinding) {\n  var node = this.startNode();\n  if (this.type === types.name) {\n    node.name = this.value;\n  } else if (this.type.keyword) {\n    node.name = this.type.keyword;\n\n    // To fix https://github.com/acornjs/acorn/issues/575\n    // `class` and `function` keywords push new context into this.context.\n    // But there is no chance to pop the context if the keyword is consumed as an identifier such as a property name.\n    // If the previous token is a dot, this does not apply because the context-managing code already ignored the keyword\n    if ((node.name === \"class\" || node.name === \"function\") &&\n        (this.lastTokEnd !== this.lastTokStart + 1 || this.input.charCodeAt(this.lastTokStart) !== 46)) {\n      this.context.pop();\n    }\n  } else {\n    this.unexpected();\n  }\n  this.next(!!liberal);\n  this.finishNode(node, \"Identifier\");\n  if (!liberal) {\n    this.checkUnreserved(node);\n    if (node.name === \"await\" && !this.awaitIdentPos)\n      { this.awaitIdentPos = node.start; }\n  }\n  return node\n};\n\n// Parses yield expression inside generator.\n\npp$3.parseYield = function(noIn) {\n  if (!this.yieldPos) { this.yieldPos = this.start; }\n\n  var node = this.startNode();\n  this.next();\n  if (this.type === types.semi || this.canInsertSemicolon() || (this.type !== types.star && !this.type.startsExpr)) {\n    node.delegate = false;\n    node.argument = null;\n  } else {\n    node.delegate = this.eat(types.star);\n    node.argument = this.parseMaybeAssign(noIn);\n  }\n  return this.finishNode(node, \"YieldExpression\")\n};\n\npp$3.parseAwait = function() {\n  if (!this.awaitPos) { this.awaitPos = this.start; }\n\n  var node = this.startNode();\n  this.next();\n  node.argument = this.parseMaybeUnary(null, false);\n  return this.finishNode(node, \"AwaitExpression\")\n};\n\nvar pp$4 = Parser.prototype;\n\n// This function is used to raise exceptions on parse errors. It\n// takes an offset integer (into the current `input`) to indicate\n// the location of the error, attaches the position to the end\n// of the error message, and then raises a `SyntaxError` with that\n// message.\n\npp$4.raise = function(pos, message) {\n  var loc = getLineInfo(this.input, pos);\n  message += \" (\" + loc.line + \":\" + loc.column + \")\";\n  var err = new SyntaxError(message);\n  err.pos = pos; err.loc = loc; err.raisedAt = this.pos;\n  throw err\n};\n\npp$4.raiseRecoverable = pp$4.raise;\n\npp$4.curPosition = function() {\n  if (this.options.locations) {\n    return new Position(this.curLine, this.pos - this.lineStart)\n  }\n};\n\nvar pp$5 = Parser.prototype;\n\nvar Scope = function Scope(flags) {\n  this.flags = flags;\n  // A list of var-declared names in the current lexical scope\n  this.var = [];\n  // A list of lexically-declared names in the current lexical scope\n  this.lexical = [];\n  // A list of lexically-declared FunctionDeclaration names in the current lexical scope\n  this.functions = [];\n};\n\n// The functions in this module keep track of declared variables in the current scope in order to detect duplicate variable names.\n\npp$5.enterScope = function(flags) {\n  this.scopeStack.push(new Scope(flags));\n};\n\npp$5.exitScope = function() {\n  this.scopeStack.pop();\n};\n\n// The spec says:\n// > At the top level of a function, or script, function declarations are\n// > treated like var declarations rather than like lexical declarations.\npp$5.treatFunctionsAsVarInScope = function(scope) {\n  return (scope.flags & SCOPE_FUNCTION) || !this.inModule && (scope.flags & SCOPE_TOP)\n};\n\npp$5.declareName = function(name, bindingType, pos) {\n  var redeclared = false;\n  if (bindingType === BIND_LEXICAL) {\n    var scope = this.currentScope();\n    redeclared = scope.lexical.indexOf(name) > -1 || scope.functions.indexOf(name) > -1 || scope.var.indexOf(name) > -1;\n    scope.lexical.push(name);\n    if (this.inModule && (scope.flags & SCOPE_TOP))\n      { delete this.undefinedExports[name]; }\n  } else if (bindingType === BIND_SIMPLE_CATCH) {\n    var scope$1 = this.currentScope();\n    scope$1.lexical.push(name);\n  } else if (bindingType === BIND_FUNCTION) {\n    var scope$2 = this.currentScope();\n    if (this.treatFunctionsAsVar)\n      { redeclared = scope$2.lexical.indexOf(name) > -1; }\n    else\n      { redeclared = scope$2.lexical.indexOf(name) > -1 || scope$2.var.indexOf(name) > -1; }\n    scope$2.functions.push(name);\n  } else {\n    for (var i = this.scopeStack.length - 1; i >= 0; --i) {\n      var scope$3 = this.scopeStack[i];\n      if (scope$3.lexical.indexOf(name) > -1 && !((scope$3.flags & SCOPE_SIMPLE_CATCH) && scope$3.lexical[0] === name) ||\n          !this.treatFunctionsAsVarInScope(scope$3) && scope$3.functions.indexOf(name) > -1) {\n        redeclared = true;\n        break\n      }\n      scope$3.var.push(name);\n      if (this.inModule && (scope$3.flags & SCOPE_TOP))\n        { delete this.undefinedExports[name]; }\n      if (scope$3.flags & SCOPE_VAR) { break }\n    }\n  }\n  if (redeclared) { this.raiseRecoverable(pos, (\"Identifier '\" + name + \"' has already been declared\")); }\n};\n\npp$5.checkLocalExport = function(id) {\n  // scope.functions must be empty as Module code is always strict.\n  if (this.scopeStack[0].lexical.indexOf(id.name) === -1 &&\n      this.scopeStack[0].var.indexOf(id.name) === -1) {\n    this.undefinedExports[id.name] = id;\n  }\n};\n\npp$5.currentScope = function() {\n  return this.scopeStack[this.scopeStack.length - 1]\n};\n\npp$5.currentVarScope = function() {\n  for (var i = this.scopeStack.length - 1;; i--) {\n    var scope = this.scopeStack[i];\n    if (scope.flags & SCOPE_VAR) { return scope }\n  }\n};\n\n// Could be useful for `this`, `new.target`, `super()`, `super.property`, and `super[property]`.\npp$5.currentThisScope = function() {\n  for (var i = this.scopeStack.length - 1;; i--) {\n    var scope = this.scopeStack[i];\n    if (scope.flags & SCOPE_VAR && !(scope.flags & SCOPE_ARROW)) { return scope }\n  }\n};\n\nvar Node = function Node(parser, pos, loc) {\n  this.type = \"\";\n  this.start = pos;\n  this.end = 0;\n  if (parser.options.locations)\n    { this.loc = new SourceLocation(parser, loc); }\n  if (parser.options.directSourceFile)\n    { this.sourceFile = parser.options.directSourceFile; }\n  if (parser.options.ranges)\n    { this.range = [pos, 0]; }\n};\n\n// Start an AST node, attaching a start offset.\n\nvar pp$6 = Parser.prototype;\n\npp$6.startNode = function() {\n  return new Node(this, this.start, this.startLoc)\n};\n\npp$6.startNodeAt = function(pos, loc) {\n  return new Node(this, pos, loc)\n};\n\n// Finish an AST node, adding `type` and `end` properties.\n\nfunction finishNodeAt(node, type, pos, loc) {\n  node.type = type;\n  node.end = pos;\n  if (this.options.locations)\n    { node.loc.end = loc; }\n  if (this.options.ranges)\n    { node.range[1] = pos; }\n  return node\n}\n\npp$6.finishNode = function(node, type) {\n  return finishNodeAt.call(this, node, type, this.lastTokEnd, this.lastTokEndLoc)\n};\n\n// Finish node at given position\n\npp$6.finishNodeAt = function(node, type, pos, loc) {\n  return finishNodeAt.call(this, node, type, pos, loc)\n};\n\n// The algorithm used to determine whether a regexp can appear at a\n\nvar TokContext = function TokContext(token, isExpr, preserveSpace, override, generator) {\n  this.token = token;\n  this.isExpr = !!isExpr;\n  this.preserveSpace = !!preserveSpace;\n  this.override = override;\n  this.generator = !!generator;\n};\n\nvar types$1 = {\n  b_stat: new TokContext(\"{\", false),\n  b_expr: new TokContext(\"{\", true),\n  b_tmpl: new TokContext(\"${\", false),\n  p_stat: new TokContext(\"(\", false),\n  p_expr: new TokContext(\"(\", true),\n  q_tmpl: new TokContext(\"`\", true, true, function (p) { return p.tryReadTemplateToken(); }),\n  f_stat: new TokContext(\"function\", false),\n  f_expr: new TokContext(\"function\", true),\n  f_expr_gen: new TokContext(\"function\", true, false, null, true),\n  f_gen: new TokContext(\"function\", false, false, null, true)\n};\n\nvar pp$7 = Parser.prototype;\n\npp$7.initialContext = function() {\n  return [types$1.b_stat]\n};\n\npp$7.braceIsBlock = function(prevType) {\n  var parent = this.curContext();\n  if (parent === types$1.f_expr || parent === types$1.f_stat)\n    { return true }\n  if (prevType === types.colon && (parent === types$1.b_stat || parent === types$1.b_expr))\n    { return !parent.isExpr }\n\n  // The check for `tt.name && exprAllowed` detects whether we are\n  // after a `yield` or `of` construct. See the `updateContext` for\n  // `tt.name`.\n  if (prevType === types._return || prevType === types.name && this.exprAllowed)\n    { return lineBreak.test(this.input.slice(this.lastTokEnd, this.start)) }\n  if (prevType === types._else || prevType === types.semi || prevType === types.eof || prevType === types.parenR || prevType === types.arrow)\n    { return true }\n  if (prevType === types.braceL)\n    { return parent === types$1.b_stat }\n  if (prevType === types._var || prevType === types._const || prevType === types.name)\n    { return false }\n  return !this.exprAllowed\n};\n\npp$7.inGeneratorContext = function() {\n  for (var i = this.context.length - 1; i >= 1; i--) {\n    var context = this.context[i];\n    if (context.token === \"function\")\n      { return context.generator }\n  }\n  return false\n};\n\npp$7.updateContext = function(prevType) {\n  var update, type = this.type;\n  if (type.keyword && prevType === types.dot)\n    { this.exprAllowed = false; }\n  else if (update = type.updateContext)\n    { update.call(this, prevType); }\n  else\n    { this.exprAllowed = type.beforeExpr; }\n};\n\n// Token-specific context update code\n\ntypes.parenR.updateContext = types.braceR.updateContext = function() {\n  if (this.context.length === 1) {\n    this.exprAllowed = true;\n    return\n  }\n  var out = this.context.pop();\n  if (out === types$1.b_stat && this.curContext().token === \"function\") {\n    out = this.context.pop();\n  }\n  this.exprAllowed = !out.isExpr;\n};\n\ntypes.braceL.updateContext = function(prevType) {\n  this.context.push(this.braceIsBlock(prevType) ? types$1.b_stat : types$1.b_expr);\n  this.exprAllowed = true;\n};\n\ntypes.dollarBraceL.updateContext = function() {\n  this.context.push(types$1.b_tmpl);\n  this.exprAllowed = true;\n};\n\ntypes.parenL.updateContext = function(prevType) {\n  var statementParens = prevType === types._if || prevType === types._for || prevType === types._with || prevType === types._while;\n  this.context.push(statementParens ? types$1.p_stat : types$1.p_expr);\n  this.exprAllowed = true;\n};\n\ntypes.incDec.updateContext = function() {\n  // tokExprAllowed stays unchanged\n};\n\ntypes._function.updateContext = types._class.updateContext = function(prevType) {\n  if (prevType.beforeExpr && prevType !== types.semi && prevType !== types._else &&\n      !(prevType === types._return && lineBreak.test(this.input.slice(this.lastTokEnd, this.start))) &&\n      !((prevType === types.colon || prevType === types.braceL) && this.curContext() === types$1.b_stat))\n    { this.context.push(types$1.f_expr); }\n  else\n    { this.context.push(types$1.f_stat); }\n  this.exprAllowed = false;\n};\n\ntypes.backQuote.updateContext = function() {\n  if (this.curContext() === types$1.q_tmpl)\n    { this.context.pop(); }\n  else\n    { this.context.push(types$1.q_tmpl); }\n  this.exprAllowed = false;\n};\n\ntypes.star.updateContext = function(prevType) {\n  if (prevType === types._function) {\n    var index = this.context.length - 1;\n    if (this.context[index] === types$1.f_expr)\n      { this.context[index] = types$1.f_expr_gen; }\n    else\n      { this.context[index] = types$1.f_gen; }\n  }\n  this.exprAllowed = true;\n};\n\ntypes.name.updateContext = function(prevType) {\n  var allowed = false;\n  if (this.options.ecmaVersion >= 6 && prevType !== types.dot) {\n    if (this.value === \"of\" && !this.exprAllowed ||\n        this.value === \"yield\" && this.inGeneratorContext())\n      { allowed = true; }\n  }\n  this.exprAllowed = allowed;\n};\n\n// This file contains Unicode properties extracted from the ECMAScript\n// specification. The lists are extracted like so:\n// $$('#table-binary-unicode-properties > figure > table > tbody > tr > td:nth-child(1) code').map(el => el.innerText)\n\n// #table-binary-unicode-properties\nvar ecma9BinaryProperties = \"ASCII ASCII_Hex_Digit AHex Alphabetic Alpha Any Assigned Bidi_Control Bidi_C Bidi_Mirrored Bidi_M Case_Ignorable CI Cased Changes_When_Casefolded CWCF Changes_When_Casemapped CWCM Changes_When_Lowercased CWL Changes_When_NFKC_Casefolded CWKCF Changes_When_Titlecased CWT Changes_When_Uppercased CWU Dash Default_Ignorable_Code_Point DI Deprecated Dep Diacritic Dia Emoji Emoji_Component Emoji_Modifier Emoji_Modifier_Base Emoji_Presentation Extender Ext Grapheme_Base Gr_Base Grapheme_Extend Gr_Ext Hex_Digit Hex IDS_Binary_Operator IDSB IDS_Trinary_Operator IDST ID_Continue IDC ID_Start IDS Ideographic Ideo Join_Control Join_C Logical_Order_Exception LOE Lowercase Lower Math Noncharacter_Code_Point NChar Pattern_Syntax Pat_Syn Pattern_White_Space Pat_WS Quotation_Mark QMark Radical Regional_Indicator RI Sentence_Terminal STerm Soft_Dotted SD Terminal_Punctuation Term Unified_Ideograph UIdeo Uppercase Upper Variation_Selector VS White_Space space XID_Continue XIDC XID_Start XIDS\";\nvar ecma10BinaryProperties = ecma9BinaryProperties + \" Extended_Pictographic\";\nvar ecma11BinaryProperties = ecma10BinaryProperties;\nvar unicodeBinaryProperties = {\n  9: ecma9BinaryProperties,\n  10: ecma10BinaryProperties,\n  11: ecma11BinaryProperties\n};\n\n// #table-unicode-general-category-values\nvar unicodeGeneralCategoryValues = \"Cased_Letter LC Close_Punctuation Pe Connector_Punctuation Pc Control Cc cntrl Currency_Symbol Sc Dash_Punctuation Pd Decimal_Number Nd digit Enclosing_Mark Me Final_Punctuation Pf Format Cf Initial_Punctuation Pi Letter L Letter_Number Nl Line_Separator Zl Lowercase_Letter Ll Mark M Combining_Mark Math_Symbol Sm Modifier_Letter Lm Modifier_Symbol Sk Nonspacing_Mark Mn Number N Open_Punctuation Ps Other C Other_Letter Lo Other_Number No Other_Punctuation Po Other_Symbol So Paragraph_Separator Zp Private_Use Co Punctuation P punct Separator Z Space_Separator Zs Spacing_Mark Mc Surrogate Cs Symbol S Titlecase_Letter Lt Unassigned Cn Uppercase_Letter Lu\";\n\n// #table-unicode-script-values\nvar ecma9ScriptValues = \"Adlam Adlm Ahom Ahom Anatolian_Hieroglyphs Hluw Arabic Arab Armenian Armn Avestan Avst Balinese Bali Bamum Bamu Bassa_Vah Bass Batak Batk Bengali Beng Bhaiksuki Bhks Bopomofo Bopo Brahmi Brah Braille Brai Buginese Bugi Buhid Buhd Canadian_Aboriginal Cans Carian Cari Caucasian_Albanian Aghb Chakma Cakm Cham Cham Cherokee Cher Common Zyyy Coptic Copt Qaac Cuneiform Xsux Cypriot Cprt Cyrillic Cyrl Deseret Dsrt Devanagari Deva Duployan Dupl Egyptian_Hieroglyphs Egyp Elbasan Elba Ethiopic Ethi Georgian Geor Glagolitic Glag Gothic Goth Grantha Gran Greek Grek Gujarati Gujr Gurmukhi Guru Han Hani Hangul Hang Hanunoo Hano Hatran Hatr Hebrew Hebr Hiragana Hira Imperial_Aramaic Armi Inherited Zinh Qaai Inscriptional_Pahlavi Phli Inscriptional_Parthian Prti Javanese Java Kaithi Kthi Kannada Knda Katakana Kana Kayah_Li Kali Kharoshthi Khar Khmer Khmr Khojki Khoj Khudawadi Sind Lao Laoo Latin Latn Lepcha Lepc Limbu Limb Linear_A Lina Linear_B Linb Lisu Lisu Lycian Lyci Lydian Lydi Mahajani Mahj Malayalam Mlym Mandaic Mand Manichaean Mani Marchen Marc Masaram_Gondi Gonm Meetei_Mayek Mtei Mende_Kikakui Mend Meroitic_Cursive Merc Meroitic_Hieroglyphs Mero Miao Plrd Modi Modi Mongolian Mong Mro Mroo Multani Mult Myanmar Mymr Nabataean Nbat New_Tai_Lue Talu Newa Newa Nko Nkoo Nushu Nshu Ogham Ogam Ol_Chiki Olck Old_Hungarian Hung Old_Italic Ital Old_North_Arabian Narb Old_Permic Perm Old_Persian Xpeo Old_South_Arabian Sarb Old_Turkic Orkh Oriya Orya Osage Osge Osmanya Osma Pahawh_Hmong Hmng Palmyrene Palm Pau_Cin_Hau Pauc Phags_Pa Phag Phoenician Phnx Psalter_Pahlavi Phlp Rejang Rjng Runic Runr Samaritan Samr Saurashtra Saur Sharada Shrd Shavian Shaw Siddham Sidd SignWriting Sgnw Sinhala Sinh Sora_Sompeng Sora Soyombo Soyo Sundanese Sund Syloti_Nagri Sylo Syriac Syrc Tagalog Tglg Tagbanwa Tagb Tai_Le Tale Tai_Tham Lana Tai_Viet Tavt Takri Takr Tamil Taml Tangut Tang Telugu Telu Thaana Thaa Thai Thai Tibetan Tibt Tifinagh Tfng Tirhuta Tirh Ugaritic Ugar Vai Vaii Warang_Citi Wara Yi Yiii Zanabazar_Square Zanb\";\nvar ecma10ScriptValues = ecma9ScriptValues + \" Dogra Dogr Gunjala_Gondi Gong Hanifi_Rohingya Rohg Makasar Maka Medefaidrin Medf Old_Sogdian Sogo Sogdian Sogd\";\nvar ecma11ScriptValues = ecma10ScriptValues + \" Elymaic Elym Nandinagari Nand Nyiakeng_Puachue_Hmong Hmnp Wancho Wcho\";\nvar unicodeScriptValues = {\n  9: ecma9ScriptValues,\n  10: ecma10ScriptValues,\n  11: ecma11ScriptValues\n};\n\nvar data = {};\nfunction buildUnicodeData(ecmaVersion) {\n  var d = data[ecmaVersion] = {\n    binary: wordsRegexp(unicodeBinaryProperties[ecmaVersion] + \" \" + unicodeGeneralCategoryValues),\n    nonBinary: {\n      General_Category: wordsRegexp(unicodeGeneralCategoryValues),\n      Script: wordsRegexp(unicodeScriptValues[ecmaVersion])\n    }\n  };\n  d.nonBinary.Script_Extensions = d.nonBinary.Script;\n\n  d.nonBinary.gc = d.nonBinary.General_Category;\n  d.nonBinary.sc = d.nonBinary.Script;\n  d.nonBinary.scx = d.nonBinary.Script_Extensions;\n}\nbuildUnicodeData(9);\nbuildUnicodeData(10);\nbuildUnicodeData(11);\n\nvar pp$8 = Parser.prototype;\n\nvar RegExpValidationState = function RegExpValidationState(parser) {\n  this.parser = parser;\n  this.validFlags = \"gim\" + (parser.options.ecmaVersion >= 6 ? \"uy\" : \"\") + (parser.options.ecmaVersion >= 9 ? \"s\" : \"\");\n  this.unicodeProperties = data[parser.options.ecmaVersion >= 11 ? 11 : parser.options.ecmaVersion];\n  this.source = \"\";\n  this.flags = \"\";\n  this.start = 0;\n  this.switchU = false;\n  this.switchN = false;\n  this.pos = 0;\n  this.lastIntValue = 0;\n  this.lastStringValue = \"\";\n  this.lastAssertionIsQuantifiable = false;\n  this.numCapturingParens = 0;\n  this.maxBackReference = 0;\n  this.groupNames = [];\n  this.backReferenceNames = [];\n};\n\nRegExpValidationState.prototype.reset = function reset (start, pattern, flags) {\n  var unicode = flags.indexOf(\"u\") !== -1;\n  this.start = start | 0;\n  this.source = pattern + \"\";\n  this.flags = flags;\n  this.switchU = unicode && this.parser.options.ecmaVersion >= 6;\n  this.switchN = unicode && this.parser.options.ecmaVersion >= 9;\n};\n\nRegExpValidationState.prototype.raise = function raise (message) {\n  this.parser.raiseRecoverable(this.start, (\"Invalid regular expression: /\" + (this.source) + \"/: \" + message));\n};\n\n// If u flag is given, this returns the code point at the index (it combines a surrogate pair).\n// Otherwise, this returns the code unit of the index (can be a part of a surrogate pair).\nRegExpValidationState.prototype.at = function at (i, forceU) {\n    if ( forceU === void 0 ) forceU = false;\n\n  var s = this.source;\n  var l = s.length;\n  if (i >= l) {\n    return -1\n  }\n  var c = s.charCodeAt(i);\n  if (!(forceU || this.switchU) || c <= 0xD7FF || c >= 0xE000 || i + 1 >= l) {\n    return c\n  }\n  var next = s.charCodeAt(i + 1);\n  return next >= 0xDC00 && next <= 0xDFFF ? (c << 10) + next - 0x35FDC00 : c\n};\n\nRegExpValidationState.prototype.nextIndex = function nextIndex (i, forceU) {\n    if ( forceU === void 0 ) forceU = false;\n\n  var s = this.source;\n  var l = s.length;\n  if (i >= l) {\n    return l\n  }\n  var c = s.charCodeAt(i), next;\n  if (!(forceU || this.switchU) || c <= 0xD7FF || c >= 0xE000 || i + 1 >= l ||\n      (next = s.charCodeAt(i + 1)) < 0xDC00 || next > 0xDFFF) {\n    return i + 1\n  }\n  return i + 2\n};\n\nRegExpValidationState.prototype.current = function current (forceU) {\n    if ( forceU === void 0 ) forceU = false;\n\n  return this.at(this.pos, forceU)\n};\n\nRegExpValidationState.prototype.lookahead = function lookahead (forceU) {\n    if ( forceU === void 0 ) forceU = false;\n\n  return this.at(this.nextIndex(this.pos, forceU), forceU)\n};\n\nRegExpValidationState.prototype.advance = function advance (forceU) {\n    if ( forceU === void 0 ) forceU = false;\n\n  this.pos = this.nextIndex(this.pos, forceU);\n};\n\nRegExpValidationState.prototype.eat = function eat (ch, forceU) {\n    if ( forceU === void 0 ) forceU = false;\n\n  if (this.current(forceU) === ch) {\n    this.advance(forceU);\n    return true\n  }\n  return false\n};\n\nfunction codePointToString(ch) {\n  if (ch <= 0xFFFF) { return String.fromCharCode(ch) }\n  ch -= 0x10000;\n  return String.fromCharCode((ch >> 10) + 0xD800, (ch & 0x03FF) + 0xDC00)\n}\n\n/**\n * Validate the flags part of a given RegExpLiteral.\n *\n * @param {RegExpValidationState} state The state to validate RegExp.\n * @returns {void}\n */\npp$8.validateRegExpFlags = function(state) {\n  var validFlags = state.validFlags;\n  var flags = state.flags;\n\n  for (var i = 0; i < flags.length; i++) {\n    var flag = flags.charAt(i);\n    if (validFlags.indexOf(flag) === -1) {\n      this.raise(state.start, \"Invalid regular expression flag\");\n    }\n    if (flags.indexOf(flag, i + 1) > -1) {\n      this.raise(state.start, \"Duplicate regular expression flag\");\n    }\n  }\n};\n\n/**\n * Validate the pattern part of a given RegExpLiteral.\n *\n * @param {RegExpValidationState} state The state to validate RegExp.\n * @returns {void}\n */\npp$8.validateRegExpPattern = function(state) {\n  this.regexp_pattern(state);\n\n  // The goal symbol for the parse is |Pattern[~U, ~N]|. If the result of\n  // parsing contains a |GroupName|, reparse with the goal symbol\n  // |Pattern[~U, +N]| and use this result instead. Throw a *SyntaxError*\n  // exception if _P_ did not conform to the grammar, if any elements of _P_\n  // were not matched by the parse, or if any Early Error conditions exist.\n  if (!state.switchN && this.options.ecmaVersion >= 9 && state.groupNames.length > 0) {\n    state.switchN = true;\n    this.regexp_pattern(state);\n  }\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-Pattern\npp$8.regexp_pattern = function(state) {\n  state.pos = 0;\n  state.lastIntValue = 0;\n  state.lastStringValue = \"\";\n  state.lastAssertionIsQuantifiable = false;\n  state.numCapturingParens = 0;\n  state.maxBackReference = 0;\n  state.groupNames.length = 0;\n  state.backReferenceNames.length = 0;\n\n  this.regexp_disjunction(state);\n\n  if (state.pos !== state.source.length) {\n    // Make the same messages as V8.\n    if (state.eat(0x29 /* ) */)) {\n      state.raise(\"Unmatched ')'\");\n    }\n    if (state.eat(0x5D /* ] */) || state.eat(0x7D /* } */)) {\n      state.raise(\"Lone quantifier brackets\");\n    }\n  }\n  if (state.maxBackReference > state.numCapturingParens) {\n    state.raise(\"Invalid escape\");\n  }\n  for (var i = 0, list = state.backReferenceNames; i < list.length; i += 1) {\n    var name = list[i];\n\n    if (state.groupNames.indexOf(name) === -1) {\n      state.raise(\"Invalid named capture referenced\");\n    }\n  }\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-Disjunction\npp$8.regexp_disjunction = function(state) {\n  this.regexp_alternative(state);\n  while (state.eat(0x7C /* | */)) {\n    this.regexp_alternative(state);\n  }\n\n  // Make the same message as V8.\n  if (this.regexp_eatQuantifier(state, true)) {\n    state.raise(\"Nothing to repeat\");\n  }\n  if (state.eat(0x7B /* { */)) {\n    state.raise(\"Lone quantifier brackets\");\n  }\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-Alternative\npp$8.regexp_alternative = function(state) {\n  while (state.pos < state.source.length && this.regexp_eatTerm(state))\n    { }\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-Term\npp$8.regexp_eatTerm = function(state) {\n  if (this.regexp_eatAssertion(state)) {\n    // Handle `QuantifiableAssertion Quantifier` alternative.\n    // `state.lastAssertionIsQuantifiable` is true if the last eaten Assertion\n    // is a QuantifiableAssertion.\n    if (state.lastAssertionIsQuantifiable && this.regexp_eatQuantifier(state)) {\n      // Make the same message as V8.\n      if (state.switchU) {\n        state.raise(\"Invalid quantifier\");\n      }\n    }\n    return true\n  }\n\n  if (state.switchU ? this.regexp_eatAtom(state) : this.regexp_eatExtendedAtom(state)) {\n    this.regexp_eatQuantifier(state);\n    return true\n  }\n\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-Assertion\npp$8.regexp_eatAssertion = function(state) {\n  var start = state.pos;\n  state.lastAssertionIsQuantifiable = false;\n\n  // ^, $\n  if (state.eat(0x5E /* ^ */) || state.eat(0x24 /* $ */)) {\n    return true\n  }\n\n  // \\b \\B\n  if (state.eat(0x5C /* \\ */)) {\n    if (state.eat(0x42 /* B */) || state.eat(0x62 /* b */)) {\n      return true\n    }\n    state.pos = start;\n  }\n\n  // Lookahead / Lookbehind\n  if (state.eat(0x28 /* ( */) && state.eat(0x3F /* ? */)) {\n    var lookbehind = false;\n    if (this.options.ecmaVersion >= 9) {\n      lookbehind = state.eat(0x3C /* < */);\n    }\n    if (state.eat(0x3D /* = */) || state.eat(0x21 /* ! */)) {\n      this.regexp_disjunction(state);\n      if (!state.eat(0x29 /* ) */)) {\n        state.raise(\"Unterminated group\");\n      }\n      state.lastAssertionIsQuantifiable = !lookbehind;\n      return true\n    }\n  }\n\n  state.pos = start;\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-Quantifier\npp$8.regexp_eatQuantifier = function(state, noError) {\n  if ( noError === void 0 ) noError = false;\n\n  if (this.regexp_eatQuantifierPrefix(state, noError)) {\n    state.eat(0x3F /* ? */);\n    return true\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-QuantifierPrefix\npp$8.regexp_eatQuantifierPrefix = function(state, noError) {\n  return (\n    state.eat(0x2A /* * */) ||\n    state.eat(0x2B /* + */) ||\n    state.eat(0x3F /* ? */) ||\n    this.regexp_eatBracedQuantifier(state, noError)\n  )\n};\npp$8.regexp_eatBracedQuantifier = function(state, noError) {\n  var start = state.pos;\n  if (state.eat(0x7B /* { */)) {\n    var min = 0, max = -1;\n    if (this.regexp_eatDecimalDigits(state)) {\n      min = state.lastIntValue;\n      if (state.eat(0x2C /* , */) && this.regexp_eatDecimalDigits(state)) {\n        max = state.lastIntValue;\n      }\n      if (state.eat(0x7D /* } */)) {\n        // SyntaxError in https://www.ecma-international.org/ecma-262/8.0/#sec-term\n        if (max !== -1 && max < min && !noError) {\n          state.raise(\"numbers out of order in {} quantifier\");\n        }\n        return true\n      }\n    }\n    if (state.switchU && !noError) {\n      state.raise(\"Incomplete quantifier\");\n    }\n    state.pos = start;\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-Atom\npp$8.regexp_eatAtom = function(state) {\n  return (\n    this.regexp_eatPatternCharacters(state) ||\n    state.eat(0x2E /* . */) ||\n    this.regexp_eatReverseSolidusAtomEscape(state) ||\n    this.regexp_eatCharacterClass(state) ||\n    this.regexp_eatUncapturingGroup(state) ||\n    this.regexp_eatCapturingGroup(state)\n  )\n};\npp$8.regexp_eatReverseSolidusAtomEscape = function(state) {\n  var start = state.pos;\n  if (state.eat(0x5C /* \\ */)) {\n    if (this.regexp_eatAtomEscape(state)) {\n      return true\n    }\n    state.pos = start;\n  }\n  return false\n};\npp$8.regexp_eatUncapturingGroup = function(state) {\n  var start = state.pos;\n  if (state.eat(0x28 /* ( */)) {\n    if (state.eat(0x3F /* ? */) && state.eat(0x3A /* : */)) {\n      this.regexp_disjunction(state);\n      if (state.eat(0x29 /* ) */)) {\n        return true\n      }\n      state.raise(\"Unterminated group\");\n    }\n    state.pos = start;\n  }\n  return false\n};\npp$8.regexp_eatCapturingGroup = function(state) {\n  if (state.eat(0x28 /* ( */)) {\n    if (this.options.ecmaVersion >= 9) {\n      this.regexp_groupSpecifier(state);\n    } else if (state.current() === 0x3F /* ? */) {\n      state.raise(\"Invalid group\");\n    }\n    this.regexp_disjunction(state);\n    if (state.eat(0x29 /* ) */)) {\n      state.numCapturingParens += 1;\n      return true\n    }\n    state.raise(\"Unterminated group\");\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ExtendedAtom\npp$8.regexp_eatExtendedAtom = function(state) {\n  return (\n    state.eat(0x2E /* . */) ||\n    this.regexp_eatReverseSolidusAtomEscape(state) ||\n    this.regexp_eatCharacterClass(state) ||\n    this.regexp_eatUncapturingGroup(state) ||\n    this.regexp_eatCapturingGroup(state) ||\n    this.regexp_eatInvalidBracedQuantifier(state) ||\n    this.regexp_eatExtendedPatternCharacter(state)\n  )\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-InvalidBracedQuantifier\npp$8.regexp_eatInvalidBracedQuantifier = function(state) {\n  if (this.regexp_eatBracedQuantifier(state, true)) {\n    state.raise(\"Nothing to repeat\");\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-SyntaxCharacter\npp$8.regexp_eatSyntaxCharacter = function(state) {\n  var ch = state.current();\n  if (isSyntaxCharacter(ch)) {\n    state.lastIntValue = ch;\n    state.advance();\n    return true\n  }\n  return false\n};\nfunction isSyntaxCharacter(ch) {\n  return (\n    ch === 0x24 /* $ */ ||\n    ch >= 0x28 /* ( */ && ch <= 0x2B /* + */ ||\n    ch === 0x2E /* . */ ||\n    ch === 0x3F /* ? */ ||\n    ch >= 0x5B /* [ */ && ch <= 0x5E /* ^ */ ||\n    ch >= 0x7B /* { */ && ch <= 0x7D /* } */\n  )\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-PatternCharacter\n// But eat eager.\npp$8.regexp_eatPatternCharacters = function(state) {\n  var start = state.pos;\n  var ch = 0;\n  while ((ch = state.current()) !== -1 && !isSyntaxCharacter(ch)) {\n    state.advance();\n  }\n  return state.pos !== start\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ExtendedPatternCharacter\npp$8.regexp_eatExtendedPatternCharacter = function(state) {\n  var ch = state.current();\n  if (\n    ch !== -1 &&\n    ch !== 0x24 /* $ */ &&\n    !(ch >= 0x28 /* ( */ && ch <= 0x2B /* + */) &&\n    ch !== 0x2E /* . */ &&\n    ch !== 0x3F /* ? */ &&\n    ch !== 0x5B /* [ */ &&\n    ch !== 0x5E /* ^ */ &&\n    ch !== 0x7C /* | */\n  ) {\n    state.advance();\n    return true\n  }\n  return false\n};\n\n// GroupSpecifier ::\n//   [empty]\n//   `?` GroupName\npp$8.regexp_groupSpecifier = function(state) {\n  if (state.eat(0x3F /* ? */)) {\n    if (this.regexp_eatGroupName(state)) {\n      if (state.groupNames.indexOf(state.lastStringValue) !== -1) {\n        state.raise(\"Duplicate capture group name\");\n      }\n      state.groupNames.push(state.lastStringValue);\n      return\n    }\n    state.raise(\"Invalid group\");\n  }\n};\n\n// GroupName ::\n//   `<` RegExpIdentifierName `>`\n// Note: this updates `state.lastStringValue` property with the eaten name.\npp$8.regexp_eatGroupName = function(state) {\n  state.lastStringValue = \"\";\n  if (state.eat(0x3C /* < */)) {\n    if (this.regexp_eatRegExpIdentifierName(state) && state.eat(0x3E /* > */)) {\n      return true\n    }\n    state.raise(\"Invalid capture group name\");\n  }\n  return false\n};\n\n// RegExpIdentifierName ::\n//   RegExpIdentifierStart\n//   RegExpIdentifierName RegExpIdentifierPart\n// Note: this updates `state.lastStringValue` property with the eaten name.\npp$8.regexp_eatRegExpIdentifierName = function(state) {\n  state.lastStringValue = \"\";\n  if (this.regexp_eatRegExpIdentifierStart(state)) {\n    state.lastStringValue += codePointToString(state.lastIntValue);\n    while (this.regexp_eatRegExpIdentifierPart(state)) {\n      state.lastStringValue += codePointToString(state.lastIntValue);\n    }\n    return true\n  }\n  return false\n};\n\n// RegExpIdentifierStart ::\n//   UnicodeIDStart\n//   `$`\n//   `_`\n//   `\\` RegExpUnicodeEscapeSequence[+U]\npp$8.regexp_eatRegExpIdentifierStart = function(state) {\n  var start = state.pos;\n  var forceU = this.options.ecmaVersion >= 11;\n  var ch = state.current(forceU);\n  state.advance(forceU);\n\n  if (ch === 0x5C /* \\ */ && this.regexp_eatRegExpUnicodeEscapeSequence(state, forceU)) {\n    ch = state.lastIntValue;\n  }\n  if (isRegExpIdentifierStart(ch)) {\n    state.lastIntValue = ch;\n    return true\n  }\n\n  state.pos = start;\n  return false\n};\nfunction isRegExpIdentifierStart(ch) {\n  return isIdentifierStart(ch, true) || ch === 0x24 /* $ */ || ch === 0x5F /* _ */\n}\n\n// RegExpIdentifierPart ::\n//   UnicodeIDContinue\n//   `$`\n//   `_`\n//   `\\` RegExpUnicodeEscapeSequence[+U]\n//   <ZWNJ>\n//   <ZWJ>\npp$8.regexp_eatRegExpIdentifierPart = function(state) {\n  var start = state.pos;\n  var forceU = this.options.ecmaVersion >= 11;\n  var ch = state.current(forceU);\n  state.advance(forceU);\n\n  if (ch === 0x5C /* \\ */ && this.regexp_eatRegExpUnicodeEscapeSequence(state, forceU)) {\n    ch = state.lastIntValue;\n  }\n  if (isRegExpIdentifierPart(ch)) {\n    state.lastIntValue = ch;\n    return true\n  }\n\n  state.pos = start;\n  return false\n};\nfunction isRegExpIdentifierPart(ch) {\n  return isIdentifierChar(ch, true) || ch === 0x24 /* $ */ || ch === 0x5F /* _ */ || ch === 0x200C /* <ZWNJ> */ || ch === 0x200D /* <ZWJ> */\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-AtomEscape\npp$8.regexp_eatAtomEscape = function(state) {\n  if (\n    this.regexp_eatBackReference(state) ||\n    this.regexp_eatCharacterClassEscape(state) ||\n    this.regexp_eatCharacterEscape(state) ||\n    (state.switchN && this.regexp_eatKGroupName(state))\n  ) {\n    return true\n  }\n  if (state.switchU) {\n    // Make the same message as V8.\n    if (state.current() === 0x63 /* c */) {\n      state.raise(\"Invalid unicode escape\");\n    }\n    state.raise(\"Invalid escape\");\n  }\n  return false\n};\npp$8.regexp_eatBackReference = function(state) {\n  var start = state.pos;\n  if (this.regexp_eatDecimalEscape(state)) {\n    var n = state.lastIntValue;\n    if (state.switchU) {\n      // For SyntaxError in https://www.ecma-international.org/ecma-262/8.0/#sec-atomescape\n      if (n > state.maxBackReference) {\n        state.maxBackReference = n;\n      }\n      return true\n    }\n    if (n <= state.numCapturingParens) {\n      return true\n    }\n    state.pos = start;\n  }\n  return false\n};\npp$8.regexp_eatKGroupName = function(state) {\n  if (state.eat(0x6B /* k */)) {\n    if (this.regexp_eatGroupName(state)) {\n      state.backReferenceNames.push(state.lastStringValue);\n      return true\n    }\n    state.raise(\"Invalid named reference\");\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-CharacterEscape\npp$8.regexp_eatCharacterEscape = function(state) {\n  return (\n    this.regexp_eatControlEscape(state) ||\n    this.regexp_eatCControlLetter(state) ||\n    this.regexp_eatZero(state) ||\n    this.regexp_eatHexEscapeSequence(state) ||\n    this.regexp_eatRegExpUnicodeEscapeSequence(state, false) ||\n    (!state.switchU && this.regexp_eatLegacyOctalEscapeSequence(state)) ||\n    this.regexp_eatIdentityEscape(state)\n  )\n};\npp$8.regexp_eatCControlLetter = function(state) {\n  var start = state.pos;\n  if (state.eat(0x63 /* c */)) {\n    if (this.regexp_eatControlLetter(state)) {\n      return true\n    }\n    state.pos = start;\n  }\n  return false\n};\npp$8.regexp_eatZero = function(state) {\n  if (state.current() === 0x30 /* 0 */ && !isDecimalDigit(state.lookahead())) {\n    state.lastIntValue = 0;\n    state.advance();\n    return true\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-ControlEscape\npp$8.regexp_eatControlEscape = function(state) {\n  var ch = state.current();\n  if (ch === 0x74 /* t */) {\n    state.lastIntValue = 0x09; /* \\t */\n    state.advance();\n    return true\n  }\n  if (ch === 0x6E /* n */) {\n    state.lastIntValue = 0x0A; /* \\n */\n    state.advance();\n    return true\n  }\n  if (ch === 0x76 /* v */) {\n    state.lastIntValue = 0x0B; /* \\v */\n    state.advance();\n    return true\n  }\n  if (ch === 0x66 /* f */) {\n    state.lastIntValue = 0x0C; /* \\f */\n    state.advance();\n    return true\n  }\n  if (ch === 0x72 /* r */) {\n    state.lastIntValue = 0x0D; /* \\r */\n    state.advance();\n    return true\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-ControlLetter\npp$8.regexp_eatControlLetter = function(state) {\n  var ch = state.current();\n  if (isControlLetter(ch)) {\n    state.lastIntValue = ch % 0x20;\n    state.advance();\n    return true\n  }\n  return false\n};\nfunction isControlLetter(ch) {\n  return (\n    (ch >= 0x41 /* A */ && ch <= 0x5A /* Z */) ||\n    (ch >= 0x61 /* a */ && ch <= 0x7A /* z */)\n  )\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-RegExpUnicodeEscapeSequence\npp$8.regexp_eatRegExpUnicodeEscapeSequence = function(state, forceU) {\n  if ( forceU === void 0 ) forceU = false;\n\n  var start = state.pos;\n  var switchU = forceU || state.switchU;\n\n  if (state.eat(0x75 /* u */)) {\n    if (this.regexp_eatFixedHexDigits(state, 4)) {\n      var lead = state.lastIntValue;\n      if (switchU && lead >= 0xD800 && lead <= 0xDBFF) {\n        var leadSurrogateEnd = state.pos;\n        if (state.eat(0x5C /* \\ */) && state.eat(0x75 /* u */) && this.regexp_eatFixedHexDigits(state, 4)) {\n          var trail = state.lastIntValue;\n          if (trail >= 0xDC00 && trail <= 0xDFFF) {\n            state.lastIntValue = (lead - 0xD800) * 0x400 + (trail - 0xDC00) + 0x10000;\n            return true\n          }\n        }\n        state.pos = leadSurrogateEnd;\n        state.lastIntValue = lead;\n      }\n      return true\n    }\n    if (\n      switchU &&\n      state.eat(0x7B /* { */) &&\n      this.regexp_eatHexDigits(state) &&\n      state.eat(0x7D /* } */) &&\n      isValidUnicode(state.lastIntValue)\n    ) {\n      return true\n    }\n    if (switchU) {\n      state.raise(\"Invalid unicode escape\");\n    }\n    state.pos = start;\n  }\n\n  return false\n};\nfunction isValidUnicode(ch) {\n  return ch >= 0 && ch <= 0x10FFFF\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-IdentityEscape\npp$8.regexp_eatIdentityEscape = function(state) {\n  if (state.switchU) {\n    if (this.regexp_eatSyntaxCharacter(state)) {\n      return true\n    }\n    if (state.eat(0x2F /* / */)) {\n      state.lastIntValue = 0x2F; /* / */\n      return true\n    }\n    return false\n  }\n\n  var ch = state.current();\n  if (ch !== 0x63 /* c */ && (!state.switchN || ch !== 0x6B /* k */)) {\n    state.lastIntValue = ch;\n    state.advance();\n    return true\n  }\n\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-DecimalEscape\npp$8.regexp_eatDecimalEscape = function(state) {\n  state.lastIntValue = 0;\n  var ch = state.current();\n  if (ch >= 0x31 /* 1 */ && ch <= 0x39 /* 9 */) {\n    do {\n      state.lastIntValue = 10 * state.lastIntValue + (ch - 0x30 /* 0 */);\n      state.advance();\n    } while ((ch = state.current()) >= 0x30 /* 0 */ && ch <= 0x39 /* 9 */)\n    return true\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-CharacterClassEscape\npp$8.regexp_eatCharacterClassEscape = function(state) {\n  var ch = state.current();\n\n  if (isCharacterClassEscape(ch)) {\n    state.lastIntValue = -1;\n    state.advance();\n    return true\n  }\n\n  if (\n    state.switchU &&\n    this.options.ecmaVersion >= 9 &&\n    (ch === 0x50 /* P */ || ch === 0x70 /* p */)\n  ) {\n    state.lastIntValue = -1;\n    state.advance();\n    if (\n      state.eat(0x7B /* { */) &&\n      this.regexp_eatUnicodePropertyValueExpression(state) &&\n      state.eat(0x7D /* } */)\n    ) {\n      return true\n    }\n    state.raise(\"Invalid property name\");\n  }\n\n  return false\n};\nfunction isCharacterClassEscape(ch) {\n  return (\n    ch === 0x64 /* d */ ||\n    ch === 0x44 /* D */ ||\n    ch === 0x73 /* s */ ||\n    ch === 0x53 /* S */ ||\n    ch === 0x77 /* w */ ||\n    ch === 0x57 /* W */\n  )\n}\n\n// UnicodePropertyValueExpression ::\n//   UnicodePropertyName `=` UnicodePropertyValue\n//   LoneUnicodePropertyNameOrValue\npp$8.regexp_eatUnicodePropertyValueExpression = function(state) {\n  var start = state.pos;\n\n  // UnicodePropertyName `=` UnicodePropertyValue\n  if (this.regexp_eatUnicodePropertyName(state) && state.eat(0x3D /* = */)) {\n    var name = state.lastStringValue;\n    if (this.regexp_eatUnicodePropertyValue(state)) {\n      var value = state.lastStringValue;\n      this.regexp_validateUnicodePropertyNameAndValue(state, name, value);\n      return true\n    }\n  }\n  state.pos = start;\n\n  // LoneUnicodePropertyNameOrValue\n  if (this.regexp_eatLoneUnicodePropertyNameOrValue(state)) {\n    var nameOrValue = state.lastStringValue;\n    this.regexp_validateUnicodePropertyNameOrValue(state, nameOrValue);\n    return true\n  }\n  return false\n};\npp$8.regexp_validateUnicodePropertyNameAndValue = function(state, name, value) {\n  if (!has(state.unicodeProperties.nonBinary, name))\n    { state.raise(\"Invalid property name\"); }\n  if (!state.unicodeProperties.nonBinary[name].test(value))\n    { state.raise(\"Invalid property value\"); }\n};\npp$8.regexp_validateUnicodePropertyNameOrValue = function(state, nameOrValue) {\n  if (!state.unicodeProperties.binary.test(nameOrValue))\n    { state.raise(\"Invalid property name\"); }\n};\n\n// UnicodePropertyName ::\n//   UnicodePropertyNameCharacters\npp$8.regexp_eatUnicodePropertyName = function(state) {\n  var ch = 0;\n  state.lastStringValue = \"\";\n  while (isUnicodePropertyNameCharacter(ch = state.current())) {\n    state.lastStringValue += codePointToString(ch);\n    state.advance();\n  }\n  return state.lastStringValue !== \"\"\n};\nfunction isUnicodePropertyNameCharacter(ch) {\n  return isControlLetter(ch) || ch === 0x5F /* _ */\n}\n\n// UnicodePropertyValue ::\n//   UnicodePropertyValueCharacters\npp$8.regexp_eatUnicodePropertyValue = function(state) {\n  var ch = 0;\n  state.lastStringValue = \"\";\n  while (isUnicodePropertyValueCharacter(ch = state.current())) {\n    state.lastStringValue += codePointToString(ch);\n    state.advance();\n  }\n  return state.lastStringValue !== \"\"\n};\nfunction isUnicodePropertyValueCharacter(ch) {\n  return isUnicodePropertyNameCharacter(ch) || isDecimalDigit(ch)\n}\n\n// LoneUnicodePropertyNameOrValue ::\n//   UnicodePropertyValueCharacters\npp$8.regexp_eatLoneUnicodePropertyNameOrValue = function(state) {\n  return this.regexp_eatUnicodePropertyValue(state)\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-CharacterClass\npp$8.regexp_eatCharacterClass = function(state) {\n  if (state.eat(0x5B /* [ */)) {\n    state.eat(0x5E /* ^ */);\n    this.regexp_classRanges(state);\n    if (state.eat(0x5D /* ] */)) {\n      return true\n    }\n    // Unreachable since it threw \"unterminated regular expression\" error before.\n    state.raise(\"Unterminated character class\");\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-ClassRanges\n// https://www.ecma-international.org/ecma-262/8.0/#prod-NonemptyClassRanges\n// https://www.ecma-international.org/ecma-262/8.0/#prod-NonemptyClassRangesNoDash\npp$8.regexp_classRanges = function(state) {\n  while (this.regexp_eatClassAtom(state)) {\n    var left = state.lastIntValue;\n    if (state.eat(0x2D /* - */) && this.regexp_eatClassAtom(state)) {\n      var right = state.lastIntValue;\n      if (state.switchU && (left === -1 || right === -1)) {\n        state.raise(\"Invalid character class\");\n      }\n      if (left !== -1 && right !== -1 && left > right) {\n        state.raise(\"Range out of order in character class\");\n      }\n    }\n  }\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-ClassAtom\n// https://www.ecma-international.org/ecma-262/8.0/#prod-ClassAtomNoDash\npp$8.regexp_eatClassAtom = function(state) {\n  var start = state.pos;\n\n  if (state.eat(0x5C /* \\ */)) {\n    if (this.regexp_eatClassEscape(state)) {\n      return true\n    }\n    if (state.switchU) {\n      // Make the same message as V8.\n      var ch$1 = state.current();\n      if (ch$1 === 0x63 /* c */ || isOctalDigit(ch$1)) {\n        state.raise(\"Invalid class escape\");\n      }\n      state.raise(\"Invalid escape\");\n    }\n    state.pos = start;\n  }\n\n  var ch = state.current();\n  if (ch !== 0x5D /* ] */) {\n    state.lastIntValue = ch;\n    state.advance();\n    return true\n  }\n\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ClassEscape\npp$8.regexp_eatClassEscape = function(state) {\n  var start = state.pos;\n\n  if (state.eat(0x62 /* b */)) {\n    state.lastIntValue = 0x08; /* <BS> */\n    return true\n  }\n\n  if (state.switchU && state.eat(0x2D /* - */)) {\n    state.lastIntValue = 0x2D; /* - */\n    return true\n  }\n\n  if (!state.switchU && state.eat(0x63 /* c */)) {\n    if (this.regexp_eatClassControlLetter(state)) {\n      return true\n    }\n    state.pos = start;\n  }\n\n  return (\n    this.regexp_eatCharacterClassEscape(state) ||\n    this.regexp_eatCharacterEscape(state)\n  )\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ClassControlLetter\npp$8.regexp_eatClassControlLetter = function(state) {\n  var ch = state.current();\n  if (isDecimalDigit(ch) || ch === 0x5F /* _ */) {\n    state.lastIntValue = ch % 0x20;\n    state.advance();\n    return true\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-HexEscapeSequence\npp$8.regexp_eatHexEscapeSequence = function(state) {\n  var start = state.pos;\n  if (state.eat(0x78 /* x */)) {\n    if (this.regexp_eatFixedHexDigits(state, 2)) {\n      return true\n    }\n    if (state.switchU) {\n      state.raise(\"Invalid escape\");\n    }\n    state.pos = start;\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-DecimalDigits\npp$8.regexp_eatDecimalDigits = function(state) {\n  var start = state.pos;\n  var ch = 0;\n  state.lastIntValue = 0;\n  while (isDecimalDigit(ch = state.current())) {\n    state.lastIntValue = 10 * state.lastIntValue + (ch - 0x30 /* 0 */);\n    state.advance();\n  }\n  return state.pos !== start\n};\nfunction isDecimalDigit(ch) {\n  return ch >= 0x30 /* 0 */ && ch <= 0x39 /* 9 */\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-HexDigits\npp$8.regexp_eatHexDigits = function(state) {\n  var start = state.pos;\n  var ch = 0;\n  state.lastIntValue = 0;\n  while (isHexDigit(ch = state.current())) {\n    state.lastIntValue = 16 * state.lastIntValue + hexToInt(ch);\n    state.advance();\n  }\n  return state.pos !== start\n};\nfunction isHexDigit(ch) {\n  return (\n    (ch >= 0x30 /* 0 */ && ch <= 0x39 /* 9 */) ||\n    (ch >= 0x41 /* A */ && ch <= 0x46 /* F */) ||\n    (ch >= 0x61 /* a */ && ch <= 0x66 /* f */)\n  )\n}\nfunction hexToInt(ch) {\n  if (ch >= 0x41 /* A */ && ch <= 0x46 /* F */) {\n    return 10 + (ch - 0x41 /* A */)\n  }\n  if (ch >= 0x61 /* a */ && ch <= 0x66 /* f */) {\n    return 10 + (ch - 0x61 /* a */)\n  }\n  return ch - 0x30 /* 0 */\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-LegacyOctalEscapeSequence\n// Allows only 0-377(octal) i.e. 0-255(decimal).\npp$8.regexp_eatLegacyOctalEscapeSequence = function(state) {\n  if (this.regexp_eatOctalDigit(state)) {\n    var n1 = state.lastIntValue;\n    if (this.regexp_eatOctalDigit(state)) {\n      var n2 = state.lastIntValue;\n      if (n1 <= 3 && this.regexp_eatOctalDigit(state)) {\n        state.lastIntValue = n1 * 64 + n2 * 8 + state.lastIntValue;\n      } else {\n        state.lastIntValue = n1 * 8 + n2;\n      }\n    } else {\n      state.lastIntValue = n1;\n    }\n    return true\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-OctalDigit\npp$8.regexp_eatOctalDigit = function(state) {\n  var ch = state.current();\n  if (isOctalDigit(ch)) {\n    state.lastIntValue = ch - 0x30; /* 0 */\n    state.advance();\n    return true\n  }\n  state.lastIntValue = 0;\n  return false\n};\nfunction isOctalDigit(ch) {\n  return ch >= 0x30 /* 0 */ && ch <= 0x37 /* 7 */\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-Hex4Digits\n// https://www.ecma-international.org/ecma-262/8.0/#prod-HexDigit\n// And HexDigit HexDigit in https://www.ecma-international.org/ecma-262/8.0/#prod-HexEscapeSequence\npp$8.regexp_eatFixedHexDigits = function(state, length) {\n  var start = state.pos;\n  state.lastIntValue = 0;\n  for (var i = 0; i < length; ++i) {\n    var ch = state.current();\n    if (!isHexDigit(ch)) {\n      state.pos = start;\n      return false\n    }\n    state.lastIntValue = 16 * state.lastIntValue + hexToInt(ch);\n    state.advance();\n  }\n  return true\n};\n\n// Object type used to represent tokens. Note that normally, tokens\n// simply exist as properties on the parser object. This is only\n// used for the onToken callback and the external tokenizer.\n\nvar Token = function Token(p) {\n  this.type = p.type;\n  this.value = p.value;\n  this.start = p.start;\n  this.end = p.end;\n  if (p.options.locations)\n    { this.loc = new SourceLocation(p, p.startLoc, p.endLoc); }\n  if (p.options.ranges)\n    { this.range = [p.start, p.end]; }\n};\n\n// ## Tokenizer\n\nvar pp$9 = Parser.prototype;\n\n// Move to the next token\n\npp$9.next = function(ignoreEscapeSequenceInKeyword) {\n  if (!ignoreEscapeSequenceInKeyword && this.type.keyword && this.containsEsc)\n    { this.raiseRecoverable(this.start, \"Escape sequence in keyword \" + this.type.keyword); }\n  if (this.options.onToken)\n    { this.options.onToken(new Token(this)); }\n\n  this.lastTokEnd = this.end;\n  this.lastTokStart = this.start;\n  this.lastTokEndLoc = this.endLoc;\n  this.lastTokStartLoc = this.startLoc;\n  this.nextToken();\n};\n\npp$9.getToken = function() {\n  this.next();\n  return new Token(this)\n};\n\n// If we're in an ES6 environment, make parsers iterable\nif (typeof Symbol !== \"undefined\")\n  { pp$9[Symbol.iterator] = function() {\n    var this$1 = this;\n\n    return {\n      next: function () {\n        var token = this$1.getToken();\n        return {\n          done: token.type === types.eof,\n          value: token\n        }\n      }\n    }\n  }; }\n\n// Toggle strict mode. Re-reads the next number or string to please\n// pedantic tests (`\"use strict\"; 010;` should fail).\n\npp$9.curContext = function() {\n  return this.context[this.context.length - 1]\n};\n\n// Read a single token, updating the parser object's token-related\n// properties.\n\npp$9.nextToken = function() {\n  var curContext = this.curContext();\n  if (!curContext || !curContext.preserveSpace) { this.skipSpace(); }\n\n  this.start = this.pos;\n  if (this.options.locations) { this.startLoc = this.curPosition(); }\n  if (this.pos >= this.input.length) { return this.finishToken(types.eof) }\n\n  if (curContext.override) { return curContext.override(this) }\n  else { this.readToken(this.fullCharCodeAtPos()); }\n};\n\npp$9.readToken = function(code) {\n  // Identifier or keyword. '\\uXXXX' sequences are allowed in\n  // identifiers, so '\\' also dispatches to that.\n  if (isIdentifierStart(code, this.options.ecmaVersion >= 6) || code === 92 /* '\\' */)\n    { return this.readWord() }\n\n  return this.getTokenFromCode(code)\n};\n\npp$9.fullCharCodeAtPos = function() {\n  var code = this.input.charCodeAt(this.pos);\n  if (code <= 0xd7ff || code >= 0xe000) { return code }\n  var next = this.input.charCodeAt(this.pos + 1);\n  return (code << 10) + next - 0x35fdc00\n};\n\npp$9.skipBlockComment = function() {\n  var startLoc = this.options.onComment && this.curPosition();\n  var start = this.pos, end = this.input.indexOf(\"*/\", this.pos += 2);\n  if (end === -1) { this.raise(this.pos - 2, \"Unterminated comment\"); }\n  this.pos = end + 2;\n  if (this.options.locations) {\n    lineBreakG.lastIndex = start;\n    var match;\n    while ((match = lineBreakG.exec(this.input)) && match.index < this.pos) {\n      ++this.curLine;\n      this.lineStart = match.index + match[0].length;\n    }\n  }\n  if (this.options.onComment)\n    { this.options.onComment(true, this.input.slice(start + 2, end), start, this.pos,\n                           startLoc, this.curPosition()); }\n};\n\npp$9.skipLineComment = function(startSkip) {\n  var start = this.pos;\n  var startLoc = this.options.onComment && this.curPosition();\n  var ch = this.input.charCodeAt(this.pos += startSkip);\n  while (this.pos < this.input.length && !isNewLine(ch)) {\n    ch = this.input.charCodeAt(++this.pos);\n  }\n  if (this.options.onComment)\n    { this.options.onComment(false, this.input.slice(start + startSkip, this.pos), start, this.pos,\n                           startLoc, this.curPosition()); }\n};\n\n// Called at the start of the parse and after every token. Skips\n// whitespace and comments, and.\n\npp$9.skipSpace = function() {\n  loop: while (this.pos < this.input.length) {\n    var ch = this.input.charCodeAt(this.pos);\n    switch (ch) {\n    case 32: case 160: // ' '\n      ++this.pos;\n      break\n    case 13:\n      if (this.input.charCodeAt(this.pos + 1) === 10) {\n        ++this.pos;\n      }\n    case 10: case 8232: case 8233:\n      ++this.pos;\n      if (this.options.locations) {\n        ++this.curLine;\n        this.lineStart = this.pos;\n      }\n      break\n    case 47: // '/'\n      switch (this.input.charCodeAt(this.pos + 1)) {\n      case 42: // '*'\n        this.skipBlockComment();\n        break\n      case 47:\n        this.skipLineComment(2);\n        break\n      default:\n        break loop\n      }\n      break\n    default:\n      if (ch > 8 && ch < 14 || ch >= 5760 && nonASCIIwhitespace.test(String.fromCharCode(ch))) {\n        ++this.pos;\n      } else {\n        break loop\n      }\n    }\n  }\n};\n\n// Called at the end of every token. Sets `end`, `val`, and\n// maintains `context` and `exprAllowed`, and skips the space after\n// the token, so that the next one's `start` will point at the\n// right position.\n\npp$9.finishToken = function(type, val) {\n  this.end = this.pos;\n  if (this.options.locations) { this.endLoc = this.curPosition(); }\n  var prevType = this.type;\n  this.type = type;\n  this.value = val;\n\n  this.updateContext(prevType);\n};\n\n// ### Token reading\n\n// This is the function that is called to fetch the next token. It\n// is somewhat obscure, because it works in character codes rather\n// than characters, and because operator parsing has been inlined\n// into it.\n//\n// All in the name of speed.\n//\npp$9.readToken_dot = function() {\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (next >= 48 && next <= 57) { return this.readNumber(true) }\n  var next2 = this.input.charCodeAt(this.pos + 2);\n  if (this.options.ecmaVersion >= 6 && next === 46 && next2 === 46) { // 46 = dot '.'\n    this.pos += 3;\n    return this.finishToken(types.ellipsis)\n  } else {\n    ++this.pos;\n    return this.finishToken(types.dot)\n  }\n};\n\npp$9.readToken_slash = function() { // '/'\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (this.exprAllowed) { ++this.pos; return this.readRegexp() }\n  if (next === 61) { return this.finishOp(types.assign, 2) }\n  return this.finishOp(types.slash, 1)\n};\n\npp$9.readToken_mult_modulo_exp = function(code) { // '%*'\n  var next = this.input.charCodeAt(this.pos + 1);\n  var size = 1;\n  var tokentype = code === 42 ? types.star : types.modulo;\n\n  // exponentiation operator ** and **=\n  if (this.options.ecmaVersion >= 7 && code === 42 && next === 42) {\n    ++size;\n    tokentype = types.starstar;\n    next = this.input.charCodeAt(this.pos + 2);\n  }\n\n  if (next === 61) { return this.finishOp(types.assign, size + 1) }\n  return this.finishOp(tokentype, size)\n};\n\npp$9.readToken_pipe_amp = function(code) { // '|&'\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (next === code) {\n    if (this.options.ecmaVersion >= 12) {\n      var next2 = this.input.charCodeAt(this.pos + 2);\n      if (next2 === 61) { return this.finishOp(types.assign, 3) }\n    }\n    return this.finishOp(code === 124 ? types.logicalOR : types.logicalAND, 2)\n  }\n  if (next === 61) { return this.finishOp(types.assign, 2) }\n  return this.finishOp(code === 124 ? types.bitwiseOR : types.bitwiseAND, 1)\n};\n\npp$9.readToken_caret = function() { // '^'\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (next === 61) { return this.finishOp(types.assign, 2) }\n  return this.finishOp(types.bitwiseXOR, 1)\n};\n\npp$9.readToken_plus_min = function(code) { // '+-'\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (next === code) {\n    if (next === 45 && !this.inModule && this.input.charCodeAt(this.pos + 2) === 62 &&\n        (this.lastTokEnd === 0 || lineBreak.test(this.input.slice(this.lastTokEnd, this.pos)))) {\n      // A `-->` line comment\n      this.skipLineComment(3);\n      this.skipSpace();\n      return this.nextToken()\n    }\n    return this.finishOp(types.incDec, 2)\n  }\n  if (next === 61) { return this.finishOp(types.assign, 2) }\n  return this.finishOp(types.plusMin, 1)\n};\n\npp$9.readToken_lt_gt = function(code) { // '<>'\n  var next = this.input.charCodeAt(this.pos + 1);\n  var size = 1;\n  if (next === code) {\n    size = code === 62 && this.input.charCodeAt(this.pos + 2) === 62 ? 3 : 2;\n    if (this.input.charCodeAt(this.pos + size) === 61) { return this.finishOp(types.assign, size + 1) }\n    return this.finishOp(types.bitShift, size)\n  }\n  if (next === 33 && code === 60 && !this.inModule && this.input.charCodeAt(this.pos + 2) === 45 &&\n      this.input.charCodeAt(this.pos + 3) === 45) {\n    // `<!--`, an XML-style comment that should be interpreted as a line comment\n    this.skipLineComment(4);\n    this.skipSpace();\n    return this.nextToken()\n  }\n  if (next === 61) { size = 2; }\n  return this.finishOp(types.relational, size)\n};\n\npp$9.readToken_eq_excl = function(code) { // '=!'\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (next === 61) { return this.finishOp(types.equality, this.input.charCodeAt(this.pos + 2) === 61 ? 3 : 2) }\n  if (code === 61 && next === 62 && this.options.ecmaVersion >= 6) { // '=>'\n    this.pos += 2;\n    return this.finishToken(types.arrow)\n  }\n  return this.finishOp(code === 61 ? types.eq : types.prefix, 1)\n};\n\npp$9.readToken_question = function() { // '?'\n  var ecmaVersion = this.options.ecmaVersion;\n  if (ecmaVersion >= 11) {\n    var next = this.input.charCodeAt(this.pos + 1);\n    if (next === 46) {\n      var next2 = this.input.charCodeAt(this.pos + 2);\n      if (next2 < 48 || next2 > 57) { return this.finishOp(types.questionDot, 2) }\n    }\n    if (next === 63) {\n      if (ecmaVersion >= 12) {\n        var next2$1 = this.input.charCodeAt(this.pos + 2);\n        if (next2$1 === 61) { return this.finishOp(types.assign, 3) }\n      }\n      return this.finishOp(types.coalesce, 2)\n    }\n  }\n  return this.finishOp(types.question, 1)\n};\n\npp$9.getTokenFromCode = function(code) {\n  switch (code) {\n  // The interpretation of a dot depends on whether it is followed\n  // by a digit or another two dots.\n  case 46: // '.'\n    return this.readToken_dot()\n\n  // Punctuation tokens.\n  case 40: ++this.pos; return this.finishToken(types.parenL)\n  case 41: ++this.pos; return this.finishToken(types.parenR)\n  case 59: ++this.pos; return this.finishToken(types.semi)\n  case 44: ++this.pos; return this.finishToken(types.comma)\n  case 91: ++this.pos; return this.finishToken(types.bracketL)\n  case 93: ++this.pos; return this.finishToken(types.bracketR)\n  case 123: ++this.pos; return this.finishToken(types.braceL)\n  case 125: ++this.pos; return this.finishToken(types.braceR)\n  case 58: ++this.pos; return this.finishToken(types.colon)\n\n  case 96: // '`'\n    if (this.options.ecmaVersion < 6) { break }\n    ++this.pos;\n    return this.finishToken(types.backQuote)\n\n  case 48: // '0'\n    var next = this.input.charCodeAt(this.pos + 1);\n    if (next === 120 || next === 88) { return this.readRadixNumber(16) } // '0x', '0X' - hex number\n    if (this.options.ecmaVersion >= 6) {\n      if (next === 111 || next === 79) { return this.readRadixNumber(8) } // '0o', '0O' - octal number\n      if (next === 98 || next === 66) { return this.readRadixNumber(2) } // '0b', '0B' - binary number\n    }\n\n  // Anything else beginning with a digit is an integer, octal\n  // number, or float.\n  case 49: case 50: case 51: case 52: case 53: case 54: case 55: case 56: case 57: // 1-9\n    return this.readNumber(false)\n\n  // Quotes produce strings.\n  case 34: case 39: // '\"', \"'\"\n    return this.readString(code)\n\n  // Operators are parsed inline in tiny state machines. '=' (61) is\n  // often referred to. `finishOp` simply skips the amount of\n  // characters it is given as second argument, and returns a token\n  // of the type given by its first argument.\n\n  case 47: // '/'\n    return this.readToken_slash()\n\n  case 37: case 42: // '%*'\n    return this.readToken_mult_modulo_exp(code)\n\n  case 124: case 38: // '|&'\n    return this.readToken_pipe_amp(code)\n\n  case 94: // '^'\n    return this.readToken_caret()\n\n  case 43: case 45: // '+-'\n    return this.readToken_plus_min(code)\n\n  case 60: case 62: // '<>'\n    return this.readToken_lt_gt(code)\n\n  case 61: case 33: // '=!'\n    return this.readToken_eq_excl(code)\n\n  case 63: // '?'\n    return this.readToken_question()\n\n  case 126: // '~'\n    return this.finishOp(types.prefix, 1)\n  }\n\n  this.raise(this.pos, \"Unexpected character '\" + codePointToString$1(code) + \"'\");\n};\n\npp$9.finishOp = function(type, size) {\n  var str = this.input.slice(this.pos, this.pos + size);\n  this.pos += size;\n  return this.finishToken(type, str)\n};\n\npp$9.readRegexp = function() {\n  var escaped, inClass, start = this.pos;\n  for (;;) {\n    if (this.pos >= this.input.length) { this.raise(start, \"Unterminated regular expression\"); }\n    var ch = this.input.charAt(this.pos);\n    if (lineBreak.test(ch)) { this.raise(start, \"Unterminated regular expression\"); }\n    if (!escaped) {\n      if (ch === \"[\") { inClass = true; }\n      else if (ch === \"]\" && inClass) { inClass = false; }\n      else if (ch === \"/\" && !inClass) { break }\n      escaped = ch === \"\\\\\";\n    } else { escaped = false; }\n    ++this.pos;\n  }\n  var pattern = this.input.slice(start, this.pos);\n  ++this.pos;\n  var flagsStart = this.pos;\n  var flags = this.readWord1();\n  if (this.containsEsc) { this.unexpected(flagsStart); }\n\n  // Validate pattern\n  var state = this.regexpState || (this.regexpState = new RegExpValidationState(this));\n  state.reset(start, pattern, flags);\n  this.validateRegExpFlags(state);\n  this.validateRegExpPattern(state);\n\n  // Create Literal#value property value.\n  var value = null;\n  try {\n    value = new RegExp(pattern, flags);\n  } catch (e) {\n    // ESTree requires null if it failed to instantiate RegExp object.\n    // https://github.com/estree/estree/blob/a27003adf4fd7bfad44de9cef372a2eacd527b1c/es5.md#regexpliteral\n  }\n\n  return this.finishToken(types.regexp, {pattern: pattern, flags: flags, value: value})\n};\n\n// Read an integer in the given radix. Return null if zero digits\n// were read, the integer value otherwise. When `len` is given, this\n// will return `null` unless the integer has exactly `len` digits.\n\npp$9.readInt = function(radix, len, maybeLegacyOctalNumericLiteral) {\n  // `len` is used for character escape sequences. In that case, disallow separators.\n  var allowSeparators = this.options.ecmaVersion >= 12 && len === undefined;\n\n  // `maybeLegacyOctalNumericLiteral` is true if it doesn't have prefix (0x,0o,0b)\n  // and isn't fraction part nor exponent part. In that case, if the first digit\n  // is zero then disallow separators.\n  var isLegacyOctalNumericLiteral = maybeLegacyOctalNumericLiteral && this.input.charCodeAt(this.pos) === 48;\n\n  var start = this.pos, total = 0, lastCode = 0;\n  for (var i = 0, e = len == null ? Infinity : len; i < e; ++i, ++this.pos) {\n    var code = this.input.charCodeAt(this.pos), val = (void 0);\n\n    if (allowSeparators && code === 95) {\n      if (isLegacyOctalNumericLiteral) { this.raiseRecoverable(this.pos, \"Numeric separator is not allowed in legacy octal numeric literals\"); }\n      if (lastCode === 95) { this.raiseRecoverable(this.pos, \"Numeric separator must be exactly one underscore\"); }\n      if (i === 0) { this.raiseRecoverable(this.pos, \"Numeric separator is not allowed at the first of digits\"); }\n      lastCode = code;\n      continue\n    }\n\n    if (code >= 97) { val = code - 97 + 10; } // a\n    else if (code >= 65) { val = code - 65 + 10; } // A\n    else if (code >= 48 && code <= 57) { val = code - 48; } // 0-9\n    else { val = Infinity; }\n    if (val >= radix) { break }\n    lastCode = code;\n    total = total * radix + val;\n  }\n\n  if (allowSeparators && lastCode === 95) { this.raiseRecoverable(this.pos - 1, \"Numeric separator is not allowed at the last of digits\"); }\n  if (this.pos === start || len != null && this.pos - start !== len) { return null }\n\n  return total\n};\n\nfunction stringToNumber(str, isLegacyOctalNumericLiteral) {\n  if (isLegacyOctalNumericLiteral) {\n    return parseInt(str, 8)\n  }\n\n  // `parseFloat(value)` stops parsing at the first numeric separator then returns a wrong value.\n  return parseFloat(str.replace(/_/g, \"\"))\n}\n\nfunction stringToBigInt(str) {\n  if (typeof BigInt !== \"function\") {\n    return null\n  }\n\n  // `BigInt(value)` throws syntax error if the string contains numeric separators.\n  return BigInt(str.replace(/_/g, \"\"))\n}\n\npp$9.readRadixNumber = function(radix) {\n  var start = this.pos;\n  this.pos += 2; // 0x\n  var val = this.readInt(radix);\n  if (val == null) { this.raise(this.start + 2, \"Expected number in radix \" + radix); }\n  if (this.options.ecmaVersion >= 11 && this.input.charCodeAt(this.pos) === 110) {\n    val = stringToBigInt(this.input.slice(start, this.pos));\n    ++this.pos;\n  } else if (isIdentifierStart(this.fullCharCodeAtPos())) { this.raise(this.pos, \"Identifier directly after number\"); }\n  return this.finishToken(types.num, val)\n};\n\n// Read an integer, octal integer, or floating-point number.\n\npp$9.readNumber = function(startsWithDot) {\n  var start = this.pos;\n  if (!startsWithDot && this.readInt(10, undefined, true) === null) { this.raise(start, \"Invalid number\"); }\n  var octal = this.pos - start >= 2 && this.input.charCodeAt(start) === 48;\n  if (octal && this.strict) { this.raise(start, \"Invalid number\"); }\n  var next = this.input.charCodeAt(this.pos);\n  if (!octal && !startsWithDot && this.options.ecmaVersion >= 11 && next === 110) {\n    var val$1 = stringToBigInt(this.input.slice(start, this.pos));\n    ++this.pos;\n    if (isIdentifierStart(this.fullCharCodeAtPos())) { this.raise(this.pos, \"Identifier directly after number\"); }\n    return this.finishToken(types.num, val$1)\n  }\n  if (octal && /[89]/.test(this.input.slice(start, this.pos))) { octal = false; }\n  if (next === 46 && !octal) { // '.'\n    ++this.pos;\n    this.readInt(10);\n    next = this.input.charCodeAt(this.pos);\n  }\n  if ((next === 69 || next === 101) && !octal) { // 'eE'\n    next = this.input.charCodeAt(++this.pos);\n    if (next === 43 || next === 45) { ++this.pos; } // '+-'\n    if (this.readInt(10) === null) { this.raise(start, \"Invalid number\"); }\n  }\n  if (isIdentifierStart(this.fullCharCodeAtPos())) { this.raise(this.pos, \"Identifier directly after number\"); }\n\n  var val = stringToNumber(this.input.slice(start, this.pos), octal);\n  return this.finishToken(types.num, val)\n};\n\n// Read a string value, interpreting backslash-escapes.\n\npp$9.readCodePoint = function() {\n  var ch = this.input.charCodeAt(this.pos), code;\n\n  if (ch === 123) { // '{'\n    if (this.options.ecmaVersion < 6) { this.unexpected(); }\n    var codePos = ++this.pos;\n    code = this.readHexChar(this.input.indexOf(\"}\", this.pos) - this.pos);\n    ++this.pos;\n    if (code > 0x10FFFF) { this.invalidStringToken(codePos, \"Code point out of bounds\"); }\n  } else {\n    code = this.readHexChar(4);\n  }\n  return code\n};\n\nfunction codePointToString$1(code) {\n  // UTF-16 Decoding\n  if (code <= 0xFFFF) { return String.fromCharCode(code) }\n  code -= 0x10000;\n  return String.fromCharCode((code >> 10) + 0xD800, (code & 1023) + 0xDC00)\n}\n\npp$9.readString = function(quote) {\n  var out = \"\", chunkStart = ++this.pos;\n  for (;;) {\n    if (this.pos >= this.input.length) { this.raise(this.start, \"Unterminated string constant\"); }\n    var ch = this.input.charCodeAt(this.pos);\n    if (ch === quote) { break }\n    if (ch === 92) { // '\\'\n      out += this.input.slice(chunkStart, this.pos);\n      out += this.readEscapedChar(false);\n      chunkStart = this.pos;\n    } else {\n      if (isNewLine(ch, this.options.ecmaVersion >= 10)) { this.raise(this.start, \"Unterminated string constant\"); }\n      ++this.pos;\n    }\n  }\n  out += this.input.slice(chunkStart, this.pos++);\n  return this.finishToken(types.string, out)\n};\n\n// Reads template string tokens.\n\nvar INVALID_TEMPLATE_ESCAPE_ERROR = {};\n\npp$9.tryReadTemplateToken = function() {\n  this.inTemplateElement = true;\n  try {\n    this.readTmplToken();\n  } catch (err) {\n    if (err === INVALID_TEMPLATE_ESCAPE_ERROR) {\n      this.readInvalidTemplateToken();\n    } else {\n      throw err\n    }\n  }\n\n  this.inTemplateElement = false;\n};\n\npp$9.invalidStringToken = function(position, message) {\n  if (this.inTemplateElement && this.options.ecmaVersion >= 9) {\n    throw INVALID_TEMPLATE_ESCAPE_ERROR\n  } else {\n    this.raise(position, message);\n  }\n};\n\npp$9.readTmplToken = function() {\n  var out = \"\", chunkStart = this.pos;\n  for (;;) {\n    if (this.pos >= this.input.length) { this.raise(this.start, \"Unterminated template\"); }\n    var ch = this.input.charCodeAt(this.pos);\n    if (ch === 96 || ch === 36 && this.input.charCodeAt(this.pos + 1) === 123) { // '`', '${'\n      if (this.pos === this.start && (this.type === types.template || this.type === types.invalidTemplate)) {\n        if (ch === 36) {\n          this.pos += 2;\n          return this.finishToken(types.dollarBraceL)\n        } else {\n          ++this.pos;\n          return this.finishToken(types.backQuote)\n        }\n      }\n      out += this.input.slice(chunkStart, this.pos);\n      return this.finishToken(types.template, out)\n    }\n    if (ch === 92) { // '\\'\n      out += this.input.slice(chunkStart, this.pos);\n      out += this.readEscapedChar(true);\n      chunkStart = this.pos;\n    } else if (isNewLine(ch)) {\n      out += this.input.slice(chunkStart, this.pos);\n      ++this.pos;\n      switch (ch) {\n      case 13:\n        if (this.input.charCodeAt(this.pos) === 10) { ++this.pos; }\n      case 10:\n        out += \"\\n\";\n        break\n      default:\n        out += String.fromCharCode(ch);\n        break\n      }\n      if (this.options.locations) {\n        ++this.curLine;\n        this.lineStart = this.pos;\n      }\n      chunkStart = this.pos;\n    } else {\n      ++this.pos;\n    }\n  }\n};\n\n// Reads a template token to search for the end, without validating any escape sequences\npp$9.readInvalidTemplateToken = function() {\n  for (; this.pos < this.input.length; this.pos++) {\n    switch (this.input[this.pos]) {\n    case \"\\\\\":\n      ++this.pos;\n      break\n\n    case \"$\":\n      if (this.input[this.pos + 1] !== \"{\") {\n        break\n      }\n    // falls through\n\n    case \"`\":\n      return this.finishToken(types.invalidTemplate, this.input.slice(this.start, this.pos))\n\n    // no default\n    }\n  }\n  this.raise(this.start, \"Unterminated template\");\n};\n\n// Used to read escaped characters\n\npp$9.readEscapedChar = function(inTemplate) {\n  var ch = this.input.charCodeAt(++this.pos);\n  ++this.pos;\n  switch (ch) {\n  case 110: return \"\\n\" // 'n' -> '\\n'\n  case 114: return \"\\r\" // 'r' -> '\\r'\n  case 120: return String.fromCharCode(this.readHexChar(2)) // 'x'\n  case 117: return codePointToString$1(this.readCodePoint()) // 'u'\n  case 116: return \"\\t\" // 't' -> '\\t'\n  case 98: return \"\\b\" // 'b' -> '\\b'\n  case 118: return \"\\u000b\" // 'v' -> '\\u000b'\n  case 102: return \"\\f\" // 'f' -> '\\f'\n  case 13: if (this.input.charCodeAt(this.pos) === 10) { ++this.pos; } // '\\r\\n'\n  case 10: // ' \\n'\n    if (this.options.locations) { this.lineStart = this.pos; ++this.curLine; }\n    return \"\"\n  case 56:\n  case 57:\n    if (inTemplate) {\n      var codePos = this.pos - 1;\n\n      this.invalidStringToken(\n        codePos,\n        \"Invalid escape sequence in template string\"\n      );\n\n      return null\n    }\n  default:\n    if (ch >= 48 && ch <= 55) {\n      var octalStr = this.input.substr(this.pos - 1, 3).match(/^[0-7]+/)[0];\n      var octal = parseInt(octalStr, 8);\n      if (octal > 255) {\n        octalStr = octalStr.slice(0, -1);\n        octal = parseInt(octalStr, 8);\n      }\n      this.pos += octalStr.length - 1;\n      ch = this.input.charCodeAt(this.pos);\n      if ((octalStr !== \"0\" || ch === 56 || ch === 57) && (this.strict || inTemplate)) {\n        this.invalidStringToken(\n          this.pos - 1 - octalStr.length,\n          inTemplate\n            ? \"Octal literal in template string\"\n            : \"Octal literal in strict mode\"\n        );\n      }\n      return String.fromCharCode(octal)\n    }\n    if (isNewLine(ch)) {\n      // Unicode new line characters after \\ get removed from output in both\n      // template literals and strings\n      return \"\"\n    }\n    return String.fromCharCode(ch)\n  }\n};\n\n// Used to read character escape sequences ('\\x', '\\u', '\\U').\n\npp$9.readHexChar = function(len) {\n  var codePos = this.pos;\n  var n = this.readInt(16, len);\n  if (n === null) { this.invalidStringToken(codePos, \"Bad character escape sequence\"); }\n  return n\n};\n\n// Read an identifier, and return it as a string. Sets `this.containsEsc`\n// to whether the word contained a '\\u' escape.\n//\n// Incrementally adds only escaped chars, adding other chunks as-is\n// as a micro-optimization.\n\npp$9.readWord1 = function() {\n  this.containsEsc = false;\n  var word = \"\", first = true, chunkStart = this.pos;\n  var astral = this.options.ecmaVersion >= 6;\n  while (this.pos < this.input.length) {\n    var ch = this.fullCharCodeAtPos();\n    if (isIdentifierChar(ch, astral)) {\n      this.pos += ch <= 0xffff ? 1 : 2;\n    } else if (ch === 92) { // \"\\\"\n      this.containsEsc = true;\n      word += this.input.slice(chunkStart, this.pos);\n      var escStart = this.pos;\n      if (this.input.charCodeAt(++this.pos) !== 117) // \"u\"\n        { this.invalidStringToken(this.pos, \"Expecting Unicode escape sequence \\\\uXXXX\"); }\n      ++this.pos;\n      var esc = this.readCodePoint();\n      if (!(first ? isIdentifierStart : isIdentifierChar)(esc, astral))\n        { this.invalidStringToken(escStart, \"Invalid Unicode escape\"); }\n      word += codePointToString$1(esc);\n      chunkStart = this.pos;\n    } else {\n      break\n    }\n    first = false;\n  }\n  return word + this.input.slice(chunkStart, this.pos)\n};\n\n// Read an identifier or keyword token. Will check for reserved\n// words when necessary.\n\npp$9.readWord = function() {\n  var word = this.readWord1();\n  var type = types.name;\n  if (this.keywords.test(word)) {\n    type = keywords$1[word];\n  }\n  return this.finishToken(type, word)\n};\n\n// Acorn is a tiny, fast JavaScript parser written in JavaScript.\n\nvar version = \"7.4.1\";\n\nParser.acorn = {\n  Parser: Parser,\n  version: version,\n  defaultOptions: defaultOptions,\n  Position: Position,\n  SourceLocation: SourceLocation,\n  getLineInfo: getLineInfo,\n  Node: Node,\n  TokenType: TokenType,\n  tokTypes: types,\n  keywordTypes: keywords$1,\n  TokContext: TokContext,\n  tokContexts: types$1,\n  isIdentifierChar: isIdentifierChar,\n  isIdentifierStart: isIdentifierStart,\n  Token: Token,\n  isNewLine: isNewLine,\n  lineBreak: lineBreak,\n  lineBreakG: lineBreakG,\n  nonASCIIwhitespace: nonASCIIwhitespace\n};\n\n// The main exported interface (under `self.acorn` when in the\n// browser) is a `parse` function that takes a code string and\n// returns an abstract syntax tree as specified by [Mozilla parser\n// API][api].\n//\n// [api]: https://developer.mozilla.org/en-US/docs/SpiderMonkey/Parser_API\n\nfunction parse(input, options) {\n  return Parser.parse(input, options)\n}\n\n// This function tries to parse a single expression at a given\n// offset in a string. Useful for parsing mixed-language formats\n// that embed JavaScript expressions.\n\nfunction parseExpressionAt(input, pos, options) {\n  return Parser.parseExpressionAt(input, pos, options)\n}\n\n// Acorn is organized as a tokenizer and a recursive-descent parser.\n// The `tokenizer` export provides an interface to the tokenizer.\n\nfunction tokenizer(input, options) {\n  return Parser.tokenizer(input, options)\n}\n\nexport { Node, Parser, Position, SourceLocation, TokContext, Token, TokenType, defaultOptions, getLineInfo, isIdentifierChar, isIdentifierStart, isNewLine, keywords$1 as keywordTypes, lineBreak, lineBreakG, nonASCIIwhitespace, parse, parseExpressionAt, types$1 as tokContexts, types as tokTypes, tokenizer, version };\n","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n","'use strict';\n\nvar acorn = require('acorn');\nvar objectAssign = require('object-assign');\n\nmodule.exports = isExpression;\n\nvar DEFAULT_OPTIONS = {\n  throw: false,\n  strict: false,\n  lineComment: false\n};\n\nfunction isExpression(src, options) {\n  options = objectAssign({}, DEFAULT_OPTIONS, options);\n\n  try {\n    var parser = new acorn.Parser(options, src, 0);\n\n    if (options.strict) {\n      parser.strict = true;\n    }\n\n    if (!options.lineComment) {\n      parser.skipLineComment = function (startSkip) {\n        this.raise(this.pos, 'Line comments not allowed in an expression');\n      };\n    }\n\n    parser.nextToken();\n    parser.parseExpression();\n\n    if (parser.type !== acorn.tokTypes.eof) {\n      parser.unexpected();\n    }\n  } catch (ex) {\n    if (!options.throw) {\n      return false;\n    }\n\n    throw ex;\n  }\n\n  return true;\n}\n","'use strict';\n\nvar assert = require('assert');\nvar isExpression = require('is-expression');\nvar characterParser = require('character-parser');\nvar error = require('pug-error');\n\nmodule.exports = lex;\nmodule.exports.Lexer = Lexer;\nfunction lex(str, options) {\n  var lexer = new Lexer(str, options);\n  return JSON.parse(JSON.stringify(lexer.getTokens()));\n}\n\n/**\n * Initialize `Lexer` with the given `str`.\n *\n * @param {String} str\n * @param {String} filename\n * @api private\n */\n\nfunction Lexer(str, options) {\n  options = options || {};\n  if (typeof str !== 'string') {\n    throw new Error(\n      'Expected source code to be a string but got \"' + typeof str + '\"'\n    );\n  }\n  if (typeof options !== 'object') {\n    throw new Error(\n      'Expected \"options\" to be an object but got \"' + typeof options + '\"'\n    );\n  }\n  //Strip any UTF-8 BOM off of the start of `str`, if it exists.\n  str = str.replace(/^\\uFEFF/, '');\n  this.input = str.replace(/\\r\\n|\\r/g, '\\n');\n  this.originalInput = this.input;\n  this.filename = options.filename;\n  this.interpolated = options.interpolated || false;\n  this.lineno = options.startingLine || 1;\n  this.colno = options.startingColumn || 1;\n  this.plugins = options.plugins || [];\n  this.indentStack = [0];\n  this.indentRe = null;\n  // If #{}, !{} or #[] syntax is allowed when adding text\n  this.interpolationAllowed = true;\n  this.whitespaceRe = /[ \\n\\t]/;\n\n  this.tokens = [];\n  this.ended = false;\n}\n\n/**\n * Lexer prototype.\n */\n\nLexer.prototype = {\n  constructor: Lexer,\n\n  error: function(code, message) {\n    var err = error(code, message, {\n      line: this.lineno,\n      column: this.colno,\n      filename: this.filename,\n      src: this.originalInput,\n    });\n    throw err;\n  },\n\n  assert: function(value, message) {\n    if (!value) this.error('ASSERT_FAILED', message);\n  },\n\n  isExpression: function(exp) {\n    return isExpression(exp, {\n      throw: true,\n    });\n  },\n\n  assertExpression: function(exp, noThrow) {\n    //this verifies that a JavaScript expression is valid\n    try {\n      this.callLexerFunction('isExpression', exp);\n      return true;\n    } catch (ex) {\n      if (noThrow) return false;\n\n      // not coming from acorn\n      if (!ex.loc) throw ex;\n\n      this.incrementLine(ex.loc.line - 1);\n      this.incrementColumn(ex.loc.column);\n      var msg =\n        'Syntax Error: ' + ex.message.replace(/ \\([0-9]+:[0-9]+\\)$/, '');\n      this.error('SYNTAX_ERROR', msg);\n    }\n  },\n\n  assertNestingCorrect: function(exp) {\n    //this verifies that code is properly nested, but allows\n    //invalid JavaScript such as the contents of `attributes`\n    var res = characterParser(exp);\n    if (res.isNesting()) {\n      this.error(\n        'INCORRECT_NESTING',\n        'Nesting must match on expression `' + exp + '`'\n      );\n    }\n  },\n\n  /**\n   * Construct a token with the given `type` and `val`.\n   *\n   * @param {String} type\n   * @param {String} val\n   * @return {Object}\n   * @api private\n   */\n\n  tok: function(type, val) {\n    var res = {\n      type: type,\n      loc: {\n        start: {\n          line: this.lineno,\n          column: this.colno,\n        },\n        filename: this.filename,\n      },\n    };\n\n    if (val !== undefined) res.val = val;\n\n    return res;\n  },\n\n  /**\n   * Set the token's `loc.end` value.\n   *\n   * @param {Object} tok\n   * @returns {Object}\n   * @api private\n   */\n\n  tokEnd: function(tok) {\n    tok.loc.end = {\n      line: this.lineno,\n      column: this.colno,\n    };\n    return tok;\n  },\n\n  /**\n   * Increment `this.lineno` and reset `this.colno`.\n   *\n   * @param {Number} increment\n   * @api private\n   */\n\n  incrementLine: function(increment) {\n    this.lineno += increment;\n    if (increment) this.colno = 1;\n  },\n\n  /**\n   * Increment `this.colno`.\n   *\n   * @param {Number} increment\n   * @api private\n   */\n\n  incrementColumn: function(increment) {\n    this.colno += increment;\n  },\n\n  /**\n   * Consume the given `len` of input.\n   *\n   * @param {Number} len\n   * @api private\n   */\n\n  consume: function(len) {\n    this.input = this.input.substr(len);\n  },\n\n  /**\n   * Scan for `type` with the given `regexp`.\n   *\n   * @param {String} type\n   * @param {RegExp} regexp\n   * @return {Object}\n   * @api private\n   */\n\n  scan: function(regexp, type) {\n    var captures;\n    if ((captures = regexp.exec(this.input))) {\n      var len = captures[0].length;\n      var val = captures[1];\n      var diff = len - (val ? val.length : 0);\n      var tok = this.tok(type, val);\n      this.consume(len);\n      this.incrementColumn(diff);\n      return tok;\n    }\n  },\n  scanEndOfLine: function(regexp, type) {\n    var captures;\n    if ((captures = regexp.exec(this.input))) {\n      var whitespaceLength = 0;\n      var whitespace;\n      var tok;\n      if ((whitespace = /^([ ]+)([^ ]*)/.exec(captures[0]))) {\n        whitespaceLength = whitespace[1].length;\n        this.incrementColumn(whitespaceLength);\n      }\n      var newInput = this.input.substr(captures[0].length);\n      if (newInput[0] === ':') {\n        this.input = newInput;\n        tok = this.tok(type, captures[1]);\n        this.incrementColumn(captures[0].length - whitespaceLength);\n        return tok;\n      }\n      if (/^[ \\t]*(\\n|$)/.test(newInput)) {\n        this.input = newInput.substr(/^[ \\t]*/.exec(newInput)[0].length);\n        tok = this.tok(type, captures[1]);\n        this.incrementColumn(captures[0].length - whitespaceLength);\n        return tok;\n      }\n    }\n  },\n\n  /**\n   * Return the indexOf `(` or `{` or `[` / `)` or `}` or `]` delimiters.\n   *\n   * Make sure that when calling this function, colno is at the character\n   * immediately before the beginning.\n   *\n   * @return {Number}\n   * @api private\n   */\n\n  bracketExpression: function(skip) {\n    skip = skip || 0;\n    var start = this.input[skip];\n    assert(\n      start === '(' || start === '{' || start === '[',\n      'The start character should be \"(\", \"{\" or \"[\"'\n    );\n    var end = characterParser.BRACKETS[start];\n    var range;\n    try {\n      range = characterParser.parseUntil(this.input, end, {start: skip + 1});\n    } catch (ex) {\n      if (ex.index !== undefined) {\n        var idx = ex.index;\n        // starting from this.input[skip]\n        var tmp = this.input.substr(skip).indexOf('\\n');\n        // starting from this.input[0]\n        var nextNewline = tmp + skip;\n        var ptr = 0;\n        while (idx > nextNewline && tmp !== -1) {\n          this.incrementLine(1);\n          idx -= nextNewline + 1;\n          ptr += nextNewline + 1;\n          tmp = nextNewline = this.input.substr(ptr).indexOf('\\n');\n        }\n\n        this.incrementColumn(idx);\n      }\n      if (ex.code === 'CHARACTER_PARSER:END_OF_STRING_REACHED') {\n        this.error(\n          'NO_END_BRACKET',\n          'The end of the string reached with no closing bracket ' +\n            end +\n            ' found.'\n        );\n      } else if (ex.code === 'CHARACTER_PARSER:MISMATCHED_BRACKET') {\n        this.error('BRACKET_MISMATCH', ex.message);\n      }\n      throw ex;\n    }\n    return range;\n  },\n\n  scanIndentation: function() {\n    var captures, re;\n\n    // established regexp\n    if (this.indentRe) {\n      captures = this.indentRe.exec(this.input);\n      // determine regexp\n    } else {\n      // tabs\n      re = /^\\n(\\t*) */;\n      captures = re.exec(this.input);\n\n      // spaces\n      if (captures && !captures[1].length) {\n        re = /^\\n( *)/;\n        captures = re.exec(this.input);\n      }\n\n      // established\n      if (captures && captures[1].length) this.indentRe = re;\n    }\n\n    return captures;\n  },\n\n  /**\n   * end-of-source.\n   */\n\n  eos: function() {\n    if (this.input.length) return;\n    if (this.interpolated) {\n      this.error(\n        'NO_END_BRACKET',\n        'End of line was reached with no closing bracket for interpolation.'\n      );\n    }\n    for (var i = 0; this.indentStack[i]; i++) {\n      this.tokens.push(this.tokEnd(this.tok('outdent')));\n    }\n    this.tokens.push(this.tokEnd(this.tok('eos')));\n    this.ended = true;\n    return true;\n  },\n\n  /**\n   * Blank line.\n   */\n\n  blank: function() {\n    var captures;\n    if ((captures = /^\\n[ \\t]*\\n/.exec(this.input))) {\n      this.consume(captures[0].length - 1);\n      this.incrementLine(1);\n      return true;\n    }\n  },\n\n  /**\n   * Comment.\n   */\n\n  comment: function() {\n    var captures;\n    if ((captures = /^\\/\\/(-)?([^\\n]*)/.exec(this.input))) {\n      this.consume(captures[0].length);\n      var tok = this.tok('comment', captures[2]);\n      tok.buffer = '-' != captures[1];\n      this.interpolationAllowed = tok.buffer;\n      this.tokens.push(tok);\n      this.incrementColumn(captures[0].length);\n      this.tokEnd(tok);\n      this.callLexerFunction('pipelessText');\n      return true;\n    }\n  },\n\n  /**\n   * Interpolated tag.\n   */\n\n  interpolation: function() {\n    if (/^#\\{/.test(this.input)) {\n      var match = this.bracketExpression(1);\n      this.consume(match.end + 1);\n      var tok = this.tok('interpolation', match.src);\n      this.tokens.push(tok);\n      this.incrementColumn(2); // '#{'\n      this.assertExpression(match.src);\n\n      var splitted = match.src.split('\\n');\n      var lines = splitted.length - 1;\n      this.incrementLine(lines);\n      this.incrementColumn(splitted[lines].length + 1); // + 1 → '}'\n      this.tokEnd(tok);\n      return true;\n    }\n  },\n\n  /**\n   * Tag.\n   */\n\n  tag: function() {\n    var captures;\n\n    if ((captures = /^(\\w(?:[-:\\w]*\\w)?)/.exec(this.input))) {\n      var tok,\n        name = captures[1],\n        len = captures[0].length;\n      this.consume(len);\n      tok = this.tok('tag', name);\n      this.tokens.push(tok);\n      this.incrementColumn(len);\n      this.tokEnd(tok);\n      return true;\n    }\n  },\n\n  /**\n   * Filter.\n   */\n\n  filter: function(opts) {\n    var tok = this.scan(/^:([\\w\\-]+)/, 'filter');\n    var inInclude = opts && opts.inInclude;\n    if (tok) {\n      this.tokens.push(tok);\n      this.incrementColumn(tok.val.length);\n      this.tokEnd(tok);\n      this.callLexerFunction('attrs');\n      if (!inInclude) {\n        this.interpolationAllowed = false;\n        this.callLexerFunction('pipelessText');\n      }\n      return true;\n    }\n  },\n\n  /**\n   * Doctype.\n   */\n\n  doctype: function() {\n    var node = this.scanEndOfLine(/^doctype *([^\\n]*)/, 'doctype');\n    if (node) {\n      this.tokens.push(this.tokEnd(node));\n      return true;\n    }\n  },\n\n  /**\n   * Id.\n   */\n\n  id: function() {\n    var tok = this.scan(/^#([\\w-]+)/, 'id');\n    if (tok) {\n      this.tokens.push(tok);\n      this.incrementColumn(tok.val.length);\n      this.tokEnd(tok);\n      return true;\n    }\n    if (/^#/.test(this.input)) {\n      this.error(\n        'INVALID_ID',\n        '\"' +\n          /.[^ \\t\\(\\#\\.\\:]*/.exec(this.input.substr(1))[0] +\n          '\" is not a valid ID.'\n      );\n    }\n  },\n\n  /**\n   * Class.\n   */\n\n  className: function() {\n    var tok = this.scan(/^\\.([_a-z0-9\\-]*[_a-z][_a-z0-9\\-]*)/i, 'class');\n    if (tok) {\n      this.tokens.push(tok);\n      this.incrementColumn(tok.val.length);\n      this.tokEnd(tok);\n      return true;\n    }\n    if (/^\\.[_a-z0-9\\-]+/i.test(this.input)) {\n      this.error(\n        'INVALID_CLASS_NAME',\n        'Class names must contain at least one letter or underscore.'\n      );\n    }\n    if (/^\\./.test(this.input)) {\n      this.error(\n        'INVALID_CLASS_NAME',\n        '\"' +\n          /.[^ \\t\\(\\#\\.\\:]*/.exec(this.input.substr(1))[0] +\n          '\" is not a valid class name.  Class names can only contain \"_\", \"-\", a-z and 0-9, and must contain at least one of \"_\", or a-z'\n      );\n    }\n  },\n\n  /**\n   * Text.\n   */\n  endInterpolation: function() {\n    if (this.interpolated && this.input[0] === ']') {\n      this.input = this.input.substr(1);\n      this.ended = true;\n      return true;\n    }\n  },\n  addText: function(type, value, prefix, escaped) {\n    var tok;\n    if (value + prefix === '') return;\n    prefix = prefix || '';\n    escaped = escaped || 0;\n    var indexOfEnd = this.interpolated ? value.indexOf(']') : -1;\n    var indexOfStart = this.interpolationAllowed ? value.indexOf('#[') : -1;\n    var indexOfEscaped = this.interpolationAllowed ? value.indexOf('\\\\#[') : -1;\n    var matchOfStringInterp = /(\\\\)?([#!]){((?:.|\\n)*)$/.exec(value);\n    var indexOfStringInterp =\n      this.interpolationAllowed && matchOfStringInterp\n        ? matchOfStringInterp.index\n        : Infinity;\n\n    if (indexOfEnd === -1) indexOfEnd = Infinity;\n    if (indexOfStart === -1) indexOfStart = Infinity;\n    if (indexOfEscaped === -1) indexOfEscaped = Infinity;\n\n    if (\n      indexOfEscaped !== Infinity &&\n      indexOfEscaped < indexOfEnd &&\n      indexOfEscaped < indexOfStart &&\n      indexOfEscaped < indexOfStringInterp\n    ) {\n      prefix = prefix + value.substring(0, indexOfEscaped) + '#[';\n      return this.addText(\n        type,\n        value.substring(indexOfEscaped + 3),\n        prefix,\n        escaped + 1\n      );\n    }\n    if (\n      indexOfStart !== Infinity &&\n      indexOfStart < indexOfEnd &&\n      indexOfStart < indexOfEscaped &&\n      indexOfStart < indexOfStringInterp\n    ) {\n      tok = this.tok(type, prefix + value.substring(0, indexOfStart));\n      this.incrementColumn(prefix.length + indexOfStart + escaped);\n      this.tokens.push(this.tokEnd(tok));\n      tok = this.tok('start-pug-interpolation');\n      this.incrementColumn(2);\n      this.tokens.push(this.tokEnd(tok));\n      var child = new this.constructor(value.substr(indexOfStart + 2), {\n        filename: this.filename,\n        interpolated: true,\n        startingLine: this.lineno,\n        startingColumn: this.colno,\n        plugins: this.plugins,\n      });\n      var interpolated;\n      try {\n        interpolated = child.getTokens();\n      } catch (ex) {\n        if (ex.code && /^PUG:/.test(ex.code)) {\n          this.colno = ex.column;\n          this.error(ex.code.substr(4), ex.msg);\n        }\n        throw ex;\n      }\n      this.colno = child.colno;\n      this.tokens = this.tokens.concat(interpolated);\n      tok = this.tok('end-pug-interpolation');\n      this.incrementColumn(1);\n      this.tokens.push(this.tokEnd(tok));\n      this.addText(type, child.input);\n      return;\n    }\n    if (\n      indexOfEnd !== Infinity &&\n      indexOfEnd < indexOfStart &&\n      indexOfEnd < indexOfEscaped &&\n      indexOfEnd < indexOfStringInterp\n    ) {\n      if (prefix + value.substring(0, indexOfEnd)) {\n        this.addText(type, value.substring(0, indexOfEnd), prefix);\n      }\n      this.ended = true;\n      this.input = value.substr(value.indexOf(']') + 1) + this.input;\n      return;\n    }\n    if (indexOfStringInterp !== Infinity) {\n      if (matchOfStringInterp[1]) {\n        prefix =\n          prefix +\n          value.substring(0, indexOfStringInterp) +\n          matchOfStringInterp[2] +\n          '{';\n        return this.addText(\n          type,\n          value.substring(indexOfStringInterp + 3),\n          prefix,\n          escaped + 1\n        );\n      }\n      var before = value.substr(0, indexOfStringInterp);\n      if (prefix || before) {\n        before = prefix + before;\n        tok = this.tok(type, before);\n        this.incrementColumn(before.length + escaped);\n        this.tokens.push(this.tokEnd(tok));\n      }\n\n      var rest = matchOfStringInterp[3];\n      var range;\n      tok = this.tok('interpolated-code');\n      this.incrementColumn(2);\n      try {\n        range = characterParser.parseUntil(rest, '}');\n      } catch (ex) {\n        if (ex.index !== undefined) {\n          this.incrementColumn(ex.index);\n        }\n        if (ex.code === 'CHARACTER_PARSER:END_OF_STRING_REACHED') {\n          this.error(\n            'NO_END_BRACKET',\n            'End of line was reached with no closing bracket for interpolation.'\n          );\n        } else if (ex.code === 'CHARACTER_PARSER:MISMATCHED_BRACKET') {\n          this.error('BRACKET_MISMATCH', ex.message);\n        } else {\n          throw ex;\n        }\n      }\n      tok.mustEscape = matchOfStringInterp[2] === '#';\n      tok.buffer = true;\n      tok.val = range.src;\n      this.assertExpression(range.src);\n\n      if (range.end + 1 < rest.length) {\n        rest = rest.substr(range.end + 1);\n        this.incrementColumn(range.end + 1);\n        this.tokens.push(this.tokEnd(tok));\n        this.addText(type, rest);\n      } else {\n        this.incrementColumn(rest.length);\n        this.tokens.push(this.tokEnd(tok));\n      }\n      return;\n    }\n\n    value = prefix + value;\n    tok = this.tok(type, value);\n    this.incrementColumn(value.length + escaped);\n    this.tokens.push(this.tokEnd(tok));\n  },\n\n  text: function() {\n    var tok =\n      this.scan(/^(?:\\| ?| )([^\\n]+)/, 'text') ||\n      this.scan(/^( )/, 'text') ||\n      this.scan(/^\\|( ?)/, 'text');\n    if (tok) {\n      this.addText('text', tok.val);\n      return true;\n    }\n  },\n\n  textHtml: function() {\n    var tok = this.scan(/^(<[^\\n]*)/, 'text-html');\n    if (tok) {\n      this.addText('text-html', tok.val);\n      return true;\n    }\n  },\n\n  /**\n   * Dot.\n   */\n\n  dot: function() {\n    var tok;\n    if ((tok = this.scanEndOfLine(/^\\./, 'dot'))) {\n      this.tokens.push(this.tokEnd(tok));\n      this.callLexerFunction('pipelessText');\n      return true;\n    }\n  },\n\n  /**\n   * Extends.\n   */\n\n  extends: function() {\n    var tok = this.scan(/^extends?(?= |$|\\n)/, 'extends');\n    if (tok) {\n      this.tokens.push(this.tokEnd(tok));\n      if (!this.callLexerFunction('path')) {\n        this.error('NO_EXTENDS_PATH', 'missing path for extends');\n      }\n      return true;\n    }\n    if (this.scan(/^extends?\\b/)) {\n      this.error('MALFORMED_EXTENDS', 'malformed extends');\n    }\n  },\n\n  /**\n   * Block prepend.\n   */\n\n  prepend: function() {\n    var captures;\n    if ((captures = /^(?:block +)?prepend +([^\\n]+)/.exec(this.input))) {\n      var name = captures[1].trim();\n      var comment = '';\n      if (name.indexOf('//') !== -1) {\n        comment =\n          '//' +\n          name\n            .split('//')\n            .slice(1)\n            .join('//');\n        name = name.split('//')[0].trim();\n      }\n      if (!name) return;\n      var tok = this.tok('block', name);\n      var len = captures[0].length - comment.length;\n      while (this.whitespaceRe.test(this.input.charAt(len - 1))) len--;\n      this.incrementColumn(len);\n      tok.mode = 'prepend';\n      this.tokens.push(this.tokEnd(tok));\n      this.consume(captures[0].length - comment.length);\n      this.incrementColumn(captures[0].length - comment.length - len);\n      return true;\n    }\n  },\n\n  /**\n   * Block append.\n   */\n\n  append: function() {\n    var captures;\n    if ((captures = /^(?:block +)?append +([^\\n]+)/.exec(this.input))) {\n      var name = captures[1].trim();\n      var comment = '';\n      if (name.indexOf('//') !== -1) {\n        comment =\n          '//' +\n          name\n            .split('//')\n            .slice(1)\n            .join('//');\n        name = name.split('//')[0].trim();\n      }\n      if (!name) return;\n      var tok = this.tok('block', name);\n      var len = captures[0].length - comment.length;\n      while (this.whitespaceRe.test(this.input.charAt(len - 1))) len--;\n      this.incrementColumn(len);\n      tok.mode = 'append';\n      this.tokens.push(this.tokEnd(tok));\n      this.consume(captures[0].length - comment.length);\n      this.incrementColumn(captures[0].length - comment.length - len);\n      return true;\n    }\n  },\n\n  /**\n   * Block.\n   */\n\n  block: function() {\n    var captures;\n    if ((captures = /^block +([^\\n]+)/.exec(this.input))) {\n      var name = captures[1].trim();\n      var comment = '';\n      if (name.indexOf('//') !== -1) {\n        comment =\n          '//' +\n          name\n            .split('//')\n            .slice(1)\n            .join('//');\n        name = name.split('//')[0].trim();\n      }\n      if (!name) return;\n      var tok = this.tok('block', name);\n      var len = captures[0].length - comment.length;\n      while (this.whitespaceRe.test(this.input.charAt(len - 1))) len--;\n      this.incrementColumn(len);\n      tok.mode = 'replace';\n      this.tokens.push(this.tokEnd(tok));\n      this.consume(captures[0].length - comment.length);\n      this.incrementColumn(captures[0].length - comment.length - len);\n      return true;\n    }\n  },\n\n  /**\n   * Mixin Block.\n   */\n\n  mixinBlock: function() {\n    var tok;\n    if ((tok = this.scanEndOfLine(/^block/, 'mixin-block'))) {\n      this.tokens.push(this.tokEnd(tok));\n      return true;\n    }\n  },\n\n  /**\n   * Yield.\n   */\n\n  yield: function() {\n    var tok = this.scanEndOfLine(/^yield/, 'yield');\n    if (tok) {\n      this.tokens.push(this.tokEnd(tok));\n      return true;\n    }\n  },\n\n  /**\n   * Include.\n   */\n\n  include: function() {\n    var tok = this.scan(/^include(?=:| |$|\\n)/, 'include');\n    if (tok) {\n      this.tokens.push(this.tokEnd(tok));\n      while (this.callLexerFunction('filter', {inInclude: true}));\n      if (!this.callLexerFunction('path')) {\n        if (/^[^ \\n]+/.test(this.input)) {\n          // if there is more text\n          this.fail();\n        } else {\n          // if not\n          this.error('NO_INCLUDE_PATH', 'missing path for include');\n        }\n      }\n      return true;\n    }\n    if (this.scan(/^include\\b/)) {\n      this.error('MALFORMED_INCLUDE', 'malformed include');\n    }\n  },\n\n  /**\n   * Path\n   */\n\n  path: function() {\n    var tok = this.scanEndOfLine(/^ ([^\\n]+)/, 'path');\n    if (tok && (tok.val = tok.val.trim())) {\n      this.tokens.push(this.tokEnd(tok));\n      return true;\n    }\n  },\n\n  /**\n   * Case.\n   */\n\n  case: function() {\n    var tok = this.scanEndOfLine(/^case +([^\\n]+)/, 'case');\n    if (tok) {\n      this.incrementColumn(-tok.val.length);\n      this.assertExpression(tok.val);\n      this.incrementColumn(tok.val.length);\n      this.tokens.push(this.tokEnd(tok));\n      return true;\n    }\n    if (this.scan(/^case\\b/)) {\n      this.error('NO_CASE_EXPRESSION', 'missing expression for case');\n    }\n  },\n\n  /**\n   * When.\n   */\n\n  when: function() {\n    var tok = this.scanEndOfLine(/^when +([^:\\n]+)/, 'when');\n    if (tok) {\n      var parser = characterParser(tok.val);\n      while (parser.isNesting() || parser.isString()) {\n        var rest = /:([^:\\n]+)/.exec(this.input);\n        if (!rest) break;\n\n        tok.val += rest[0];\n        this.consume(rest[0].length);\n        this.incrementColumn(rest[0].length);\n        parser = characterParser(tok.val);\n      }\n\n      this.incrementColumn(-tok.val.length);\n      this.assertExpression(tok.val);\n      this.incrementColumn(tok.val.length);\n      this.tokens.push(this.tokEnd(tok));\n      return true;\n    }\n    if (this.scan(/^when\\b/)) {\n      this.error('NO_WHEN_EXPRESSION', 'missing expression for when');\n    }\n  },\n\n  /**\n   * Default.\n   */\n\n  default: function() {\n    var tok = this.scanEndOfLine(/^default/, 'default');\n    if (tok) {\n      this.tokens.push(this.tokEnd(tok));\n      return true;\n    }\n    if (this.scan(/^default\\b/)) {\n      this.error(\n        'DEFAULT_WITH_EXPRESSION',\n        'default should not have an expression'\n      );\n    }\n  },\n\n  /**\n   * Call mixin.\n   */\n\n  call: function() {\n    var tok, captures, increment;\n    if ((captures = /^\\+(\\s*)(([-\\w]+)|(#\\{))/.exec(this.input))) {\n      // try to consume simple or interpolated call\n      if (captures[3]) {\n        // simple call\n        increment = captures[0].length;\n        this.consume(increment);\n        tok = this.tok('call', captures[3]);\n      } else {\n        // interpolated call\n        var match = this.bracketExpression(2 + captures[1].length);\n        increment = match.end + 1;\n        this.consume(increment);\n        this.assertExpression(match.src);\n        tok = this.tok('call', '#{' + match.src + '}');\n      }\n\n      this.incrementColumn(increment);\n\n      tok.args = null;\n      // Check for args (not attributes)\n      if ((captures = /^ *\\(/.exec(this.input))) {\n        var range = this.bracketExpression(captures[0].length - 1);\n        if (!/^\\s*[-\\w]+ *=/.test(range.src)) {\n          // not attributes\n          this.incrementColumn(1);\n          this.consume(range.end + 1);\n          tok.args = range.src;\n          this.assertExpression('[' + tok.args + ']');\n          for (var i = 0; i <= tok.args.length; i++) {\n            if (tok.args[i] === '\\n') {\n              this.incrementLine(1);\n            } else {\n              this.incrementColumn(1);\n            }\n          }\n        }\n      }\n      this.tokens.push(this.tokEnd(tok));\n      return true;\n    }\n  },\n\n  /**\n   * Mixin.\n   */\n\n  mixin: function() {\n    var captures;\n    if ((captures = /^mixin +([-\\w]+)(?: *\\((.*)\\))? */.exec(this.input))) {\n      this.consume(captures[0].length);\n      var tok = this.tok('mixin', captures[1]);\n      tok.args = captures[2] || null;\n      this.incrementColumn(captures[0].length);\n      this.tokens.push(this.tokEnd(tok));\n      return true;\n    }\n  },\n\n  /**\n   * Conditional.\n   */\n\n  conditional: function() {\n    var captures;\n    if ((captures = /^(if|unless|else if|else)\\b([^\\n]*)/.exec(this.input))) {\n      this.consume(captures[0].length);\n      var type = captures[1].replace(/ /g, '-');\n      var js = captures[2] && captures[2].trim();\n      // type can be \"if\", \"else-if\" and \"else\"\n      var tok = this.tok(type, js);\n      this.incrementColumn(captures[0].length - js.length);\n\n      switch (type) {\n        case 'if':\n        case 'else-if':\n          this.assertExpression(js);\n          break;\n        case 'unless':\n          this.assertExpression(js);\n          tok.val = '!(' + js + ')';\n          tok.type = 'if';\n          break;\n        case 'else':\n          if (js) {\n            this.error(\n              'ELSE_CONDITION',\n              '`else` cannot have a condition, perhaps you meant `else if`'\n            );\n          }\n          break;\n      }\n      this.incrementColumn(js.length);\n      this.tokens.push(this.tokEnd(tok));\n      return true;\n    }\n  },\n\n  /**\n   * While.\n   */\n\n  while: function() {\n    var captures, tok;\n    if ((captures = /^while +([^\\n]+)/.exec(this.input))) {\n      this.consume(captures[0].length);\n      this.assertExpression(captures[1]);\n      tok = this.tok('while', captures[1]);\n      this.incrementColumn(captures[0].length);\n      this.tokens.push(this.tokEnd(tok));\n      return true;\n    }\n    if (this.scan(/^while\\b/)) {\n      this.error('NO_WHILE_EXPRESSION', 'missing expression for while');\n    }\n  },\n\n  /**\n   * Each.\n   */\n\n  each: function() {\n    var captures;\n    if (\n      (captures = /^(?:each|for) +([a-zA-Z_$][\\w$]*)(?: *, *([a-zA-Z_$][\\w$]*))? * in *([^\\n]+)/.exec(\n        this.input\n      ))\n    ) {\n      this.consume(captures[0].length);\n      var tok = this.tok('each', captures[1]);\n      tok.key = captures[2] || null;\n      this.incrementColumn(captures[0].length - captures[3].length);\n      this.assertExpression(captures[3]);\n      tok.code = captures[3];\n      this.incrementColumn(captures[3].length);\n      this.tokens.push(this.tokEnd(tok));\n      return true;\n    }\n    const name = /^each\\b/.exec(this.input) ? 'each' : 'for';\n    if (this.scan(/^(?:each|for)\\b/)) {\n      this.error(\n        'MALFORMED_EACH',\n        'This `' +\n          name +\n          '` has a syntax error. `' +\n          name +\n          '` statements should be of the form: `' +\n          name +\n          ' VARIABLE_NAME of JS_EXPRESSION`'\n      );\n    }\n    if (\n      (captures = /^- *(?:each|for) +([a-zA-Z_$][\\w$]*)(?: *, *([a-zA-Z_$][\\w$]*))? +in +([^\\n]+)/.exec(\n        this.input\n      ))\n    ) {\n      this.error(\n        'MALFORMED_EACH',\n        'Pug each and for should no longer be prefixed with a dash (\"-\"). They are pug keywords and not part of JavaScript.'\n      );\n    }\n  },\n\n  /**\n   * EachOf.\n   */\n\n  eachOf: function() {\n    var captures;\n    if ((captures = /^(?:each|for) (.*?) of *([^\\n]+)/.exec(this.input))) {\n      this.consume(captures[0].length);\n      var tok = this.tok('eachOf', captures[1]);\n      tok.value = captures[1];\n      this.incrementColumn(captures[0].length - captures[2].length);\n      this.assertExpression(captures[2]);\n      tok.code = captures[2];\n      this.incrementColumn(captures[2].length);\n      this.tokens.push(this.tokEnd(tok));\n\n      if (\n        !(\n          /^[a-zA-Z_$][\\w$]*$/.test(tok.value.trim()) ||\n          /^\\[ *[a-zA-Z_$][\\w$]* *\\, *[a-zA-Z_$][\\w$]* *\\]$/.test(\n            tok.value.trim()\n          )\n        )\n      ) {\n        this.error(\n          'MALFORMED_EACH_OF_LVAL',\n          'The value variable for each must either be a valid identifier (e.g. `item`) or a pair of identifiers in square brackets (e.g. `[key, value]`).'\n        );\n      }\n\n      return true;\n    }\n    if (\n      (captures = /^- *(?:each|for) +([a-zA-Z_$][\\w$]*)(?: *, *([a-zA-Z_$][\\w$]*))? +of +([^\\n]+)/.exec(\n        this.input\n      ))\n    ) {\n      this.error(\n        'MALFORMED_EACH',\n        'Pug each and for should not be prefixed with a dash (\"-\"). They are pug keywords and not part of JavaScript.'\n      );\n    }\n  },\n\n  /**\n   * Code.\n   */\n\n  code: function() {\n    var captures;\n    if ((captures = /^(!?=|-)[ \\t]*([^\\n]+)/.exec(this.input))) {\n      var flags = captures[1];\n      var code = captures[2];\n      var shortened = 0;\n      if (this.interpolated) {\n        var parsed;\n        try {\n          parsed = characterParser.parseUntil(code, ']');\n        } catch (err) {\n          if (err.index !== undefined) {\n            this.incrementColumn(captures[0].length - code.length + err.index);\n          }\n          if (err.code === 'CHARACTER_PARSER:END_OF_STRING_REACHED') {\n            this.error(\n              'NO_END_BRACKET',\n              'End of line was reached with no closing bracket for interpolation.'\n            );\n          } else if (err.code === 'CHARACTER_PARSER:MISMATCHED_BRACKET') {\n            this.error('BRACKET_MISMATCH', err.message);\n          } else {\n            throw err;\n          }\n        }\n        shortened = code.length - parsed.end;\n        code = parsed.src;\n      }\n      var consumed = captures[0].length - shortened;\n      this.consume(consumed);\n      var tok = this.tok('code', code);\n      tok.mustEscape = flags.charAt(0) === '=';\n      tok.buffer = flags.charAt(0) === '=' || flags.charAt(1) === '=';\n\n      // p #[!=    abc] hey\n      //     ^              original colno\n      //     -------------- captures[0]\n      //           -------- captures[2]\n      //     ------         captures[0] - captures[2]\n      //           ^        after colno\n\n      // =   abc\n      // ^                  original colno\n      // -------            captures[0]\n      //     ---            captures[2]\n      // ----               captures[0] - captures[2]\n      //     ^              after colno\n      this.incrementColumn(captures[0].length - captures[2].length);\n      if (tok.buffer) this.assertExpression(code);\n      this.tokens.push(tok);\n\n      // p #[!=    abc] hey\n      //           ^        original colno\n      //              ----- shortened\n      //           ---      code\n      //              ^     after colno\n\n      // =   abc\n      //     ^              original colno\n      //                    shortened\n      //     ---            code\n      //        ^           after colno\n      this.incrementColumn(code.length);\n      this.tokEnd(tok);\n      return true;\n    }\n  },\n\n  /**\n   * Block code.\n   */\n  blockCode: function() {\n    var tok;\n    if ((tok = this.scanEndOfLine(/^-/, 'blockcode'))) {\n      this.tokens.push(this.tokEnd(tok));\n      this.interpolationAllowed = false;\n      this.callLexerFunction('pipelessText');\n      return true;\n    }\n  },\n\n  /**\n   * Attribute Name.\n   */\n  attribute: function(str) {\n    var quote = '';\n    var quoteRe = /['\"]/;\n    var key = '';\n    var i;\n\n    // consume all whitespace before the key\n    for (i = 0; i < str.length; i++) {\n      if (!this.whitespaceRe.test(str[i])) break;\n      if (str[i] === '\\n') {\n        this.incrementLine(1);\n      } else {\n        this.incrementColumn(1);\n      }\n    }\n\n    if (i === str.length) {\n      return '';\n    }\n\n    var tok = this.tok('attribute');\n\n    // quote?\n    if (quoteRe.test(str[i])) {\n      quote = str[i];\n      this.incrementColumn(1);\n      i++;\n    }\n\n    // start looping through the key\n    for (; i < str.length; i++) {\n      if (quote) {\n        if (str[i] === quote) {\n          this.incrementColumn(1);\n          i++;\n          break;\n        }\n      } else {\n        if (\n          this.whitespaceRe.test(str[i]) ||\n          str[i] === '!' ||\n          str[i] === '=' ||\n          str[i] === ','\n        ) {\n          break;\n        }\n      }\n\n      key += str[i];\n\n      if (str[i] === '\\n') {\n        this.incrementLine(1);\n      } else {\n        this.incrementColumn(1);\n      }\n    }\n\n    tok.name = key;\n\n    var valueResponse = this.attributeValue(str.substr(i));\n\n    if (valueResponse.val) {\n      tok.val = valueResponse.val;\n      tok.mustEscape = valueResponse.mustEscape;\n    } else {\n      // was a boolean attribute (ex: `input(disabled)`)\n      tok.val = true;\n      tok.mustEscape = true;\n    }\n\n    str = valueResponse.remainingSource;\n\n    this.tokens.push(this.tokEnd(tok));\n\n    for (i = 0; i < str.length; i++) {\n      if (!this.whitespaceRe.test(str[i])) {\n        break;\n      }\n      if (str[i] === '\\n') {\n        this.incrementLine(1);\n      } else {\n        this.incrementColumn(1);\n      }\n    }\n\n    if (str[i] === ',') {\n      this.incrementColumn(1);\n      i++;\n    }\n\n    return str.substr(i);\n  },\n\n  /**\n   * Attribute Value.\n   */\n  attributeValue: function(str) {\n    var quoteRe = /['\"]/;\n    var val = '';\n    var done, i, x;\n    var escapeAttr = true;\n    var state = characterParser.defaultState();\n    var col = this.colno;\n    var line = this.lineno;\n\n    // consume all whitespace before the equals sign\n    for (i = 0; i < str.length; i++) {\n      if (!this.whitespaceRe.test(str[i])) break;\n      if (str[i] === '\\n') {\n        line++;\n        col = 1;\n      } else {\n        col++;\n      }\n    }\n\n    if (i === str.length) {\n      return {remainingSource: str};\n    }\n\n    if (str[i] === '!') {\n      escapeAttr = false;\n      col++;\n      i++;\n      if (str[i] !== '=')\n        this.error(\n          'INVALID_KEY_CHARACTER',\n          'Unexpected character ' + str[i] + ' expected `=`'\n        );\n    }\n\n    if (str[i] !== '=') {\n      // check for anti-pattern `div(\"foo\"bar)`\n      if (i === 0 && str && !this.whitespaceRe.test(str[0]) && str[0] !== ',') {\n        this.error(\n          'INVALID_KEY_CHARACTER',\n          'Unexpected character ' + str[0] + ' expected `=`'\n        );\n      } else {\n        return {remainingSource: str};\n      }\n    }\n\n    this.lineno = line;\n    this.colno = col + 1;\n    i++;\n\n    // consume all whitespace before the value\n    for (; i < str.length; i++) {\n      if (!this.whitespaceRe.test(str[i])) break;\n      if (str[i] === '\\n') {\n        this.incrementLine(1);\n      } else {\n        this.incrementColumn(1);\n      }\n    }\n\n    line = this.lineno;\n    col = this.colno;\n\n    // start looping through the value\n    for (; i < str.length; i++) {\n      // if the character is in a string or in parentheses/brackets/braces\n      if (!(state.isNesting() || state.isString())) {\n        if (this.whitespaceRe.test(str[i])) {\n          done = false;\n\n          // find the first non-whitespace character\n          for (x = i; x < str.length; x++) {\n            if (!this.whitespaceRe.test(str[x])) {\n              // if it is a JavaScript punctuator, then assume that it is\n              // a part of the value\n              const isNotPunctuator = !characterParser.isPunctuator(str[x]);\n              const isQuote = quoteRe.test(str[x]);\n              const isColon = str[x] === ':';\n              const isSpreadOperator =\n                str[x] + str[x + 1] + str[x + 2] === '...';\n              if (\n                (isNotPunctuator || isQuote || isColon || isSpreadOperator) &&\n                this.assertExpression(val, true)\n              ) {\n                done = true;\n              }\n              break;\n            }\n          }\n\n          // if everything else is whitespace, return now so last attribute\n          // does not include trailing whitespace\n          if (done || x === str.length) {\n            break;\n          }\n        }\n\n        // if there's no whitespace and the character is not ',', the\n        // attribute did not end.\n        if (str[i] === ',' && this.assertExpression(val, true)) {\n          break;\n        }\n      }\n\n      state = characterParser.parseChar(str[i], state);\n      val += str[i];\n\n      if (str[i] === '\\n') {\n        line++;\n        col = 1;\n      } else {\n        col++;\n      }\n    }\n\n    this.assertExpression(val);\n\n    this.lineno = line;\n    this.colno = col;\n\n    return {val: val, mustEscape: escapeAttr, remainingSource: str.substr(i)};\n  },\n\n  /**\n   * Attributes.\n   */\n\n  attrs: function() {\n    var tok;\n\n    if ('(' == this.input.charAt(0)) {\n      tok = this.tok('start-attributes');\n      var index = this.bracketExpression().end;\n      var str = this.input.substr(1, index - 1);\n\n      this.incrementColumn(1);\n      this.tokens.push(this.tokEnd(tok));\n      this.assertNestingCorrect(str);\n      this.consume(index + 1);\n\n      while (str) {\n        str = this.attribute(str);\n      }\n\n      tok = this.tok('end-attributes');\n      this.incrementColumn(1);\n      this.tokens.push(this.tokEnd(tok));\n      return true;\n    }\n  },\n\n  /**\n   * &attributes block\n   */\n  attributesBlock: function() {\n    if (/^&attributes\\b/.test(this.input)) {\n      var consumed = 11;\n      this.consume(consumed);\n      var tok = this.tok('&attributes');\n      this.incrementColumn(consumed);\n      var args = this.bracketExpression();\n      consumed = args.end + 1;\n      this.consume(consumed);\n      tok.val = args.src;\n      this.incrementColumn(consumed);\n      this.tokens.push(this.tokEnd(tok));\n      return true;\n    }\n  },\n\n  /**\n   * Indent | Outdent | Newline.\n   */\n\n  indent: function() {\n    var captures = this.scanIndentation();\n    var tok;\n\n    if (captures) {\n      var indents = captures[1].length;\n\n      this.incrementLine(1);\n      this.consume(indents + 1);\n\n      if (' ' == this.input[0] || '\\t' == this.input[0]) {\n        this.error(\n          'INVALID_INDENTATION',\n          'Invalid indentation, you can use tabs or spaces but not both'\n        );\n      }\n\n      // blank line\n      if ('\\n' == this.input[0]) {\n        this.interpolationAllowed = true;\n        return this.tokEnd(this.tok('newline'));\n      }\n\n      // outdent\n      if (indents < this.indentStack[0]) {\n        var outdent_count = 0;\n        while (this.indentStack[0] > indents) {\n          if (this.indentStack[1] < indents) {\n            this.error(\n              'INCONSISTENT_INDENTATION',\n              'Inconsistent indentation. Expecting either ' +\n                this.indentStack[1] +\n                ' or ' +\n                this.indentStack[0] +\n                ' spaces/tabs.'\n            );\n          }\n          outdent_count++;\n          this.indentStack.shift();\n        }\n        while (outdent_count--) {\n          this.colno = 1;\n          tok = this.tok('outdent');\n          this.colno = this.indentStack[0] + 1;\n          this.tokens.push(this.tokEnd(tok));\n        }\n        // indent\n      } else if (indents && indents != this.indentStack[0]) {\n        tok = this.tok('indent', indents);\n        this.colno = 1 + indents;\n        this.tokens.push(this.tokEnd(tok));\n        this.indentStack.unshift(indents);\n        // newline\n      } else {\n        tok = this.tok('newline');\n        this.colno = 1 + Math.min(this.indentStack[0] || 0, indents);\n        this.tokens.push(this.tokEnd(tok));\n      }\n\n      this.interpolationAllowed = true;\n      return true;\n    }\n  },\n\n  pipelessText: function pipelessText(indents) {\n    while (this.callLexerFunction('blank'));\n\n    var captures = this.scanIndentation();\n\n    indents = indents || (captures && captures[1].length);\n    if (indents > this.indentStack[0]) {\n      this.tokens.push(this.tokEnd(this.tok('start-pipeless-text')));\n      var tokens = [];\n      var token_indent = [];\n      var isMatch;\n      // Index in this.input. Can't use this.consume because we might need to\n      // retry lexing the block.\n      var stringPtr = 0;\n      do {\n        // text has `\\n` as a prefix\n        var i = this.input.substr(stringPtr + 1).indexOf('\\n');\n        if (-1 == i) i = this.input.length - stringPtr - 1;\n        var str = this.input.substr(stringPtr + 1, i);\n        var lineCaptures = this.indentRe.exec('\\n' + str);\n        var lineIndents = lineCaptures && lineCaptures[1].length;\n        isMatch = lineIndents >= indents;\n        token_indent.push(isMatch);\n        isMatch = isMatch || !str.trim();\n        if (isMatch) {\n          // consume test along with `\\n` prefix if match\n          stringPtr += str.length + 1;\n          tokens.push(str.substr(indents));\n        } else if (lineIndents > this.indentStack[0]) {\n          // line is indented less than the first line but is still indented\n          // need to retry lexing the text block\n          this.tokens.pop();\n          return pipelessText.call(this, lineCaptures[1].length);\n        }\n      } while (this.input.length - stringPtr && isMatch);\n      this.consume(stringPtr);\n      while (this.input.length === 0 && tokens[tokens.length - 1] === '')\n        tokens.pop();\n      tokens.forEach(\n        function(token, i) {\n          var tok;\n          this.incrementLine(1);\n          if (i !== 0) tok = this.tok('newline');\n          if (token_indent[i]) this.incrementColumn(indents);\n          if (tok) this.tokens.push(this.tokEnd(tok));\n          this.addText('text', token);\n        }.bind(this)\n      );\n      this.tokens.push(this.tokEnd(this.tok('end-pipeless-text')));\n      return true;\n    }\n  },\n\n  /**\n   * Slash.\n   */\n\n  slash: function() {\n    var tok = this.scan(/^\\//, 'slash');\n    if (tok) {\n      this.tokens.push(this.tokEnd(tok));\n      return true;\n    }\n  },\n\n  /**\n   * ':'\n   */\n\n  colon: function() {\n    var tok = this.scan(/^: +/, ':');\n    if (tok) {\n      this.tokens.push(this.tokEnd(tok));\n      return true;\n    }\n  },\n\n  fail: function() {\n    this.error(\n      'UNEXPECTED_TEXT',\n      'unexpected text \"' + this.input.substr(0, 5) + '\"'\n    );\n  },\n\n  callLexerFunction: function(func) {\n    var rest = [];\n    for (var i = 1; i < arguments.length; i++) {\n      rest.push(arguments[i]);\n    }\n    var pluginArgs = [this].concat(rest);\n    for (var i = 0; i < this.plugins.length; i++) {\n      var plugin = this.plugins[i];\n      if (plugin[func] && plugin[func].apply(plugin, pluginArgs)) {\n        return true;\n      }\n    }\n    return this[func].apply(this, rest);\n  },\n\n  /**\n   * Move to the next token\n   *\n   * @api private\n   */\n\n  advance: function() {\n    return (\n      this.callLexerFunction('blank') ||\n      this.callLexerFunction('eos') ||\n      this.callLexerFunction('endInterpolation') ||\n      this.callLexerFunction('yield') ||\n      this.callLexerFunction('doctype') ||\n      this.callLexerFunction('interpolation') ||\n      this.callLexerFunction('case') ||\n      this.callLexerFunction('when') ||\n      this.callLexerFunction('default') ||\n      this.callLexerFunction('extends') ||\n      this.callLexerFunction('append') ||\n      this.callLexerFunction('prepend') ||\n      this.callLexerFunction('block') ||\n      this.callLexerFunction('mixinBlock') ||\n      this.callLexerFunction('include') ||\n      this.callLexerFunction('mixin') ||\n      this.callLexerFunction('call') ||\n      this.callLexerFunction('conditional') ||\n      this.callLexerFunction('eachOf') ||\n      this.callLexerFunction('each') ||\n      this.callLexerFunction('while') ||\n      this.callLexerFunction('tag') ||\n      this.callLexerFunction('filter') ||\n      this.callLexerFunction('blockCode') ||\n      this.callLexerFunction('code') ||\n      this.callLexerFunction('id') ||\n      this.callLexerFunction('dot') ||\n      this.callLexerFunction('className') ||\n      this.callLexerFunction('attrs') ||\n      this.callLexerFunction('attributesBlock') ||\n      this.callLexerFunction('indent') ||\n      this.callLexerFunction('text') ||\n      this.callLexerFunction('textHtml') ||\n      this.callLexerFunction('comment') ||\n      this.callLexerFunction('slash') ||\n      this.callLexerFunction('colon') ||\n      this.fail()\n    );\n  },\n\n  /**\n   * Return an array of tokens for the current file\n   *\n   * @returns {Array.<Token>}\n   * @api public\n   */\n  getTokens: function() {\n    while (!this.ended) {\n      this.callLexerFunction('advance');\n    }\n    return this.tokens;\n  },\n};\n","'use strict';\n\nvar error = require('pug-error');\n\nmodule.exports = stripComments;\n\nfunction unexpectedToken(type, occasion, filename, line) {\n  var msg = '`' + type + '` encountered when ' + occasion;\n  throw error('UNEXPECTED_TOKEN', msg, {filename: filename, line: line});\n}\n\nfunction stripComments(input, options) {\n  options = options || {};\n\n  // Default: strip unbuffered comments and leave buffered ones alone\n  var stripUnbuffered = options.stripUnbuffered !== false;\n  var stripBuffered = options.stripBuffered === true;\n  var filename = options.filename;\n\n  var out = [];\n  // If we have encountered a comment token and are not sure if we have gotten\n  // out of the comment or not\n  var inComment = false;\n  // If we are sure that we are in a block comment and all tokens except\n  // `end-pipeless-text` should be ignored\n  var inPipelessText = false;\n\n  return input.filter(function(tok) {\n    switch (tok.type) {\n      case 'comment':\n        if (inComment) {\n          unexpectedToken(\n            'comment',\n            'already in a comment',\n            filename,\n            tok.line\n          );\n        } else {\n          inComment = tok.buffer ? stripBuffered : stripUnbuffered;\n          return !inComment;\n        }\n      case 'start-pipeless-text':\n        if (!inComment) return true;\n        if (inPipelessText) {\n          unexpectedToken(\n            'start-pipeless-text',\n            'already in pipeless text mode',\n            filename,\n            tok.line\n          );\n        }\n        inPipelessText = true;\n        return false;\n      case 'end-pipeless-text':\n        if (!inComment) return true;\n        if (!inPipelessText) {\n          unexpectedToken(\n            'end-pipeless-text',\n            'not in pipeless text mode',\n            filename,\n            tok.line\n          );\n        }\n        inPipelessText = false;\n        inComment = false;\n        return false;\n      // There might be a `text` right after `comment` but before\n      // `start-pipeless-text`. Treat it accordingly.\n      case 'text':\n        return !inComment;\n      default:\n        if (inPipelessText) return false;\n        inComment = false;\n        return true;\n    }\n  });\n}\n","'use strict';\n\nmodule.exports = TokenStream;\nfunction TokenStream(tokens) {\n  if (!Array.isArray(tokens)) {\n    throw new TypeError('tokens must be passed to TokenStream as an array.');\n  }\n  this._tokens = tokens;\n}\nTokenStream.prototype.lookahead = function (index) {\n  if (this._tokens.length <= index) {\n    throw new Error('Cannot read past the end of a stream');\n  }\n  return this._tokens[index];\n};\nTokenStream.prototype.peek = function () {\n  if (this._tokens.length === 0) {\n    throw new Error('Cannot read past the end of a stream');\n  }\n  return this._tokens[0];\n};\nTokenStream.prototype.advance = function () {\n  if (this._tokens.length === 0) {\n    throw new Error('Cannot read past the end of a stream');\n  }\n  return this._tokens.shift();\n};\nTokenStream.prototype.defer = function (token) {\n  this._tokens.unshift(token);\n};\n","'use strict';\n\nvar assert = require('assert');\nvar TokenStream = require('token-stream');\nvar error = require('pug-error');\nvar inlineTags = require('./lib/inline-tags');\n\nmodule.exports = parse;\nmodule.exports.Parser = Parser;\nfunction parse(tokens, options) {\n  var parser = new Parser(tokens, options);\n  var ast = parser.parse();\n  return JSON.parse(JSON.stringify(ast));\n}\n\n/**\n * Initialize `Parser` with the given input `str` and `filename`.\n *\n * @param {String} str\n * @param {String} filename\n * @param {Object} options\n * @api public\n */\n\nfunction Parser(tokens, options) {\n  options = options || {};\n  if (!Array.isArray(tokens)) {\n    throw new Error(\n      'Expected tokens to be an Array but got \"' + typeof tokens + '\"'\n    );\n  }\n  if (typeof options !== 'object') {\n    throw new Error(\n      'Expected \"options\" to be an object but got \"' + typeof options + '\"'\n    );\n  }\n  this.tokens = new TokenStream(tokens);\n  this.filename = options.filename;\n  this.src = options.src;\n  this.inMixin = 0;\n  this.plugins = options.plugins || [];\n}\n\n/**\n * Parser prototype.\n */\n\nParser.prototype = {\n  /**\n   * Save original constructor\n   */\n\n  constructor: Parser,\n\n  error: function(code, message, token) {\n    var err = error(code, message, {\n      line: token.loc.start.line,\n      column: token.loc.start.column,\n      filename: this.filename,\n      src: this.src,\n    });\n    throw err;\n  },\n\n  /**\n   * Return the next token object.\n   *\n   * @return {Object}\n   * @api private\n   */\n\n  advance: function() {\n    return this.tokens.advance();\n  },\n\n  /**\n   * Single token lookahead.\n   *\n   * @return {Object}\n   * @api private\n   */\n\n  peek: function() {\n    return this.tokens.peek();\n  },\n\n  /**\n   * `n` token lookahead.\n   *\n   * @param {Number} n\n   * @return {Object}\n   * @api private\n   */\n\n  lookahead: function(n) {\n    return this.tokens.lookahead(n);\n  },\n\n  /**\n   * Parse input returning a string of js for evaluation.\n   *\n   * @return {String}\n   * @api public\n   */\n\n  parse: function() {\n    var block = this.emptyBlock(0);\n\n    while ('eos' != this.peek().type) {\n      if ('newline' == this.peek().type) {\n        this.advance();\n      } else if ('text-html' == this.peek().type) {\n        block.nodes = block.nodes.concat(this.parseTextHtml());\n      } else {\n        var expr = this.parseExpr();\n        if (expr) {\n          if (expr.type === 'Block') {\n            block.nodes = block.nodes.concat(expr.nodes);\n          } else {\n            block.nodes.push(expr);\n          }\n        }\n      }\n    }\n\n    return block;\n  },\n\n  /**\n   * Expect the given type, or throw an exception.\n   *\n   * @param {String} type\n   * @api private\n   */\n\n  expect: function(type) {\n    if (this.peek().type === type) {\n      return this.advance();\n    } else {\n      this.error(\n        'INVALID_TOKEN',\n        'expected \"' + type + '\", but got \"' + this.peek().type + '\"',\n        this.peek()\n      );\n    }\n  },\n\n  /**\n   * Accept the given `type`.\n   *\n   * @param {String} type\n   * @api private\n   */\n\n  accept: function(type) {\n    if (this.peek().type === type) {\n      return this.advance();\n    }\n  },\n\n  initBlock: function(line, nodes) {\n    /* istanbul ignore if */\n    if ((line | 0) !== line) throw new Error('`line` is not an integer');\n    /* istanbul ignore if */\n    if (!Array.isArray(nodes)) throw new Error('`nodes` is not an array');\n    return {\n      type: 'Block',\n      nodes: nodes,\n      line: line,\n      filename: this.filename,\n    };\n  },\n\n  emptyBlock: function(line) {\n    return this.initBlock(line, []);\n  },\n\n  runPlugin: function(context, tok) {\n    var rest = [this];\n    for (var i = 2; i < arguments.length; i++) {\n      rest.push(arguments[i]);\n    }\n    var pluginContext;\n    for (var i = 0; i < this.plugins.length; i++) {\n      var plugin = this.plugins[i];\n      if (plugin[context] && plugin[context][tok.type]) {\n        if (pluginContext)\n          throw new Error(\n            'Multiple plugin handlers found for context ' +\n              JSON.stringify(context) +\n              ', token type ' +\n              JSON.stringify(tok.type)\n          );\n        pluginContext = plugin[context];\n      }\n    }\n    if (pluginContext)\n      return pluginContext[tok.type].apply(pluginContext, rest);\n  },\n\n  /**\n   *   tag\n   * | doctype\n   * | mixin\n   * | include\n   * | filter\n   * | comment\n   * | text\n   * | text-html\n   * | dot\n   * | each\n   * | code\n   * | yield\n   * | id\n   * | class\n   * | interpolation\n   */\n\n  parseExpr: function() {\n    switch (this.peek().type) {\n      case 'tag':\n        return this.parseTag();\n      case 'mixin':\n        return this.parseMixin();\n      case 'block':\n        return this.parseBlock();\n      case 'mixin-block':\n        return this.parseMixinBlock();\n      case 'case':\n        return this.parseCase();\n      case 'extends':\n        return this.parseExtends();\n      case 'include':\n        return this.parseInclude();\n      case 'doctype':\n        return this.parseDoctype();\n      case 'filter':\n        return this.parseFilter();\n      case 'comment':\n        return this.parseComment();\n      case 'text':\n      case 'interpolated-code':\n      case 'start-pug-interpolation':\n        return this.parseText({block: true});\n      case 'text-html':\n        return this.initBlock(this.peek().loc.start.line, this.parseTextHtml());\n      case 'dot':\n        return this.parseDot();\n      case 'each':\n        return this.parseEach();\n      case 'eachOf':\n        return this.parseEachOf();\n      case 'code':\n        return this.parseCode();\n      case 'blockcode':\n        return this.parseBlockCode();\n      case 'if':\n        return this.parseConditional();\n      case 'while':\n        return this.parseWhile();\n      case 'call':\n        return this.parseCall();\n      case 'interpolation':\n        return this.parseInterpolation();\n      case 'yield':\n        return this.parseYield();\n      case 'id':\n      case 'class':\n        if (!this.peek().loc.start) debugger;\n        this.tokens.defer({\n          type: 'tag',\n          val: 'div',\n          loc: this.peek().loc,\n          filename: this.filename,\n        });\n        return this.parseExpr();\n      default:\n        var pluginResult = this.runPlugin('expressionTokens', this.peek());\n        if (pluginResult) return pluginResult;\n        this.error(\n          'INVALID_TOKEN',\n          'unexpected token \"' + this.peek().type + '\"',\n          this.peek()\n        );\n    }\n  },\n\n  parseDot: function() {\n    this.advance();\n    return this.parseTextBlock();\n  },\n\n  /**\n   * Text\n   */\n\n  parseText: function(options) {\n    var tags = [];\n    var lineno = this.peek().loc.start.line;\n    var nextTok = this.peek();\n    loop: while (true) {\n      switch (nextTok.type) {\n        case 'text':\n          var tok = this.advance();\n          tags.push({\n            type: 'Text',\n            val: tok.val,\n            line: tok.loc.start.line,\n            column: tok.loc.start.column,\n            filename: this.filename,\n          });\n          break;\n        case 'interpolated-code':\n          var tok = this.advance();\n          tags.push({\n            type: 'Code',\n            val: tok.val,\n            buffer: tok.buffer,\n            mustEscape: tok.mustEscape !== false,\n            isInline: true,\n            line: tok.loc.start.line,\n            column: tok.loc.start.column,\n            filename: this.filename,\n          });\n          break;\n        case 'newline':\n          if (!options || !options.block) break loop;\n          var tok = this.advance();\n          var nextType = this.peek().type;\n          if (nextType === 'text' || nextType === 'interpolated-code') {\n            tags.push({\n              type: 'Text',\n              val: '\\n',\n              line: tok.loc.start.line,\n              column: tok.loc.start.column,\n              filename: this.filename,\n            });\n          }\n          break;\n        case 'start-pug-interpolation':\n          this.advance();\n          tags.push(this.parseExpr());\n          this.expect('end-pug-interpolation');\n          break;\n        default:\n          var pluginResult = this.runPlugin('textTokens', nextTok, tags);\n          if (pluginResult) break;\n          break loop;\n      }\n      nextTok = this.peek();\n    }\n    if (tags.length === 1) return tags[0];\n    else return this.initBlock(lineno, tags);\n  },\n\n  parseTextHtml: function() {\n    var nodes = [];\n    var currentNode = null;\n    loop: while (true) {\n      switch (this.peek().type) {\n        case 'text-html':\n          var text = this.advance();\n          if (!currentNode) {\n            currentNode = {\n              type: 'Text',\n              val: text.val,\n              filename: this.filename,\n              line: text.loc.start.line,\n              column: text.loc.start.column,\n              isHtml: true,\n            };\n            nodes.push(currentNode);\n          } else {\n            currentNode.val += '\\n' + text.val;\n          }\n          break;\n        case 'indent':\n          var block = this.block();\n          block.nodes.forEach(function(node) {\n            if (node.isHtml) {\n              if (!currentNode) {\n                currentNode = node;\n                nodes.push(currentNode);\n              } else {\n                currentNode.val += '\\n' + node.val;\n              }\n            } else {\n              currentNode = null;\n              nodes.push(node);\n            }\n          });\n          break;\n        case 'code':\n          currentNode = null;\n          nodes.push(this.parseCode(true));\n          break;\n        case 'newline':\n          this.advance();\n          break;\n        default:\n          break loop;\n      }\n    }\n    return nodes;\n  },\n\n  /**\n   *   ':' expr\n   * | block\n   */\n\n  parseBlockExpansion: function() {\n    var tok = this.accept(':');\n    if (tok) {\n      var expr = this.parseExpr();\n      return expr.type === 'Block'\n        ? expr\n        : this.initBlock(tok.loc.start.line, [expr]);\n    } else {\n      return this.block();\n    }\n  },\n\n  /**\n   * case\n   */\n\n  parseCase: function() {\n    var tok = this.expect('case');\n    var node = {\n      type: 'Case',\n      expr: tok.val,\n      line: tok.loc.start.line,\n      column: tok.loc.start.column,\n      filename: this.filename,\n    };\n\n    var block = this.emptyBlock(tok.loc.start.line + 1);\n    this.expect('indent');\n    while ('outdent' != this.peek().type) {\n      switch (this.peek().type) {\n        case 'comment':\n        case 'newline':\n          this.advance();\n          break;\n        case 'when':\n          block.nodes.push(this.parseWhen());\n          break;\n        case 'default':\n          block.nodes.push(this.parseDefault());\n          break;\n        default:\n          var pluginResult = this.runPlugin('caseTokens', this.peek(), block);\n          if (pluginResult) break;\n          this.error(\n            'INVALID_TOKEN',\n            'Unexpected token \"' +\n              this.peek().type +\n              '\", expected \"when\", \"default\" or \"newline\"',\n            this.peek()\n          );\n      }\n    }\n    this.expect('outdent');\n\n    node.block = block;\n\n    return node;\n  },\n\n  /**\n   * when\n   */\n\n  parseWhen: function() {\n    var tok = this.expect('when');\n    if (this.peek().type !== 'newline') {\n      return {\n        type: 'When',\n        expr: tok.val,\n        block: this.parseBlockExpansion(),\n        debug: false,\n        line: tok.loc.start.line,\n        column: tok.loc.start.column,\n        filename: this.filename,\n      };\n    } else {\n      return {\n        type: 'When',\n        expr: tok.val,\n        debug: false,\n        line: tok.loc.start.line,\n        column: tok.loc.start.column,\n        filename: this.filename,\n      };\n    }\n  },\n\n  /**\n   * default\n   */\n\n  parseDefault: function() {\n    var tok = this.expect('default');\n    return {\n      type: 'When',\n      expr: 'default',\n      block: this.parseBlockExpansion(),\n      debug: false,\n      line: tok.loc.start.line,\n      column: tok.loc.start.column,\n      filename: this.filename,\n    };\n  },\n\n  /**\n   * code\n   */\n\n  parseCode: function(noBlock) {\n    var tok = this.expect('code');\n    assert(\n      typeof tok.mustEscape === 'boolean',\n      'Please update to the newest version of pug-lexer.'\n    );\n    var node = {\n      type: 'Code',\n      val: tok.val,\n      buffer: tok.buffer,\n      mustEscape: tok.mustEscape !== false,\n      isInline: !!noBlock,\n      line: tok.loc.start.line,\n      column: tok.loc.start.column,\n      filename: this.filename,\n    };\n    // todo: why is this here?  It seems like a hacky workaround\n    if (node.val.match(/^ *else/)) node.debug = false;\n\n    if (noBlock) return node;\n\n    var block;\n\n    // handle block\n    block = 'indent' == this.peek().type;\n    if (block) {\n      if (tok.buffer) {\n        this.error(\n          'BLOCK_IN_BUFFERED_CODE',\n          'Buffered code cannot have a block attached to it',\n          this.peek()\n        );\n      }\n      node.block = this.block();\n    }\n\n    return node;\n  },\n  parseConditional: function() {\n    var tok = this.expect('if');\n    var node = {\n      type: 'Conditional',\n      test: tok.val,\n      consequent: this.emptyBlock(tok.loc.start.line),\n      alternate: null,\n      line: tok.loc.start.line,\n      column: tok.loc.start.column,\n      filename: this.filename,\n    };\n\n    // handle block\n    if ('indent' == this.peek().type) {\n      node.consequent = this.block();\n    }\n\n    var currentNode = node;\n    while (true) {\n      if (this.peek().type === 'newline') {\n        this.expect('newline');\n      } else if (this.peek().type === 'else-if') {\n        tok = this.expect('else-if');\n        currentNode = currentNode.alternate = {\n          type: 'Conditional',\n          test: tok.val,\n          consequent: this.emptyBlock(tok.loc.start.line),\n          alternate: null,\n          line: tok.loc.start.line,\n          column: tok.loc.start.column,\n          filename: this.filename,\n        };\n        if ('indent' == this.peek().type) {\n          currentNode.consequent = this.block();\n        }\n      } else if (this.peek().type === 'else') {\n        this.expect('else');\n        if (this.peek().type === 'indent') {\n          currentNode.alternate = this.block();\n        }\n        break;\n      } else {\n        break;\n      }\n    }\n\n    return node;\n  },\n  parseWhile: function() {\n    var tok = this.expect('while');\n    var node = {\n      type: 'While',\n      test: tok.val,\n      line: tok.loc.start.line,\n      column: tok.loc.start.column,\n      filename: this.filename,\n    };\n\n    // handle block\n    if ('indent' == this.peek().type) {\n      node.block = this.block();\n    } else {\n      node.block = this.emptyBlock(tok.loc.start.line);\n    }\n\n    return node;\n  },\n\n  /**\n   * block code\n   */\n\n  parseBlockCode: function() {\n    var tok = this.expect('blockcode');\n    var line = tok.loc.start.line;\n    var column = tok.loc.start.column;\n    var body = this.peek();\n    var text = '';\n    if (body.type === 'start-pipeless-text') {\n      this.advance();\n      while (this.peek().type !== 'end-pipeless-text') {\n        tok = this.advance();\n        switch (tok.type) {\n          case 'text':\n            text += tok.val;\n            break;\n          case 'newline':\n            text += '\\n';\n            break;\n          default:\n            var pluginResult = this.runPlugin('blockCodeTokens', tok, tok);\n            if (pluginResult) {\n              text += pluginResult;\n              break;\n            }\n            this.error(\n              'INVALID_TOKEN',\n              'Unexpected token type: ' + tok.type,\n              tok\n            );\n        }\n      }\n      this.advance();\n    }\n    return {\n      type: 'Code',\n      val: text,\n      buffer: false,\n      mustEscape: false,\n      isInline: false,\n      line: line,\n      column: column,\n      filename: this.filename,\n    };\n  },\n  /**\n   * comment\n   */\n\n  parseComment: function() {\n    var tok = this.expect('comment');\n    var block;\n    if ((block = this.parseTextBlock())) {\n      return {\n        type: 'BlockComment',\n        val: tok.val,\n        block: block,\n        buffer: tok.buffer,\n        line: tok.loc.start.line,\n        column: tok.loc.start.column,\n        filename: this.filename,\n      };\n    } else {\n      return {\n        type: 'Comment',\n        val: tok.val,\n        buffer: tok.buffer,\n        line: tok.loc.start.line,\n        column: tok.loc.start.column,\n        filename: this.filename,\n      };\n    }\n  },\n\n  /**\n   * doctype\n   */\n\n  parseDoctype: function() {\n    var tok = this.expect('doctype');\n    return {\n      type: 'Doctype',\n      val: tok.val,\n      line: tok.loc.start.line,\n      column: tok.loc.start.column,\n      filename: this.filename,\n    };\n  },\n\n  parseIncludeFilter: function() {\n    var tok = this.expect('filter');\n    var attrs = [];\n\n    if (this.peek().type === 'start-attributes') {\n      attrs = this.attrs();\n    }\n\n    return {\n      type: 'IncludeFilter',\n      name: tok.val,\n      attrs: attrs,\n      line: tok.loc.start.line,\n      column: tok.loc.start.column,\n      filename: this.filename,\n    };\n  },\n\n  /**\n   * filter attrs? text-block\n   */\n\n  parseFilter: function() {\n    var tok = this.expect('filter');\n    var block,\n      attrs = [];\n\n    if (this.peek().type === 'start-attributes') {\n      attrs = this.attrs();\n    }\n\n    if (this.peek().type === 'text') {\n      var textToken = this.advance();\n      block = this.initBlock(textToken.loc.start.line, [\n        {\n          type: 'Text',\n          val: textToken.val,\n          line: textToken.loc.start.line,\n          column: textToken.loc.start.column,\n          filename: this.filename,\n        },\n      ]);\n    } else if (this.peek().type === 'filter') {\n      block = this.initBlock(tok.loc.start.line, [this.parseFilter()]);\n    } else {\n      block = this.parseTextBlock() || this.emptyBlock(tok.loc.start.line);\n    }\n\n    return {\n      type: 'Filter',\n      name: tok.val,\n      block: block,\n      attrs: attrs,\n      line: tok.loc.start.line,\n      column: tok.loc.start.column,\n      filename: this.filename,\n    };\n  },\n\n  /**\n   * each block\n   */\n\n  parseEach: function() {\n    var tok = this.expect('each');\n    var node = {\n      type: 'Each',\n      obj: tok.code,\n      val: tok.val,\n      key: tok.key,\n      block: this.block(),\n      line: tok.loc.start.line,\n      column: tok.loc.start.column,\n      filename: this.filename,\n    };\n    if (this.peek().type == 'else') {\n      this.advance();\n      node.alternate = this.block();\n    }\n    return node;\n  },\n\n  parseEachOf: function() {\n    var tok = this.expect('eachOf');\n    var node = {\n      type: 'EachOf',\n      obj: tok.code,\n      val: tok.val,\n      block: this.block(),\n      line: tok.loc.start.line,\n      column: tok.loc.start.column,\n      filename: this.filename,\n    };\n    return node;\n  },\n  /**\n   * 'extends' name\n   */\n\n  parseExtends: function() {\n    var tok = this.expect('extends');\n    var path = this.expect('path');\n    return {\n      type: 'Extends',\n      file: {\n        type: 'FileReference',\n        path: path.val.trim(),\n        line: path.loc.start.line,\n        column: path.loc.start.column,\n        filename: this.filename,\n      },\n      line: tok.loc.start.line,\n      column: tok.loc.start.column,\n      filename: this.filename,\n    };\n  },\n\n  /**\n   * 'block' name block\n   */\n\n  parseBlock: function() {\n    var tok = this.expect('block');\n\n    var node =\n      'indent' == this.peek().type\n        ? this.block()\n        : this.emptyBlock(tok.loc.start.line);\n    node.type = 'NamedBlock';\n    node.name = tok.val.trim();\n    node.mode = tok.mode;\n    node.line = tok.loc.start.line;\n    node.column = tok.loc.start.column;\n\n    return node;\n  },\n\n  parseMixinBlock: function() {\n    var tok = this.expect('mixin-block');\n    if (!this.inMixin) {\n      this.error(\n        'BLOCK_OUTISDE_MIXIN',\n        'Anonymous blocks are not allowed unless they are part of a mixin.',\n        tok\n      );\n    }\n    return {\n      type: 'MixinBlock',\n      line: tok.loc.start.line,\n      column: tok.loc.start.column,\n      filename: this.filename,\n    };\n  },\n\n  parseYield: function() {\n    var tok = this.expect('yield');\n    return {\n      type: 'YieldBlock',\n      line: tok.loc.start.line,\n      column: tok.loc.start.column,\n      filename: this.filename,\n    };\n  },\n\n  /**\n   * include block?\n   */\n\n  parseInclude: function() {\n    var tok = this.expect('include');\n    var node = {\n      type: 'Include',\n      file: {\n        type: 'FileReference',\n        filename: this.filename,\n      },\n      line: tok.loc.start.line,\n      column: tok.loc.start.column,\n      filename: this.filename,\n    };\n    var filters = [];\n    while (this.peek().type === 'filter') {\n      filters.push(this.parseIncludeFilter());\n    }\n    var path = this.expect('path');\n\n    node.file.path = path.val.trim();\n    node.file.line = path.loc.start.line;\n    node.file.column = path.loc.start.column;\n\n    if (\n      (/\\.jade$/.test(node.file.path) || /\\.pug$/.test(node.file.path)) &&\n      !filters.length\n    ) {\n      node.block =\n        'indent' == this.peek().type\n          ? this.block()\n          : this.emptyBlock(tok.loc.start.line);\n      if (/\\.jade$/.test(node.file.path)) {\n        console.warn(\n          this.filename +\n            ', line ' +\n            tok.loc.start.line +\n            ':\\nThe .jade extension is deprecated, use .pug for \"' +\n            node.file.path +\n            '\".'\n        );\n      }\n    } else {\n      node.type = 'RawInclude';\n      node.filters = filters;\n      if (this.peek().type === 'indent') {\n        this.error(\n          'RAW_INCLUDE_BLOCK',\n          'Raw inclusion cannot contain a block',\n          this.peek()\n        );\n      }\n    }\n    return node;\n  },\n\n  /**\n   * call ident block\n   */\n\n  parseCall: function() {\n    var tok = this.expect('call');\n    var name = tok.val;\n    var args = tok.args;\n    var mixin = {\n      type: 'Mixin',\n      name: name,\n      args: args,\n      block: this.emptyBlock(tok.loc.start.line),\n      call: true,\n      attrs: [],\n      attributeBlocks: [],\n      line: tok.loc.start.line,\n      column: tok.loc.start.column,\n      filename: this.filename,\n    };\n\n    this.tag(mixin);\n    if (mixin.code) {\n      mixin.block.nodes.push(mixin.code);\n      delete mixin.code;\n    }\n    if (mixin.block.nodes.length === 0) mixin.block = null;\n    return mixin;\n  },\n\n  /**\n   * mixin block\n   */\n\n  parseMixin: function() {\n    var tok = this.expect('mixin');\n    var name = tok.val;\n    var args = tok.args;\n\n    if ('indent' == this.peek().type) {\n      this.inMixin++;\n      var mixin = {\n        type: 'Mixin',\n        name: name,\n        args: args,\n        block: this.block(),\n        call: false,\n        line: tok.loc.start.line,\n        column: tok.loc.start.column,\n        filename: this.filename,\n      };\n      this.inMixin--;\n      return mixin;\n    } else {\n      this.error(\n        'MIXIN_WITHOUT_BODY',\n        'Mixin ' + name + ' declared without body',\n        tok\n      );\n    }\n  },\n\n  /**\n   * indent (text | newline)* outdent\n   */\n\n  parseTextBlock: function() {\n    var tok = this.accept('start-pipeless-text');\n    if (!tok) return;\n    var block = this.emptyBlock(tok.loc.start.line);\n    while (this.peek().type !== 'end-pipeless-text') {\n      var tok = this.advance();\n      switch (tok.type) {\n        case 'text':\n          block.nodes.push({\n            type: 'Text',\n            val: tok.val,\n            line: tok.loc.start.line,\n            column: tok.loc.start.column,\n            filename: this.filename,\n          });\n          break;\n        case 'newline':\n          block.nodes.push({\n            type: 'Text',\n            val: '\\n',\n            line: tok.loc.start.line,\n            column: tok.loc.start.column,\n            filename: this.filename,\n          });\n          break;\n        case 'start-pug-interpolation':\n          block.nodes.push(this.parseExpr());\n          this.expect('end-pug-interpolation');\n          break;\n        case 'interpolated-code':\n          block.nodes.push({\n            type: 'Code',\n            val: tok.val,\n            buffer: tok.buffer,\n            mustEscape: tok.mustEscape !== false,\n            isInline: true,\n            line: tok.loc.start.line,\n            column: tok.loc.start.column,\n            filename: this.filename,\n          });\n          break;\n        default:\n          var pluginResult = this.runPlugin('textBlockTokens', tok, block, tok);\n          if (pluginResult) break;\n          this.error(\n            'INVALID_TOKEN',\n            'Unexpected token type: ' + tok.type,\n            tok\n          );\n      }\n    }\n    this.advance();\n    return block;\n  },\n\n  /**\n   * indent expr* outdent\n   */\n\n  block: function() {\n    var tok = this.expect('indent');\n    var block = this.emptyBlock(tok.loc.start.line);\n    while ('outdent' != this.peek().type) {\n      if ('newline' == this.peek().type) {\n        this.advance();\n      } else if ('text-html' == this.peek().type) {\n        block.nodes = block.nodes.concat(this.parseTextHtml());\n      } else {\n        var expr = this.parseExpr();\n        if (expr.type === 'Block') {\n          block.nodes = block.nodes.concat(expr.nodes);\n        } else {\n          block.nodes.push(expr);\n        }\n      }\n    }\n    this.expect('outdent');\n    return block;\n  },\n\n  /**\n   * interpolation (attrs | class | id)* (text | code | ':')? newline* block?\n   */\n\n  parseInterpolation: function() {\n    var tok = this.advance();\n    var tag = {\n      type: 'InterpolatedTag',\n      expr: tok.val,\n      selfClosing: false,\n      block: this.emptyBlock(tok.loc.start.line),\n      attrs: [],\n      attributeBlocks: [],\n      isInline: false,\n      line: tok.loc.start.line,\n      column: tok.loc.start.column,\n      filename: this.filename,\n    };\n\n    return this.tag(tag, {selfClosingAllowed: true});\n  },\n\n  /**\n   * tag (attrs | class | id)* (text | code | ':')? newline* block?\n   */\n\n  parseTag: function() {\n    var tok = this.advance();\n    var tag = {\n      type: 'Tag',\n      name: tok.val,\n      selfClosing: false,\n      block: this.emptyBlock(tok.loc.start.line),\n      attrs: [],\n      attributeBlocks: [],\n      isInline: inlineTags.indexOf(tok.val) !== -1,\n      line: tok.loc.start.line,\n      column: tok.loc.start.column,\n      filename: this.filename,\n    };\n\n    return this.tag(tag, {selfClosingAllowed: true});\n  },\n\n  /**\n   * Parse tag.\n   */\n\n  tag: function(tag, options) {\n    var seenAttrs = false;\n    var attributeNames = [];\n    var selfClosingAllowed = options && options.selfClosingAllowed;\n    // (attrs | class | id)*\n    out: while (true) {\n      switch (this.peek().type) {\n        case 'id':\n        case 'class':\n          var tok = this.advance();\n          if (tok.type === 'id') {\n            if (attributeNames.indexOf('id') !== -1) {\n              this.error(\n                'DUPLICATE_ID',\n                'Duplicate attribute \"id\" is not allowed.',\n                tok\n              );\n            }\n            attributeNames.push('id');\n          }\n          tag.attrs.push({\n            name: tok.type,\n            val: \"'\" + tok.val + \"'\",\n            line: tok.loc.start.line,\n            column: tok.loc.start.column,\n            filename: this.filename,\n            mustEscape: false,\n          });\n          continue;\n        case 'start-attributes':\n          if (seenAttrs) {\n            console.warn(\n              this.filename +\n                ', line ' +\n                this.peek().loc.start.line +\n                ':\\nYou should not have pug tags with multiple attributes.'\n            );\n          }\n          seenAttrs = true;\n          tag.attrs = tag.attrs.concat(this.attrs(attributeNames));\n          continue;\n        case '&attributes':\n          var tok = this.advance();\n          tag.attributeBlocks.push({\n            type: 'AttributeBlock',\n            val: tok.val,\n            line: tok.loc.start.line,\n            column: tok.loc.start.column,\n            filename: this.filename,\n          });\n          break;\n        default:\n          var pluginResult = this.runPlugin(\n            'tagAttributeTokens',\n            this.peek(),\n            tag,\n            attributeNames\n          );\n          if (pluginResult) break;\n          break out;\n      }\n    }\n\n    // check immediate '.'\n    if ('dot' == this.peek().type) {\n      tag.textOnly = true;\n      this.advance();\n    }\n\n    // (text | code | ':')?\n    switch (this.peek().type) {\n      case 'text':\n      case 'interpolated-code':\n        var text = this.parseText();\n        if (text.type === 'Block') {\n          tag.block.nodes.push.apply(tag.block.nodes, text.nodes);\n        } else {\n          tag.block.nodes.push(text);\n        }\n        break;\n      case 'code':\n        tag.block.nodes.push(this.parseCode(true));\n        break;\n      case ':':\n        this.advance();\n        var expr = this.parseExpr();\n        tag.block =\n          expr.type === 'Block' ? expr : this.initBlock(tag.line, [expr]);\n        break;\n      case 'newline':\n      case 'indent':\n      case 'outdent':\n      case 'eos':\n      case 'start-pipeless-text':\n      case 'end-pug-interpolation':\n        break;\n      case 'slash':\n        if (selfClosingAllowed) {\n          this.advance();\n          tag.selfClosing = true;\n          break;\n        }\n      default:\n        var pluginResult = this.runPlugin(\n          'tagTokens',\n          this.peek(),\n          tag,\n          options\n        );\n        if (pluginResult) break;\n        this.error(\n          'INVALID_TOKEN',\n          'Unexpected token `' +\n            this.peek().type +\n            '` expected `text`, `interpolated-code`, `code`, `:`' +\n            (selfClosingAllowed ? ', `slash`' : '') +\n            ', `newline` or `eos`',\n          this.peek()\n        );\n    }\n\n    // newline*\n    while ('newline' == this.peek().type) this.advance();\n\n    // block?\n    if (tag.textOnly) {\n      tag.block = this.parseTextBlock() || this.emptyBlock(tag.line);\n    } else if ('indent' == this.peek().type) {\n      var block = this.block();\n      for (var i = 0, len = block.nodes.length; i < len; ++i) {\n        tag.block.nodes.push(block.nodes[i]);\n      }\n    }\n\n    return tag;\n  },\n\n  attrs: function(attributeNames) {\n    this.expect('start-attributes');\n\n    var attrs = [];\n    var tok = this.advance();\n    while (tok.type === 'attribute') {\n      if (tok.name !== 'class' && attributeNames) {\n        if (attributeNames.indexOf(tok.name) !== -1) {\n          this.error(\n            'DUPLICATE_ATTRIBUTE',\n            'Duplicate attribute \"' + tok.name + '\" is not allowed.',\n            tok\n          );\n        }\n        attributeNames.push(tok.name);\n      }\n      attrs.push({\n        name: tok.name,\n        val: tok.val,\n        line: tok.loc.start.line,\n        column: tok.loc.start.column,\n        filename: this.filename,\n        mustEscape: tok.mustEscape !== false,\n      });\n      tok = this.advance();\n    }\n    this.tokens.defer(tok);\n    this.expect('end-attributes');\n    return attrs;\n  },\n};\n","'use strict';\n\nmodule.exports = [\n  'a',\n  'abbr',\n  'acronym',\n  'b',\n  'br',\n  'code',\n  'em',\n  'font',\n  'i',\n  'img',\n  'ins',\n  'kbd',\n  'map',\n  'samp',\n  'small',\n  'span',\n  'strong',\n  'sub',\n  'sup',\n];\n","'use strict';\n\nexports.runFilter = require('./lib/run-filter');\nexports.handleFilters = require('./lib/handle-filters');\n","'use strict';\n\nvar fs = require('fs');\nvar path = require('path');\nvar walk = require('pug-walk');\nvar assign = require('object-assign');\n\nmodule.exports = load;\nfunction load(ast, options) {\n  options = getOptions(options);\n  // clone the ast\n  ast = JSON.parse(JSON.stringify(ast));\n  return walk(ast, function(node) {\n    if (node.str === undefined) {\n      if (\n        node.type === 'Include' ||\n        node.type === 'RawInclude' ||\n        node.type === 'Extends'\n      ) {\n        var file = node.file;\n        if (file.type !== 'FileReference') {\n          throw new Error('Expected file.type to be \"FileReference\"');\n        }\n        var path, str, raw;\n        try {\n          path = options.resolve(file.path, file.filename, options);\n          file.fullPath = path;\n          raw = options.read(path, options);\n          str = raw.toString('utf8');\n        } catch (ex) {\n          ex.message += '\\n    at ' + node.filename + ' line ' + node.line;\n          throw ex;\n        }\n        file.str = str;\n        file.raw = raw;\n        if (node.type === 'Extends' || node.type === 'Include') {\n          file.ast = load.string(\n            str,\n            assign({}, options, {\n              filename: path,\n            })\n          );\n        }\n      }\n    }\n  });\n}\n\nload.string = function loadString(src, options) {\n  options = assign(getOptions(options), {\n    src: src,\n  });\n  var tokens = options.lex(src, options);\n  var ast = options.parse(tokens, options);\n  return load(ast, options);\n};\nload.file = function loadFile(filename, options) {\n  options = assign(getOptions(options), {\n    filename: filename,\n  });\n  var str = options.read(filename).toString('utf8');\n  return load.string(str, options);\n};\n\nload.resolve = function resolve(filename, source, options) {\n  filename = filename.trim();\n  if (filename[0] !== '/' && !source)\n    throw new Error(\n      'the \"filename\" option is required to use includes and extends with \"relative\" paths'\n    );\n\n  if (filename[0] === '/' && !options.basedir)\n    throw new Error(\n      'the \"basedir\" option is required to use includes and extends with \"absolute\" paths'\n    );\n\n  filename = path.join(\n    filename[0] === '/' ? options.basedir : path.dirname(source.trim()),\n    filename\n  );\n\n  return filename;\n};\nload.read = function read(filename, options) {\n  return fs.readFileSync(filename);\n};\n\nload.validateOptions = function validateOptions(options) {\n  /* istanbul ignore if */\n  if (typeof options !== 'object') {\n    throw new TypeError('options must be an object');\n  }\n  /* istanbul ignore if */\n  if (typeof options.lex !== 'function') {\n    throw new TypeError('options.lex must be a function');\n  }\n  /* istanbul ignore if */\n  if (typeof options.parse !== 'function') {\n    throw new TypeError('options.parse must be a function');\n  }\n  /* istanbul ignore if */\n  if (options.resolve && typeof options.resolve !== 'function') {\n    throw new TypeError('options.resolve must be a function');\n  }\n  /* istanbul ignore if */\n  if (options.read && typeof options.read !== 'function') {\n    throw new TypeError('options.read must be a function');\n  }\n};\n\nfunction getOptions(options) {\n  load.validateOptions(options);\n  return assign(\n    {\n      resolve: load.resolve,\n      read: load.read,\n    },\n    options\n  );\n}\n","'use strict';\n\nvar assert = require('assert');\nvar walk = require('pug-walk');\n\nfunction error() {\n  throw require('pug-error').apply(null, arguments);\n}\n\nmodule.exports = link;\nfunction link(ast) {\n  assert(\n    ast.type === 'Block',\n    'The top level element should always be a block'\n  );\n  var extendsNode = null;\n  if (ast.nodes.length) {\n    var hasExtends = ast.nodes[0].type === 'Extends';\n    checkExtendPosition(ast, hasExtends);\n    if (hasExtends) {\n      extendsNode = ast.nodes.shift();\n    }\n  }\n  ast = applyIncludes(ast);\n  ast.declaredBlocks = findDeclaredBlocks(ast);\n  if (extendsNode) {\n    var mixins = [];\n    var expectedBlocks = [];\n    ast.nodes.forEach(function addNode(node) {\n      if (node.type === 'NamedBlock') {\n        expectedBlocks.push(node);\n      } else if (node.type === 'Block') {\n        node.nodes.forEach(addNode);\n      } else if (node.type === 'Mixin' && node.call === false) {\n        mixins.push(node);\n      } else {\n        error(\n          'UNEXPECTED_NODES_IN_EXTENDING_ROOT',\n          'Only named blocks and mixins can appear at the top level of an extending template',\n          node\n        );\n      }\n    });\n    var parent = link(extendsNode.file.ast);\n    extend(parent.declaredBlocks, ast);\n    var foundBlockNames = [];\n    walk(parent, function(node) {\n      if (node.type === 'NamedBlock') {\n        foundBlockNames.push(node.name);\n      }\n    });\n    expectedBlocks.forEach(function(expectedBlock) {\n      if (foundBlockNames.indexOf(expectedBlock.name) === -1) {\n        error(\n          'UNEXPECTED_BLOCK',\n          'Unexpected block ' + expectedBlock.name,\n          expectedBlock\n        );\n      }\n    });\n    Object.keys(ast.declaredBlocks).forEach(function(name) {\n      parent.declaredBlocks[name] = ast.declaredBlocks[name];\n    });\n    parent.nodes = mixins.concat(parent.nodes);\n    parent.hasExtends = true;\n    return parent;\n  }\n  return ast;\n}\n\nfunction findDeclaredBlocks(ast) /*: {[name: string]: Array<BlockNode>}*/ {\n  var definitions = {};\n  walk(ast, function before(node) {\n    if (node.type === 'NamedBlock' && node.mode === 'replace') {\n      definitions[node.name] = definitions[node.name] || [];\n      definitions[node.name].push(node);\n    }\n  });\n  return definitions;\n}\n\nfunction flattenParentBlocks(parentBlocks, accumulator) {\n  accumulator = accumulator || [];\n  parentBlocks.forEach(function(parentBlock) {\n    if (parentBlock.parents) {\n      flattenParentBlocks(parentBlock.parents, accumulator);\n    }\n    accumulator.push(parentBlock);\n  });\n  return accumulator;\n}\n\nfunction extend(parentBlocks, ast) {\n  var stack = {};\n  walk(\n    ast,\n    function before(node) {\n      if (node.type === 'NamedBlock') {\n        if (stack[node.name] === node.name) {\n          return (node.ignore = true);\n        }\n        stack[node.name] = node.name;\n        var parentBlockList = parentBlocks[node.name]\n          ? flattenParentBlocks(parentBlocks[node.name])\n          : [];\n        if (parentBlockList.length) {\n          node.parents = parentBlockList;\n          parentBlockList.forEach(function(parentBlock) {\n            switch (node.mode) {\n              case 'append':\n                parentBlock.nodes = parentBlock.nodes.concat(node.nodes);\n                break;\n              case 'prepend':\n                parentBlock.nodes = node.nodes.concat(parentBlock.nodes);\n                break;\n              case 'replace':\n                parentBlock.nodes = node.nodes;\n                break;\n            }\n          });\n        }\n      }\n    },\n    function after(node) {\n      if (node.type === 'NamedBlock' && !node.ignore) {\n        delete stack[node.name];\n      }\n    }\n  );\n}\n\nfunction applyIncludes(ast, child) {\n  return walk(\n    ast,\n    function before(node, replace) {\n      if (node.type === 'RawInclude') {\n        replace({type: 'Text', val: node.file.str.replace(/\\r/g, '')});\n      }\n    },\n    function after(node, replace) {\n      if (node.type === 'Include') {\n        var childAST = link(node.file.ast);\n        if (childAST.hasExtends) {\n          childAST = removeBlocks(childAST);\n        }\n        replace(applyYield(childAST, node.block));\n      }\n    }\n  );\n}\nfunction removeBlocks(ast) {\n  return walk(ast, function(node, replace) {\n    if (node.type === 'NamedBlock') {\n      replace({\n        type: 'Block',\n        nodes: node.nodes,\n      });\n    }\n  });\n}\n\nfunction applyYield(ast, block) {\n  if (!block || !block.nodes.length) return ast;\n  var replaced = false;\n  ast = walk(ast, null, function(node, replace) {\n    if (node.type === 'YieldBlock') {\n      replaced = true;\n      node.type = 'Block';\n      node.nodes = [block];\n    }\n  });\n  function defaultYieldLocation(node) {\n    var res = node;\n    for (var i = 0; i < node.nodes.length; i++) {\n      if (node.nodes[i].textOnly) continue;\n      if (node.nodes[i].type === 'Block') {\n        res = defaultYieldLocation(node.nodes[i]);\n      } else if (node.nodes[i].block && node.nodes[i].block.nodes.length) {\n        res = defaultYieldLocation(node.nodes[i].block);\n      }\n    }\n    return res;\n  }\n  if (!replaced) {\n    // todo: probably should deprecate this with a warning\n    defaultYieldLocation(ast).nodes.push(block);\n  }\n  return ast;\n}\n\nfunction checkExtendPosition(ast, hasExtends) {\n  var legitExtendsReached = false;\n  walk(ast, function(node) {\n    if (node.type === 'Extends') {\n      if (hasExtends && !legitExtendsReached) {\n        legitExtendsReached = true;\n      } else {\n        error(\n          'EXTENDS_NOT_FIRST',\n          'Declaration of template inheritance (\"extends\") should be the first thing in the file. There can only be one extends statement per file.',\n          node\n        );\n      }\n    }\n  });\n}\n","'use strict';\n\nmodule.exports = {\n  'html': '<!DOCTYPE html>',\n  'xml': '<?xml version=\"1.0\" encoding=\"utf-8\" ?>',\n  'transitional': '<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">',\n  'strict': '<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">',\n  'frameset': '<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Frameset//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-frameset.dtd\">',\n  '1.1': '<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.1//EN\" \"http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd\">',\n  'basic': '<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML Basic 1.1//EN\" \"http://www.w3.org/TR/xhtml-basic/xhtml-basic11.dtd\">',\n  'mobile': '<!DOCTYPE html PUBLIC \"-//WAPFORUM//DTD XHTML Mobile 1.2//EN\" \"http://www.openmobilealliance.org/tech/DTD/xhtml-mobile12.dtd\">',\n  'plist': '<!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">'\n};\n","module.exports = {\n  \"has_own_property\": [],\n  \"merge\": [\n    \"style\"\n  ],\n  \"classes_array\": [\n    \"classes\",\n    \"escape\"\n  ],\n  \"classes_object\": [\n    \"has_own_property\"\n  ],\n  \"classes\": [\n    \"classes_array\",\n    \"classes_object\"\n  ],\n  \"style\": [\n    \"has_own_property\"\n  ],\n  \"attr\": [\n    \"escape\"\n  ],\n  \"attrs\": [\n    \"attr\",\n    \"classes\",\n    \"has_own_property\",\n    \"style\"\n  ],\n  \"match_html\": [],\n  \"escape\": [\n    \"match_html\"\n  ],\n  \"rethrow\": []\n}\n","module.exports = {\n  \"dependencies\": true,\n  \"internals\": true,\n  \"has_own_property\": true,\n  \"classes_array\": true,\n  \"classes_object\": true,\n  \"match_html\": true\n}\n","module.exports = {\n  \"has_own_property\": \"var pug_has_own_property=Object.prototype.hasOwnProperty;\",\n  \"merge\": \"function pug_merge(e,r){if(1===arguments.length){for(var t=e[0],g=1;g<e.length;g++)t=pug_merge(t,e[g]);return t}for(var l in r)if(\\\"class\\\"===l){var n=e[l]||[];e[l]=(Array.isArray(n)?n:[n]).concat(r[l]||[])}else if(\\\"style\\\"===l){var n=pug_style(e[l]);n=n&&\\\";\\\"!==n[n.length-1]?n+\\\";\\\":n;var a=pug_style(r[l]);a=a&&\\\";\\\"!==a[a.length-1]?a+\\\";\\\":a,e[l]=n+a}else e[l]=r[l];return e}\",\n  \"classes_array\": \"function pug_classes_array(r,a){for(var s,e=\\\"\\\",u=\\\"\\\",c=Array.isArray(a),g=0;g<r.length;g++)(s=pug_classes(r[g]))&&(c&&a[g]&&(s=pug_escape(s)),e=e+u+s,u=\\\" \\\");return e}\",\n  \"classes_object\": \"function pug_classes_object(r){var a=\\\"\\\",n=\\\"\\\";for(var o in r)o&&r[o]&&pug_has_own_property.call(r,o)&&(a=a+n+o,n=\\\" \\\");return a}\",\n  \"classes\": \"function pug_classes(s,r){return Array.isArray(s)?pug_classes_array(s,r):s&&\\\"object\\\"==typeof s?pug_classes_object(s):s||\\\"\\\"}\",\n  \"style\": \"function pug_style(r){if(!r)return\\\"\\\";if(\\\"object\\\"==typeof r){var t=\\\"\\\";for(var e in r)pug_has_own_property.call(r,e)&&(t=t+e+\\\":\\\"+r[e]+\\\";\\\");return t}return r+\\\"\\\"}\",\n  \"attr\": \"function pug_attr(t,e,n,r){if(!1===e||null==e||!e&&(\\\"class\\\"===t||\\\"style\\\"===t))return\\\"\\\";if(!0===e)return\\\" \\\"+(r?t:t+'=\\\"'+t+'\\\"');var f=typeof e;return\\\"object\\\"!==f&&\\\"function\\\"!==f||\\\"function\\\"!=typeof e.toJSON||(e=e.toJSON()),\\\"string\\\"==typeof e||(e=JSON.stringify(e),n||-1===e.indexOf('\\\"'))?(n&&(e=pug_escape(e)),\\\" \\\"+t+'=\\\"'+e+'\\\"'):\\\" \\\"+t+\\\"='\\\"+e.replace(/'/g,\\\"&#39;\\\")+\\\"'\\\"}\",\n  \"attrs\": \"function pug_attrs(t,r){var a=\\\"\\\";for(var s in t)if(pug_has_own_property.call(t,s)){var u=t[s];if(\\\"class\\\"===s){u=pug_classes(u),a=pug_attr(s,u,!1,r)+a;continue}\\\"style\\\"===s&&(u=pug_style(u)),a+=pug_attr(s,u,!1,r)}return a}\",\n  \"match_html\": \"var pug_match_html=/[\\\"&<>]/;\",\n  \"escape\": \"function pug_escape(e){var a=\\\"\\\"+e,t=pug_match_html.exec(a);if(!t)return e;var r,c,n,s=\\\"\\\";for(r=t.index,c=0;r<a.length;r++){switch(a.charCodeAt(r)){case 34:n=\\\"&quot;\\\";break;case 38:n=\\\"&amp;\\\";break;case 60:n=\\\"&lt;\\\";break;case 62:n=\\\"&gt;\\\";break;default:continue}c!==r&&(s+=a.substring(c,r)),c=r+1,s+=n}return c!==r?s+a.substring(c,r):s}\",\n  \"rethrow\": \"function pug_rethrow(e,n,r,t){if(!(e instanceof Error))throw e;if(!(\\\"undefined\\\"==typeof window&&n||t))throw e.message+=\\\" on line \\\"+r,e;var o,a,i,s;try{t=t||require(\\\"fs\\\").readFileSync(n,{encoding:\\\"utf8\\\"}),o=3,a=t.split(\\\"\\\\n\\\"),i=Math.max(r-o,0),s=Math.min(a.length,r+o)}catch(t){return e.message+=\\\" - could not read from \\\"+n+\\\" (\\\"+t.message+\\\")\\\",void pug_rethrow(e,null,r)}o=a.slice(i,s).map(function(e,n){var t=n+i+1;return(t==r?\\\"  > \\\":\\\"    \\\")+t+\\\"| \\\"+e}).join(\\\"\\\\n\\\"),e.path=n;try{e.message=(n||\\\"Pug\\\")+\\\":\\\"+r+\\\"\\\\n\\\"+o+\\\"\\\\n\\\\n\\\"+e.message}catch(e){}throw e}\"\n}\n","'use strict';\n\nvar fs = require('fs');\nvar dependencies = require('./lib/dependencies.js');\nvar internals = require('./lib/internals.js');\nvar sources = require('./lib/sources.js');\n\nmodule.exports = build;\n\nfunction build(functions) {\n  var fns = [];\n  functions = functions.filter(function(fn) {\n    return !internals[fn];\n  });\n  for (var i = 0; i < functions.length; i++) {\n    if (fns.indexOf(functions[i]) === -1) {\n      fns.push(functions[i]);\n      functions.push.apply(functions, dependencies[functions[i]]);\n    }\n  }\n  return fns\n    .sort()\n    .map(function(name) {\n      return sources[name];\n    })\n    .join('\\n');\n}\n","'use strict';\n\nvar pug_has_own_property = Object.prototype.hasOwnProperty;\n\n/**\n * Merge two attribute objects giving precedence\n * to values in object `b`. Classes are special-cased\n * allowing for arrays and merging/joining appropriately\n * resulting in a string.\n *\n * @param {Object} a\n * @param {Object} b\n * @return {Object} a\n * @api private\n */\n\nexports.merge = pug_merge;\nfunction pug_merge(a, b) {\n  if (arguments.length === 1) {\n    var attrs = a[0];\n    for (var i = 1; i < a.length; i++) {\n      attrs = pug_merge(attrs, a[i]);\n    }\n    return attrs;\n  }\n\n  for (var key in b) {\n    if (key === 'class') {\n      var valA = a[key] || [];\n      a[key] = (Array.isArray(valA) ? valA : [valA]).concat(b[key] || []);\n    } else if (key === 'style') {\n      var valA = pug_style(a[key]);\n      valA = valA && valA[valA.length - 1] !== ';' ? valA + ';' : valA;\n      var valB = pug_style(b[key]);\n      valB = valB && valB[valB.length - 1] !== ';' ? valB + ';' : valB;\n      a[key] = valA + valB;\n    } else {\n      a[key] = b[key];\n    }\n  }\n\n  return a;\n}\n\n/**\n * Process array, object, or string as a string of classes delimited by a space.\n *\n * If `val` is an array, all members of it and its subarrays are counted as\n * classes. If `escaping` is an array, then whether or not the item in `val` is\n * escaped depends on the corresponding item in `escaping`. If `escaping` is\n * not an array, no escaping is done.\n *\n * If `val` is an object, all the keys whose value is truthy are counted as\n * classes. No escaping is done.\n *\n * If `val` is a string, it is counted as a class. No escaping is done.\n *\n * @param {(Array.<string>|Object.<string, boolean>|string)} val\n * @param {?Array.<string>} escaping\n * @return {String}\n */\nexports.classes = pug_classes;\nfunction pug_classes_array(val, escaping) {\n  var classString = '',\n    className,\n    padding = '',\n    escapeEnabled = Array.isArray(escaping);\n  for (var i = 0; i < val.length; i++) {\n    className = pug_classes(val[i]);\n    if (!className) continue;\n    escapeEnabled && escaping[i] && (className = pug_escape(className));\n    classString = classString + padding + className;\n    padding = ' ';\n  }\n  return classString;\n}\nfunction pug_classes_object(val) {\n  var classString = '',\n    padding = '';\n  for (var key in val) {\n    if (key && val[key] && pug_has_own_property.call(val, key)) {\n      classString = classString + padding + key;\n      padding = ' ';\n    }\n  }\n  return classString;\n}\nfunction pug_classes(val, escaping) {\n  if (Array.isArray(val)) {\n    return pug_classes_array(val, escaping);\n  } else if (val && typeof val === 'object') {\n    return pug_classes_object(val);\n  } else {\n    return val || '';\n  }\n}\n\n/**\n * Convert object or string to a string of CSS styles delimited by a semicolon.\n *\n * @param {(Object.<string, string>|string)} val\n * @return {String}\n */\n\nexports.style = pug_style;\nfunction pug_style(val) {\n  if (!val) return '';\n  if (typeof val === 'object') {\n    var out = '';\n    for (var style in val) {\n      /* istanbul ignore else */\n      if (pug_has_own_property.call(val, style)) {\n        out = out + style + ':' + val[style] + ';';\n      }\n    }\n    return out;\n  } else {\n    return val + '';\n  }\n}\n\n/**\n * Render the given attribute.\n *\n * @param {String} key\n * @param {String} val\n * @param {Boolean} escaped\n * @param {Boolean} terse\n * @return {String}\n */\nexports.attr = pug_attr;\nfunction pug_attr(key, val, escaped, terse) {\n  if (\n    val === false ||\n    val == null ||\n    (!val && (key === 'class' || key === 'style'))\n  ) {\n    return '';\n  }\n  if (val === true) {\n    return ' ' + (terse ? key : key + '=\"' + key + '\"');\n  }\n  var type = typeof val;\n  if (\n    (type === 'object' || type === 'function') &&\n    typeof val.toJSON === 'function'\n  ) {\n    val = val.toJSON();\n  }\n  if (typeof val !== 'string') {\n    val = JSON.stringify(val);\n    if (!escaped && val.indexOf('\"') !== -1) {\n      return ' ' + key + \"='\" + val.replace(/'/g, '&#39;') + \"'\";\n    }\n  }\n  if (escaped) val = pug_escape(val);\n  return ' ' + key + '=\"' + val + '\"';\n}\n\n/**\n * Render the given attributes object.\n *\n * @param {Object} obj\n * @param {Object} terse whether to use HTML5 terse boolean attributes\n * @return {String}\n */\nexports.attrs = pug_attrs;\nfunction pug_attrs(obj, terse) {\n  var attrs = '';\n\n  for (var key in obj) {\n    if (pug_has_own_property.call(obj, key)) {\n      var val = obj[key];\n\n      if ('class' === key) {\n        val = pug_classes(val);\n        attrs = pug_attr(key, val, false, terse) + attrs;\n        continue;\n      }\n      if ('style' === key) {\n        val = pug_style(val);\n      }\n      attrs += pug_attr(key, val, false, terse);\n    }\n  }\n\n  return attrs;\n}\n\n/**\n * Escape the given string of `html`.\n *\n * @param {String} html\n * @return {String}\n * @api private\n */\n\nvar pug_match_html = /[\"&<>]/;\nexports.escape = pug_escape;\nfunction pug_escape(_html) {\n  var html = '' + _html;\n  var regexResult = pug_match_html.exec(html);\n  if (!regexResult) return _html;\n\n  var result = '';\n  var i, lastIndex, escape;\n  for (i = regexResult.index, lastIndex = 0; i < html.length; i++) {\n    switch (html.charCodeAt(i)) {\n      case 34:\n        escape = '&quot;';\n        break;\n      case 38:\n        escape = '&amp;';\n        break;\n      case 60:\n        escape = '&lt;';\n        break;\n      case 62:\n        escape = '&gt;';\n        break;\n      default:\n        continue;\n    }\n    if (lastIndex !== i) result += html.substring(lastIndex, i);\n    lastIndex = i + 1;\n    result += escape;\n  }\n  if (lastIndex !== i) return result + html.substring(lastIndex, i);\n  else return result;\n}\n\n/**\n * Re-throw the given `err` in context to the\n * the pug in `filename` at the given `lineno`.\n *\n * @param {Error} err\n * @param {String} filename\n * @param {String} lineno\n * @param {String} str original source\n * @api private\n */\n\nexports.rethrow = pug_rethrow;\nfunction pug_rethrow(err, filename, lineno, str) {\n  if (!(err instanceof Error)) throw err;\n  if ((typeof window != 'undefined' || !filename) && !str) {\n    err.message += ' on line ' + lineno;\n    throw err;\n  }\n  var context, lines, start, end;\n  try {\n    str = str || require('fs').readFileSync(filename, {encoding: 'utf8'});\n    context = 3;\n    lines = str.split('\\n');\n    start = Math.max(lineno - context, 0);\n    end = Math.min(lines.length, lineno + context);\n  } catch (ex) {\n    err.message +=\n      ' - could not read from ' + filename + ' (' + ex.message + ')';\n    pug_rethrow(err, null, lineno);\n    return;\n  }\n\n  // Error context\n  context = lines\n    .slice(start, end)\n    .map(function(line, i) {\n      var curr = i + start + 1;\n      return (curr == lineno ? '  > ' : '    ') + curr + '| ' + line;\n    })\n    .join('\\n');\n\n  // Alter exception message\n  err.path = filename;\n  try {\n    err.message =\n      (filename || 'Pug') +\n      ':' +\n      lineno +\n      '\\n' +\n      context +\n      '\\n\\n' +\n      err.message;\n  } catch (e) {}\n  throw err;\n}\n","'use strict';\n\nvar assert = require('assert');\nvar constantinople = require('constantinople');\nvar runtime = require('pug-runtime');\nvar stringify = require('js-stringify');\n\nfunction isConstant(src) {\n  return constantinople(src, {pug: runtime, pug_interp: undefined});\n}\nfunction toConstant(src) {\n  return constantinople.toConstant(src, {pug: runtime, pug_interp: undefined});\n}\n\nmodule.exports = compileAttrs;\n/**\n * options:\n *  - terse\n *  - runtime\n *  - format ('html' || 'object')\n */\nfunction compileAttrs(attrs, options) {\n  assert(Array.isArray(attrs), 'Attrs should be an array');\n  assert(\n    attrs.every(function(attr) {\n      return (\n        attr &&\n        typeof attr === 'object' &&\n        typeof attr.name === 'string' &&\n        (typeof attr.val === 'string' || typeof attr.val === 'boolean') &&\n        typeof attr.mustEscape === 'boolean'\n      );\n    }),\n    'All attributes should be supplied as an object of the form {name, val, mustEscape}'\n  );\n  assert(options && typeof options === 'object', 'Options should be an object');\n  assert(\n    typeof options.terse === 'boolean',\n    'Options.terse should be a boolean'\n  );\n  assert(\n    typeof options.runtime === 'function',\n    'Options.runtime should be a function that takes a runtime function name and returns the source code that will evaluate to that function at runtime'\n  );\n  assert(\n    options.format === 'html' || options.format === 'object',\n    'Options.format should be \"html\" or \"object\"'\n  );\n\n  var buf = [];\n  var classes = [];\n  var classEscaping = [];\n\n  function addAttribute(key, val, mustEscape, buf) {\n    if (isConstant(val)) {\n      if (options.format === 'html') {\n        var str = stringify(\n          runtime.attr(key, toConstant(val), mustEscape, options.terse)\n        );\n        var last = buf[buf.length - 1];\n        if (last && last[last.length - 1] === str[0]) {\n          buf[buf.length - 1] = last.substr(0, last.length - 1) + str.substr(1);\n        } else {\n          buf.push(str);\n        }\n      } else {\n        val = toConstant(val);\n        if (mustEscape) {\n          val = runtime.escape(val);\n        }\n        buf.push(stringify(key) + ': ' + stringify(val));\n      }\n    } else {\n      if (options.format === 'html') {\n        buf.push(\n          options.runtime('attr') +\n            '(\"' +\n            key +\n            '\", ' +\n            val +\n            ', ' +\n            stringify(mustEscape) +\n            ', ' +\n            stringify(options.terse) +\n            ')'\n        );\n      } else {\n        if (mustEscape) {\n          val = options.runtime('escape') + '(' + val + ')';\n        }\n        buf.push(stringify(key) + ': ' + val);\n      }\n    }\n  }\n\n  attrs.forEach(function(attr) {\n    var key = attr.name;\n    var val = attr.val;\n    var mustEscape = attr.mustEscape;\n\n    if (key === 'class') {\n      classes.push(val);\n      classEscaping.push(mustEscape);\n    } else {\n      if (key === 'style') {\n        if (isConstant(val)) {\n          val = stringify(runtime.style(toConstant(val)));\n        } else {\n          val = options.runtime('style') + '(' + val + ')';\n        }\n      }\n      addAttribute(key, val, mustEscape, buf);\n    }\n  });\n  var classesBuf = [];\n  if (classes.length) {\n    if (classes.every(isConstant)) {\n      addAttribute(\n        'class',\n        stringify(runtime.classes(classes.map(toConstant), classEscaping)),\n        false,\n        classesBuf\n      );\n    } else {\n      classes = classes.map(function(cls, i) {\n        if (isConstant(cls)) {\n          cls = stringify(\n            classEscaping[i] ? runtime.escape(toConstant(cls)) : toConstant(cls)\n          );\n          classEscaping[i] = false;\n        }\n        return cls;\n      });\n      addAttribute(\n        'class',\n        options.runtime('classes') +\n          '([' +\n          classes.join(',') +\n          '], ' +\n          stringify(classEscaping) +\n          ')',\n        false,\n        classesBuf\n      );\n    }\n  }\n  buf = classesBuf.concat(buf);\n  if (options.format === 'html') return buf.length ? buf.join('+') : '\"\"';\n  else return '{' + buf.join(',') + '}';\n}\n","'use strict';\n\nmodule.exports = stringify;\nfunction stringify(obj) {\n  if (obj instanceof Date) {\n    return 'new Date(' + stringify(obj.toISOString()) + ')';\n  }\n  if (obj === undefined) {\n    return 'undefined';\n  }\n  return JSON.stringify(obj)\n             .replace(/\\u2028/g, '\\\\u2028')\n             .replace(/\\u2029/g, '\\\\u2029')\n             .replace(/</g, '\\\\u003C')\n             .replace(/>/g, '\\\\u003E')\n             .replace(/\\//g, '\\\\u002F');\n}\n","/**\n * This file automatically generated from `pre-publish.js`.\n * Do not manually edit.\n */\n\nmodule.exports = {\n  \"area\": true,\n  \"base\": true,\n  \"br\": true,\n  \"col\": true,\n  \"embed\": true,\n  \"hr\": true,\n  \"img\": true,\n  \"input\": true,\n  \"link\": true,\n  \"meta\": true,\n  \"param\": true,\n  \"source\": true,\n  \"track\": true,\n  \"wbr\": true\n};\n","import {parse} from '@babel/parser';\nimport {recursive as walk} from 'babel-walk';\nimport * as t from '@babel/types';\nimport detect from './globals';\n\nconst parseOptions = {\n  allowReturnOutsideFunction: true,\n  allowImportExportEverywhere: true,\n};\n\n/**\n * Mimic `with` as far as possible but at compile time\n *\n * @param obj The object part of a with expression\n * @param src The body of the with expression\n * @param exclude A list of variable names to explicitly exclude\n */\nexport default function addWith(\n  obj: string,\n  src: string,\n  exclude: string[] = [],\n) {\n  // tslint:disable-next-line: no-parameter-reassignment\n  obj = obj + '';\n  // tslint:disable-next-line: no-parameter-reassignment\n  src = src + '';\n\n  let ast;\n  try {\n    ast = parse(src, parseOptions);\n  } catch (e) {\n    throw Object.assign(\n      new Error('Error parsing body of the with expression'),\n      {\n        component: 'src',\n        babylonError: e,\n      },\n    );\n  }\n  let objAst;\n  try {\n    objAst = parse(obj, parseOptions);\n  } catch (e) {\n    throw Object.assign(\n      new Error('Error parsing object part of the with expression'),\n      {\n        component: 'obj',\n        babylonError: e,\n      },\n    );\n  }\n  const excludeSet = new Set([\n    'undefined',\n    'this',\n    ...exclude,\n    ...detect(objAst).map((g) => g.name),\n  ]);\n\n  const vars = new Set(\n    detect(ast)\n      .map((global) => global.name)\n      .filter((v) => !excludeSet.has(v)),\n  );\n\n  if (vars.size === 0) return src;\n\n  let declareLocal = '';\n  let local = 'locals_for_with';\n  let result = 'result_of_with';\n  if (t.isValidIdentifier(obj)) {\n    local = obj;\n  } else {\n    while (vars.has(local) || excludeSet.has(local)) {\n      local += '_';\n    }\n    declareLocal = `var ${local} = (${obj});`;\n  }\n  while (vars.has(result) || excludeSet.has(result)) {\n    result += '_';\n  }\n\n  const args = [\n    'this',\n    ...Array.from(vars).map(\n      (v) =>\n        `${JSON.stringify(v)} in ${local} ?\n        ${local}.${v} :\n        typeof ${v} !== 'undefined' ? ${v} : undefined`,\n    ),\n  ];\n\n  const unwrapped = unwrapReturns(ast, src, result);\n\n  return `;\n    ${declareLocal}\n    ${unwrapped.before}\n    (function (${Array.from(vars).join(', ')}) {\n      ${unwrapped.body}\n    }.call(${args.join(', ')}));\n    ${unwrapped.after};`;\n}\n\ninterface UnwrapReturnsState {\n  hasReturn: boolean;\n  source(node: t.Node): string;\n  replace(node: t.Node, str: string): void;\n}\nconst unwrapReturnsVisitors = walk<UnwrapReturnsState>({\n  Function(_node, _state, _c) {\n    // returns in these functions are not applicable\n  },\n\n  ReturnStatement(node, state) {\n    state.hasReturn = true;\n    let value = '';\n    if (node.argument) {\n      value = `value: (${state.source(node.argument)})`;\n    }\n    state.replace(node, `return {${value}};`);\n  },\n});\n\n/**\n * Take a self calling function, and unwrap it such that return inside the function\n * results in return outside the function\n *\n * @param src    Some JavaScript code representing a self-calling function\n * @param result A temporary variable to store the result in\n */\nfunction unwrapReturns(ast: t.Node, src: string, result: string) {\n  const charArray = src.split('');\n\n  const state: UnwrapReturnsState = {\n    hasReturn: false,\n    source(node) {\n      return src.slice(node.start!, node.end!);\n    },\n    replace(node, str) {\n      charArray.fill('', node.start!, node.end!);\n      charArray[node.start!] = str;\n    },\n  };\n\n  unwrapReturnsVisitors(ast, state);\n\n  return {\n    before: state.hasReturn ? `var ${result} = ` : '',\n    body: charArray.join(''),\n    after: state.hasReturn ? `;if (${result}) return ${result}.value` : '',\n  };\n}\n\nmodule.exports = addWith;\nmodule.exports.default = addWith;\n","'use strict';\n\nvar doctypes = require('doctypes');\nvar makeError = require('pug-error');\nvar buildRuntime = require('pug-runtime/build');\nvar runtime = require('pug-runtime');\nvar compileAttrs = require('pug-attrs');\nvar selfClosing = require('void-elements');\nvar constantinople = require('constantinople');\nvar stringify = require('js-stringify');\nvar addWith = require('with');\n\n// This is used to prevent pretty printing inside certain tags\nvar WHITE_SPACE_SENSITIVE_TAGS = {\n  pre: true,\n  textarea: true,\n};\n\nvar INTERNAL_VARIABLES = [\n  'pug',\n  'pug_mixins',\n  'pug_interp',\n  'pug_debug_filename',\n  'pug_debug_line',\n  'pug_debug_sources',\n  'pug_html',\n];\n\nmodule.exports = generateCode;\nmodule.exports.CodeGenerator = Compiler;\nfunction generateCode(ast, options) {\n  return new Compiler(ast, options).compile();\n}\n\nfunction isConstant(src) {\n  return constantinople(src, {pug: runtime, pug_interp: undefined});\n}\nfunction toConstant(src) {\n  return constantinople.toConstant(src, {pug: runtime, pug_interp: undefined});\n}\n\n/**\n * Initialize `Compiler` with the given `node`.\n *\n * @param {Node} node\n * @param {Object} options\n * @api public\n */\n\nfunction Compiler(node, options) {\n  this.options = options = options || {};\n  this.node = node;\n  this.bufferedConcatenationCount = 0;\n  this.hasCompiledDoctype = false;\n  this.hasCompiledTag = false;\n  this.pp = options.pretty || false;\n  if (this.pp && typeof this.pp !== 'string') {\n    this.pp = '  ';\n  }\n  if (this.pp && !/^\\s+$/.test(this.pp)) {\n    throw new Error(\n      'The pretty parameter should either be a boolean or whitespace only string'\n    );\n  }\n  this.debug = false !== options.compileDebug;\n  this.indents = 0;\n  this.parentIndents = 0;\n  this.terse = false;\n  this.mixins = {};\n  this.dynamicMixins = false;\n  this.eachCount = 0;\n  if (options.doctype) this.setDoctype(options.doctype);\n  this.runtimeFunctionsUsed = [];\n  this.inlineRuntimeFunctions = options.inlineRuntimeFunctions || false;\n  if (this.debug && this.inlineRuntimeFunctions) {\n    this.runtimeFunctionsUsed.push('rethrow');\n  }\n}\n\n/**\n * Compiler prototype.\n */\n\nCompiler.prototype = {\n  runtime: function(name) {\n    if (this.inlineRuntimeFunctions) {\n      this.runtimeFunctionsUsed.push(name);\n      return 'pug_' + name;\n    } else {\n      return 'pug.' + name;\n    }\n  },\n\n  error: function(message, code, node) {\n    var err = makeError(code, message, {\n      line: node.line,\n      column: node.column,\n      filename: node.filename,\n    });\n    throw err;\n  },\n\n  /**\n   * Compile parse tree to JavaScript.\n   *\n   * @api public\n   */\n\n  compile: function() {\n    this.buf = [];\n    if (this.pp) this.buf.push('var pug_indent = [];');\n    this.lastBufferedIdx = -1;\n    this.visit(this.node);\n    if (!this.dynamicMixins) {\n      // if there are no dynamic mixins we can remove any un-used mixins\n      var mixinNames = Object.keys(this.mixins);\n      for (var i = 0; i < mixinNames.length; i++) {\n        var mixin = this.mixins[mixinNames[i]];\n        if (!mixin.used) {\n          for (var x = 0; x < mixin.instances.length; x++) {\n            for (\n              var y = mixin.instances[x].start;\n              y < mixin.instances[x].end;\n              y++\n            ) {\n              this.buf[y] = '';\n            }\n          }\n        }\n      }\n    }\n    var js = this.buf.join('\\n');\n    var globals = this.options.globals\n      ? this.options.globals.concat(INTERNAL_VARIABLES)\n      : INTERNAL_VARIABLES;\n    if (this.options.self) {\n      js = 'var self = locals || {};' + js;\n    } else {\n      js = addWith(\n        'locals || {}',\n        js,\n        globals.concat(\n          this.runtimeFunctionsUsed.map(function(name) {\n            return 'pug_' + name;\n          })\n        )\n      );\n    }\n    if (this.debug) {\n      if (this.options.includeSources) {\n        js =\n          'var pug_debug_sources = ' +\n          stringify(this.options.includeSources) +\n          ';\\n' +\n          js;\n      }\n      js =\n        'var pug_debug_filename, pug_debug_line;' +\n        'try {' +\n        js +\n        '} catch (err) {' +\n        (this.inlineRuntimeFunctions ? 'pug_rethrow' : 'pug.rethrow') +\n        '(err, pug_debug_filename, pug_debug_line' +\n        (this.options.includeSources\n          ? ', pug_debug_sources[pug_debug_filename]'\n          : '') +\n        ');' +\n        '}';\n    }\n    return (\n      buildRuntime(this.runtimeFunctionsUsed) +\n      'function ' +\n      (this.options.templateName || 'template') +\n      '(locals) {var pug_html = \"\", pug_mixins = {}, pug_interp;' +\n      js +\n      ';return pug_html;}'\n    );\n  },\n\n  /**\n   * Sets the default doctype `name`. Sets terse mode to `true` when\n   * html 5 is used, causing self-closing tags to end with \">\" vs \"/>\",\n   * and boolean attributes are not mirrored.\n   *\n   * @param {string} name\n   * @api public\n   */\n\n  setDoctype: function(name) {\n    this.doctype = doctypes[name.toLowerCase()] || '<!DOCTYPE ' + name + '>';\n    this.terse = this.doctype.toLowerCase() == '<!doctype html>';\n    this.xml = 0 == this.doctype.indexOf('<?xml');\n  },\n\n  /**\n   * Buffer the given `str` exactly as is or with interpolation\n   *\n   * @param {String} str\n   * @param {Boolean} interpolate\n   * @api public\n   */\n\n  buffer: function(str) {\n    var self = this;\n\n    str = stringify(str);\n    str = str.substr(1, str.length - 2);\n\n    if (\n      this.lastBufferedIdx == this.buf.length &&\n      this.bufferedConcatenationCount < 100\n    ) {\n      if (this.lastBufferedType === 'code') {\n        this.lastBuffered += ' + \"';\n        this.bufferedConcatenationCount++;\n      }\n      this.lastBufferedType = 'text';\n      this.lastBuffered += str;\n      this.buf[this.lastBufferedIdx - 1] =\n        'pug_html = pug_html + ' +\n        this.bufferStartChar +\n        this.lastBuffered +\n        '\";';\n    } else {\n      this.bufferedConcatenationCount = 0;\n      this.buf.push('pug_html = pug_html + \"' + str + '\";');\n      this.lastBufferedType = 'text';\n      this.bufferStartChar = '\"';\n      this.lastBuffered = str;\n      this.lastBufferedIdx = this.buf.length;\n    }\n  },\n\n  /**\n   * Buffer the given `src` so it is evaluated at run time\n   *\n   * @param {String} src\n   * @api public\n   */\n\n  bufferExpression: function(src) {\n    if (isConstant(src)) {\n      return this.buffer(toConstant(src) + '');\n    }\n    if (\n      this.lastBufferedIdx == this.buf.length &&\n      this.bufferedConcatenationCount < 100\n    ) {\n      this.bufferedConcatenationCount++;\n      if (this.lastBufferedType === 'text') this.lastBuffered += '\"';\n      this.lastBufferedType = 'code';\n      this.lastBuffered += ' + (' + src + ')';\n      this.buf[this.lastBufferedIdx - 1] =\n        'pug_html = pug_html + (' +\n        this.bufferStartChar +\n        this.lastBuffered +\n        ');';\n    } else {\n      this.bufferedConcatenationCount = 0;\n      this.buf.push('pug_html = pug_html + (' + src + ');');\n      this.lastBufferedType = 'code';\n      this.bufferStartChar = '';\n      this.lastBuffered = '(' + src + ')';\n      this.lastBufferedIdx = this.buf.length;\n    }\n  },\n\n  /**\n   * Buffer an indent based on the current `indent`\n   * property and an additional `offset`.\n   *\n   * @param {Number} offset\n   * @param {Boolean} newline\n   * @api public\n   */\n\n  prettyIndent: function(offset, newline) {\n    offset = offset || 0;\n    newline = newline ? '\\n' : '';\n    this.buffer(newline + Array(this.indents + offset).join(this.pp));\n    if (this.parentIndents)\n      this.buf.push('pug_html = pug_html + pug_indent.join(\"\");');\n  },\n\n  /**\n   * Visit `node`.\n   *\n   * @param {Node} node\n   * @api public\n   */\n\n  visit: function(node, parent) {\n    var debug = this.debug;\n\n    if (!node) {\n      var msg;\n      if (parent) {\n        msg =\n          'A child of ' +\n          parent.type +\n          ' (' +\n          (parent.filename || 'Pug') +\n          ':' +\n          parent.line +\n          ')';\n      } else {\n        msg = 'A top-level node';\n      }\n      msg += ' is ' + node + ', expected a Pug AST Node.';\n      throw new TypeError(msg);\n    }\n\n    if (debug && node.debug !== false && node.type !== 'Block') {\n      if (node.line) {\n        var js = ';pug_debug_line = ' + node.line;\n        if (node.filename)\n          js += ';pug_debug_filename = ' + stringify(node.filename);\n        this.buf.push(js + ';');\n      }\n    }\n\n    if (!this['visit' + node.type]) {\n      var msg;\n      if (parent) {\n        msg = 'A child of ' + parent.type;\n      } else {\n        msg = 'A top-level node';\n      }\n      msg +=\n        ' (' +\n        (node.filename || 'Pug') +\n        ':' +\n        node.line +\n        ')' +\n        ' is of type ' +\n        node.type +\n        ',' +\n        ' which is not supported by pug-code-gen.';\n      switch (node.type) {\n        case 'Filter':\n          msg += ' Please use pug-filters to preprocess this AST.';\n          break;\n        case 'Extends':\n        case 'Include':\n        case 'NamedBlock':\n        case 'FileReference': // unlikely but for the sake of completeness\n          msg += ' Please use pug-linker to preprocess this AST.';\n          break;\n      }\n      throw new TypeError(msg);\n    }\n\n    this.visitNode(node);\n  },\n\n  /**\n   * Visit `node`.\n   *\n   * @param {Node} node\n   * @api public\n   */\n\n  visitNode: function(node) {\n    return this['visit' + node.type](node);\n  },\n\n  /**\n   * Visit case `node`.\n   *\n   * @param {Literal} node\n   * @api public\n   */\n\n  visitCase: function(node) {\n    this.buf.push('switch (' + node.expr + '){');\n    this.visit(node.block, node);\n    this.buf.push('}');\n  },\n\n  /**\n   * Visit when `node`.\n   *\n   * @param {Literal} node\n   * @api public\n   */\n\n  visitWhen: function(node) {\n    if ('default' == node.expr) {\n      this.buf.push('default:');\n    } else {\n      this.buf.push('case ' + node.expr + ':');\n    }\n    if (node.block) {\n      this.visit(node.block, node);\n      this.buf.push('  break;');\n    }\n  },\n\n  /**\n   * Visit literal `node`.\n   *\n   * @param {Literal} node\n   * @api public\n   */\n\n  visitLiteral: function(node) {\n    this.buffer(node.str);\n  },\n\n  visitNamedBlock: function(block) {\n    return this.visitBlock(block);\n  },\n  /**\n   * Visit all nodes in `block`.\n   *\n   * @param {Block} block\n   * @api public\n   */\n\n  visitBlock: function(block) {\n    var escapePrettyMode = this.escapePrettyMode;\n    var pp = this.pp;\n\n    // Pretty print multi-line text\n    if (\n      pp &&\n      block.nodes.length > 1 &&\n      !escapePrettyMode &&\n      block.nodes[0].type === 'Text' &&\n      block.nodes[1].type === 'Text'\n    ) {\n      this.prettyIndent(1, true);\n    }\n    for (var i = 0; i < block.nodes.length; ++i) {\n      // Pretty print text\n      if (\n        pp &&\n        i > 0 &&\n        !escapePrettyMode &&\n        block.nodes[i].type === 'Text' &&\n        block.nodes[i - 1].type === 'Text' &&\n        /\\n$/.test(block.nodes[i - 1].val)\n      ) {\n        this.prettyIndent(1, false);\n      }\n      this.visit(block.nodes[i], block);\n    }\n  },\n\n  /**\n   * Visit a mixin's `block` keyword.\n   *\n   * @param {MixinBlock} block\n   * @api public\n   */\n\n  visitMixinBlock: function(block) {\n    if (this.pp)\n      this.buf.push(\n        'pug_indent.push(' +\n          stringify(Array(this.indents + 1).join(this.pp)) +\n          ');'\n      );\n    this.buf.push('block && block();');\n    if (this.pp) this.buf.push('pug_indent.pop();');\n  },\n\n  /**\n   * Visit `doctype`. Sets terse mode to `true` when html 5\n   * is used, causing self-closing tags to end with \">\" vs \"/>\",\n   * and boolean attributes are not mirrored.\n   *\n   * @param {Doctype} doctype\n   * @api public\n   */\n\n  visitDoctype: function(doctype) {\n    if (doctype && (doctype.val || !this.doctype)) {\n      this.setDoctype(doctype.val || 'html');\n    }\n\n    if (this.doctype) this.buffer(this.doctype);\n    this.hasCompiledDoctype = true;\n  },\n\n  /**\n   * Visit `mixin`, generating a function that\n   * may be called within the template.\n   *\n   * @param {Mixin} mixin\n   * @api public\n   */\n\n  visitMixin: function(mixin) {\n    var name = 'pug_mixins[';\n    var args = mixin.args || '';\n    var block = mixin.block;\n    var attrs = mixin.attrs;\n    var attrsBlocks = this.attributeBlocks(mixin.attributeBlocks);\n    var pp = this.pp;\n    var dynamic = mixin.name[0] === '#';\n    var key = mixin.name;\n    if (dynamic) this.dynamicMixins = true;\n    name +=\n      (dynamic\n        ? mixin.name.substr(2, mixin.name.length - 3)\n        : '\"' + mixin.name + '\"') + ']';\n\n    this.mixins[key] = this.mixins[key] || {used: false, instances: []};\n    if (mixin.call) {\n      this.mixins[key].used = true;\n      if (pp)\n        this.buf.push(\n          'pug_indent.push(' +\n            stringify(Array(this.indents + 1).join(pp)) +\n            ');'\n        );\n      if (block || attrs.length || attrsBlocks.length) {\n        this.buf.push(name + '.call({');\n\n        if (block) {\n          this.buf.push('block: function(){');\n\n          // Render block with no indents, dynamically added when rendered\n          this.parentIndents++;\n          var _indents = this.indents;\n          this.indents = 0;\n          this.visit(mixin.block, mixin);\n          this.indents = _indents;\n          this.parentIndents--;\n\n          if (attrs.length || attrsBlocks.length) {\n            this.buf.push('},');\n          } else {\n            this.buf.push('}');\n          }\n        }\n\n        if (attrsBlocks.length) {\n          if (attrs.length) {\n            var val = this.attrs(attrs);\n            attrsBlocks.unshift(val);\n          }\n          if (attrsBlocks.length > 1) {\n            this.buf.push(\n              'attributes: ' +\n                this.runtime('merge') +\n                '([' +\n                attrsBlocks.join(',') +\n                '])'\n            );\n          } else {\n            this.buf.push('attributes: ' + attrsBlocks[0]);\n          }\n        } else if (attrs.length) {\n          var val = this.attrs(attrs);\n          this.buf.push('attributes: ' + val);\n        }\n\n        if (args) {\n          this.buf.push('}, ' + args + ');');\n        } else {\n          this.buf.push('});');\n        }\n      } else {\n        this.buf.push(name + '(' + args + ');');\n      }\n      if (pp) this.buf.push('pug_indent.pop();');\n    } else {\n      var mixin_start = this.buf.length;\n      args = args ? args.split(',') : [];\n      var rest;\n      if (args.length && /^\\.\\.\\./.test(args[args.length - 1].trim())) {\n        rest = args\n          .pop()\n          .trim()\n          .replace(/^\\.\\.\\./, '');\n      }\n      // we need use pug_interp here for v8: https://code.google.com/p/v8/issues/detail?id=4165\n      // once fixed, use this: this.buf.push(name + ' = function(' + args.join(',') + '){');\n      this.buf.push(name + ' = pug_interp = function(' + args.join(',') + '){');\n      this.buf.push(\n        'var block = (this && this.block), attributes = (this && this.attributes) || {};'\n      );\n      if (rest) {\n        this.buf.push('var ' + rest + ' = [];');\n        this.buf.push(\n          'for (pug_interp = ' +\n            args.length +\n            '; pug_interp < arguments.length; pug_interp++) {'\n        );\n        this.buf.push('  ' + rest + '.push(arguments[pug_interp]);');\n        this.buf.push('}');\n      }\n      this.parentIndents++;\n      this.visit(block, mixin);\n      this.parentIndents--;\n      this.buf.push('};');\n      var mixin_end = this.buf.length;\n      this.mixins[key].instances.push({start: mixin_start, end: mixin_end});\n    }\n  },\n\n  /**\n   * Visit `tag` buffering tag markup, generating\n   * attributes, visiting the `tag`'s code and block.\n   *\n   * @param {Tag} tag\n   * @param {boolean} interpolated\n   * @api public\n   */\n\n  visitTag: function(tag, interpolated) {\n    this.indents++;\n    var name = tag.name,\n      pp = this.pp,\n      self = this;\n\n    function bufferName() {\n      if (interpolated) self.bufferExpression(tag.expr);\n      else self.buffer(name);\n    }\n\n    if (WHITE_SPACE_SENSITIVE_TAGS[tag.name] === true)\n      this.escapePrettyMode = true;\n\n    if (!this.hasCompiledTag) {\n      if (!this.hasCompiledDoctype && 'html' == name) {\n        this.visitDoctype();\n      }\n      this.hasCompiledTag = true;\n    }\n\n    // pretty print\n    if (pp && !tag.isInline) this.prettyIndent(0, true);\n    if (tag.selfClosing || (!this.xml && selfClosing[tag.name])) {\n      this.buffer('<');\n      bufferName();\n      this.visitAttributes(\n        tag.attrs,\n        this.attributeBlocks(tag.attributeBlocks)\n      );\n      if (this.terse && !tag.selfClosing) {\n        this.buffer('>');\n      } else {\n        this.buffer('/>');\n      }\n      // if it is non-empty throw an error\n      if (\n        tag.code ||\n        (tag.block &&\n          !(tag.block.type === 'Block' && tag.block.nodes.length === 0) &&\n          tag.block.nodes.some(function(tag) {\n            return tag.type !== 'Text' || !/^\\s*$/.test(tag.val);\n          }))\n      ) {\n        this.error(\n          name +\n            ' is a self closing element: <' +\n            name +\n            '/> but contains nested content.',\n          'SELF_CLOSING_CONTENT',\n          tag\n        );\n      }\n    } else {\n      // Optimize attributes buffering\n      this.buffer('<');\n      bufferName();\n      this.visitAttributes(\n        tag.attrs,\n        this.attributeBlocks(tag.attributeBlocks)\n      );\n      this.buffer('>');\n      if (tag.code) this.visitCode(tag.code);\n      this.visit(tag.block, tag);\n\n      // pretty print\n      if (\n        pp &&\n        !tag.isInline &&\n        WHITE_SPACE_SENSITIVE_TAGS[tag.name] !== true &&\n        !tagCanInline(tag)\n      )\n        this.prettyIndent(0, true);\n\n      this.buffer('</');\n      bufferName();\n      this.buffer('>');\n    }\n\n    if (WHITE_SPACE_SENSITIVE_TAGS[tag.name] === true)\n      this.escapePrettyMode = false;\n\n    this.indents--;\n  },\n\n  /**\n   * Visit InterpolatedTag.\n   *\n   * @param {InterpolatedTag} tag\n   * @api public\n   */\n\n  visitInterpolatedTag: function(tag) {\n    return this.visitTag(tag, true);\n  },\n\n  /**\n   * Visit `text` node.\n   *\n   * @param {Text} text\n   * @api public\n   */\n\n  visitText: function(text) {\n    this.buffer(text.val);\n  },\n\n  /**\n   * Visit a `comment`, only buffering when the buffer flag is set.\n   *\n   * @param {Comment} comment\n   * @api public\n   */\n\n  visitComment: function(comment) {\n    if (!comment.buffer) return;\n    if (this.pp) this.prettyIndent(1, true);\n    this.buffer('<!--' + comment.val + '-->');\n  },\n\n  /**\n   * Visit a `YieldBlock`.\n   *\n   * This is necessary since we allow compiling a file with `yield`.\n   *\n   * @param {YieldBlock} block\n   * @api public\n   */\n\n  visitYieldBlock: function(block) {},\n\n  /**\n   * Visit a `BlockComment`.\n   *\n   * @param {Comment} comment\n   * @api public\n   */\n\n  visitBlockComment: function(comment) {\n    if (!comment.buffer) return;\n    if (this.pp) this.prettyIndent(1, true);\n    this.buffer('<!--' + (comment.val || ''));\n    this.visit(comment.block, comment);\n    if (this.pp) this.prettyIndent(1, true);\n    this.buffer('-->');\n  },\n\n  /**\n   * Visit `code`, respecting buffer / escape flags.\n   * If the code is followed by a block, wrap it in\n   * a self-calling function.\n   *\n   * @param {Code} code\n   * @api public\n   */\n\n  visitCode: function(code) {\n    // Wrap code blocks with {}.\n    // we only wrap unbuffered code blocks ATM\n    // since they are usually flow control\n\n    // Buffer code\n    if (code.buffer) {\n      var val = code.val.trim();\n      val = 'null == (pug_interp = ' + val + ') ? \"\" : pug_interp';\n      if (code.mustEscape !== false)\n        val = this.runtime('escape') + '(' + val + ')';\n      this.bufferExpression(val);\n    } else {\n      this.buf.push(code.val);\n    }\n\n    // Block support\n    if (code.block) {\n      if (!code.buffer) this.buf.push('{');\n      this.visit(code.block, code);\n      if (!code.buffer) this.buf.push('}');\n    }\n  },\n\n  /**\n   * Visit `Conditional`.\n   *\n   * @param {Conditional} cond\n   * @api public\n   */\n\n  visitConditional: function(cond) {\n    var test = cond.test;\n    this.buf.push('if (' + test + ') {');\n    this.visit(cond.consequent, cond);\n    this.buf.push('}');\n    if (cond.alternate) {\n      if (cond.alternate.type === 'Conditional') {\n        this.buf.push('else');\n        this.visitConditional(cond.alternate);\n      } else {\n        this.buf.push('else {');\n        this.visit(cond.alternate, cond);\n        this.buf.push('}');\n      }\n    }\n  },\n\n  /**\n   * Visit `While`.\n   *\n   * @param {While} loop\n   * @api public\n   */\n\n  visitWhile: function(loop) {\n    var test = loop.test;\n    this.buf.push('while (' + test + ') {');\n    this.visit(loop.block, loop);\n    this.buf.push('}');\n  },\n\n  /**\n   * Visit `each` block.\n   *\n   * @param {Each} each\n   * @api public\n   */\n\n  visitEach: function(each) {\n    var indexVarName = each.key || 'pug_index' + this.eachCount;\n    this.eachCount++;\n\n    this.buf.push(\n      '' +\n        '// iterate ' +\n        each.obj +\n        '\\n' +\n        ';(function(){\\n' +\n        '  var $$obj = ' +\n        each.obj +\n        ';\\n' +\n        \"  if ('number' == typeof $$obj.length) {\"\n    );\n\n    if (each.alternate) {\n      this.buf.push('    if ($$obj.length) {');\n    }\n\n    this.buf.push(\n      '' +\n        '      for (var ' +\n        indexVarName +\n        ' = 0, $$l = $$obj.length; ' +\n        indexVarName +\n        ' < $$l; ' +\n        indexVarName +\n        '++) {\\n' +\n        '        var ' +\n        each.val +\n        ' = $$obj[' +\n        indexVarName +\n        '];'\n    );\n\n    this.visit(each.block, each);\n\n    this.buf.push('      }');\n\n    if (each.alternate) {\n      this.buf.push('    } else {');\n      this.visit(each.alternate, each);\n      this.buf.push('    }');\n    }\n\n    this.buf.push(\n      '' +\n        '  } else {\\n' +\n        '    var $$l = 0;\\n' +\n        '    for (var ' +\n        indexVarName +\n        ' in $$obj) {\\n' +\n        '      $$l++;\\n' +\n        '      var ' +\n        each.val +\n        ' = $$obj[' +\n        indexVarName +\n        '];'\n    );\n\n    this.visit(each.block, each);\n\n    this.buf.push('    }');\n    if (each.alternate) {\n      this.buf.push('    if ($$l === 0) {');\n      this.visit(each.alternate, each);\n      this.buf.push('    }');\n    }\n    this.buf.push('  }\\n}).call(this);\\n');\n  },\n\n  visitEachOf: function(each) {\n    this.buf.push(\n      '' +\n        '// iterate ' +\n        each.obj +\n        '\\n' +\n        'for (const ' +\n        each.val +\n        ' of ' +\n        each.obj +\n        ') {\\n'\n    );\n\n    this.visit(each.block, each);\n\n    this.buf.push('}\\n');\n  },\n\n  /**\n   * Visit `attrs`.\n   *\n   * @param {Array} attrs\n   * @api public\n   */\n\n  visitAttributes: function(attrs, attributeBlocks) {\n    if (attributeBlocks.length) {\n      if (attrs.length) {\n        var val = this.attrs(attrs);\n        attributeBlocks.unshift(val);\n      }\n      if (attributeBlocks.length > 1) {\n        this.bufferExpression(\n          this.runtime('attrs') +\n            '(' +\n            this.runtime('merge') +\n            '([' +\n            attributeBlocks.join(',') +\n            ']), ' +\n            stringify(this.terse) +\n            ')'\n        );\n      } else {\n        this.bufferExpression(\n          this.runtime('attrs') +\n            '(' +\n            attributeBlocks[0] +\n            ', ' +\n            stringify(this.terse) +\n            ')'\n        );\n      }\n    } else if (attrs.length) {\n      this.attrs(attrs, true);\n    }\n  },\n\n  /**\n   * Compile attributes.\n   */\n\n  attrs: function(attrs, buffer) {\n    var res = compileAttrs(attrs, {\n      terse: this.terse,\n      format: buffer ? 'html' : 'object',\n      runtime: this.runtime.bind(this),\n    });\n    if (buffer) {\n      this.bufferExpression(res);\n    }\n    return res;\n  },\n\n  /**\n   * Compile attribute blocks.\n   */\n\n  attributeBlocks: function(attributeBlocks) {\n    return (\n      attributeBlocks &&\n      attributeBlocks.slice().map(function(attrBlock) {\n        return attrBlock.val;\n      })\n    );\n  },\n};\n\nfunction tagCanInline(tag) {\n  function isInline(node) {\n    // Recurse if the node is a block\n    if (node.type === 'Block') return node.nodes.every(isInline);\n    // When there is a YieldBlock here, it is an indication that the file is\n    // expected to be included but is not. If this is the case, the block\n    // must be empty.\n    if (node.type === 'YieldBlock') return true;\n    return (node.type === 'Text' && !/\\n/.test(node.val)) || node.isInline;\n  }\n\n  return tag.block.nodes.every(isInline);\n}\n","var runtime = require('./');\n\nmodule.exports = wrap;\nfunction wrap(template, templateName) {\n  templateName = templateName || 'template';\n  return Function(\n    'pug',\n    template + '\\n' + 'return ' + templateName + ';'\n  )(runtime);\n}\n","import './assets/styles/style.scss';\r\nconsole.log('Hello main.js!')\r\n\r\nimport test from './test'\r\n\r\ndocument.body.innerHTML = test()","import {render} from \"pug\"\r\nimport fs from 'fs'\r\n\r\nfunction test() {\r\n    const template = fs.readFileSync(__dirname + './test.pug', 'utf8')\r\n\r\n\r\n    const data = {\r\n        values: [\r\n            {id: 1, description: \"dsd\"},\r\n            {id: 2, description: \"dsd\"}\r\n        ]\r\n    };\r\n    const output = render(template, data);\r\n\r\n    return output\r\n}\r\n\r\nexport default test"],"names":["$94160d0703482f24$export$69a3209f1a06c04d","$94160d0703482f24$export$82462a21aead86ed","$94160d0703482f24$export$ef7acd7185315e22","$94160d0703482f24$export$9292141694099c3c","$94160d0703482f24$export$262f4973d8196ae1","$94160d0703482f24$export$b3890eb0ae9dca99","$94160d0703482f24$export$f479e71c47d92681","$51861dfc7ca9d588$export$a143d493d941bafc","$eeb0961446aae8e3$export$d622b2ad8d90c771","$eeb0961446aae8e3$export$6100ba28696e12de","$7d7a23f7babfddb7$var$_typeof","obj1","Symbol","iterator","obj","constructor","prototype","$7d7a23f7babfddb7$var$isDeepEqual","$7d7a23f7babfddb7$var$isDeepStrictEqual","$7d7a23f7babfddb7$var$_require$codes","codes","$7d7a23f7babfddb7$var$ERR_AMBIGUOUS_ARGUMENT","ERR_AMBIGUOUS_ARGUMENT","$7d7a23f7babfddb7$var$ERR_INVALID_ARG_TYPE","ERR_INVALID_ARG_TYPE","$7d7a23f7babfddb7$var$ERR_INVALID_ARG_VALUE","ERR_INVALID_ARG_VALUE","$7d7a23f7babfddb7$var$ERR_INVALID_RETURN_VALUE","ERR_INVALID_RETURN_VALUE","$7d7a23f7babfddb7$var$ERR_MISSING_ARGS","ERR_MISSING_ARGS","$7d7a23f7babfddb7$var$inspect","inspect","types","$7d7a23f7babfddb7$var$isPromise","$7d7a23f7babfddb7$require$_require$types","isPromise","$7d7a23f7babfddb7$var$isRegExp","isRegExp","$7d7a23f7babfddb7$var$objectAssign","Object","assign","parcelRequire","$7d7a23f7babfddb7$var$objectIs","is","Map","$7d7a23f7babfddb7$var$lazyLoadComparison","comparison","isDeepEqual","isDeepStrictEqual","$7d7a23f7babfddb7$var$warned","$7d7a23f7babfddb7$var$assert","module","exports","$7d7a23f7babfddb7$var$ok","$7d7a23f7babfddb7$var$NO_EXCEPTION_SENTINEL","$7d7a23f7babfddb7$var$innerFail","message","Error","$8pS6q","$7d7a23f7babfddb7$var$innerOk","fn","argLen","value","generatedMessage","err","actual","expected","operator","stackStartFn","_len","arguments","length","args","Array","_key","apply","concat","fail","$7d7a23f7babfddb7$var$fail","internalMessage","argsLen","undefined","warn","$hPtJY","emitWarning","console","bind","errArgs","AssertionError","ok","equal","notEqual","deepEqual","notDeepEqual","deepStrictEqual","notDeepStrictEqual","$7d7a23f7babfddb7$var$notDeepStrictEqual","strictEqual","notStrictEqual","$7d7a23f7babfddb7$var$Comparison","Comparison1","keys","_this","this","instance","Constructor","TypeError","$7d7a23f7babfddb7$var$_classCallCheck","forEach","key","test","$7d7a23f7babfddb7$var$compareExceptionKey","a","b","name","$7d7a23f7babfddb7$var$expectedException","msg","push","isPrototypeOf","call","$7d7a23f7babfddb7$var$getActual","e","$7d7a23f7babfddb7$var$checkIsPromise","then","catch","$7d7a23f7babfddb7$var$waitForActual","promiseFn","Promise","resolve","resultPromise","$7d7a23f7babfddb7$var$expectsError","error","details","fnType","$7d7a23f7babfddb7$var$expectsNoError","$7d7a23f7babfddb7$var$strict","_len6","_key6","throws","_len2","_key2","rejects","_len3","_key3","result","doesNotThrow","_len4","_key4","doesNotReject","_len5","_key5","ifError","newErr","origStack","stack","tmp2","split","shift","tmp1","i","pos","indexOf","slice","join","strict","$cfae44f0dfdf62c0$var$cachedSetTimeout","$cfae44f0dfdf62c0$var$cachedClearTimeout","$cfae44f0dfdf62c0$var$process","$cfae44f0dfdf62c0$var$defaultSetTimout","$cfae44f0dfdf62c0$var$defaultClearTimeout","$cfae44f0dfdf62c0$var$runTimeout","fun","setTimeout","clearTimeout","e1","$cfae44f0dfdf62c0$var$currentQueue","$cfae44f0dfdf62c0$var$queue","$cfae44f0dfdf62c0$var$draining","$cfae44f0dfdf62c0$var$queueIndex","$cfae44f0dfdf62c0$var$cleanUpNextTick","$cfae44f0dfdf62c0$var$drainQueue","timeout","len","run","marker","$cfae44f0dfdf62c0$var$runClearTimeout","$cfae44f0dfdf62c0$var$Item","array","$cfae44f0dfdf62c0$var$noop","nextTick","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","$92f737b1c63f6b54$export$e45cb6485273080e","$92f737b1c63f6b54$var$_typeof","$92f737b1c63f6b54$var$_possibleConstructorReturn","self","ReferenceError","$92f737b1c63f6b54$var$_assertThisInitialized","$92f737b1c63f6b54$var$_getPrototypeOf","o1","setPrototypeOf","getPrototypeOf","o","__proto__","$92f737b1c63f6b54$var$_setPrototypeOf","o2","p1","p","$92f737b1c63f6b54$var$assert","$92f737b1c63f6b54$var$util","$92f737b1c63f6b54$var$codes","$92f737b1c63f6b54$var$createErrorType","code","Base","NodeError1","_Base","NodeError","arg1","arg2","arg3","$92f737b1c63f6b54$var$_classCallCheck","getMessage","subClass","superClass","create","writable","configurable","$92f737b1c63f6b54$var$_inherits","$92f737b1c63f6b54$var$oneOf","thing","isArray","map","String","determiner","search","substr","replace","str","this_len","substring","$92f737b1c63f6b54$var$endsWith","type","start","$92f737b1c63f6b54$var$includes","reason","inspected","RangeError","input","$093a98c17cb6b6b8$var$getOwnPropertyDescriptors","getOwnPropertyDescriptors","descriptors","getOwnPropertyDescriptor","$093a98c17cb6b6b8$var$formatRegExp","format","f","$093a98c17cb6b6b8$var$isString","objects","$093a98c17cb6b6b8$var$inspect","x","Number","JSON","stringify","_","x1","$093a98c17cb6b6b8$var$isNull","$093a98c17cb6b6b8$var$isObject","deprecate","noDeprecation","warned","throwDeprecation","traceDeprecation","trace","$093a98c17cb6b6b8$var$debugs","$093a98c17cb6b6b8$var$debugEnvRegex","opts","ctx","seen","stylize","$093a98c17cb6b6b8$var$stylizeNoColor","depth","colors","$093a98c17cb6b6b8$var$isBoolean","showHidden","_extend","$093a98c17cb6b6b8$var$isUndefined","customInspect","$093a98c17cb6b6b8$var$stylizeWithColor","$093a98c17cb6b6b8$var$formatValue","styleType","style","styles","recurseTimes","$093a98c17cb6b6b8$var$isFunction","ret","primitive","simple","$093a98c17cb6b6b8$var$isNumber","$093a98c17cb6b6b8$var$formatPrimitive","visibleKeys","hash","val","idx","$093a98c17cb6b6b8$var$arrayToHash","getOwnPropertyNames","$093a98c17cb6b6b8$var$isError","$093a98c17cb6b6b8$var$formatError","$093a98c17cb6b6b8$var$isRegExp","RegExp","toString","$093a98c17cb6b6b8$var$isDate","Date","output","base","braces","$093a98c17cb6b6b8$var$isArray","toUTCString","l","$093a98c17cb6b6b8$var$hasOwnProperty","$093a98c17cb6b6b8$var$formatProperty","match","$093a98c17cb6b6b8$var$formatArray","pop","numLinesEst","reduce","prev","cur","$093a98c17cb6b6b8$var$reduceToSingleString","desc","get","set","line","ar","arg","re","$093a98c17cb6b6b8$var$objectToString","d","$093a98c17cb6b6b8$var$pad","n","debuglog","toUpperCase","pid","bold","italic","underline","inverse","white","grey","black","blue","cyan","green","magenta","red","yellow","special","number","boolean","null","string","date","regexp","isBoolean","isNull","isNullOrUndefined","isNumber","isString","isSymbol","isUndefined","isObject","isDate","isError","isNativeError","isFunction","isPrimitive","isBuffer","$093a98c17cb6b6b8$var$months","$093a98c17cb6b6b8$var$timestamp","time","getHours","getMinutes","getSeconds","getDate","getMonth","prop","hasOwnProperty","log","inherits","origin","add","$093a98c17cb6b6b8$var$kCustomPromisifiedSymbol","$093a98c17cb6b6b8$var$callbackifyOnRejected","cb","newReason","promisify","original","defineProperty","enumerable","promiseResolve","promiseReject","promise","reject","defineProperties","custom","callbackify","callbackified","maybeCb","rej","$59a77e8886024a57$var$uncurryThis","$59a77e8886024a57$var$BigIntSupported","BigInt","$59a77e8886024a57$var$SymbolSupported","$59a77e8886024a57$var$ObjectToString","$59a77e8886024a57$var$numberValue","valueOf","$59a77e8886024a57$var$stringValue","$59a77e8886024a57$var$booleanValue","Boolean","$59a77e8886024a57$var$bigIntValue","$59a77e8886024a57$var$symbolValue","$59a77e8886024a57$var$checkBoxedPrimitive","prototypeValueOf","$59a77e8886024a57$var$isMapToString","$59a77e8886024a57$var$isSetToString","$59a77e8886024a57$var$isWeakMapToString","$59a77e8886024a57$var$isWeakSetToString","$59a77e8886024a57$var$isArrayBufferToString","$59a77e8886024a57$var$isArrayBuffer","ArrayBuffer","working","$59a77e8886024a57$var$isDataViewToString","$59a77e8886024a57$var$isDataView","DataView","isArgumentsObject","$f4HGZ","isGeneratorFunction","$5WnCa","isTypedArray","$hN833","isArrayBufferView","isView","isUint8Array","$gJrpv","isUint8ClampedArray","isUint16Array","isUint32Array","isInt8Array","isInt16Array","isInt32Array","isFloat32Array","isFloat64Array","isBigInt64Array","isBigUint64Array","isMap","Set","isSet","WeakMap","isWeakMap","WeakSet","isWeakSet","isArrayBuffer","isDataView","$59a77e8886024a57$var$SharedArrayBufferCopy","SharedArrayBuffer","$59a77e8886024a57$var$isSharedArrayBufferToString","$59a77e8886024a57$var$isSharedArrayBuffer","$59a77e8886024a57$var$isNumberObject","$59a77e8886024a57$var$isStringObject","$59a77e8886024a57$var$isBooleanObject","$59a77e8886024a57$var$isBigIntObject","$59a77e8886024a57$var$isSymbolObject","isSharedArrayBuffer","isAsyncFunction","isMapIterator","isSetIterator","isGeneratorObject","isWebAssemblyCompiledModule","isNumberObject","isStringObject","isBooleanObject","isBigIntObject","isSymbolObject","isBoxedPrimitive","isAnyArrayBuffer","Uint8Array","method","$af991f1d6c80f097$var$hasToStringTag","$af991f1d6c80f097$var$$toString","$hXu6F","$af991f1d6c80f097$var$isStandardArguments","toStringTag","$af991f1d6c80f097$var$isLegacyArguments","callee","$af991f1d6c80f097$var$supportsStandardArguments","isLegacyArguments","$7YWkK","getOwnPropertySymbols","sym","symObj","syms","propertyIsEnumerable","descriptor","$d12f4cdcd6b10506$var$$indexOf","$cOB0F","$1zENl","allowMissing","intrinsic","$1258b452ecf218a1$var$undefined","$1258b452ecf218a1$var$$SyntaxError","SyntaxError","$1258b452ecf218a1$var$$Function","Function","$1258b452ecf218a1$var$$TypeError","$1258b452ecf218a1$var$getEvalledConstructor","expressionSyntax","$1258b452ecf218a1$var$$gOPD","$1258b452ecf218a1$var$throwTypeError","$1258b452ecf218a1$var$ThrowTypeError","calleeThrows","gOPDthrows","$1258b452ecf218a1$var$hasSymbols","$1258b452ecf218a1$var$getProto","$1258b452ecf218a1$var$needsEval","$1258b452ecf218a1$var$TypedArray","$1258b452ecf218a1$var$INTRINSICS","AggregateError","Atomics","decodeURI","decodeURIComponent","encodeURI","encodeURIComponent","eval","EvalError","Float32Array","Float64Array","FinalizationRegistry","Int8Array","Int16Array","Int32Array","isFinite","isNaN","Math","parseFloat","parseInt","Proxy","Reflect","Uint8ClampedArray","Uint16Array","Uint32Array","URIError","WeakRef","$1258b452ecf218a1$var$doEval","doEval1","gen","$1258b452ecf218a1$var$LEGACY_ALIASES","$1258b452ecf218a1$var$$concat","$gvair","$1258b452ecf218a1$var$$spliceApply","splice","$1258b452ecf218a1$var$$replace","$1258b452ecf218a1$var$$strSlice","$1258b452ecf218a1$var$$exec","exec","$1258b452ecf218a1$var$rePropName","$1258b452ecf218a1$var$reEscapeChar","$1258b452ecf218a1$var$stringToPath","first","last","quote","subString","$1258b452ecf218a1$var$getBaseIntrinsic","alias","intrinsicName","$8aKn2","parts","intrinsicBaseName","intrinsicRealName","skipFurtherCaching","isOwn","part","$1820ada193f67aeb$var$origSymbol","$kAGnA","$efd80b1d7fbb2850$var$ERROR_MESSAGE","$efd80b1d7fbb2850$var$slice","$efd80b1d7fbb2850$var$toStr","$efd80b1d7fbb2850$var$funcType","that","target","bound","binder","boundLength","max","boundArgs","Empty","$9546dce5bd4976bd$var$$apply","$9546dce5bd4976bd$var$$call","$9546dce5bd4976bd$var$$reflectApply","$9546dce5bd4976bd$var$$gOPD","$9546dce5bd4976bd$var$$defineProperty","$9546dce5bd4976bd$var$$max","originalFunction","func","$9546dce5bd4976bd$var$applyBind","$4534afe844d627e4$var$GeneratorFunction","$4534afe844d627e4$var$toStr","$4534afe844d627e4$var$fnToStr","$4534afe844d627e4$var$isFnRegex","$4534afe844d627e4$var$hasToStringTag","$4534afe844d627e4$var$getProto","generatorFunc","$4534afe844d627e4$var$getGeneratorFunc","$c2e61c703a2c9ae0$var$$toString","$c2e61c703a2c9ae0$var$hasToStringTag","$c2e61c703a2c9ae0$var$g","globalThis","$parcel$global","$c2e61c703a2c9ae0$var$typedArrays","$8yXCr","$c2e61c703a2c9ae0$var$$slice","$c2e61c703a2c9ae0$var$toStrTags","$c2e61c703a2c9ae0$var$getPrototypeOf","$6SeTG","$gFhA7","typedArray","arr","proto","superProto","foundName","getter","$c2e61c703a2c9ae0$var$tryTypedArrays","$c21e1d005400ef2a$var$toStr","$c21e1d005400ef2a$var$hasOwnProperty","$c21e1d005400ef2a$var$forEachArray","receiver","$c21e1d005400ef2a$var$forEachString","charAt","$c21e1d005400ef2a$var$forEachObject","object","k","list","thisArg","$63RD0","$469c9f4bd3a650de$var$badArrayLike","$469c9f4bd3a650de$var$isCallableMarker","$469c9f4bd3a650de$var$fnToStr","$469c9f4bd3a650de$var$reflectApply","$469c9f4bd3a650de$var$constructorRegex","$469c9f4bd3a650de$var$isES6ClassFn","fnStr","$469c9f4bd3a650de$var$toStr","$469c9f4bd3a650de$var$hasToStringTag","$469c9f4bd3a650de$var$documentDotAll","document","all","$469c9f4bd3a650de$var$tryFunctionObject","strClass","$63bfbecf41903c8f$var$possibleNames","$63bfbecf41903c8f$var$g","out","$5013578038c7b048$var$$gOPD","$cf3d4182e663752d$var$$toString","$cf3d4182e663752d$var$hasToStringTag","$cf3d4182e663752d$var$g","$cf3d4182e663752d$var$typedArrays","$cf3d4182e663752d$var$$indexOf","$cf3d4182e663752d$var$$slice","$cf3d4182e663752d$var$toStrTags","$cf3d4182e663752d$var$getPrototypeOf","tag","anyTrue","$cf3d4182e663752d$var$tryTypedArrays","copy","fill","readUInt8","ctor","superCtor","super_","TempCtor","$620aa032cca82da4$var$_defineProperty","$620aa032cca82da4$var$_defineProperties","props","$620aa032cca82da4$var$_possibleConstructorReturn","$620aa032cca82da4$var$_typeof","$620aa032cca82da4$var$_assertThisInitialized","$620aa032cca82da4$var$_wrapNativeSuper","Class1","_cache","Class","has","Wrapper","$620aa032cca82da4$var$_construct","$620aa032cca82da4$var$_getPrototypeOf","$620aa032cca82da4$var$_setPrototypeOf","$620aa032cca82da4$var$isNativeReflectConstruct","construct","sham","Parent1","args1","Class2","Parent","$620aa032cca82da4$var$inspect","$620aa032cca82da4$var$ERR_INVALID_ARG_TYPE","$620aa032cca82da4$var$endsWith","$620aa032cca82da4$var$blue","$620aa032cca82da4$var$green","$620aa032cca82da4$var$red","$620aa032cca82da4$var$white","$620aa032cca82da4$var$kReadableOperator","strictEqualObject","notStrictEqualObject","notIdentical","$620aa032cca82da4$var$copyError","source","$620aa032cca82da4$var$inspectValue","compact","maxArrayLength","Infinity","breakLength","showProxy","sorted","getters","$620aa032cca82da4$var$createErrDiff","other","res","lastPos","end","skipped","actualInspected","actualLines","expectedLines","indicator","inputLength","stderr","isTTY","columns","count","floor","maxCount","$620aa032cca82da4$var$repeat","maxLines","_actualLines","printedLines","skippedMsg","expectedLine","actualLine","divergingLines","$620aa032cca82da4$var$AssertionError","_Error","AssertionError1","options","$620aa032cca82da4$var$_classCallCheck","limit","stackTraceLimit","getColorDepth","_res","knownOperators","captureStackTrace","protoProps","staticProps","$620aa032cca82da4$var$_inherits","ownKeys","filter","$620aa032cca82da4$var$_objectSpread","$a2cddfb99e0a6135$var$assign","firstSource","to","nextSource","keysArray","nextIndex","nextKey","polyfill","$ad6ddb07ef0cb149$var$polyfill","$5SxoI","$1UbTr","getPolyfill","implementation","$6wuPW","shim","$bNbuK","$16343f2546a69e4c$var$hasSymbols","$16343f2546a69e4c$var$toStr","$16343f2546a69e4c$var$concat","$16343f2546a69e4c$var$origDefineProperty","$16343f2546a69e4c$var$hasPropertyDescriptors","$16343f2546a69e4c$var$supportsDescriptors","$16343f2546a69e4c$var$defineProperty","predicate","$16343f2546a69e4c$var$defineProperties","predicates","$81enX","supportsDescriptors","$5d69935f2747da8d$var$slice","$5d69935f2747da8d$var$origKeys","$5d69935f2747da8d$var$keysShim","$5d69935f2747da8d$var$originalKeys","keysWorksWithArguments","$z1gio","$06943f92b55ad7fa$var$toStr","isArgs","$330998a67e44345d$var$keysShim","$330998a67e44345d$var$has","$330998a67e44345d$var$toStr","$330998a67e44345d$var$isArgs","$330998a67e44345d$var$isEnumerable","$330998a67e44345d$var$hasDontEnumBug","$330998a67e44345d$var$hasProtoEnumBug","$330998a67e44345d$var$dontEnums","$330998a67e44345d$var$equalsConstructorPrototype","$330998a67e44345d$var$excludedKeys","$applicationCache","$console","$external","$frame","$frameElement","$frames","$innerHeight","$innerWidth","$onmozfullscreenchange","$onmozfullscreenerror","$outerHeight","$outerWidth","$pageXOffset","$pageYOffset","$parent","$scrollLeft","$scrollTop","$scrollX","$scrollY","$self","$webkitIndexedDB","$webkitStorageInfo","$window","$330998a67e44345d$var$hasAutomationEqualityBug","window","isArguments","theKeys","skipProto","j","skipConstructor","$330998a67e44345d$var$equalsConstructorPrototypeIfNotBuggy","$d1dd62937e17e68d$var$$defineProperty","$d1dd62937e17e68d$var$hasPropertyDescriptors","hasArrayLengthDefineBug","$4bfda6cb765ad269$var$numberIsNaN","$2be9aa30bff457b9$var$_slicedToArray","$2be9aa30bff457b9$var$_arrayWithHoles","_arr","_n","_d","_e","_s","_i","next","done","$2be9aa30bff457b9$var$_iterableToArrayLimit","$2be9aa30bff457b9$var$_nonIterableRest","$2be9aa30bff457b9$var$_typeof","$2be9aa30bff457b9$var$regexFlagsSupported","flags","$2be9aa30bff457b9$var$arrayFromSet","$2be9aa30bff457b9$var$arrayFromMap","$2be9aa30bff457b9$var$objectIs","$2be9aa30bff457b9$var$objectGetOwnPropertySymbols","$2be9aa30bff457b9$var$numberIsNaN","$2be9aa30bff457b9$var$uncurryThis","$2be9aa30bff457b9$var$hasOwnProperty","$2be9aa30bff457b9$var$propertyIsEnumerable","$2be9aa30bff457b9$var$objectToString","$2be9aa30bff457b9$var$isAnyArrayBuffer","$2be9aa30bff457b9$require$_require$types","$2be9aa30bff457b9$var$isArrayBufferView","$2be9aa30bff457b9$var$isDate","$2be9aa30bff457b9$var$isMap","$2be9aa30bff457b9$var$isRegExp","$2be9aa30bff457b9$var$isSet","$2be9aa30bff457b9$var$isNativeError","$2be9aa30bff457b9$var$isBoxedPrimitive","$2be9aa30bff457b9$var$isNumberObject","$2be9aa30bff457b9$var$isStringObject","$2be9aa30bff457b9$var$isBooleanObject","$2be9aa30bff457b9$var$isBigIntObject","$2be9aa30bff457b9$var$isSymbolObject","$2be9aa30bff457b9$var$isFloat32Array","$2be9aa30bff457b9$var$isFloat64Array","$2be9aa30bff457b9$var$isNonIndex","charCodeAt","pow","$2be9aa30bff457b9$var$getOwnNonIndexProperties","$2be9aa30bff457b9$var$compare","y","min","$2be9aa30bff457b9$var$innerDeepEqual","val1","val2","memos","buf1","buf2","val1Tag","keys1","keys2","$2be9aa30bff457b9$var$keyCheck","getTime","byteLength","buffer","byteOffset","$2be9aa30bff457b9$var$areSimilarTypedArrays","offset","$2be9aa30bff457b9$var$areSimilarFloatArrays","_keys","_keys2","size","$2be9aa30bff457b9$var$isEqualBoxedPrimitive","$2be9aa30bff457b9$var$getEnumerables","iterationType","aKeys","bKeys","symbolKeysA","symbolKeysB","_symbolKeysB","position","val2MemoA","val2MemoB","areEq","$2be9aa30bff457b9$var$objEquiv","delete","$2be9aa30bff457b9$var$setHasEqualElement","memo","setValues","$2be9aa30bff457b9$var$findLooseMatchingPrimitives","prim","$2be9aa30bff457b9$var$setMightHaveLoosePrim","altValue","$2be9aa30bff457b9$var$mapMightHaveLoosePrim","item","curB","$2be9aa30bff457b9$var$mapHasEqualEntry","key1","item1","key2","aValues","bValues","_val","$2be9aa30bff457b9$var$setEquiv","aEntries","_aEntries$i","item2","bEntries","_i2","_bEntries$_i","$2be9aa30bff457b9$var$mapEquiv","keysA","$8d642377f5822430$var$polyfill","$91M8b","$8sYH2","$hCf9I","NaN","TOKEN_TYPES","parse","LINE_COMMENT","BLOCK_COMMENT","SINGLE_QUOTE","DOUBLE_QUOTE","TEMPLATE_QUOTE","REGEXP","BRACKETS","BRACKETS_REVERSED","src","state","defaultState","index","parseChar","ex","character","history","wasComment","isComment","lastChar","regexpStart","current","escaped","hasDollar","isPunctuator","isKeyword","reverse","State","matches","matcher","$l37Ky","c","id","parseUntil","delimiter","ignoreNesting","isNesting","ignoreLineComment","$f52fe3bd41a86f17$var$has","$f52fe3bd41a86f17$var$$exec","$f52fe3bd41a86f17$var$isRegexMarker","$f52fe3bd41a86f17$var$badStringifier","$f52fe3bd41a86f17$var$hasToStringTag","$f52fe3bd41a86f17$var$throwRegexMarker","toPrimitive","$f52fe3bd41a86f17$var$$toString","$f52fe3bd41a86f17$var$gOPD","fullMessage","column","filename","location","lines","context","text","curr","preamble","toJSON","$e63ad36e3453768d$var$filter","currentDirectory","funcName","trPath","$2BQjX","sync","basedir","tr","$kJXSd","require","body","minify","minifyTranformer","outputFormat","$e63ad36e3453768d$var$getMinifyTransformerName","$f196743631813593$var$tr","transformer","$f196743631813593$var$Transformer","tr1","$aLUwE","some","_tr","inputFormats","Transformer","normalizeFn","dependencies","normalizeFnAsync","result1","$iisZB","$eS5mt","nodeify","normalize","normalizeAsync","result2","$kjyEk","readFile","denodeify","readFileSync","$f196743631813593$var$fallbacks","compile","compileAsync","compileFile","compileFileAsync","compileClient","compileClientAsync","compileFileClient","compileFileClientAsync","render","renderAsync","renderFile","renderFileAsync","_hasMethod","can","method1","locals","compiled","$1b967f6dd809d056$var$noop","$1b967f6dd809d056$var$LAST_ERROR","$1b967f6dd809d056$var$IS_ERROR","$1b967f6dd809d056$var$Promise","_40","_65","_55","_72","$1b967f6dd809d056$var$doResolve","$1b967f6dd809d056$var$handle","deferred","_37","$78R1s","onFulfilled","onRejected","$1b967f6dd809d056$var$tryCallOne","$1b967f6dd809d056$var$reject","$1b967f6dd809d056$var$resolve","$1b967f6dd809d056$var$handleResolved","newValue","$1b967f6dd809d056$var$getThen","$1b967f6dd809d056$var$finale","_87","$1b967f6dd809d056$var$Handler","$1b967f6dd809d056$var$tryCallTwo","_61","resolve1","reject1","$1b967f6dd809d056$var$safeThen","$533268ed1332d6df$var$rawAsap","task","$533268ed1332d6df$var$queue","$533268ed1332d6df$var$requestFlush","$533268ed1332d6df$var$index","$533268ed1332d6df$var$flush","currentIndex","scan","newLength","toggle","observer","node","$533268ed1332d6df$var$scope","$533268ed1332d6df$var$BrowserMutationObserver","MutationObserver","WebKitMutationObserver","$533268ed1332d6df$var$makeRequestCallFromTimer","callback","timeoutHandle","handleTimer","intervalHandle","setInterval","clearInterval","createTextNode","observe","characterData","data","requestFlush","makeRequestCallFromTimer","$2mQG2","$dd2d5011de13bd25$var$TRUE","$dd2d5011de13bd25$var$valuePromise","$dd2d5011de13bd25$var$FALSE","$dd2d5011de13bd25$var$NULL","$dd2d5011de13bd25$var$UNDEFINED","$dd2d5011de13bd25$var$ZERO","$dd2d5011de13bd25$var$EMPTYSTRING","remaining","i1","race","values","argumentCount","$fedf585d788353a6$var$callbackFn","$fedf585d788353a6$var$denodeifyWithCount","fnLength","$fedf585d788353a6$var$denodeifyWithoutCount","$aNDUN","$7dcd7147d1e11e16$var$freeTasks","$7dcd7147d1e11e16$var$pendingErrors","$7dcd7147d1e11e16$var$requestErrorThrow","$7dcd7147d1e11e16$var$asap","rawTask","$7dcd7147d1e11e16$var$RawTask","onerror","enableSynchronous","isPending","getState","isFulfilled","isRejected","getValue","getReason","disableSynchronous","$ad3a448772cc8e2b$var$isPromise","default","$G4U33","core","isCore","$07e7b9fe30396e6f$var$realpathFS","platform","realpath","native","$07e7b9fe30396e6f$var$homedir","$hgTgH","$07e7b9fe30396e6f$var$defaultIsFile","file","stat","isFile","isFIFO","$07e7b9fe30396e6f$var$defaultIsDir","isDirectory","$07e7b9fe30396e6f$var$defaultRealpath","realpathErr","realPath","$07e7b9fe30396e6f$var$maybeRealpath","preserveSymlinks","$07e7b9fe30396e6f$var$defaultReadPackage","pkgfile","readFileErr","pkg","jsonErr","callback1","cb1","$d6lBt","readPackage","conflictErr","packageIterator","extensions","includeCoreModules","basedir1","$59kwG","dirname","$9y1As","parent","paths","absoluteStart","onfile1","err2","m","pkg1","loadAsDirectory","err3","realD","moduleError","loadAsFile","x2","thePackage","loadAsFilePackage","load","exts","loadPackage","onpkg","loadpkg","pkg_","pathFilter","rfile","relative","rel","r","onex","unwrapErr","pkgdir","err4","pkgParam","packageFilter","loadAsDirectoryPackage","fpkg","package","err5","err6","pkg2","main","mainError","err7","pkg3","processDirs","dirs","onfile","ondir","isdir","realStart","$2gU1O","err1","realN","thunk","$8KZna","$07e7b9fe30396e6f$var$getPackageCandidates","init","$ccDAZ","homedir","getuid","$8e2551e033e95cb5$export$c1d46b5ea6262c0b","$3bfdb7183e8721d6$var$assertPath","path","$3bfdb7183e8721d6$var$normalizeStringPosix","allowAboveRoot","lastSegmentLength","lastSlash","dots","lastSlashIndex","lastIndexOf","$3bfdb7183e8721d6$var$posix","resolvedPath","resolvedAbsolute","isAbsolute","trailingSeparator","joined","from","fromStart","fromEnd","fromLen","toStart","toLen","lastCommonSep","fromCode","_makeLong","hasRoot","matchedSlash","basename","ext","extIdx","firstNonSlashEnd","extname","startDot","startPart","preDotState","pathObject","sep","root","$3bfdb7183e8721d6$var$_format","win32","posix","origPrepareStackTrace","prepareStackTrace","stack1","getFileName","$660239f3e8f91d02$var$parse","$660239f3e8f91d02$var$getNodeModulesDirs","modules","prefix","parsed","aPath","moduleDir","request","moduleDirectory","$8da2cde54ea0b5f9$var$isWindows","$8da2cde54ea0b5f9$var$splitWindowsRe","$8da2cde54ea0b5f9$var$win32","pathString","allParts","$8da2cde54ea0b5f9$var$splitPathRe","$8da2cde54ea0b5f9$var$posix","$1a78896fae237e7e$var$specifierIncluded","specifier","nodeParts","op","versionParts","ver","$1a78896fae237e7e$var$matchesRange","range","specifiers","nodeVersion","$87B2X","specifierValue","$1a78896fae237e7e$var$versionIncluded","$59f7c939edf95309$var$current","$59f7c939edf95309$var$specifierIncluded","$59f7c939edf95309$var$matchesRange","$59f7c939edf95309$var$versionIncluded","$59f7c939edf95309$var$core","$59f7c939edf95309$var$mod","$bVmze","$d63e4a327ed332ca$var$realpathFS","realpathSync","$d63e4a327ed332ca$var$homedir","$d63e4a327ed332ca$var$defaultIsFile","statSync","throwIfNoEntry","$d63e4a327ed332ca$var$defaultIsDir","$d63e4a327ed332ca$var$defaultRealpathSync","$d63e4a327ed332ca$var$maybeRealpathSync","$d63e4a327ed332ca$var$defaultReadPackageSync","readPackageSync","loadAsFileSync","loadAsDirectorySync","$d63e4a327ed332ca$var$getPackageCandidates","loadNodeModulesSync","$391470b785981cf8$var$handleFilters","ast","filters","filterAliases","getFilterName","filterName","$7YBCG","$3OnUz","$391470b785981cf8$require$dirname","block","nodes","$391470b785981cf8$var$handleNestedFilters","attrs1","$391470b785981cf8$var$getAttributes","filterWithFallback","firstFilter","fullPath","attrs","renderBuffer","raw","filterFileWithFallback","$jLvtQ","includeDependencies","attr","$gGcpx","toConstant","opt","__esModule","$c24a32264cf1c5ee$var$expressionToConstant","expression1","constant","toConstant1","expression","$ardUq","isArrayExpression","result_1","elements","element","isSpreadElement","$c24a32264cf1c5ee$var$isSpreadable","spread","argument","isExpression","isBinaryExpression","left","right","$1vJPX","isBooleanLiteral","isCallExpression","isMemberExpression","member","computed","property","isIdentifier","$c24a32264cf1c5ee$var$canCallMethod","isConditionalExpression","consequent","alternate","constants","isLogicalExpression","isNullLiteral","isNumericLiteral","isObjectExpression","result_2","properties","isObjectProperty","shorthand","isStringLiteral","isObjectMethod","isSpreadProperty","isParenthesizedExpression","isRegExpLiteral","pattern","isSequenceExpression","expressions","isTemplateLiteral","result_3","quasis","cooked","isUnaryExpression","$c24a32264cf1c5ee$var$shallowEqual","b1","expressionToConstant","$c24a32264cf1c5ee$var$EMPTY_OBJECT","$c24a32264cf1c5ee$var$lastSrc","$c24a32264cf1c5ee$var$lastConstants","$c24a32264cf1c5ee$var$lastOptions","$c24a32264cf1c5ee$var$lastResult","$c24a32264cf1c5ee$var$lastWasConstant","$c24a32264cf1c5ee$var$isConstant","$fuTml","parseExpression","_a","$c24a32264cf1c5ee$var$toConstant","isConstant","Position","col","SourceLocation","identifierName","createPositionWithColumnOffset","columnOffset","ParseErrorCodes","freeze","SourceTypeModuleError","reflect","NodeDescriptions","ArrayPattern","AssignmentExpression","AssignmentPattern","ArrowFunctionExpression","ConditionalExpression","ForOfStatement","ForInStatement","ForStatement","FormalParameters","Identifier","ObjectPattern","ParenthesizedExpression","RestElement","UpdateExpression","true","false","VariableDeclarator","YieldExpression","toNodeDescription","UnparenthesizedPipeBodyDescriptions","toParseErrorConstructor","_ref","toMessage","$b48499974d50e8d0$var$_objectWithoutPropertiesLoose","_excluded","loc","instantiate","clone","overrides","missingPlugin","toParseErrorCredentials","toMessageOrMessage","credentials","ParseErrorEnum","syntaxPlugin","toParseErrorCredentialsMap","partialCredentials","ParseErrorConstructors","reasonCode","Errors","ImportMetaOutsideModule","ImportOutsideModule","AccessorIsGenerator","kind","ArgumentsInClass","AsyncFunctionInSingleStatementContext","AwaitBindingIdentifier","AwaitBindingIdentifierInStaticBlock","AwaitExpressionFormalParameter","AwaitNotInAsyncContext","AwaitNotInAsyncFunction","BadGetterArity","BadSetterArity","BadSetterRestParameter","ConstructorClassField","ConstructorClassPrivateField","ConstructorIsAccessor","ConstructorIsAsync","ConstructorIsGenerator","DeclarationMissingInitializer","DecoratorBeforeExport","DecoratorConstructor","DecoratorExportClass","DecoratorSemicolon","DecoratorStaticBlock","DeletePrivateField","DestructureNamedImport","DuplicateConstructor","DuplicateDefaultExport","DuplicateExport","exportName","DuplicateProto","DuplicateRegExpFlags","ElementAfterRest","EscapedCharNotAnIdentifier","ExportBindingIsString","localName","ExportDefaultFromAsIdentifier","ForInOfLoopInitializer","ForOfAsync","ForOfLet","GeneratorInSingleStatementContext","IllegalBreakContinue","IllegalLanguageModeDirective","IllegalReturn","ImportBindingIsString","importName","ImportCallArgumentTrailingComma","ImportCallArity","maxArgumentCount","ImportCallNotNewExpression","ImportCallSpreadArgument","ImportJSONBindingNotDefault","IncompatibleRegExpUVFlags","InvalidBigIntLiteral","InvalidCodePoint","InvalidCoverInitializedName","InvalidDecimal","InvalidDigit","radix","InvalidEscapeSequence","InvalidEscapeSequenceTemplate","InvalidEscapedReservedWord","reservedWord","InvalidIdentifier","InvalidLhs","ancestor","InvalidLhsBinding","InvalidNumber","InvalidOrMissingExponent","InvalidOrUnexpectedToken","unexpected","InvalidParenthesizedAssignment","InvalidPrivateFieldResolution","InvalidPropertyBindingPattern","InvalidRecordProperty","InvalidRestAssignmentPattern","LabelRedeclaration","labelName","LetInLexicalBinding","LineTerminatorBeforeArrow","MalformedRegExpFlags","MissingClassName","MissingEqInAssignment","MissingSemicolon","MissingPlugin","MissingOneOfPlugins","MissingUnicodeEscape","MixingCoalesceWithLogical","ModuleAttributeDifferentFromType","ModuleAttributeInvalidValue","ModuleAttributesWithDuplicateKeys","ModuleExportNameHasLoneSurrogate","surrogateCharCode","ModuleExportUndefined","MultipleDefaultsInSwitch","NewlineAfterThrow","NoCatchOrFinally","NumberIdentifier","NumericSeparatorInEscapeSequence","ObsoleteAwaitStar","OptionalChainingNoNew","OptionalChainingNoTemplate","OverrideOnConstructor","ParamDupe","PatternHasAccessor","PatternHasMethod","PrivateInExpectedIn","PrivateNameRedeclaration","RecordExpressionBarIncorrectEndSyntaxType","RecordExpressionBarIncorrectStartSyntaxType","RecordExpressionHashIncorrectStartSyntaxType","RecordNoProto","RestTrailingComma","SloppyFunction","StaticPrototype","SuperNotAllowed","SuperPrivateField","TrailingDecorator","TupleExpressionBarIncorrectEndSyntaxType","TupleExpressionBarIncorrectStartSyntaxType","TupleExpressionHashIncorrectStartSyntaxType","UnexpectedArgumentPlaceholder","UnexpectedAwaitAfterPipelineBody","UnexpectedDigitAfterHash","UnexpectedImportExport","UnexpectedKeyword","keyword","UnexpectedLeadingDecorator","UnexpectedLexicalDeclaration","UnexpectedNewTarget","UnexpectedNumericSeparator","UnexpectedPrivateField","UnexpectedReservedWord","UnexpectedSuper","UnexpectedToken","UnexpectedTokenUnaryExponentiation","UnsupportedBind","UnsupportedDecoratorExport","UnsupportedDefaultExport","UnsupportedImport","UnsupportedMetaProperty","onlyValidPropertyName","UnsupportedParameterDecorator","UnsupportedPropertyDecorator","UnsupportedSuper","UnterminatedComment","UnterminatedRegExp","UnterminatedString","UnterminatedTemplate","VarRedeclaration","YieldBindingIdentifier","YieldInParameter","ZeroDigitNumericSeparator","StrictDelete","StrictEvalArguments","referenceName","StrictEvalArgumentsBinding","bindingName","StrictFunction","StrictNumericEscape","StrictOctalLiteral","StrictWith","PipeBodyIsTighter","PipeTopicRequiresHackPipes","PipeTopicUnbound","PipeTopicUnconfiguredToken","token","PipeTopicUnused","PipeUnparenthesizedBody","PipelineBodyNoArrow","PipelineBodySequenceExpression","PipelineHeadSequenceExpression","PipelineTopicUnused","PrimaryTopicNotAllowed","PrimaryTopicRequiresSmartPipeline","toUnenumerable","toESTreeLocation","TokContext","preserveSpace","brace","j_oTag","j_cTag","j_expr","template","beforeExpr","startsExpr","isLoop","isAssign","ExportedTokenType","label","conf","rightAssociative","postfix","binop","updateContext","keywords","createKeyword","createToken","createBinop","tokenTypeCounter","tokenTypes","tokenLabels","tokenBinops","tokenBeforeExprs","tokenStartsExprs","tokenPrefixes","_options$binop","_options$beforeExpr","_options$startsExpr","_options$prefix","createKeywordLike","_options$binop2","_options$beforeExpr2","_options$startsExpr2","_options$prefix2","tt","bracketL","bracketHashL","bracketBarL","bracketR","bracketBarR","braceL","braceBarL","braceHashL","braceR","braceBarR","parenL","parenR","comma","semi","colon","doubleColon","dot","question","questionDot","arrow","ellipsis","backQuote","dollarBraceL","templateTail","templateNonTail","at","interpreterDirective","eq","slashAssign","xorAssign","moduloAssign","incDec","bang","tilde","doubleCaret","doubleAt","pipeline","nullishCoalescing","logicalOR","logicalAND","bitwiseOR","bitwiseXOR","bitwiseAND","equality","lt","gt","relational","bitShift","bitShiftL","bitShiftR","plusMin","modulo","star","slash","exponent","_in","_instanceof","_break","_case","_catch","_continue","_debugger","_default","_else","_finally","_function","_if","_return","_switch","_throw","_try","_var","_const","_with","_new","_super","_class","_extends","_export","_import","_null","_true","_false","_typeof","_void","_delete","_do","_for","_while","_as","_assert","_async","_await","_from","_get","_let","_meta","_of","_sent","_set","_static","_yield","_asserts","_checks","_exports","_global","_implements","_intrinsic","_infer","_is","_mixins","_proto","_require","_keyof","_readonly","_unique","_abstract","_declare","_enum","_module","_namespace","_interface","_type","_opaque","num","bigint","decimal","privateName","eof","jsxName","jsxText","jsxTagStart","jsxTagEnd","placeholder","tokenIsIdentifier","tokenIsKeywordOrIdentifier","tokenIsLiteralPropertyName","tokenCanStartExpression","tokenIsFlowInterfaceOrTypeOrOpaque","tokenIsKeyword","tokenLabelName","tokenOperatorPrecedence","tokenIsTemplate","getExportedToken","tc","nonASCIIidentifierStartChars","nonASCIIidentifierChars","nonASCIIidentifierStart","nonASCIIidentifier","astralIdentifierStartCodes","astralIdentifierCodes","isInAstralSet","isIdentifierStart","fromCharCode","isIdentifierChar","reservedWords","reservedWordsStrictSet","reservedWordsStrictBindSet","isReservedWord","word","inModule","isStrictReservedWord","isStrictBindOnlyReservedWord","isStrictBindReservedWord","reservedWordLikeSet","SCOPE_CLASS","SCOPE_TS_MODULE","SCOPE_VAR","SCOPE_PROGRAM","BIND_FLAGS_CLASS","BIND_FLAGS_TS_EXPORT_ONLY","BIND_FLAGS_FLOW_DECLARE_FN","BIND_NONE","setTrailingComments","comments","trailingComments","unshift","setInnerComments","innerComments","adjustInnerComments","commentWS","lastElement","lineBreak","lineBreakG","isNewLine","skipWhiteSpace","skipWhiteSpaceToLineBreak","isWhitespace","curLine","lineStart","startLoc","endLoc","errors","potentialArrowAt","noArrowAt","noArrowParamsConversionAt","maybeInArrowParameters","inType","noAnonFunctionType","hasFlowComment","isAmbientContext","inAbstractClass","inDisallowConditionalTypesContext","topicContext","maxNumOfResolvableTopics","maxTopicIndex","soloAwait","inFSharpPipelineDirectBody","labels","decoratorStack","commentStack","lastTokEndLoc","lastTokStartLoc","lastTokStart","ct","canStartJSXElement","containsEsc","strictErrors","tokensLength","strictMode","sourceType","startLine","startColumn","curPosition","skipArrays","$b48499974d50e8d0$var$_isDigit","VALID_REGEX_FLAGS","forbiddenNumericSeparatorSiblings","decBinOct","hex","isAllowedNumericSeparatorSibling","bin","ch","oct","dec","Token","Scope","var","lexical","functions","ScopeHandler","parser","scopeStack","undefinedExports","inFunction","currentVarScopeFlags","allowSuper","currentThisScopeFlags","allowDirectSuper","inClass","inClassAndNotInNonArrowFunction","inStaticBlock","inNonArrowFunction","treatFunctionsAsVar","treatFunctionsAsVarInScope","currentScope","createScope","enter","exit","scope","SCOPE_FUNCTION","declareName","bindingType","checkRedeclarationInScope","maybeExportDefined","isRedeclaredInScope","raise","checkLocalExport","topLevelScope","FlowScope","super","declareFunctions","FlowScopeHandler","ClassScope","privateNames","loneAccessors","undefinedPrivateNames","ClassScopeHandler","oldClassScope","declarePrivateName","elementType","redefined","CLASS_ELEMENT_KIND_GETTER","accessor","oldStatic","newStatic","usePrivateName","classScope","ExpressionScope","canBeArrowParameterDeclaration","isCertainlyParameterDeclaration","ArrowHeadParsingScope","declarationErrors","recordDeclarationError","ParsingErrorClass","clearDeclarationError","iterateErrors","ExpressionScopeHandler","recordParameterInitializerError","toParseError","recordArrowParemeterBindingError","recordAsyncArrowParametersError","validateAsPattern","newExpressionScope","ProductionParameterHandler","stacks","currentFlags","hasAwait","hasYield","hasReturn","hasIn","functionFlags","isAsync","isGenerator","ExpressionErrors","shorthandAssignLoc","doubleProtoLoc","privateKeyLoc","optionalParametersLoc","Node","ranges","NodePrototype","cloneIdentifier","extra","cloned","expectedNode","cloneStringLiteral","clonePlaceholder","__clone","newNode","reservedTypes","FlowErrors","AmbiguousConditionalArrow","AmbiguousDeclareModuleKind","AssignReservedType","reservedType","DeclareClassElement","DeclareClassFieldInitializer","DuplicateDeclareModuleExports","EnumBooleanMemberNotInitialized","memberName","enumName","EnumDuplicateMemberName","EnumInconsistentMemberValues","EnumInvalidExplicitType","invalidEnumType","EnumInvalidExplicitTypeUnknownSupplied","EnumInvalidMemberInitializerPrimaryType","explicitType","EnumInvalidMemberInitializerSymbolType","EnumInvalidMemberInitializerUnknownType","EnumInvalidMemberName","suggestion","EnumNumberMemberNotInitialized","EnumStringMemberInconsistentlyInitailized","GetterMayNotHaveThisParam","ImportTypeShorthandOnlyInPureImport","InexactInsideExact","InexactInsideNonObject","InexactVariance","InvalidNonTypeImportInDeclareModule","MissingTypeParamDefault","NestedDeclareModule","NestedFlowComment","PatternIsOptional","SetterMayNotHaveThisParam","SpreadVariance","ThisParamAnnotationRequired","ThisParamBannedInConstructor","ThisParamMayNotBeOptional","ThisParamMustBeFirst","ThisParamNoDefault","TypeBeforeInitializer","TypeCastInPattern","UnexpectedExplicitInexactInObject","UnexpectedReservedType","UnexpectedReservedUnderscore","UnexpectedSpaceBetweenModuloChecks","UnexpectedSpreadType","UnexpectedSubtractionOperand","UnexpectedTokenAfterTypeParameter","UnexpectedTypeParameterBeforeAsyncArrowFunction","UnsupportedDeclareExportKind","unsupportedExportKind","UnsupportedStatementInDeclareModule","UnterminatedFlowComment","hasTypeImportKind","importKind","isMaybeDefaultImport","exportSuggestions","const","let","interface","FLOW_PRAGMA_REGEX","entities","quot","amp","apos","nbsp","iexcl","cent","pound","curren","yen","brvbar","sect","uml","ordf","laquo","not","shy","reg","macr","deg","plusmn","sup2","sup3","acute","micro","para","middot","cedil","sup1","ordm","raquo","frac14","frac12","frac34","iquest","Agrave","Aacute","Acirc","Atilde","Auml","Aring","AElig","Ccedil","Egrave","Eacute","Ecirc","Euml","Igrave","Iacute","Icirc","Iuml","ETH","Ntilde","Ograve","Oacute","Ocirc","Otilde","Ouml","times","Oslash","Ugrave","Uacute","Ucirc","Uuml","Yacute","THORN","szlig","agrave","aacute","acirc","atilde","auml","aring","aelig","ccedil","egrave","eacute","ecirc","euml","igrave","iacute","icirc","iuml","eth","ntilde","ograve","oacute","ocirc","otilde","ouml","divide","oslash","ugrave","uacute","ucirc","uuml","yacute","thorn","yuml","OElig","oelig","Scaron","scaron","Yuml","fnof","circ","Alpha","Beta","Gamma","Delta","Epsilon","Zeta","Eta","Theta","Iota","Kappa","Lambda","Mu","Nu","Xi","Omicron","Pi","Rho","Sigma","Tau","Upsilon","Phi","Chi","Psi","Omega","alpha","beta","gamma","delta","epsilon","zeta","eta","theta","iota","kappa","lambda","mu","nu","xi","omicron","pi","rho","sigmaf","sigma","tau","upsilon","phi","chi","psi","omega","thetasym","upsih","piv","ensp","emsp","thinsp","zwnj","zwj","lrm","rlm","ndash","mdash","lsquo","rsquo","sbquo","ldquo","rdquo","bdquo","dagger","Dagger","bull","hellip","permil","prime","Prime","lsaquo","rsaquo","oline","frasl","euro","image","weierp","real","trade","alefsym","larr","uarr","rarr","darr","harr","crarr","lArr","uArr","rArr","dArr","hArr","forall","exist","empty","nabla","isin","notin","ni","prod","sum","minus","lowast","radic","infin","ang","and","or","cap","cup","int","there4","sim","cong","asymp","ne","equiv","le","ge","sub","sup","nsub","sube","supe","oplus","otimes","perp","sdot","lceil","rceil","lfloor","rfloor","lang","rang","loz","spades","clubs","hearts","diams","JsxErrors","AttributeIsEmpty","MissingClosingTagElement","openingTagName","MissingClosingTagFragment","UnexpectedSequenceExpression","HTMLEntity","UnsupportedJsxValue","UnterminatedJsxContent","UnwrappedAdjacentJSXElements","isFragment","getQualifiedJSXName","namespace","TypeScriptScope","enums","constEnums","classes","exportOnlyBindings","TypeScriptScopeHandler","assert","TSErrors","AbstractMethodHasImplementation","methodName","AbstractPropertyHasInitializer","propertyName","AccesorCannotDeclareThisParameter","AccesorCannotHaveTypeParameters","CannotFindName","ClassMethodHasDeclare","ClassMethodHasReadonly","ConstInitiailizerMustBeStringOrNumericLiteralOrLiteralEnumReference","ConstructorHasTypeParameters","DeclareAccessor","DeclareClassFieldHasInitializer","DeclareFunctionHasImplementation","DuplicateAccessibilityModifier","modifier","DuplicateModifier","EmptyHeritageClauseType","EmptyTypeArguments","EmptyTypeParameters","ExpectedAmbientAfterExportDeclare","ImportAliasHasImportType","IncompatibleModifiers","modifiers","IndexSignatureHasAbstract","IndexSignatureHasAccessibility","IndexSignatureHasDeclare","IndexSignatureHasOverride","IndexSignatureHasStatic","InitializerNotAllowedInAmbientContext","InvalidModifierOnTypeMember","InvalidModifierOnTypeParameter","InvalidModifierOnTypeParameterPositions","InvalidModifiersOrder","orderedModifiers","InvalidPropertyAccessAfterInstantiationExpression","InvalidTupleMemberLabel","MissingInterfaceName","MixedLabeledAndUnlabeledElements","NonAbstractClassHasAbstractMethod","NonClassMethodPropertyHasAbstractModifer","OptionalTypeBeforeRequired","OverrideNotInSubClass","PrivateElementHasAbstract","PrivateElementHasAccessibility","ReadonlyForMethodSignature","ReservedArrowTypeParam","ReservedTypeAssertion","SetAccesorCannotHaveOptionalParameter","SetAccesorCannotHaveRestParameter","SetAccesorCannotHaveReturnType","SingleTypeParameterWithoutTrailingComma","typeParameterName","StaticBlockCannotHaveModifier","TypeAnnotationAfterAssign","TypeImportCannotSpecifyDefaultAndNamed","TypeModifierIsUsedInTypeExports","TypeModifierIsUsedInTypeImports","UnexpectedParameterModifier","UnexpectedReadonly","UnexpectedTypeAnnotation","UnexpectedTypeCastInParameter","UnsupportedImportTypeArgument","UnsupportedParameterPropertyKind","UnsupportedSignatureParameterKind","tsIsAccessModifier","tsIsVarianceAnnotations","isPossiblyLiteralEnum","isUncomputedMemberExpressionChain","PlaceholderErrors","ClassNameIsRequired","UnexpectedSpace","hasPlugin","plugins","expectedConfig","expectedName","expectedOptions","expectedKeys","expectedOptionsIsEmpty","pluginName","pluginOptions","getPluginOption","option","plugin","find","PIPELINE_PROPOSALS","TOPIC_TOKENS","RECORD_AND_TUPLE_SYNTAX_TYPES","mixinPlugins","tokens","parseRegExpLiteral","regex","estreeParseLiteral","parseBigIntLiteral","bigInt","_unused","parseDecimalLiteral","parseLiteral","parseStringLiteral","parseNumericLiteral","parseNullLiteral","parseBooleanLiteral","directiveToStmt","directive","directiveLiteral","stmt","startNodeAt","expressionValue","finishNodeAt","initFunction","checkDeclaration","getObjectOrClassMethodParams","params","isValidDirective","_stmt$expression$extr","parenthesized","parseBlockBody","directiveStatements","directives","pushClassMethod","classBody","isConstructor","allowsDirectSuper","parseMethod","typeParameters","parsePrivateName","convertPrivateNameToPrivateIdentifier","getPrivateNameSV","isPrivateName","parseFunctionBody","allowExpression","isMethod","inClassScope","funcNode","startNode","finishNode","parseClassProperty","propertyNode","parseClassPrivateProperty","parseObjectMethod","isPattern","isAccessor","parseObjectProperty","startPos","refExpressionErrors","isValidLVal","rest","isAssignable","isBinding","toAssignable","isLHS","toAssignableObjectExpressionProp","finishCallExpression","optional","_node$arguments$","attributes","toReferencedArguments","parseExport","exported","parseSubscript","noCalls","optionalChainMember","stop","chain","startNodeAtNode","hasPropertyAsPrivateName","isOptionalChain","resetStartLocation","resetEndLocation","jsxReadToken","chunkStart","finishToken","getTokenFromCode","jsxReadEntity","jsxReadNewLine","normalizeCRLF","jsxReadString","codePointAtPos","codePoint","readInt","fromCodePoint","entity","XHTMLEntities","jsxReadWord","jsxParseIdentifier","jsxParseNamespacedName","eat","jsxParseElementName","jsxParseAttributeValue","setContext","jsxParseExpressionContainer","parseExprAtom","jsxParseEmptyExpression","jsxParseSpreadChild","expect","previousContext","jsxParseAttribute","parseMaybeAssignAllowIn","jsxParseOpeningElementAt","jsxParseOpeningElementAfterName","selfClosing","jsxParseClosingElementAt","jsxParseElementAt","children","openingElement","closingElement","contents","openingFragment","closingFragment","jsxParseElement","newContext","replaceToken","skipSpace","curContext","prevType","flowPragma","getScopeHandler","shouldParseTypes","shouldParseEnums","addComment","comment","flowParseTypeInitialiser","tok","oldInType","flowParseType","flowParsePredicate","moduloLoc","expectContextual","flowParseTypeAndPredicateInitialiser","flowParseDeclareClass","flowParseInterfaceish","flowParseDeclareFunction","parseIdentifier","typeNode","typeContainer","flowParseTypeParameterDeclaration","tmp","flowParseFunctionTypeParams","returnType","typeAnnotation","semicolon","flowParseDeclare","insideModule","flowParseDeclareVariable","eatContextual","flowParseDeclareModuleExports","flowParseDeclareModule","isContextual","flowParseDeclareTypeAlias","flowParseDeclareOpaqueType","flowParseDeclareInterface","flowParseDeclareExportDeclaration","flowParseTypeAnnotatableIdentifier","BIND_KIND_VALUE","bodyNode","parseImport","hasModuleExport","bodyElement","declaration","isEsModuleType","isLet","exportKind","flowParseTypeAnnotation","flowParseTypeAlias","flowParseOpaqueType","isClass","flowParseRestrictedIdentifier","extends","implements","mixins","flowParseInterfaceExtends","flowParseObjectType","allowStatic","allowExact","allowSpread","allowProto","allowInexact","flowParseQualifiedTypeIdentifier","flowParseTypeParameterInstantiation","flowParseInterface","checkNotUnderscore","checkReservedType","liberal","declare","supertype","impltype","flowParseTypeParameter","requireDefault","nodeStartLoc","variance","flowParseVariance","ident","defaultRequired","typeParameter","oldNoAnonFunctionType","flowParseTypeParameterInstantiationCallOrNew","flowParseTypeOrImplicitInstantiation","flowParseInterfaceType","flowParseObjectPropertyKey","flowParseObjectTypeIndexer","isStatic","static","lookahead","flowParseObjectTypeInternalSlot","flowParseObjectTypeMethodish","flowParseFunctionTypeParam","flowParseObjectTypeCallProperty","valueNode","nodeStart","endDelim","exact","callProperties","indexers","internalSlots","inexact","protoStartLoc","inexactStartLoc","propOrInexact","flowParseObjectTypeProperty","flowObjectTypeSemicolon","flowCheckGetterSetterParams","paramCount","node2","qualification","flowParseGenericType","flowParseTypeofType","flowParsePrimaryType","flowParseTupleType","lh","isThis","reinterpretTypeAsFunctionTypeParam","flowIdentToTypeAnnotation","isGroupedType","parseLiteralAtNode","createIdentifier","flowParsePostfixType","seenOptionalIndexedAccess","canInsertSemicolon","objectType","indexType","flowParsePrefixType","flowParseAnonFunctionWithoutParens","param","flowParseIntersectionType","flowParseUnionType","allowPrimitiveOverride","typeCastToParameter","allowExpressionBody","forwardNoArrowParamsConversionAt","parseFunctionBodyAndFinish","parseStatement","topLevel","flowParseEnumDeclaration","parseExpressionStatement","expr","shouldParseExportDeclaration","isExportDefaultSpecifier","parseExportDefaultExpression","parseConditional","nextCh","lookaheadCharCode","setOptionalParametersError","originalNoArrowAt","failed","tryParseConditionalConsequent","valid","invalid","getArrowLikeExpressions","parseMaybeAssign","disallowInvalid","arrows","finishArrowValidation","list1","list2","partition","every","_node$extra","toAssignableList","trailingCommaLoc","checkParams","parseParenItem","typeCastNode","assertModuleNodeAllowed","decl","parseExportDeclaration","declarationNode","parseExportSpecifiers","parseExportFrom","eatExportStar","maybeParseExportNamespaceSpecifier","hasNamespace","parseClassId","isStatement","optionalId","parseClassMember","parseClassMemberFromModifier","isIterator","readIterator","readWord1","fullWord","finishOp","next2","isIteratorStart","exprList","toReferencedList","isParenthesizedExpr","_expr$extra","parseArrayLike","close","canBePattern","isTuple","isClassMethod","isClassProperty","isNonstaticConstructor","isThisParam","pushClassPrivateMethod","parseClassSuper","superTypeParameters","implemented","checkGetterSetterParams","parsePropertyNamePrefixOperator","parseObjPropValue","parseAssignableListItemTypes","parseMaybeDefault","shouldParseDefaultImport","parseImportSpecifierLocal","local","finishImportSpecifier","maybeParseDefaultImportSpecifier","parseImportSpecifier","importedIsString","isInTypeOnlyImport","isMaybeTypeOnly","firstIdent","imported","specifierTypeKind","isLookaheadContextual","as_ident","specifierIsTypeImport","checkReservedWord","parseBindingAtom","parseFunctionParams","allowModifiers","parseVarId","parseAsyncArrowFromCallExpression","shouldParseAsyncArrow","afterLeftParse","_jsx","jsx","tryParse","currentContext","_jsx2","_jsx3","abort","_arrowExpression$extr","arrowExpression","resetStartLocationFromNode","maybeUnwrapTypeCastExpression","aborted","async","failState","thrown","parseArrow","shouldParseArrow","setArrowFunctionParameters","allowDuplicates","isArrowFunction","parseParenAndDistinguishExpression","canBeArrow","parseSubscripts","parseCallExpressionArguments","parseAsyncArrowWithTypeParameters","subscriptState","isLookaheadToken_lt","typeArguments","parseNewCallee","targs","parseArrowExpression","readToken_mult_modulo","nextToken","readToken_pipe_amp","parseTopLevel","program","fileNode","skipBlockComment","skipFlowComment","hasFlowCommentCompletion","shiftToFirstNonWhiteSpace","includes","ch2","ch3","flowEnumErrorBooleanMemberNotInitialized","flowEnumErrorInvalidMemberInitializer","enumContext","flowEnumErrorNumberMemberNotInitialized","flowEnumErrorStringMemberInconsistentlyInitailized","flowEnumMemberInit","endOfInit","literal","flowEnumMemberRaw","flowEnumCheckExplicitTypeMismatch","expectedType","flowEnumMembers","seenNames","members","booleanMembers","numberMembers","stringMembers","defaultedMembers","hasUnknownMembers","memberNode","flowEnumStringMembers","initializedMembers","flowEnumParseExplicitType","flowEnumBody","nameLoc","boolsLen","numsLen","strsLen","defaultedLen","nextTokenStart","afterNext","tsIsIdentifier","tsTokenCanFollowModifier","isLiteralPropertyName","hasPrecedingLineBreak","tsNextTokenCanFollowModifier","tsParseModifier","allowedModifiers","stopOnStartOfClassStaticBlock","tsIsStartOfStaticBlocks","tsTryParse","tsParseModifiers","modified","disallowedModifiers","errorTemplate","enforceOrder","before","after","incompatible","mod1","mod2","accessibility","tsIsListTerminator","tsParseList","parseElement","tsParseDelimitedList","refTrailingCommaPos","nonNull","tsParseDelimitedListWorker","expectSuccess","trailingCommaPos","tsParseBracketedList","bracket","skipFirstToken","tsParseImportType","qualifier","tsParseEntityName","tsParseTypeArguments","allowReservedWords","tsParseTypeReference","typeName","tsParseThisTypePredicate","lhs","parameterName","tsParseTypeAnnotation","asserts","tsParseThisTypeNode","tsParseTypeQuery","exprName","tsParseInOutModifiers","tsParseNoneModifiers","tsParseTypeParameter","parseModifiers","tsParseTypeParameterName","constraint","tsEatThenParseType","tsTryParseTypeParameters","tsParseTypeParameters","addExtra","tsTryNextParseConstantContext","typeReference","tsFillSignature","returnToken","signature","returnTokenRequired","tsParseBindingListForSignature","tsParseTypeOrTypePredicateAnnotation","parseBindingList","tsParseTypeMemberSemicolon","isLineTerminator","tsParseSignatureMember","tsIsUnambiguouslyIndexSignature","tsTryParseIndexSignature","tsLookAhead","parameters","tsTryParseTypeAnnotation","tsParsePropertyOrMethodSignature","readonly","nodeAny","paramsKey","returnTypeKey","firstParameter","tsParseTypeMember","parsePropertyName","tsParseTypeLiteral","tsParseObjectTypeMembers","tsIsStartOfMappedType","tsParseMappedTypeParameter","tsExpectThenParseType","tsParseMappedType","nameType","tsParseType","tsTryParseType","tsParseTupleType","elementTypes","tsParseTupleElementType","seenOptionalElement","labeledElements","elementNode","_labeledElements","isLabeled","labeledNode","optionalTypeNode","restNode","tsParseParenthesizedType","tsParseFunctionOrConstructorType","abstract","tsInAllowConditionalTypesContext","tsParseLiteralTypeNode","tsParseTemplateLiteralType","parseTemplate","parseTemplateSubstitution","tsParseThisTypeOrThisTypePredicate","thisKeyword","tsParseNonArrayType","parseMaybeUnary","nodeType","keywordTypeFromName","tsParseArrayTypeOrHigher","tsParseTypeOperator","tsParseTypeOperatorOrHigher","tsCheckTypeAnnotationForReadOnly","tsParseInferType","tsParseConstraintForInferType","tsInDisallowConditionalTypesContext","tsParseUnionOrIntersectionType","parseConstituentType","hasLeadingOperator","tsParseIntersectionTypeOrHigher","tsParseUnionTypeOrHigher","tsIsStartOfFunctionType","tsIsUnambiguouslyStartOfFunctionType","tsSkipParameterStart","previousErrorCount","parseObjectLike","_unused2","tsInType","t","tsParseTypePredicateAsserts","thisTypePredicate","typePredicateVariable","tsParseTypePredicatePrefix","tsTryParseTypeOrTypePredicateAnnotation","eatColon","tsParseNonConditionalType","checkType","extendsType","trueType","falseType","isAbstractConstructorSignature","tsParseTypeAssertion","tsNextThenParseType","tsParseHeritageClause","originalStartLoc","delimitedList","tsParseInterfaceDeclaration","hasFollowingLineBreak","checkIdentifier","tsParseTypeAliasDeclaration","tsInNoContext","oldContext","oldInDisallowConditionalTypesContext","tsDoThenParseType","tsParseEnumMember","initializer","tsParseEnumDeclaration","BIND_TS_ENUM","tsParseModuleBlock","parseBlockOrModuleBlockBody","tsParseModuleOrNamespaceDeclaration","nested","inner","prodParam","tsParseAmbientExternalModuleDeclaration","global","tsParseImportEqualsDeclaration","isExport","moduleReference","tsParseModuleReference","tsIsExternalModuleReference","tsParseExternalModuleReference","tsTryParseAndCatch","tsTryParseDeclare","nany","starttype","tsInAmbientContext","parseFunctionStatement","parseClass","parseVarStatement","tsParseDeclaration","tsTryParseExportDeclaration","tsParseExpressionStatement","mod","tsCheckLineTerminator","tsParseAbstractDeclaration","tsTryParseGenericAsyncArrowFunction","oldMaybeInArrowParameters","tsParseTypeArgumentsInExpression","reScan_lt","tsIsDeclarationStart","parseAssignableListItem","decorators","override","elt","pp","parameter","isSimpleParameter","bodilessType","registerFunctionStatementId","tsCheckForInvalidTypeCasts","items","isInParens","nonNullExpression","isOptionalCall","missingParenErrorLoc","atPossibleAsyncArrow","asyncArrowFn","parseTaggedTemplateExpression","tokenType","_callee$extra","parseExprOp","leftStartPos","leftStartLoc","minPrec","reScan_lt_gt","checkKeywords","checkDuplicateExports","ahead","importNode","isAbstractClass","cls","allowMissingInitializer","declarations","parseStatementContent","parseAccessModifier","tsHasSomeModifiers","callParseClassMemberWithIsStatic","parseClassStaticBlock","parseClassMemberWithIsStatic","hadSuperClass","parsePostMemberNameModifiers","methodOrProp","isDeclare","parseClassPropertyAnnotation","definite","declareClassPrivateMethodInScope","_typeCast","_typeCast2","_jsx4","_typeCast3","typeCast","_typeParameters","reportReservedArrowTypeParam","trailingComma","toAssignableParenthesizedExpression","expressionScope","checkToRestConversion","allowPattern","isUnparenthesizedInAssign","TSTypeCastExpression","TSParameterProperty","TSNonNullExpression","TSAsExpression","TSTypeAssertion","parseMaybeDecoratorArguments","checkCommaAfterRest","readToken_lt","readToken_gt","canHaveLeadingDecorator","getGetterSetterExpectedParamCount","baseCount","firstParam","parseCatchClauseParam","oldIsAmbientContext","oldInAbstractClass","shouldParseAsAmbientContext","getExpression","parseExportSpecifier","isInTypeExport","parseTypeOnlyImportExportSpecifier","isImport","isInTypeOnlyImportExport","leftOfAsKey","rightOfAsKey","rightOfAs","leftOfAs","hasTypeSpecifier","canParseAsKeyword","firstAs","secondAs","parseModuleExportName","parseV8Intrinsic","v8IntrinsicStartLoc","parseIdentifierName","identifier","parsePlaceholder","assertNoSpace","finishPlaceholder","isFinished","verifyBreakContinue","parseBlock","parseFunctionId","takeDecorators","oldStrict","parseClassBody","expectPlugin","isUnparsedContextual","startsWith","nextTokenStartSince","maybeParseExportDefaultSpecifier","checkExport","maybeParseStarImportSpecifier","parseNamedImportSpecifiers","parseImportSource","mixinPluginNames","defaultOptions","sourceFilename","allowAwaitOutsideFunction","allowReturnOutsideFunction","allowImportExportEverywhere","allowSuperOutsideMethod","allowUndeclaredExports","createParenthesizedExpressions","errorRecovery","attachComment","unwrapParenthesizedExpression","loopLabel","switchLabel","loneSurrogate","keywordRelationalOperator","Parser","sawUnambiguousESM","ambiguousScriptDifferentAst","pluginConfig","actualOptions","_this$plugins$get","processComment","commentStackLength","lastCommentWS","leadingNode","commentEnd","trailingNode","containingNode","finalizeComment","leadingComments","setLeadingComments","commentStart","finalizeRemainingComments","resetPreviousNodeTrailingComments","takeSurroundingComments","isLookahead","pushToken","checkKeywordEscapes","createLookaheadState","old","lastIndex","cp","trail","setStrict","clear","skipLineComment","startSkip","spaceStart","loop","CommentWhitespace","readToken_numberSign","readToken_interpreter","nextPos","readToken_dot","readNumber","readToken_slash","width","readToken_caret","proposal","topicToken","codePointAt","readToken_atSign","readToken_plus_min","readToken_eq_excl","readToken_question","readTemplateToken","readRadixNumber","readString","readWord","readRegexp","content","mods","char","forceLen","allowNumSeparator","forbiddenSiblings","isAllowedSibling","total","isBigInt","startsWithDot","isFloat","isDecimal","hasExponent","isOctal","hasLeadingZero","integer","recordStrictModeErrors","underscorePos","readCodePoint","throwOnInvalid","readHexChar","readEscapedChar","readTemplateContinuation","containsInvalid","inTemplate","codePos","octalStr","octal","codeLoc","firstCode","escStart","identifierCheck","esc","keywordTypes","raiseProperties","$b48499974d50e8d0$var$_excluded","raiseOverwrite","$b48499974d50e8d0$var$_excluded2","expectOnePlugin","pluginNames","nameStart","nameEnd","allowAsi","oldState","abortSignal","checkExpressionErrors","andThrow","initializeScopes","oldLabels","oldExportedIdentifiers","exportedIdentifiers","oldInModule","oldScope","oldProdParam","oldExpressionScope","enterInitialScopes","paramFlags","checkDestructuringPrivate","locationNode","_node$extra3","_node$extra2","isLast","toReferencedListDeep","parseSpread","refNeedsArrowPos","parseRestBinding","closeCharCode","allowEmpty","elts","parseDecorator","parseBindingRestProperty","parseBindingProperty","_startLoc","_startPos","_left","ObjectProperty","checkLVal","in","checkClashes","strictModeChanged","allowingSloppyLetBinding","hasParenthesizedAncestor","_expression$extra","validity","ParseErrorClass","nextAncestor","child","allowLetBinding","declareNameFromIdentifier","checkProto","isRecord","protoRef","used","shouldExitDescending","disallowIn","disallowInAnd","parseExpressionBase","allowInAnd","parseMaybeAssignDisallowIn","resultError","_resultError$loc","parseYield","ownExpressionErrors","parseMaybeConditional","parseExprOps","parseMaybeUnaryOrPrivate","prec","checkPipelineAtInfixOperator","logical","coalesce","parseExprOpRightExpr","nextOp","withTopicBindingContext","parseHackPipeBody","parseSmartPipelineBodyInStyle","parseExprOpBaseRightExpr","withSoloAwaitPermittingContext","parseFSharpPipelineBody","_body$extra","topicReferenceWasUsedInCurrentContext","checkExponentialAfterUnary","sawUnary","isAwait","isAwaitAllowed","parseAwait","update","isDelete","parseUpdate","isAmbiguousAwait","parseExprSubscripts","maybeAsyncArrow","parseBind","parseCoverCallAndAsyncArrowHead","parseMember","parseNoCallExpr","quasi","dynamicImport","allowPlaceholder","nodeForExtra","oldInFSharpPipelineDirectBody","addTrailingCommaExtraToNode","parseExprListItem","_call$extra","parseSuper","parseImportMetaProperty","parseDo","parseFunctionOrFunctionSent","parseDecorators","parseNewOrNewTarget","parseTopicReferenceThenEqualsSign","parseTopicReference","pipeProposal","lookaheadCh","parseModuleExpression","parseFunction","parseAsyncArrowUnaryFunction","topicTokenType","topicTokenValue","finishTopicReference","testTopicReferenceConfiguration","topicReferenceIsAllowedInCurrentContext","registerTopicReference","meta","parseMetaProperty","innerStartPos","innerStartLoc","spreadStartLoc","optionalCommaStartLoc","spreadNodeStartPos","spreadNodeStartLoc","innerEndLoc","arrowNode","wrapParenthesis","parenExpression","metaProp","parseNew","parseExprList","parseTemplateElement","isTagged","elemStart","elem","isTail","endOffset","elemEnd","tail","curElt","propHash","parsePropertyDefinition","maybeAsyncOrAccessorProp","keyName","_params","generator","hasStrictModeDirective","nonSimple","isSimpleParamList","formalParameters","canBeReservedWord","delegating","delegate","childExpr","isSimpleReference","checkSmartPipeTopicBodyEarlyErrors","outerContextTopicState","withSmartMixTopicForbiddingContext","outerContextSoloAwaitState","revertScopes","parseProgram","hashEndPos","hashEndLoc","backquoteEnd","backquoteEndLoc","startToken","templateValue","templateElementEnd","templateElementEndLoc","endToken","babel7CompatTokens","interpreter","parseInterpreterDirective","stmtToDirective","isLetKeyword","endCh","parseBreakContinueStatement","parseDebuggerStatement","parseDoStatement","parseForStatement","parseIfStatement","parseReturnStatement","parseSwitchStatement","parseThrowStatement","parseTryStatement","parseWhileStatement","parseWithStatement","parseEmptyStatement","nextTokenCharCode","maybeName","parseLabeledStatement","allowExport","currentContextDecorators","decorator","isBreak","lab","parseHeaderExpression","awaitAt","parseFor","startsWithLet","parseVar","parseForIn","startsWithAsync","isForOf","declarationPosition","discriminant","cases","sawDefault","isCase","handler","clause","finalizer","statementStart","allowDirectives","createNewLexicalScope","afterBlockParse","parsedNonDirective","isForIn","await","isFor","statement","isHangingStatement","requireId","hadConstructor","publicMethod","privateMethod","publicProp","privateProp","accessorProp","publicMember","parseClassElementName","isPrivate","maybeQuestionTokenStartLoc","pushClassPrivateProperty","pushClassProperty","pushClassAccessorProperty","_member$decorators","parseClassAccessorProperty","CLASS_ELEMENT_KIND_SETTER","parseInitializer","hasDefault","parseAfterDefault","hasStar","parseAfterNamespace","isFromRequired","hasSpecifiers","maybeParseExportNamedSpecifiers","hasDeclaration","maybeParseExportDeclaration","isTypeExport","assertions","FUNC_STATEMENT","nextType","hasFrom","nextAfterFrom","maybeParseImportAssertions","checkJSONModuleImport","checkNames","isDefault","isFrom","_declaration$extra","surrogate","isJSONModuleImport","nonDefaultNamedSpecifier","parseNext","maybeParseModuleAttributes","parseAssertEntries","attrNames","importSpecifier","getOptions","pluginMap","pluginsMap","tokTypes","internalTokenTypes","generateExportedTokenTypes","getParser","decoratorsBeforeExport","proposalList","tupleSyntaxIsHash","syntaxType","tokenList","missingPlugins","validatePlugins","pluginsFromOptions","pluginList","parserClassCache","getParserClass","_options","$79973711480253d2$var$_exportNames","react","assertNode","createTypeAnnotationBasedOnTypeof","createUnionTypeAnnotation","createFlowUnionType","createTSUnionType","cloneNode","cloneDeep","cloneDeepWithoutLoc","cloneWithoutLoc","addComments","inheritInnerComments","inheritLeadingComments","inheritsComments","inheritTrailingComments","removeComments","ensureBlock","toBindingIdentifierName","toBlock","toComputedKey","toExpression","toIdentifier","toKeyAlias","toSequenceExpression","toStatement","valueToNode","appendToMemberExpression","prependToMemberExpression","removeProperties","removePropertiesDeep","removeTypeDuplicates","getBindingIdentifiers","getOuterBindingIdentifiers","traverse","traverseFast","shallowEqual","isBlockScoped","isImmutable","isNode","isNodesEquivalent","isPlaceholderType","isReferenced","isScope","isSpecifierDefault","isType","isValidES3Identifier","isValidIdentifier","isVar","matchesPattern","validate","buildMatchMemberExpression","$le20m","$7XyMa","$eYiXa","$kUBOR","$2oHJF","$2xseA","$9iQ12","$ccfaL","$k6qdD","$5T62d","$aUeS4","$36R6x","$hLNUS","$c7XVB","$3GTeN","$6sXWW","$jiypm","$3uEFY","$1TriR","$btfPV","$6Yd44","$4XzLl","$2r8kv","$4N0sk","$fsv0I","$8jAXP","$2PW0u","$lYDFZ","$2ccoB","$ieqJ5","$jCJrC","$cfDjZ","$7sJfn","$1sQw0","$9tPzx","$5sU0b","$d8Dnf","$eJjWG","$QLNL1","$1sEUT","$81cip","$iGdAf","$d5ioO","$kNGZd","$dxQZV","$eppYV","$P3Daq","$l7GKn","$kUqjQ","$lBOsQ","$dh8ot","$iolsE","$5lkLS","$30dxP","$gXTkY","$3QfFw","$7MfP7","$2r3lq","$anRaJ","$l7lSB","$7TNHg","$2G7FY","$aQnVK","$79973711480253d2$var$react","isReactComponent","$lX7fR","isCompatTag","$euQYe","buildChildren","$lxuvp","$ffb4bc55db0ad844$var$_default","allowPartial","isThisExpression","isAnyTypeAnnotation","isArgumentPlaceholder","isArrayPattern","isArrayTypeAnnotation","isArrowFunctionExpression","isAssignmentExpression","isAssignmentPattern","isAwaitExpression","isBigIntLiteral","isBinary","isBindExpression","isBlock","isBlockParent","isBlockStatement","isBooleanLiteralTypeAnnotation","isBooleanTypeAnnotation","isBreakStatement","isCatchClause","isClassAccessorProperty","isClassBody","isClassDeclaration","isClassExpression","isClassImplements","isClassPrivateMethod","isClassPrivateProperty","isCompletionStatement","isConditional","isContinueStatement","isDebuggerStatement","isDecimalLiteral","isDeclaration","isDeclareClass","isDeclareExportAllDeclaration","isDeclareExportDeclaration","isDeclareFunction","isDeclareInterface","isDeclareModule","isDeclareModuleExports","isDeclareOpaqueType","isDeclareTypeAlias","isDeclareVariable","isDeclaredPredicate","isDecorator","isDirective","isDirectiveLiteral","isDoExpression","isDoWhileStatement","isEmptyStatement","isEmptyTypeAnnotation","isEnumBody","isEnumBooleanBody","isEnumBooleanMember","isEnumDeclaration","isEnumDefaultedMember","isEnumMember","isEnumNumberBody","isEnumNumberMember","isEnumStringBody","isEnumStringMember","isEnumSymbolBody","isExistsTypeAnnotation","isExportAllDeclaration","isExportDeclaration","isExportDefaultDeclaration","isExportNamedDeclaration","isExportNamespaceSpecifier","isExportSpecifier","isExpressionStatement","isExpressionWrapper","isFlow","isFlowBaseAnnotation","isFlowDeclaration","isFlowPredicate","isFlowType","isForInStatement","isForOfStatement","isForStatement","isForXStatement","isFunctionDeclaration","isFunctionExpression","isFunctionParent","isFunctionTypeAnnotation","isFunctionTypeParam","isGenericTypeAnnotation","isIfStatement","isImportAttribute","isImportDeclaration","isImportDefaultSpecifier","isImportNamespaceSpecifier","isImportSpecifier","isIndexedAccessType","isInferredPredicate","isInterfaceDeclaration","isInterfaceExtends","isInterfaceTypeAnnotation","isInterpreterDirective","isIntersectionTypeAnnotation","isJSX","isJSXAttribute","isJSXClosingElement","isJSXClosingFragment","isJSXElement","isJSXEmptyExpression","isJSXExpressionContainer","isJSXFragment","isJSXIdentifier","isJSXMemberExpression","isJSXNamespacedName","isJSXOpeningElement","isJSXOpeningFragment","isJSXSpreadAttribute","isJSXSpreadChild","isJSXText","isLVal","isLabeledStatement","isLiteral","isMetaProperty","isMiscellaneous","isMixedTypeAnnotation","isModuleDeclaration","isModuleExpression","isModuleSpecifier","isNewExpression","isNoop","isNullLiteralTypeAnnotation","isNullableTypeAnnotation","isNumberLiteral","isNumberLiteralTypeAnnotation","isNumberTypeAnnotation","isObjectMember","isObjectPattern","isObjectTypeAnnotation","isObjectTypeCallProperty","isObjectTypeIndexer","isObjectTypeInternalSlot","isObjectTypeProperty","isObjectTypeSpreadProperty","isOpaqueType","isOptionalCallExpression","isOptionalIndexedAccessType","isOptionalMemberExpression","isPatternLike","isPipelineBareFunction","isPipelinePrimaryTopicReference","isPipelineTopicExpression","isPlaceholder","isProgram","isProperty","isPureish","isQualifiedTypeIdentifier","isRecordExpression","isRegexLiteral","isRestElement","isRestProperty","isReturnStatement","isScopable","isStandardized","isStaticBlock","isStringLiteralTypeAnnotation","isStringTypeAnnotation","isSuper","isSwitchCase","isSwitchStatement","isSymbolTypeAnnotation","isTSAnyKeyword","isTSArrayType","isTSAsExpression","isTSBaseType","isTSBigIntKeyword","isTSBooleanKeyword","isTSCallSignatureDeclaration","isTSConditionalType","isTSConstructSignatureDeclaration","isTSConstructorType","isTSDeclareFunction","isTSDeclareMethod","isTSEntityName","isTSEnumDeclaration","isTSEnumMember","isTSExportAssignment","isTSExpressionWithTypeArguments","isTSExternalModuleReference","isTSFunctionType","isTSImportEqualsDeclaration","isTSImportType","isTSIndexSignature","isTSIndexedAccessType","isTSInferType","isTSInstantiationExpression","isTSInterfaceBody","isTSInterfaceDeclaration","isTSIntersectionType","isTSIntrinsicKeyword","isTSLiteralType","isTSMappedType","isTSMethodSignature","isTSModuleBlock","isTSModuleDeclaration","isTSNamedTupleMember","isTSNamespaceExportDeclaration","isTSNeverKeyword","isTSNonNullExpression","isTSNullKeyword","isTSNumberKeyword","isTSObjectKeyword","isTSOptionalType","isTSParameterProperty","isTSParenthesizedType","isTSPropertySignature","isTSQualifiedName","isTSRestType","isTSStringKeyword","isTSSymbolKeyword","isTSThisType","isTSTupleType","isTSType","isTSTypeAliasDeclaration","isTSTypeAnnotation","isTSTypeAssertion","isTSTypeElement","isTSTypeLiteral","isTSTypeOperator","isTSTypeParameter","isTSTypeParameterDeclaration","isTSTypeParameterInstantiation","isTSTypePredicate","isTSTypeQuery","isTSTypeReference","isTSUndefinedKeyword","isTSUnionType","isTSUnknownKeyword","isTSVoidKeyword","isTaggedTemplateExpression","isTemplateElement","isTerminatorless","isThisTypeAnnotation","isThrowStatement","isTopicReference","isTryStatement","isTupleExpression","isTupleTypeAnnotation","isTypeAlias","isTypeAnnotation","isTypeCastExpression","isTypeParameter","isTypeParameterDeclaration","isTypeParameterInstantiation","isTypeScript","isTypeofTypeAnnotation","isUnaryLike","isUnionTypeAnnotation","isUpdateExpression","isUserWhitespacable","isV8IntrinsicIdentifier","isVariableDeclaration","isVariableDeclarator","isVariance","isVoidTypeAnnotation","isWhile","isWhileStatement","isWithStatement","isYieldExpression","tagName","$ieYmW","lastNonEmptyLine","isFirstLine","isLastLine","isLastNonEmptyLine","trimmedLine","stringLiteral","anyTypeAnnotation","argumentPlaceholder","arrayExpression","$70DJx","arrayPattern","arrayTypeAnnotation","arrowFunctionExpression","assignmentExpression","assignmentPattern","awaitExpression","bigIntLiteral","binaryExpression","bindExpression","blockStatement","booleanLiteral","booleanLiteralTypeAnnotation","booleanTypeAnnotation","breakStatement","callExpression","_arguments","catchClause","classAccessorProperty","typeAnnotation2","classDeclaration","classExpression","classImplements","classMethod","classPrivateMethod","classPrivateProperty","classProperty","typeAnnotation1","conditionalExpression","continueStatement","debuggerStatement","decimalLiteral","declareClass","declareExportAllDeclaration","declareExportDeclaration","declareFunction","declareInterface","declareModule","declareModuleExports","typeAnnotation3","declareOpaqueType","declareTypeAlias","declareVariable","declaredPredicate","doExpression","doWhileStatement","emptyStatement","emptyTypeAnnotation","enumBooleanBody","enumBooleanMember","enumDeclaration","enumDefaultedMember","enumNumberBody","enumNumberMember","enumStringBody","enumStringMember","enumSymbolBody","existsTypeAnnotation","exportAllDeclaration","exportDefaultDeclaration","exportDefaultSpecifier","exportNamedDeclaration","exportNamespaceSpecifier","exportSpecifier","expressionStatement","program1","forInStatement","forOfStatement","forStatement","functionDeclaration","functionExpression","functionTypeAnnotation","functionTypeParam","typeAnnotation4","genericTypeAnnotation","ifStatement","import","importAttribute","importDeclaration","importDefaultSpecifier","importNamespaceSpecifier","indexedAccessType","inferredPredicate","interfaceDeclaration","interfaceExtends","interfaceTypeAnnotation","intersectionTypeAnnotation","jSXAttribute","jsxAttribute","jSXClosingElement","jsxClosingElement","jSXClosingFragment","jsxClosingFragment","jSXElement","jsxElement","jSXEmptyExpression","jsxEmptyExpression","jSXExpressionContainer","jsxExpressionContainer","jSXFragment","jsxFragment","jSXIdentifier","jsxIdentifier","jSXMemberExpression","jsxMemberExpression","jSXNamespacedName","jsxNamespacedName","jSXOpeningElement","jsxOpeningElement","jSXOpeningFragment","jsxOpeningFragment","jSXSpreadAttribute","jsxSpreadAttribute","jSXSpreadChild","jsxSpreadChild","jSXText","labeledStatement","logicalExpression","memberExpression","metaProperty","mixedTypeAnnotation","moduleExpression","newExpression","noop","nullLiteral","nullLiteralTypeAnnotation","nullableTypeAnnotation","typeAnnotation5","numberLiteral","$5a994a4f6012c7eb$var$numericLiteral","numberLiteralTypeAnnotation","numberTypeAnnotation","numericLiteral","objectExpression","objectMethod","objectPattern","objectProperty","objectTypeAnnotation","objectTypeCallProperty","objectTypeIndexer","variance1","objectTypeInternalSlot","objectTypeProperty","variance2","objectTypeSpreadProperty","opaqueType","optionalCallExpression","optionalIndexedAccessType","optionalMemberExpression","parenthesizedExpression","pipelineBareFunction","pipelinePrimaryTopicReference","pipelineTopicExpression","sourceFile","qualifiedTypeIdentifier","recordExpression","regExpLiteral","$5a994a4f6012c7eb$var$regExpLiteral","regexLiteral","restElement","$5a994a4f6012c7eb$var$restElement","restProperty","returnStatement","sequenceExpression","spreadElement","$5a994a4f6012c7eb$var$spreadElement","spreadProperty","staticBlock","stringLiteralTypeAnnotation","stringTypeAnnotation","switchCase","switchStatement","symbolTypeAnnotation","taggedTemplateExpression","templateElement","templateLiteral","thisExpression","thisTypeAnnotation","throwStatement","topicReference","tryStatement","tSAnyKeyword","tsAnyKeyword","tSArrayType","tsArrayType","tSAsExpression","tsAsExpression","typeAnnotation22","tSBigIntKeyword","tsBigIntKeyword","tSBooleanKeyword","tsBooleanKeyword","tSCallSignatureDeclaration","tsCallSignatureDeclaration","typeAnnotation8","tSConditionalType","tsConditionalType","tSConstructSignatureDeclaration","tsConstructSignatureDeclaration","typeAnnotation9","tSConstructorType","tsConstructorType","typeAnnotation14","tSDeclareFunction","tsDeclareFunction","tSDeclareMethod","tsDeclareMethod","tSEnumDeclaration","tsEnumDeclaration","tSEnumMember","tsEnumMember","tSExportAssignment","tsExportAssignment","tSExpressionWithTypeArguments","tsExpressionWithTypeArguments","tSExternalModuleReference","tsExternalModuleReference","tSFunctionType","tsFunctionType","typeAnnotation13","tSImportEqualsDeclaration","tsImportEqualsDeclaration","tSImportType","tsImportType","tSIndexSignature","tsIndexSignature","typeAnnotation12","tSIndexedAccessType","tsIndexedAccessType","tSInferType","tsInferType","typeParameter1","tSInstantiationExpression","tsInstantiationExpression","tSInterfaceBody","tsInterfaceBody","tSInterfaceDeclaration","tsInterfaceDeclaration","tSIntersectionType","tsIntersectionType","tSIntrinsicKeyword","tsIntrinsicKeyword","tSLiteralType","tsLiteralType","tSMappedType","tsMappedType","typeParameter2","typeAnnotation20","tSMethodSignature","tsMethodSignature","typeAnnotation11","tSModuleBlock","tsModuleBlock","tSModuleDeclaration","tsModuleDeclaration","tSNamedTupleMember","tsNamedTupleMember","tSNamespaceExportDeclaration","tsNamespaceExportDeclaration","tSNeverKeyword","tsNeverKeyword","tSNonNullExpression","tsNonNullExpression","tSNullKeyword","tsNullKeyword","tSNumberKeyword","tsNumberKeyword","tSObjectKeyword","tsObjectKeyword","tSOptionalType","tsOptionalType","typeAnnotation16","tSParameterProperty","tsParameterProperty","tSParenthesizedType","tsParenthesizedType","typeAnnotation18","tSPropertySignature","tsPropertySignature","typeAnnotation10","tSQualifiedName","tsQualifiedName","tSRestType","tsRestType","typeAnnotation17","tSStringKeyword","tsStringKeyword","tSSymbolKeyword","tsSymbolKeyword","tSThisType","tsThisType","tSTupleType","tsTupleType","tSTypeAliasDeclaration","tsTypeAliasDeclaration","typeAnnotation21","tSTypeAnnotation","tsTypeAnnotation","typeAnnotation24","tSTypeAssertion","tsTypeAssertion","typeAnnotation23","tSTypeLiteral","tsTypeLiteral","tSTypeOperator","tsTypeOperator","typeAnnotation19","tSTypeParameter","tsTypeParameter","tSTypeParameterDeclaration","tsTypeParameterDeclaration","tSTypeParameterInstantiation","tsTypeParameterInstantiation","tSTypePredicate","tsTypePredicate","typeAnnotation15","tSTypeQuery","tsTypeQuery","tSTypeReference","tsTypeReference","tSUndefinedKeyword","tsUndefinedKeyword","tSUnionType","tsUnionType","tSUnknownKeyword","tsUnknownKeyword","tSVoidKeyword","tsVoidKeyword","tupleExpression","tupleTypeAnnotation","typeAlias","typeAnnotation6","typeCastExpression","typeAnnotation7","variance3","typeParameterDeclaration","typeParameterInstantiation","typeofTypeAnnotation","unaryExpression","unionTypeAnnotation","updateExpression","v8IntrinsicIdentifier","variableDeclaration","variableDeclarator","voidTypeAnnotation","whileStatement","withStatement","yieldExpression","BUILDER_KEYS","fields","NODE_FIELDS","field","$22fbe0e18b3cf805$var$validateField","$22fbe0e18b3cf805$var$validateChild","validateChild","validateField","validate1","NODE_PARENT_VALIDATIONS","$geP65","ALIAS_KEYS","DEPRECATED_KEYS","FLIPPED_ALIAS_KEYS","$bPvXC","PLACEHOLDERS","PLACEHOLDERS_ALIAS","PLACEHOLDERS_FLIPPED_ALIAS","TYPES","VISITOR_KEYS","$cw7K4","$5c04383655a5dc73$var$TYPES","$91ce7a9e0ef20b64$var$fastProto","$91ce7a9e0ef20b64$var$FastObject","patternLikeCommon","functionTypeAnnotationCommon","functionDeclarationCommon","functionCommon","classMethodOrPropertyCommon","classMethodOrDeclareMethodCommon","$00ab94f1c167c340$var$defineType","defineAliasedType","assertValueType","assertEach","assertNodeOrValueType","visitor","aliases","assertNodeType","builder","assertOneOf","BINARY_OPERATORS","inOp","oneOfNodeTypes","each","$00ab94f1c167c340$var$functionCommon","$00ab94f1c167c340$var$functionTypeAnnotationCommon","$00ab94f1c167c340$var$functionDeclarationCommon","$00ab94f1c167c340$var$patternLikeCommon","deprecatedAlias","LOGICAL_OPERATORS","normal","validator2","validator3","UNARY_OPERATORS","UPDATE_OPERATORS","validateOptional","sourced","$00ab94f1c167c340$var$classMethodOrPropertyCommon","$00ab94f1c167c340$var$classMethodOrDeclareMethodCommon","access","assertShape","targetType","placeholderType","reserved","$2Ghih","isIdentifierName","$hXHip","$21Gaf","$d1398804a068893e$var$isIdentifierChar","isFirst","$d1398804a068893e$var$isIdentifierStart","$d1398804a068893e$var$nonASCIIidentifierStartChars","$d1398804a068893e$var$nonASCIIidentifierChars","$d1398804a068893e$var$nonASCIIidentifierStart","$d1398804a068893e$var$nonASCIIidentifier","$d1398804a068893e$var$astralIdentifierStartCodes","$d1398804a068893e$var$astralIdentifierCodes","$d1398804a068893e$var$isInAstralSet","$179c61b5f24e4380$var$keywords","$179c61b5f24e4380$var$isReservedWord","$179c61b5f24e4380$var$isStrictBindOnlyReservedWord","$179c61b5f24e4380$var$isStrictReservedWord","$179c61b5f24e4380$var$reservedWords","$179c61b5f24e4380$var$reservedWordsStrictSet","$179c61b5f24e4380$var$reservedWordsStrictBindSet","STRING_UNARY_OPERATORS","STATEMENT_OR_BLOCK_KEYS","NUMBER_UNARY_OPERATORS","NUMBER_BINARY_OPERATORS","NOT_LOCAL_BINDING","INHERIT_KEYS","FOR_INIT_KEYS","FLATTENABLE_KEYS","EQUALITY_BINARY_OPERATORS","COMPARISON_BINARY_OPERATORS","COMMENT_KEYS","BOOLEAN_UNARY_OPERATORS","BOOLEAN_NUMBER_BINARY_OPERATORS","BOOLEAN_BINARY_OPERATORS","BLOCK_SCOPED_SYMBOL","ASSIGNMENT_OPERATORS","$f5fb3947afd367b8$var$LOGICAL_OPERATORS","$f5fb3947afd367b8$var$BOOLEAN_NUMBER_BINARY_OPERATORS","$f5fb3947afd367b8$var$EQUALITY_BINARY_OPERATORS","$f5fb3947afd367b8$var$COMPARISON_BINARY_OPERATORS","$f5fb3947afd367b8$var$BOOLEAN_BINARY_OPERATORS","$f5fb3947afd367b8$var$NUMBER_BINARY_OPERATORS","$f5fb3947afd367b8$var$BINARY_OPERATORS","$f5fb3947afd367b8$var$ASSIGNMENT_OPERATORS","$f5fb3947afd367b8$var$BOOLEAN_UNARY_OPERATORS","$f5fb3947afd367b8$var$NUMBER_UNARY_OPERATORS","$f5fb3947afd367b8$var$STRING_UNARY_OPERATORS","$f5fb3947afd367b8$var$UNARY_OPERATORS","force","$f5fb3947afd367b8$var$BLOCK_SCOPED_SYMBOL","for","$f5fb3947afd367b8$var$NOT_LOCAL_BINDING","arrayOf","$bd2596f9b7417687$var$arrayOf","arrayOfType","$bd2596f9b7417687$var$arrayOfType","$bd2596f9b7417687$var$assertEach","validate5","$bd2596f9b7417687$var$getType","oneOfNodeOrValueTypes","$bd2596f9b7417687$var$assertNodeType","validate3","oneOf","assertOptionalChainStart","_current","shape","validate7","shapeOf","$bd2596f9b7417687$var$assertValueType","$bd2596f9b7417687$var$chain","$bd2596f9b7417687$var$defineType","defined","_store$opts$inherits$","$bd2596f9b7417687$var$store","additional","typeIs","$bd2596f9b7417687$var$typeIs","$bd2596f9b7417687$var$validate","validateArrayOfType","validate2","validateOptionalType","validateType","$bd2596f9b7417687$var$VISITOR_KEYS","$bd2596f9b7417687$var$ALIAS_KEYS","$bd2596f9b7417687$var$FLIPPED_ALIAS_KEYS","$bd2596f9b7417687$var$NODE_FIELDS","$bd2596f9b7417687$var$BUILDER_KEYS","$bd2596f9b7417687$var$DEPRECATED_KEYS","$bd2596f9b7417687$var$NODE_PARENT_VALIDATIONS","validator","subkey","v","validate4","validate6","fns","validate9","chainOf","$bd2596f9b7417687$var$validTypeOpts","$bd2596f9b7417687$var$validFieldKeys","def","$7a48699368d2991e$var$defineType","$7a48699368d2991e$var$defineInterfaceishType","$3be4128720dac00f$var$defineType","$4d4842861c26490e$var$defineType","$89cd3fd5491c75b6$var$PLACEHOLDERS","$89cd3fd5491c75b6$var$PLACEHOLDERS_ALIAS","Declaration","Pattern","$89cd3fd5491c75b6$var$PLACEHOLDERS_FLIPPED_ALIAS","type1","$90d5df33cd8cd7d3$var$defineType","$90d5df33cd8cd7d3$var$bool","$90d5df33cd8cd7d3$var$tSFunctionTypeAnnotationCommon","$03zc9","$90d5df33cd8cd7d3$var$signatureDeclarationCommon","$90d5df33cd8cd7d3$var$callConstructSignatureDeclaration","$90d5df33cd8cd7d3$var$namedTypeElementCommon","$90d5df33cd8cd7d3$var$tsKeywordTypes","$90d5df33cd8cd7d3$var$fnOrCtrBase","$90d5df33cd8cd7d3$var$unionOrIntersection","unaryOperator","_node$type","assertAccessor","$2cc261e9204aa0d7$var$assert","assertAnyTypeAnnotation","assertArgumentPlaceholder","assertArrayExpression","assertArrayPattern","assertArrayTypeAnnotation","assertArrowFunctionExpression","assertAssignmentExpression","assertAssignmentPattern","assertAwaitExpression","assertBigIntLiteral","assertBinary","assertBinaryExpression","assertBindExpression","assertBlock","assertBlockParent","assertBlockStatement","assertBooleanLiteral","assertBooleanLiteralTypeAnnotation","assertBooleanTypeAnnotation","assertBreakStatement","assertCallExpression","assertCatchClause","assertClass","assertClassAccessorProperty","assertClassBody","assertClassDeclaration","assertClassExpression","assertClassImplements","assertClassMethod","assertClassPrivateMethod","assertClassPrivateProperty","assertClassProperty","assertCompletionStatement","assertConditional","assertConditionalExpression","assertContinueStatement","assertDebuggerStatement","assertDecimalLiteral","assertDeclaration","assertDeclareClass","assertDeclareExportAllDeclaration","assertDeclareExportDeclaration","assertDeclareFunction","assertDeclareInterface","assertDeclareModule","assertDeclareModuleExports","assertDeclareOpaqueType","assertDeclareTypeAlias","assertDeclareVariable","assertDeclaredPredicate","assertDecorator","assertDirective","assertDirectiveLiteral","assertDoExpression","assertDoWhileStatement","assertEmptyStatement","assertEmptyTypeAnnotation","assertEnumBody","assertEnumBooleanBody","assertEnumBooleanMember","assertEnumDeclaration","assertEnumDefaultedMember","assertEnumMember","assertEnumNumberBody","assertEnumNumberMember","assertEnumStringBody","assertEnumStringMember","assertEnumSymbolBody","assertExistsTypeAnnotation","assertExportAllDeclaration","assertExportDeclaration","assertExportDefaultDeclaration","assertExportDefaultSpecifier","assertExportNamedDeclaration","assertExportNamespaceSpecifier","assertExportSpecifier","assertExpression","assertExpressionStatement","assertExpressionWrapper","assertFile","assertFlow","assertFlowBaseAnnotation","assertFlowDeclaration","assertFlowPredicate","assertFlowType","assertFor","assertForInStatement","assertForOfStatement","assertForStatement","assertForXStatement","assertFunction","assertFunctionDeclaration","assertFunctionExpression","assertFunctionParent","assertFunctionTypeAnnotation","assertFunctionTypeParam","assertGenericTypeAnnotation","assertIdentifier","assertIfStatement","assertImmutable","assertImport","assertImportAttribute","assertImportDeclaration","assertImportDefaultSpecifier","assertImportNamespaceSpecifier","assertImportSpecifier","assertIndexedAccessType","assertInferredPredicate","assertInterfaceDeclaration","assertInterfaceExtends","assertInterfaceTypeAnnotation","assertInterpreterDirective","assertIntersectionTypeAnnotation","assertJSX","assertJSXAttribute","assertJSXClosingElement","assertJSXClosingFragment","assertJSXElement","assertJSXEmptyExpression","assertJSXExpressionContainer","assertJSXFragment","assertJSXIdentifier","assertJSXMemberExpression","assertJSXNamespacedName","assertJSXOpeningElement","assertJSXOpeningFragment","assertJSXSpreadAttribute","assertJSXSpreadChild","assertJSXText","assertLVal","assertLabeledStatement","assertLiteral","assertLogicalExpression","assertLoop","assertMemberExpression","assertMetaProperty","assertMethod","assertMiscellaneous","assertMixedTypeAnnotation","assertModuleDeclaration","assertModuleExpression","assertModuleSpecifier","assertNewExpression","assertNoop","assertNullLiteral","assertNullLiteralTypeAnnotation","assertNullableTypeAnnotation","assertNumberLiteral","assertNumberLiteralTypeAnnotation","assertNumberTypeAnnotation","assertNumericLiteral","assertObjectExpression","assertObjectMember","assertObjectMethod","assertObjectPattern","assertObjectProperty","assertObjectTypeAnnotation","assertObjectTypeCallProperty","assertObjectTypeIndexer","assertObjectTypeInternalSlot","assertObjectTypeProperty","assertObjectTypeSpreadProperty","assertOpaqueType","assertOptionalCallExpression","assertOptionalIndexedAccessType","assertOptionalMemberExpression","assertParenthesizedExpression","assertPattern","assertPatternLike","assertPipelineBareFunction","assertPipelinePrimaryTopicReference","assertPipelineTopicExpression","assertPlaceholder","assertPrivate","assertPrivateName","assertProgram","assertProperty","assertPureish","assertQualifiedTypeIdentifier","assertRecordExpression","assertRegExpLiteral","assertRegexLiteral","assertRestElement","assertRestProperty","assertReturnStatement","assertScopable","assertSequenceExpression","assertSpreadElement","assertSpreadProperty","assertStandardized","assertStatement","assertStaticBlock","assertStringLiteral","assertStringLiteralTypeAnnotation","assertStringTypeAnnotation","assertSuper","assertSwitchCase","assertSwitchStatement","assertSymbolTypeAnnotation","assertTSAnyKeyword","assertTSArrayType","assertTSAsExpression","assertTSBaseType","assertTSBigIntKeyword","assertTSBooleanKeyword","assertTSCallSignatureDeclaration","assertTSConditionalType","assertTSConstructSignatureDeclaration","assertTSConstructorType","assertTSDeclareFunction","assertTSDeclareMethod","assertTSEntityName","assertTSEnumDeclaration","assertTSEnumMember","assertTSExportAssignment","assertTSExpressionWithTypeArguments","assertTSExternalModuleReference","assertTSFunctionType","assertTSImportEqualsDeclaration","assertTSImportType","assertTSIndexSignature","assertTSIndexedAccessType","assertTSInferType","assertTSInstantiationExpression","assertTSInterfaceBody","assertTSInterfaceDeclaration","assertTSIntersectionType","assertTSIntrinsicKeyword","assertTSLiteralType","assertTSMappedType","assertTSMethodSignature","assertTSModuleBlock","assertTSModuleDeclaration","assertTSNamedTupleMember","assertTSNamespaceExportDeclaration","assertTSNeverKeyword","assertTSNonNullExpression","assertTSNullKeyword","assertTSNumberKeyword","assertTSObjectKeyword","assertTSOptionalType","assertTSParameterProperty","assertTSParenthesizedType","assertTSPropertySignature","assertTSQualifiedName","assertTSRestType","assertTSStringKeyword","assertTSSymbolKeyword","assertTSThisType","assertTSTupleType","assertTSType","assertTSTypeAliasDeclaration","assertTSTypeAnnotation","assertTSTypeAssertion","assertTSTypeElement","assertTSTypeLiteral","assertTSTypeOperator","assertTSTypeParameter","assertTSTypeParameterDeclaration","assertTSTypeParameterInstantiation","assertTSTypePredicate","assertTSTypeQuery","assertTSTypeReference","assertTSUndefinedKeyword","assertTSUnionType","assertTSUnknownKeyword","assertTSVoidKeyword","assertTaggedTemplateExpression","assertTemplateElement","assertTemplateLiteral","assertTerminatorless","assertThisExpression","assertThisTypeAnnotation","assertThrowStatement","assertTopicReference","assertTryStatement","assertTupleExpression","assertTupleTypeAnnotation","assertTypeAlias","assertTypeAnnotation","assertTypeCastExpression","assertTypeParameter","assertTypeParameterDeclaration","assertTypeParameterInstantiation","assertTypeScript","assertTypeofTypeAnnotation","assertUnaryExpression","assertUnaryLike","assertUnionTypeAnnotation","assertUpdateExpression","assertUserWhitespacable","assertV8IntrinsicIdentifier","assertVariableDeclaration","assertVariableDeclarator","assertVariance","assertVoidTypeAnnotation","assertWhile","assertWhileStatement","assertWithStatement","assertYieldExpression","$cefd8bd39128fdc0$var$_default","flattened","$d996afad68f1690b$var$removeTypeDuplicates","generics","bases","typeGroups","$d996afad68f1690b$var$getQualifiedName","existing","baseType","genericName","typeAnnotations","$8Lukz","$661a3d9259d91601$var$removeTypeDuplicates","$661a3d9259d91601$var$getQualifiedName","deep","withoutLoc","$ea28b4bc9d93b740$var$cloneNodeInternal","$ea28b4bc9d93b740$var$has","$ea28b4bc9d93b740$var$cloneIfNode","commentsCache","$ea28b4bc9d93b740$var$cloneIfNodeOrArray","$ea28b4bc9d93b740$var$maybeCloneComments","cache","$jIIa2","WHILE_TYPES","USERWHITESPACABLE_TYPES","UNARYLIKE_TYPES","TYPESCRIPT_TYPES","TSTYPE_TYPES","TSTYPEELEMENT_TYPES","TSENTITYNAME_TYPES","TSBASETYPE_TYPES","TERMINATORLESS_TYPES","STATEMENT_TYPES","STANDARDIZED_TYPES","SCOPABLE_TYPES","PUREISH_TYPES","PROPERTY_TYPES","PRIVATE_TYPES","PATTERN_TYPES","PATTERNLIKE_TYPES","OBJECTMEMBER_TYPES","MODULESPECIFIER_TYPES","MODULEDECLARATION_TYPES","MISCELLANEOUS_TYPES","METHOD_TYPES","LVAL_TYPES","LOOP_TYPES","LITERAL_TYPES","JSX_TYPES","IMMUTABLE_TYPES","FUNCTION_TYPES","FUNCTIONPARENT_TYPES","FOR_TYPES","FORXSTATEMENT_TYPES","FLOW_TYPES","FLOWTYPE_TYPES","FLOWPREDICATE_TYPES","FLOWDECLARATION_TYPES","FLOWBASEANNOTATION_TYPES","EXPRESSION_TYPES","EXPRESSIONWRAPPER_TYPES","EXPORTDECLARATION_TYPES","ENUMMEMBER_TYPES","ENUMBODY_TYPES","DECLARATION_TYPES","CONDITIONAL_TYPES","COMPLETIONSTATEMENT_TYPES","CLASS_TYPES","BLOCK_TYPES","BLOCKPARENT_TYPES","BINARY_TYPES","ACCESSOR_TYPES","$78f54c3a809be9bc$var$STANDARDIZED_TYPES","$78f54c3a809be9bc$var$EXPRESSION_TYPES","$78f54c3a809be9bc$var$BINARY_TYPES","$78f54c3a809be9bc$var$SCOPABLE_TYPES","$78f54c3a809be9bc$var$BLOCKPARENT_TYPES","$78f54c3a809be9bc$var$BLOCK_TYPES","$78f54c3a809be9bc$var$STATEMENT_TYPES","$78f54c3a809be9bc$var$TERMINATORLESS_TYPES","$78f54c3a809be9bc$var$COMPLETIONSTATEMENT_TYPES","$78f54c3a809be9bc$var$CONDITIONAL_TYPES","$78f54c3a809be9bc$var$LOOP_TYPES","$78f54c3a809be9bc$var$WHILE_TYPES","$78f54c3a809be9bc$var$EXPRESSIONWRAPPER_TYPES","$78f54c3a809be9bc$var$FOR_TYPES","$78f54c3a809be9bc$var$FORXSTATEMENT_TYPES","$78f54c3a809be9bc$var$FUNCTION_TYPES","$78f54c3a809be9bc$var$FUNCTIONPARENT_TYPES","$78f54c3a809be9bc$var$PUREISH_TYPES","$78f54c3a809be9bc$var$DECLARATION_TYPES","$78f54c3a809be9bc$var$PATTERNLIKE_TYPES","$78f54c3a809be9bc$var$LVAL_TYPES","$78f54c3a809be9bc$var$TSENTITYNAME_TYPES","$78f54c3a809be9bc$var$LITERAL_TYPES","$78f54c3a809be9bc$var$IMMUTABLE_TYPES","$78f54c3a809be9bc$var$USERWHITESPACABLE_TYPES","$78f54c3a809be9bc$var$METHOD_TYPES","$78f54c3a809be9bc$var$OBJECTMEMBER_TYPES","$78f54c3a809be9bc$var$PROPERTY_TYPES","$78f54c3a809be9bc$var$UNARYLIKE_TYPES","$78f54c3a809be9bc$var$PATTERN_TYPES","$78f54c3a809be9bc$var$CLASS_TYPES","$78f54c3a809be9bc$var$MODULEDECLARATION_TYPES","$78f54c3a809be9bc$var$EXPORTDECLARATION_TYPES","$78f54c3a809be9bc$var$MODULESPECIFIER_TYPES","$78f54c3a809be9bc$var$ACCESSOR_TYPES","$78f54c3a809be9bc$var$PRIVATE_TYPES","$78f54c3a809be9bc$var$FLOW_TYPES","$78f54c3a809be9bc$var$FLOWTYPE_TYPES","$78f54c3a809be9bc$var$FLOWBASEANNOTATION_TYPES","$78f54c3a809be9bc$var$FLOWDECLARATION_TYPES","$78f54c3a809be9bc$var$FLOWPREDICATE_TYPES","$78f54c3a809be9bc$var$ENUMBODY_TYPES","$78f54c3a809be9bc$var$ENUMMEMBER_TYPES","$78f54c3a809be9bc$var$JSX_TYPES","$78f54c3a809be9bc$var$MISCELLANEOUS_TYPES","$78f54c3a809be9bc$var$TYPESCRIPT_TYPES","$78f54c3a809be9bc$var$TSTYPEELEMENT_TYPES","$78f54c3a809be9bc$var$TSTYPE_TYPES","$78f54c3a809be9bc$var$TSBASETYPE_TYPES","blockNodes","c1","$09979485a76b27a0$var$_default","$f38d740c6640a977$var$toKeyAlias","increment","uid","MAX_SAFE_INTEGER","tree","$3e3f06a5a5f25986$var$traverseFast","subNode","node1","preserveComments","$1108252261846108$var$CLEAR_KEYS","$1108252261846108$var$CLEAR_KEYS_PLUS_COMMENTS","symbols","declars","$dSI8Z","declar","$a1b28f95107f334a$var$gatherSequenceExpressions","exprs","ensureLastUndefined","bindings","buildUndefinedNode","$2b0024650205911d$var$getBindingIdentifiers","duplicates","outerOnly","ids","DeclareClass","DeclareFunction","DeclareModule","DeclareVariable","DeclareInterface","DeclareTypeAlias","DeclareOpaqueType","InterfaceDeclaration","TypeAlias","OpaqueType","CatchClause","LabeledStatement","UnaryExpression","ImportSpecifier","ImportNamespaceSpecifier","ImportDefaultSpecifier","ImportDeclaration","ExportSpecifier","ExportNamespaceSpecifier","ExportDefaultSpecifier","FunctionDeclaration","FunctionExpression","ObjectMethod","ClassMethod","ClassPrivateMethod","ClassDeclaration","ClassExpression","VariableDeclaration","$9aa35fb2226fafde$var$_default","ignore","newType","mustHaveId","$c59d14d865803f17$var$_default","$c59d14d865803f17$var$valueToNode","abs","numerator","$c59d14d865803f17$var$objectToString","$c59d14d865803f17$var$isRegExp","$c59d14d865803f17$var$isPlainObject","nodeKey","append","prepend","$4b53dc5636a53103$var$_default","handlers","$d63b1d9d92176341$var$traverseSimpleImpl","ancestors","grandparent","$fffdfa73cd5f8dcf$var$isNodesEquivalent","visitorKeys","val_a","val_b","$111124621d68be27$var$RESERVED_WORDS_ES3_ONLY","$119c3df2c609e4d4$export$2e2bcd8739ae039","$2c6896eb3a53c774$var$walkAST","parents","replace1","replacement","arrayAllowed","walkAndMergeNodes","nodes1","$95397cb523e2e5b1$var$t","$95397cb523e2e5b1$var$__importStar","t1","$95397cb523e2e5b1$var$FLIPPED_ALIAS_KEYS","$95397cb523e2e5b1$var$TYPES","results","concreteKey","$5265670df4a182af$var$assert_never_1","$5265670df4a182af$var$__importDefault","$5265670df4a182af$var$t","$5265670df4a182af$var$__importStar","$5265670df4a182af$var$reference_1","$5265670df4a182af$var$isScope","$5265670df4a182af$var$isBlockScope","$5265670df4a182af$var$declaresArguments","$5265670df4a182af$var$declaresThis","$5265670df4a182af$var$LOCALS_SYMBOL","$5265670df4a182af$var$getLocals","$5265670df4a182af$var$setLocal","$5265670df4a182af$var$declareLocals","$5265670df4a182af$var$declarePattern","$5265670df4a182af$var$declareModuleSpecifier","_state","$5265670df4a182af$var$firstPass","$bA11T","TryStatement","$5265670df4a182af$var$secondPass","lastParent","globals","ThisExpression","groupedGlobals","sort","$88000611fb850736$var$assertNever","noThrow","assertNever","$86e3daf14815a362$var$t","$86e3daf14815a362$var$__importStar","$86e3daf14815a362$var$explode_1","$86e3daf14815a362$var$__importDefault","$86e3daf14815a362$var$VISITOR_KEYS","visitors","vis","recurse","subSubNode","v1","isNew","v2","recursive","node3","$c0f5b05271e72b3b$var$t","$c0f5b05271e72b3b$var$__importStar","b64","lens","$eeb0961446aae8e3$var$getLens","validLen","placeHoldersLen","$eeb0961446aae8e3$var$Arr","$eeb0961446aae8e3$var$_byteLength","curByte","len2","$eeb0961446aae8e3$var$revLookup","uint8","len3","extraBytes","maxChunkLength","i3","$eeb0961446aae8e3$var$encodeChunk","$eeb0961446aae8e3$var$lookup","$7221566bd4d49f44$export$aafa59e2e03f2942","$7221566bd4d49f44$export$68d8715fc104d294","$eeb0961446aae8e3$var$code","$eeb0961446aae8e3$var$i","$eeb0961446aae8e3$var$len","len1","i2","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","s","rt","LN2","$51861dfc7ca9d588$var$customInspectSymbol","$51861dfc7ca9d588$var$Buffer","$51861dfc7ca9d588$var$createBuffer","buf","encodingOrOffset","$51861dfc7ca9d588$var$allocUnsafe","$51861dfc7ca9d588$var$from","encoding","isEncoding","$51861dfc7ca9d588$var$byteLength","write","$51861dfc7ca9d588$var$fromString","arrayView","$51861dfc7ca9d588$var$isInstance","$51861dfc7ca9d588$var$fromArrayBuffer","$51861dfc7ca9d588$var$fromArrayLike","$51861dfc7ca9d588$var$fromArrayView","$51861dfc7ca9d588$var$checked","$51861dfc7ca9d588$var$numberIsNaN","$51861dfc7ca9d588$var$fromObject","$51861dfc7ca9d588$var$assertSize","mustMatch","loweredCase","$51861dfc7ca9d588$var$utf8ToBytes","$51861dfc7ca9d588$var$base64ToBytes","toLowerCase","$51861dfc7ca9d588$var$slowToString","$51861dfc7ca9d588$var$hexSlice","$51861dfc7ca9d588$var$utf8Slice","$51861dfc7ca9d588$var$asciiSlice","$51861dfc7ca9d588$var$latin1Slice","$51861dfc7ca9d588$var$base64Slice","$51861dfc7ca9d588$var$utf16leSlice","$51861dfc7ca9d588$var$swap","$51861dfc7ca9d588$var$bidirectionalIndexOf","$51861dfc7ca9d588$var$arrayIndexOf","indexSize","arrLength","valLength","read","readUInt16BE","foundIndex","found","$51861dfc7ca9d588$var$hexWrite","strLen","$51861dfc7ca9d588$var$utf8Write","$51861dfc7ca9d588$var$blitBuffer","$51861dfc7ca9d588$var$asciiWrite","byteArray","$51861dfc7ca9d588$var$asciiToBytes","$51861dfc7ca9d588$var$base64Write","$51861dfc7ca9d588$var$ucs2Write","units","hi","lo","$51861dfc7ca9d588$var$utf16leToBytes","firstByte","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","codePoints","$51861dfc7ca9d588$var$decodeCodePointsArray","TYPED_ARRAY_SUPPORT","foo","$51861dfc7ca9d588$var$typedArraySupport","poolSize","alloc","$51861dfc7ca9d588$var$alloc","allocUnsafe","allocUnsafeSlow","_isBuffer","compare","swap16","swap32","swap64","toLocaleString","equals","trim","thisStart","thisEnd","thisCopy","targetCopy","$51861dfc7ca9d588$var$hexSliceLookupTable","bytes","$51861dfc7ca9d588$var$checkOffset","$51861dfc7ca9d588$var$checkInt","$51861dfc7ca9d588$var$wrtBigUInt64LE","$51861dfc7ca9d588$var$checkIntBI","$51861dfc7ca9d588$var$wrtBigUInt64BE","$51861dfc7ca9d588$var$checkIEEE754","$51861dfc7ca9d588$var$writeFloat","littleEndian","noAssert","$51861dfc7ca9d588$var$writeDouble","newBuf","subarray","readUintLE","readUIntLE","byteLength1","mul","readUintBE","readUIntBE","byteLength2","readUint8","readUint16LE","readUInt16LE","readUint16BE","readUint32LE","readUInt32LE","readUint32BE","readUInt32BE","readBigUInt64LE","$51861dfc7ca9d588$var$defineBigIntMethod","$51861dfc7ca9d588$var$validateNumber","$51861dfc7ca9d588$var$boundsError","readBigUInt64BE","readIntLE","byteLength3","readIntBE","byteLength4","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readBigInt64LE","readBigInt64BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUintLE","writeUIntLE","byteLength5","writeUintBE","writeUIntBE","byteLength6","writeUint8","writeUInt8","writeUint16LE","writeUInt16LE","writeUint16BE","writeUInt16BE","writeUint32LE","writeUInt32LE","writeUint32BE","writeUInt32BE","writeBigUInt64LE","writeBigUInt64BE","writeIntLE","byteLength7","writeIntBE","byteLength8","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeBigInt64LE","writeBigInt64BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","copyWithin","$51861dfc7ca9d588$var$errors","$51861dfc7ca9d588$var$E","$51861dfc7ca9d588$var$addNumericalSeparator","byteLength10","ERR_OUT_OF_RANGE","byteLength9","$51861dfc7ca9d588$var$checkBounds","ERR_BUFFER_OUT_OF_BOUNDS","received","isInteger","$51861dfc7ca9d588$var$INVALID_BASE64_RE","leadSurrogate","$51861dfc7ca9d588$var$base64clean","dst","alphabet","table","i16","$51861dfc7ca9d588$var$BufferBigIntNotDefined","$2aae4041810abf25$var$reservedWords","strictBind","$2aae4041810abf25$var$ecma5AndLessKeywords","$2aae4041810abf25$var$keywords","$2aae4041810abf25$var$keywordRelationalOperator","$2aae4041810abf25$var$nonASCIIidentifierStartChars","$2aae4041810abf25$var$nonASCIIidentifierChars","$2aae4041810abf25$var$nonASCIIidentifierStart","$2aae4041810abf25$var$nonASCIIidentifier","$2aae4041810abf25$var$astralIdentifierStartCodes","$2aae4041810abf25$var$astralIdentifierCodes","$2aae4041810abf25$var$isInAstralSet","$2aae4041810abf25$export$56b48cc5d7560ffb","astral","$2aae4041810abf25$export$332f4d7bee38db93","$2aae4041810abf25$export$f435f793048e7a0f","$2aae4041810abf25$var$binop","$2aae4041810abf25$var$beforeExpr","$2aae4041810abf25$var$startsExpr","$2aae4041810abf25$export$d53f8326294b31d8","$2aae4041810abf25$var$kw","$2aae4041810abf25$export$b54c7ea7aabba5c8","invalidTemplate","starstar","$2aae4041810abf25$export$a1aa2dd4ad0d3f6","$2aae4041810abf25$export$866e20207bbc41f2","$2aae4041810abf25$export$2c19a3e3b4008fff","ecma2019String","$2aae4041810abf25$export$268622f0f1cbc82b","$2aae4041810abf25$var$skipWhiteSpace","$2aae4041810abf25$var$ref","$2aae4041810abf25$var$hasOwnProperty","$2aae4041810abf25$var$toString","$2aae4041810abf25$var$has","propName","$2aae4041810abf25$var$isArray","$2aae4041810abf25$var$wordsRegexp","words","$2aae4041810abf25$export$13807d9ee5a34a42","$2aae4041810abf25$export$7387db7caf96fcdb","$2aae4041810abf25$export$7af82191547c5ff7","$2aae4041810abf25$export$ba43bf67f3d48107","ecmaVersion","onInsertedSemicolon","onTrailingComma","allowReserved","allowHashBang","locations","onToken","onComment","directSourceFile","preserveParens","$2aae4041810abf25$var$getOptions","$2aae4041810abf25$var$pushComment","$2aae4041810abf25$var$functionFlags","$2aae4041810abf25$export$7acfa6ed01010e37","reservedStrict","reservedWordsStrict","reservedWordsStrictBind","lastTokEnd","initialContext","exprAllowed","strictDirective","yieldPos","awaitPos","awaitIdentPos","enterScope","regexpState","$2aae4041810abf25$var$prototypeAccessors","inGenerator","inAsync","currentVarScope","currentThisScope","extend","parseExpressionAt","tokenizer","$2aae4041810abf25$var$pp","$2aae4041810abf25$var$literal","$2aae4041810abf25$var$DestructuringErrors","shorthandAssign","parenthesizedAssign","parenthesizedBind","doubleProto","spaceAfter","insertSemicolon","afterTrailingComma","tokType","notNext","checkPatternErrors","refDestructuringErrors","raiseRecoverable","parens","checkYieldAwaitInDefaultParams","isSimpleAssignTarget","$2aae4041810abf25$var$pp$1","adaptDirectivePrologue","$2aae4041810abf25$var$loopLabel","$2aae4041810abf25$var$switchLabel","skip","parseIdent","parseParenExpression","init$1","$2aae4041810abf25$var$FUNC_STATEMENT","$2aae4041810abf25$var$FUNC_HANGING_STATEMENT","exitScope","$2aae4041810abf25$var$empty","i$1","label$1","exitStrict","oldYieldPos","oldAwaitPos","oldAwaitIdentPos","parseClassElement","constructorAllowsSuper","this$1","tryContextual","noLineBreak","parseClassMethod","fNode","cNode","shouldParseExportStatement","checkVariableExport","spec","checkUnreserved","checkPatternExport","pat","list$1","decls","parseImportSpecifiers","node$1","node$2","statements","isDirectiveCandidate","$2aae4041810abf25$var$pp$2","parseObj","allowTrailingComma","parseBindingListItem","$2aae4041810abf25$var$pp$3","checkPropClash","noIn","ownDestructuringErrors","oldParenAssign","oldTrailingComma","buildBinary","optionalChained","chainNode","optionalSupported","parseExprImport","parseDynamicImport","parseImportMeta","errorPos","spreadStart","lastIsComma","innerEndPos","parseParenArrowList","par","$2aae4041810abf25$var$empty$1","ref1","ref2","isAsyncProp","parseProperty","parsePropertyValue","useStrict","nameHash","ref3","$2aae4041810abf25$var$pp$4","raisedAt","$2aae4041810abf25$var$pp$5","$2aae4041810abf25$var$Scope","redeclared","scope$2","scope$3","$2aae4041810abf25$var$SCOPE_TOP","$2aae4041810abf25$export$85c928794f8d04d4","$2aae4041810abf25$var$pp$6","$2aae4041810abf25$var$finishNodeAt","$2aae4041810abf25$export$68e7b4c4d99215d9","isExpr","$2aae4041810abf25$export$2b5f701edfbd6f00","b_stat","b_expr","b_tmpl","p_stat","p_expr","q_tmpl","tryReadTemplateToken","f_stat","f_expr","f_expr_gen","f_gen","$2aae4041810abf25$var$pp$7","braceIsBlock","inGeneratorContext","statementParens","allowed","$2aae4041810abf25$var$ecma9BinaryProperties","$2aae4041810abf25$var$ecma10BinaryProperties","$2aae4041810abf25$var$unicodeBinaryProperties","$2aae4041810abf25$var$unicodeGeneralCategoryValues","$2aae4041810abf25$var$ecma9ScriptValues","$2aae4041810abf25$var$ecma10ScriptValues","$2aae4041810abf25$var$unicodeScriptValues","$2aae4041810abf25$var$data","$2aae4041810abf25$var$buildUnicodeData","binary","nonBinary","General_Category","Script","Script_Extensions","gc","sc","scx","$2aae4041810abf25$var$pp$8","$2aae4041810abf25$var$RegExpValidationState","validFlags","unicodeProperties","switchU","switchN","lastIntValue","lastStringValue","lastAssertionIsQuantifiable","numCapturingParens","maxBackReference","groupNames","backReferenceNames","$2aae4041810abf25$var$codePointToString","$2aae4041810abf25$var$isSyntaxCharacter","$2aae4041810abf25$var$isControlLetter","$2aae4041810abf25$var$isUnicodePropertyNameCharacter","$2aae4041810abf25$var$isUnicodePropertyValueCharacter","$2aae4041810abf25$var$isDecimalDigit","$2aae4041810abf25$var$isHexDigit","$2aae4041810abf25$var$hexToInt","$2aae4041810abf25$var$isOctalDigit","reset","unicode","forceU","advance","validateRegExpFlags","flag","validateRegExpPattern","regexp_pattern","regexp_disjunction","regexp_alternative","regexp_eatQuantifier","regexp_eatTerm","regexp_eatAssertion","regexp_eatAtom","regexp_eatExtendedAtom","lookbehind","noError","regexp_eatQuantifierPrefix","regexp_eatBracedQuantifier","regexp_eatDecimalDigits","regexp_eatPatternCharacters","regexp_eatReverseSolidusAtomEscape","regexp_eatCharacterClass","regexp_eatUncapturingGroup","regexp_eatCapturingGroup","regexp_eatAtomEscape","regexp_groupSpecifier","regexp_eatInvalidBracedQuantifier","regexp_eatExtendedPatternCharacter","regexp_eatSyntaxCharacter","regexp_eatGroupName","regexp_eatRegExpIdentifierName","regexp_eatRegExpIdentifierStart","regexp_eatRegExpIdentifierPart","regexp_eatRegExpUnicodeEscapeSequence","$2aae4041810abf25$var$isRegExpIdentifierStart","$2aae4041810abf25$var$isRegExpIdentifierPart","regexp_eatBackReference","regexp_eatCharacterClassEscape","regexp_eatCharacterEscape","regexp_eatKGroupName","regexp_eatDecimalEscape","regexp_eatControlEscape","regexp_eatCControlLetter","regexp_eatZero","regexp_eatHexEscapeSequence","regexp_eatLegacyOctalEscapeSequence","regexp_eatIdentityEscape","regexp_eatControlLetter","regexp_eatFixedHexDigits","lead","leadSurrogateEnd","regexp_eatHexDigits","$2aae4041810abf25$var$isCharacterClassEscape","regexp_eatUnicodePropertyValueExpression","regexp_eatUnicodePropertyName","regexp_eatUnicodePropertyValue","regexp_validateUnicodePropertyNameAndValue","regexp_eatLoneUnicodePropertyNameOrValue","nameOrValue","regexp_validateUnicodePropertyNameOrValue","regexp_classRanges","regexp_eatClassAtom","regexp_eatClassEscape","ch$1","regexp_eatClassControlLetter","regexp_eatOctalDigit","n1","n2","$2aae4041810abf25$export$50792b0e93539fde","$2aae4041810abf25$var$pp$9","$2aae4041810abf25$var$stringToBigInt","$2aae4041810abf25$var$codePointToString$1","ignoreEscapeSequenceInKeyword","getToken","readToken","fullCharCodeAtPos","readToken_mult_modulo_exp","tokentype","readToken_lt_gt","flagsStart","maybeLegacyOctalNumericLiteral","allowSeparators","isLegacyOctalNumericLiteral","lastCode","val$1","invalidStringToken","$2aae4041810abf25$var$INVALID_TEMPLATE_ESCAPE_ERROR","inTemplateElement","readTmplToken","readInvalidTemplateToken","acorn","getLineInfo","TokenType","tokContexts","nonASCIIwhitespace","$5f82c58e3d599bd6$var$getOwnPropertySymbols","$5f82c58e3d599bd6$var$hasOwnProperty","$5f82c58e3d599bd6$var$propIsEnumerable","$5f82c58e3d599bd6$var$toObject","$5f82c58e3d599bd6$exports","test1","test2","test3","letter","$5f82c58e3d599bd6$var$shouldUseNative","$76211e4d1b1c79e8$exports","$76211e4d1b1c79e8$var$DEFAULT_OPTIONS","lineComment","throw","$84261211743c449f$var$Lexer","originalInput","interpolated","lineno","startingLine","colno","startingColumn","indentStack","indentRe","interpolationAllowed","whitespaceRe","ended","$84261211743c449f$exports","lexer","getTokens","Lexer","exp","callLexerFunction","incrementLine","incrementColumn","assertNestingCorrect","$h21Jf","tokEnd","consume","captures","diff","scanEndOfLine","whitespace","whitespaceLength","newInput","bracketExpression","nextNewline","ptr","scanIndentation","eos","blank","interpolation","splitted","inInclude","doctype","className","endInterpolation","addText","indexOfEnd","indexOfStart","indexOfEscaped","matchOfStringInterp","indexOfStringInterp","mustEscape","textHtml","mode","mixinBlock","yield","include","case","when","mixin","conditional","js","while","eachOf","shortened","consumed","blockCode","attribute","valueResponse","attributeValue","remainingSource","quoteRe","escapeAttr","isNotPunctuator","isQuote","isColon","isSpreadOperator","attributesBlock","indent","indents","outdent_count","pipelessText","isMatch","token_indent","stringPtr","lineCaptures","lineIndents","pluginArgs","$6300e90a4d602223$var$unexpectedToken","occasion","$6300e90a4d602223$exports","stripUnbuffered","stripBuffered","inComment","inPipelessText","$a30d06dc17837f39$var$TokenStream","_tokens","$a30d06dc17837f39$exports","peek","defer","$be1f7d9901907c7a$var$Parser","inMixin","$9be94cd4c2564b74$exports","$be1f7d9901907c7a$exports","emptyBlock","parseTextHtml","parseExpr","accept","initBlock","runPlugin","pluginContext","parseTag","parseMixin","parseMixinBlock","parseCase","parseExtends","parseInclude","parseDoctype","parseFilter","parseComment","parseText","parseDot","parseEach","parseEachOf","parseCode","parseBlockCode","parseWhile","parseCall","parseInterpolation","pluginResult","parseTextBlock","tags","nextTok","isInline","currentNode","isHtml","parseBlockExpansion","parseWhen","parseDefault","debug","noBlock","parseIncludeFilter","textToken","attributeBlocks","selfClosingAllowed","seenAttrs","attributeNames","textOnly","$a03b44d22b2cc6b4$export$23c2b1f338167acf","$530b181e410c3990$var$load","$530b181e410c3990$var$getOptions","path1","validateOptions","$530b181e410c3990$exports","lex","$9da0532ee9273134$var$error","$9da0532ee9273134$var$link","extendsNode","hasExtends","legitExtendsReached","$9da0532ee9273134$var$checkExtendPosition","childAST","$9da0532ee9273134$var$removeBlocks","replaced","defaultYieldLocation","$9da0532ee9273134$var$applyYield","$9da0532ee9273134$var$applyIncludes","declaredBlocks","definitions","$9da0532ee9273134$var$findDeclaredBlocks","expectedBlocks","addNode","parentBlocks","parentBlockList","$9da0532ee9273134$var$flattenParentBlocks","parentBlock","$9da0532ee9273134$var$extend","foundBlockNames","expectedBlock","accumulator","$9da0532ee9273134$exports","$20fd14e52408b379$exports","html","xml","transitional","frameset","basic","mobile","plist","$93926329cade5802$exports","has_own_property","merge","classes_array","classes_object","match_html","escape","rethrow","$e3877700a445bf87$exports","internals","$86b9b6826b071c86$exports","$4fcd01d2f1f6c445$exports","$3ccfda286272cd97$export$4950aa0f605343fb","$3ccfda286272cd97$export$188d75d71883854a","$3ccfda286272cd97$export$1d567c320f4763bc","$3ccfda286272cd97$export$7aabe8b3a840d2fd","$3ccfda286272cd97$export$50f64d880cf4cd06","$3ccfda286272cd97$export$4e7f196112fea3c5","$3ccfda286272cd97$export$7ce1bec15462ecf3","$3ccfda286272cd97$var$pug_has_own_property","$3ccfda286272cd97$var$pug_classes","escaping","classString","padding","escapeEnabled","$3ccfda286272cd97$var$pug_escape","$3ccfda286272cd97$var$pug_classes_array","$3ccfda286272cd97$var$pug_classes_object","$3ccfda286272cd97$var$pug_style","$3ccfda286272cd97$var$pug_attr","terse","$3ccfda286272cd97$var$pug_merge","valA","valB","$3ccfda286272cd97$var$pug_match_html","_html","regexResult","$3ccfda286272cd97$var$pug_rethrow","$71b8c0d23c598e2e$var$isConstant","pug","$3ccfda286272cd97$exports","pug_interp","$71b8c0d23c598e2e$var$toConstant","$c73e41b4cb30efaf$exports","$c73e41b4cb30efaf$var$stringify","toISOString","$71b8c0d23c598e2e$exports","runtime","classEscaping","addAttribute","classesBuf","$dca61ba26e2661d8$exports","area","br","embed","hr","img","link","track","wbr","$1d6d3acfa651ce40$var$t","$1d6d3acfa651ce40$var$__importStar","$1d6d3acfa651ce40$var$globals_1","$1d6d3acfa651ce40$var$__importDefault","$1d6d3acfa651ce40$var$parseOptions","$1d6d3acfa651ce40$var$addWith","exclude","objAst","component","babylonError","excludeSet","g","vars","declareLocal","unwrapped","charArray","$1d6d3acfa651ce40$var$unwrapReturnsVisitors","$1d6d3acfa651ce40$var$unwrapReturns","$1d6d3acfa651ce40$exports","_node","_c","ReturnStatement","$ead4a56b8fabc818$var$WHITE_SPACE_SENSITIVE_TAGS","pre","textarea","$ead4a56b8fabc818$var$INTERNAL_VARIABLES","$ead4a56b8fabc818$var$Compiler","bufferedConcatenationCount","hasCompiledDoctype","hasCompiledTag","pretty","compileDebug","parentIndents","dynamicMixins","eachCount","setDoctype","runtimeFunctionsUsed","inlineRuntimeFunctions","$ead4a56b8fabc818$exports","CodeGenerator","lastBufferedIdx","visit","mixinNames","instances","includeSources","templateName","lastBufferedType","lastBuffered","bufferStartChar","bufferExpression","$ead4a56b8fabc818$var$isConstant","$ead4a56b8fabc818$var$toConstant","prettyIndent","newline","visitNode","visitCase","visitWhen","visitLiteral","visitNamedBlock","visitBlock","escapePrettyMode","visitMixinBlock","visitDoctype","visitMixin","attrsBlocks","dynamic","_indents","mixin_start","mixin_end","visitTag","tag1","bufferName","visitAttributes","visitCode","$ead4a56b8fabc818$var$tagCanInline","visitInterpolatedTag","visitText","visitComment","visitYieldBlock","visitBlockComment","visitConditional","cond","visitWhile","visitEach","indexVarName","visitEachOf","attrBlock","$94160d0703482f24$var$applyPlugins","value1","$94160d0703482f24$var$findReplacementFunc","eligiblePlugins","$94160d0703482f24$var$compileBody","str1","options1","debug_sources","lexOptions","parseOptions","loadOptions","replacementFunc","$94160d0703482f24$require$Buffer","filtersSet","filterOptions","$94160d0703482f24$var$handleTemplateCache","templ","$856bf87de8e17139$exports","path2","innerHTML","description"],"version":3,"file":"index.60f456c1.js.map"}